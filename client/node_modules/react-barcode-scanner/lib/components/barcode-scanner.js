"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var hooks_1 = require("../hooks");
var BarcodeScanner = function (_a) {
    var options = _a.options, onCapture = _a.onCapture, trackConstraints = _a.trackConstraints, _b = _a.paused, paused = _b === void 0 ? false : _b, props = tslib_1.__rest(_a, ["options", "onCapture", "trackConstraints", "paused"]);
    var instance = (0, react_1.useRef)(null);
    var isCameraReady = (0, hooks_1.useCamera)(instance, trackConstraints).isCameraReady;
    var _c = (0, hooks_1.useScanning)(instance, options), detectedBarcodes = _c.detectedBarcodes, startScan = _c.startScan, stopScan = _c.stopScan;
    (0, react_1.useEffect)(function () {
        if (isCameraReady && !paused) {
            startScan();
        }
        else {
            stopScan();
        }
    }, [stopScan, isCameraReady, startScan, paused]);
    (0, react_1.useEffect)(function () {
        if (detectedBarcodes !== undefined) {
            onCapture === null || onCapture === void 0 ? void 0 : onCapture(detectedBarcodes);
        }
    }, [detectedBarcodes, onCapture]);
    (0, react_1.useEffect)(function () {
        var video = instance.current;
        if (!video)
            return;
        if (isCameraReady && !paused) {
            video.play().catch(console.error);
        }
        else {
            video.pause();
        }
    }, [paused, isCameraReady]);
    return ((0, jsx_runtime_1.jsx)("video", tslib_1.__assign({ ref: instance, style: { width: '100%', height: '100%', objectFit: 'cover' }, autoPlay: true, muted: true, playsInline: true }, props)));
};
exports.default = BarcodeScanner;
