{"ast":null,"code":"import { EncodeHintType, IllegalArgumentException, IllegalStateException, QRCodeDecoderErrorCorrectionLevel, QRCodeEncoder } from '@zxing/library';\nvar svgNs = 'http://www.w3.org/2000/svg';\n/**/\nvar BrowserQRCodeSvgWriter = /** @class */function () {\n  function BrowserQRCodeSvgWriter() {}\n  /**\n   * Writes and renders a QRCode SVG element.\n   *\n   * @param contents\n   * @param width\n   * @param height\n   * @param hints\n   */\n  BrowserQRCodeSvgWriter.prototype.write = function (contents, width, height, hints) {\n    if (contents.length === 0) {\n      throw new IllegalArgumentException('Found empty contents');\n    }\n    // if (format != BarcodeFormat.QR_CODE) {\n    //   throw new IllegalArgumentException(\"Can only encode QR_CODE, but got \" + format)\n    // }\n    if (width < 0 || height < 0) {\n      throw new IllegalArgumentException('Requested dimensions are too small: ' + width + 'x' + height);\n    }\n    var errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.L;\n    var quietZone = BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE;\n    if (hints) {\n      if (undefined !== hints.get(EncodeHintType.ERROR_CORRECTION)) {\n        var correctionStr = hints.get(EncodeHintType.ERROR_CORRECTION).toString();\n        errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.fromString(correctionStr);\n      }\n      if (undefined !== hints.get(EncodeHintType.MARGIN)) {\n        quietZone = Number.parseInt(hints.get(EncodeHintType.MARGIN).toString(), 10);\n      }\n    }\n    var code = QRCodeEncoder.encode(contents, errorCorrectionLevel, hints);\n    return this.renderResult(code, width, height, quietZone);\n  };\n  /**\n   * Renders the result and then appends it to the DOM.\n   */\n  BrowserQRCodeSvgWriter.prototype.writeToDom = function (containerElement, contents, width, height, hints) {\n    if (typeof containerElement === 'string') {\n      var targetEl = document.querySelector(containerElement);\n      if (!targetEl) {\n        throw new Error('Could no find the target HTML element.');\n      }\n      containerElement = targetEl;\n    }\n    var svgElement = this.write(contents, width, height, hints);\n    if (containerElement instanceof HTMLElement) {\n      containerElement.appendChild(svgElement);\n    }\n  };\n  /**\n   * Note that the input matrix uses 0 == white, 1 == black.\n   * The output matrix uses 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\n   */\n  BrowserQRCodeSvgWriter.prototype.renderResult = function (code, width /*int*/, height /*int*/, quietZone /*int*/) {\n    var input = code.getMatrix();\n    if (input === null) {\n      throw new IllegalStateException();\n    }\n    var inputWidth = input.getWidth();\n    var inputHeight = input.getHeight();\n    var qrWidth = inputWidth + quietZone * 2;\n    var qrHeight = inputHeight + quietZone * 2;\n    var outputWidth = Math.max(width, qrWidth);\n    var outputHeight = Math.max(height, qrHeight);\n    var multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\n    // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n    // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n    // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n    // handle all the padding from 100x100 (the actual QR) up to 200x160.\n    var leftPadding = Math.floor((outputWidth - inputWidth * multiple) / 2);\n    var topPadding = Math.floor((outputHeight - inputHeight * multiple) / 2);\n    var svgElement = this.createSVGElement(outputWidth, outputHeight);\n    for (var inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n      // Write the contents of this row of the barcode\n      for (var inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n        if (input.get(inputX, inputY) === 1) {\n          var svgRectElement = this.createSvgRectElement(outputX, outputY, multiple, multiple);\n          svgElement.appendChild(svgRectElement);\n        }\n      }\n    }\n    return svgElement;\n  };\n  /**\n   * Creates a SVG element.\n   *\n   * @param w SVG's width attribute\n   * @param h SVG's height attribute\n   */\n  BrowserQRCodeSvgWriter.prototype.createSVGElement = function (w, h) {\n    var svgElement = document.createElementNS(svgNs, 'svg');\n    var width = w.toString();\n    var height = h.toString();\n    svgElement.setAttribute('height', height);\n    svgElement.setAttribute('width', width);\n    svgElement.setAttribute('viewBox', \"0 0 \" + width + \" \" + height);\n    return svgElement;\n  };\n  /**\n   * Creates a SVG rect element.\n   *\n   * @param x Element's x coordinate\n   * @param y Element's y coordinate\n   * @param w Element's width attribute\n   * @param h Element's height attribute\n   */\n  BrowserQRCodeSvgWriter.prototype.createSvgRectElement = function (x, y, w, h) {\n    var rect = document.createElementNS(svgNs, 'rect');\n    rect.setAttribute('x', x.toString());\n    rect.setAttribute('y', y.toString());\n    rect.setAttribute('height', w.toString());\n    rect.setAttribute('width', h.toString());\n    rect.setAttribute('fill', '#000000');\n    return rect;\n  };\n  BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE = 4;\n  return BrowserQRCodeSvgWriter;\n}();\nexport { BrowserQRCodeSvgWriter };","map":{"version":3,"names":["EncodeHintType","IllegalArgumentException","IllegalStateException","QRCodeDecoderErrorCorrectionLevel","QRCodeEncoder","svgNs","BrowserQRCodeSvgWriter","prototype","write","contents","width","height","hints","length","errorCorrectionLevel","L","quietZone","QUIET_ZONE_SIZE","undefined","get","ERROR_CORRECTION","correctionStr","toString","fromString","MARGIN","Number","parseInt","code","encode","renderResult","writeToDom","containerElement","targetEl","document","querySelector","Error","svgElement","HTMLElement","appendChild","input","getMatrix","inputWidth","getWidth","inputHeight","getHeight","qrWidth","qrHeight","outputWidth","Math","max","outputHeight","multiple","min","floor","leftPadding","topPadding","createSVGElement","inputY","outputY","inputX","outputX","svgRectElement","createSvgRectElement","w","h","createElementNS","setAttribute","x","y","rect"],"sources":["../../../src/writers/BrowserQRCodeSvgWriter.ts"],"sourcesContent":[null],"mappings":"AAAA,SACEA,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,iCAAiC,EACjCC,aAAa,QAER,gBAAgB;AAEvB,IAAMC,KAAK,GAAG,4BAA4B;AAE1C;AACA,IAAAC,sBAAA;EAAA,SAAAA,uBAAA,GAiKA;EA7JE;;;;;;;;EAQOA,sBAAA,CAAAC,SAAA,CAAAC,KAAK,GAAZ,UACEC,QAAgB,EAChBC,KAAa,EACbC,MAAc,EACdC,KAAgC;IAGhC,IAAIH,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;MACzB,MAAM,IAAIZ,wBAAwB,CAAC,sBAAsB,CAAC;;IAG5D;IACA;IACA;IAEA,IAAIS,KAAK,GAAG,CAAC,IAAIC,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAM,IAAIV,wBAAwB,CAAC,sCAAsC,GAAGS,KAAK,GAAG,GAAG,GAAGC,MAAM,CAAC;;IAGnG,IAAIG,oBAAoB,GAAGX,iCAAiC,CAACY,CAAC;IAC9D,IAAIC,SAAS,GAAGV,sBAAsB,CAACW,eAAe;IAEtD,IAAIL,KAAK,EAAE;MAET,IAAIM,SAAS,KAAKN,KAAK,CAACO,GAAG,CAACnB,cAAc,CAACoB,gBAAgB,CAAC,EAAE;QAC5D,IAAMC,aAAa,GAAGT,KAAK,CAACO,GAAG,CAACnB,cAAc,CAACoB,gBAAgB,CAAC,CAACE,QAAQ,EAAE;QAC3ER,oBAAoB,GAAGX,iCAAiC,CAACoB,UAAU,CAACF,aAAa,CAAC;;MAGpF,IAAIH,SAAS,KAAKN,KAAK,CAACO,GAAG,CAACnB,cAAc,CAACwB,MAAM,CAAC,EAAE;QAClDR,SAAS,GAAGS,MAAM,CAACC,QAAQ,CAACd,KAAK,CAACO,GAAG,CAACnB,cAAc,CAACwB,MAAM,CAAC,CAACF,QAAQ,EAAE,EAAE,EAAE,CAAC;;;IAIhF,IAAMK,IAAI,GAAGvB,aAAa,CAACwB,MAAM,CAACnB,QAAQ,EAAEK,oBAAoB,EAAEF,KAAK,CAAC;IAExE,OAAO,IAAI,CAACiB,YAAY,CAACF,IAAI,EAAEjB,KAAK,EAAEC,MAAM,EAAEK,SAAS,CAAC;EAC1D,CAAC;EAED;;;EAGOV,sBAAA,CAAAC,SAAA,CAAAuB,UAAU,GAAjB,UACEC,gBAAsC,EACtCtB,QAAgB,EAChBC,KAAa,EACbC,MAAc,EACdC,KAAgC;IAGhC,IAAI,OAAOmB,gBAAgB,KAAK,QAAQ,EAAE;MACxC,IAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAcH,gBAAgB,CAAC;MACtE,IAAI,CAACC,QAAQ,EAAE;QAAE,MAAM,IAAIG,KAAK,CAAC,wCAAwC,CAAC;;MAC1EJ,gBAAgB,GAAGC,QAAQ;;IAG7B,IAAMI,UAAU,GAAG,IAAI,CAAC5B,KAAK,CAACC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,CAAC;IAE7D,IAAImB,gBAAgB,YAAYM,WAAW,EAAE;MAC3CN,gBAAgB,CAACO,WAAW,CAACF,UAAU,CAAC;;EAE5C,CAAC;EAED;;;;EAIQ9B,sBAAA,CAAAC,SAAA,CAAAsB,YAAY,GAApB,UACEF,IAAyB,EACzBjB,KAAa,CAAC,SACdC,MAAc,CAAC,SACfK,SAAiB,CAAC,SAAO;IAGzB,IAAMuB,KAAK,GAAGZ,IAAI,CAACa,SAAS,EAAE;IAE9B,IAAID,KAAK,KAAK,IAAI,EAAE;MAClB,MAAM,IAAIrC,qBAAqB,EAAE;;IAGnC,IAAMuC,UAAU,GAAGF,KAAK,CAACG,QAAQ,EAAE;IACnC,IAAMC,WAAW,GAAGJ,KAAK,CAACK,SAAS,EAAE;IACrC,IAAMC,OAAO,GAAGJ,UAAU,GAAIzB,SAAS,GAAG,CAAE;IAC5C,IAAM8B,QAAQ,GAAGH,WAAW,GAAI3B,SAAS,GAAG,CAAE;IAC9C,IAAM+B,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACvC,KAAK,EAAEmC,OAAO,CAAC;IAC5C,IAAMK,YAAY,GAAGF,IAAI,CAACC,GAAG,CAACtC,MAAM,EAAEmC,QAAQ,CAAC;IAE/C,IAAMK,QAAQ,GAAGH,IAAI,CAACI,GAAG,CAACJ,IAAI,CAACK,KAAK,CAACN,WAAW,GAAGF,OAAO,CAAC,EAAEG,IAAI,CAACK,KAAK,CAACH,YAAY,GAAGJ,QAAQ,CAAC,CAAC;IAEjG;IACA;IACA;IACA;IACA,IAAMQ,WAAW,GAAGN,IAAI,CAACK,KAAK,CAAC,CAACN,WAAW,GAAIN,UAAU,GAAGU,QAAS,IAAI,CAAC,CAAC;IAC3E,IAAMI,UAAU,GAAGP,IAAI,CAACK,KAAK,CAAC,CAACH,YAAY,GAAIP,WAAW,GAAGQ,QAAS,IAAI,CAAC,CAAC;IAE5E,IAAMf,UAAU,GAAG,IAAI,CAACoB,gBAAgB,CAACT,WAAW,EAAEG,YAAY,CAAC;IAEnE,KAAK,IAAIO,MAAM,GAAG,CAAC,EAAEC,OAAO,GAAGH,UAAU,EAAEE,MAAM,GAAGd,WAAW,EAAEc,MAAM,EAAE,EAAEC,OAAO,IAAIP,QAAQ,EAAE;MAC9F;MACA,KAAK,IAAIQ,MAAM,GAAG,CAAC,EAAEC,OAAO,GAAGN,WAAW,EAAEK,MAAM,GAAGlB,UAAU,EAAEkB,MAAM,EAAE,EAAEC,OAAO,IAAIT,QAAQ,EAAE;QAC9F,IAAIZ,KAAK,CAACpB,GAAG,CAACwC,MAAM,EAAEF,MAAM,CAAC,KAAK,CAAC,EAAE;UACnC,IAAMI,cAAc,GAAG,IAAI,CAACC,oBAAoB,CAACF,OAAO,EAAEF,OAAO,EAAEP,QAAQ,EAAEA,QAAQ,CAAC;UACtFf,UAAU,CAACE,WAAW,CAACuB,cAAc,CAAC;;;;IAK5C,OAAOzB,UAAU;EACnB,CAAC;EAED;;;;;;EAMQ9B,sBAAA,CAAAC,SAAA,CAAAiD,gBAAgB,GAAxB,UAAyBO,CAAS,EAAEC,CAAS;IAE3C,IAAM5B,UAAU,GAAGH,QAAQ,CAACgC,eAAe,CAAC5D,KAAK,EAAE,KAAK,CAAC;IACzD,IAAMK,KAAK,GAAGqD,CAAC,CAACzC,QAAQ,EAAE;IAC1B,IAAMX,MAAM,GAAGqD,CAAC,CAAC1C,QAAQ,EAAE;IAC3Bc,UAAU,CAAC8B,YAAY,CAAC,QAAQ,EAAEvD,MAAM,CAAC;IACzCyB,UAAU,CAAC8B,YAAY,CAAC,OAAO,EAAExD,KAAK,CAAC;IACvC0B,UAAU,CAAC8B,YAAY,CAAC,SAAS,EAAE,MAAM,GAAGxD,KAAK,GAAG,GAAG,GAAGC,MAAM,CAAC;IAEjE,OAAOyB,UAAU;EACnB,CAAC;EAED;;;;;;;;EAQQ9B,sBAAA,CAAAC,SAAA,CAAAuD,oBAAoB,GAA5B,UAA6BK,CAAS,EAAEC,CAAS,EAAEL,CAAS,EAAEC,CAAS;IAErE,IAAMK,IAAI,GAAGpC,QAAQ,CAACgC,eAAe,CAAC5D,KAAK,EAAE,MAAM,CAAC;IAEpDgE,IAAI,CAACH,YAAY,CAAC,GAAG,EAAEC,CAAC,CAAC7C,QAAQ,EAAE,CAAC;IACpC+C,IAAI,CAACH,YAAY,CAAC,GAAG,EAAEE,CAAC,CAAC9C,QAAQ,EAAE,CAAC;IACpC+C,IAAI,CAACH,YAAY,CAAC,QAAQ,EAAEH,CAAC,CAACzC,QAAQ,EAAE,CAAC;IACzC+C,IAAI,CAACH,YAAY,CAAC,OAAO,EAAEF,CAAC,CAAC1C,QAAQ,EAAE,CAAC;IACxC+C,IAAI,CAACH,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC;IAEpC,OAAOG,IAAI;EACb,CAAC;EA9JuB/D,sBAAA,CAAAW,eAAe,GAAG,CAAC;EA+J7C,OAAAX,sBAAC;CAAA,CAjKD;AAmKA,SAASA,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}