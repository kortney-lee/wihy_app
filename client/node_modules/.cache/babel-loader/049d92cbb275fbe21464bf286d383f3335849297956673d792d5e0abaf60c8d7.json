{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { healthSearchService } from './services/healthSearchService';\nimport ImageUploadModal from './components/ImageUploadModal';\nimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';\nimport ResultQualityPie from './components/ResultQualityPie';\nimport NutritionChart from './components/NutritionChart';\nimport NovaChart from './components/NovaChart';\nimport './VHealthSearch.css';\nimport Spinner from './components/Spinner';\n\n// Define default topics and resources\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRelatedTopics = [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"];\nconst defaultResources = [{\n  text: \"Nutrition ED - Learn More\",\n  url: \"https://vowels.com\"\n}, {\n  text: \"Nutrition 101\",\n  url: \"https://members.vowels.com\"\n}, {\n  text: \"The World Counts\",\n  url: \"https://www.theworldcounts.com/\"\n}];\n\n// Define the dummy data for \"test\" queries\nconst dummyTestData = {\n  healthInfo: `**Detailed Information:**\n\n**Balanced Diet:** A healthy diet includes a variety of nutrient-rich foods from all the major food groups: fruits, vegetables, whole grains, lean proteins, and healthy fats. Focus on colorful fruits and vegetables, which provide essential vitamins, minerals, and antioxidants.\n\n**Portion Control:** Managing portion sizes is crucial for maintaining a healthy weight and preventing overeating. Use smaller plates, measure portions, and listen to your body's hunger and fullness cues.\n\n**Hydration:** Proper hydration is essential for optimal body function. Aim for 8-10 glasses of water daily, and more if you're physically active or in hot weather.\n\n**Regular Exercise:** Incorporate at least 150 minutes of moderate-intensity aerobic activity weekly, plus muscle-strengthening exercises twice a week. This combination supports cardiovascular health, muscle strength, and mental well-being.\n\n**Quality Sleep:** Adults should aim for 7-9 hours of quality sleep nightly. Good sleep hygiene includes maintaining a consistent sleep schedule and creating a restful environment.\n\n**Stress Management:** Chronic stress can impact both physical and mental health. Practice stress-reduction techniques like meditation, deep breathing, or regular physical activity.\n\n**Preventive Care:** Regular check-ups, screenings, and vaccinations are essential for early detection and prevention of health issues.\n\n**Medical Disclaimer:** This information is for educational purposes only and should not replace professional medical advice. Always consult with qualified healthcare providers for personalized health recommendations and before making significant changes to your diet, exercise routine, or lifestyle.`,\n  relatedTopics: [\"Heart-Healthy Foods\", \"Exercise for Beginners\", \"Stress Management Techniques\", \"Sleep Hygiene Tips\", \"Preventive Health Screenings\"],\n  resources: [{\n    text: \"CDC Nutrition Guidelines\",\n    url: \"https://www.cdc.gov/nutrition\"\n  }, {\n    text: \"American Heart Association\",\n    url: \"https://www.heart.org\"\n  }, {\n    text: \"Mayo Clinic Health Info\",\n    url: \"https://www.mayoclinic.org\"\n  }]\n};\n\n// Update the interface to match what App.tsx is passing\n\nconst SearchResults = ({\n  query,\n  results: propResults,\n  onBackToSearch,\n  onNewSearch,\n  isLoading: propIsLoading,\n  dataSource: propDataSource,\n  citations: propCitations,\n  recommendations: propRecommendations,\n  disclaimer: propDisclaimer\n}) => {\n  _s();\n  const location = useLocation();\n  const navigationState = location.state;\n\n  // Use props from App.tsx (which has already made the API calls)\n  const [results, setResults] = useState(propResults);\n  const [dataSource, setDataSource] = useState(propDataSource);\n  const [isLoading, setIsLoading] = useState(propIsLoading);\n  const [citations, setCitations] = useState(propCitations);\n  const [recommendations, setRecommendations] = useState(propRecommendations);\n  const [disclaimer, setDisclaimer] = useState(propDisclaimer);\n  const [newQuery, setNewQuery] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [imageError, setImageError] = useState(false);\n\n  // Update state when props change\n  useEffect(() => {\n    setResults(propResults);\n    setDataSource(propDataSource);\n    setIsLoading(propIsLoading);\n    setCitations(propCitations);\n    setRecommendations(propRecommendations);\n    setDisclaimer(propDisclaimer);\n  }, [propResults, propDataSource, propIsLoading, propCitations, propRecommendations, propDisclaimer]);\n\n  // Cleanup function for blob URLs\n  useEffect(() => {\n    return () => {\n      if (typeof image === 'object' && image !== null) {\n        // Cleanup logic for File objects if needed\n      }\n    };\n  }, [image]);\n\n  // Only fetch results if we don't have any from props (direct URL access)\n  const fetchResults = async searchQuery => {\n    if (!(searchQuery !== null && searchQuery !== void 0 && searchQuery.trim())) {\n      setIsLoading(false);\n      return;\n    }\n    console.log('SearchResults: Fetching data for', searchQuery);\n    setIsLoading(true);\n    try {\n      // Step 1: Check database cache first\n      try {\n        const cacheResponse = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(searchQuery)}`);\n        if (cacheResponse.ok) {\n          const cachedData = await cacheResponse.json();\n          console.log('Using cached results from database');\n          setResults(cachedData.results);\n          setDataSource(cachedData.source || 'local');\n          setIsLoading(false);\n          return;\n        }\n      } catch (cacheError) {\n        console.log('No cache found, proceeding with API call');\n      }\n\n      // Step 2: Try nutrition database\n      try {\n        const nutritionUrl = `http://localhost:5000/api/search/food?q=${encodeURIComponent(searchQuery)}`;\n        const nutritionResponse = await fetch(nutritionUrl);\n        if (nutritionResponse.ok) {\n          const nutritionData = await nutritionResponse.json();\n          if (nutritionData && nutritionData.found !== false) {\n            console.log('Using nutrition database results');\n            setResults(typeof nutritionData === 'string' ? nutritionData : JSON.stringify(nutritionData));\n            setDataSource('vnutrition');\n\n            // Save to cache\n            fetch('http://localhost:5000/api/cache/save', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                query: searchQuery,\n                results: nutritionData,\n                source: 'vnutrition'\n              })\n            }).catch(err => console.warn('Cache save error:', err));\n            setIsLoading(false);\n            return;\n          }\n        }\n      } catch (error) {\n        console.log('Nutrition API not available, using OpenAI');\n      }\n\n      // Step 3: Fallback to OpenAI\n      const openaiResult = await healthSearchService.searchHealthInfo(searchQuery);\n\n      // Format the results properly\n      let formattedResults = '';\n      if (openaiResult.summary) formattedResults += `${openaiResult.summary}\\n\\n`;\n      if (openaiResult.details) formattedResults += `${openaiResult.details}\\n\\n`;\n      if (formattedResults) {\n        console.log('Using OpenAI results');\n        setResults(formattedResults);\n        setDataSource('openai');\n        if (openaiResult.sources) setCitations(openaiResult.sources);\n        if (openaiResult.recommendations) setRecommendations(openaiResult.recommendations);\n        if (openaiResult.medicalDisclaimer) setDisclaimer(openaiResult.medicalDisclaimer);\n\n        // Save to cache\n        fetch('http://localhost:5000/api/cache/save', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query: searchQuery,\n            results: formattedResults,\n            source: 'openai'\n          })\n        }).catch(err => console.warn('Cache save error:', err));\n      } else {\n        throw new Error('No content received from OpenAI');\n      }\n    } catch (error) {\n      console.error('Search error:', error);\n      setResults('Sorry, there was an error processing your request. Please try again.');\n      setDataSource('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Only fetch if we don't have results from props (direct URL access)\n  useEffect(() => {\n    if (!results && query) {\n      console.log('No results from props, fetching for:', query);\n      fetchResults(query);\n    }\n  }, [query, results]);\n\n  // Handle new search submission\n  const handleNewSearchSubmit = e => {\n    e.preventDefault();\n    if (!newQuery.trim()) return;\n    const trimmedQuery = newQuery.trim();\n\n    // Check for test query - return fake data without API call\n    if (trimmedQuery.toLowerCase() === 'test') {\n      console.log('Test query detected - using dummy data');\n      setResults(dummyTestData.healthInfo);\n      setDataSource('openai');\n      setIsLoading(false);\n      onNewSearch(trimmedQuery);\n      setNewQuery('');\n      return;\n    }\n\n    // Make API call for new search directly in SearchResults\n    console.log('Making new search from SearchResults:', trimmedQuery);\n    fetchResults(trimmedQuery);\n    onNewSearch(trimmedQuery); // This updates the URL\n    setNewQuery(''); // Reset input\n  };\n  const handleClearAll = () => {\n    setNewQuery('');\n    setImage(null);\n    setCurrentPhotoId(null);\n    const fileInput = document.getElementById('camera-input');\n    if (fileInput) {\n      fileInput.value = '';\n    }\n    const searchInput = document.querySelector('.results-search-input');\n    if (searchInput) {\n      searchInput.classList.remove('with-image');\n    }\n  };\n  const handleVoiceInput = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser');\n      return;\n    }\n    if (!isListening) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => setIsListening(true);\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setNewQuery(transcript);\n        setIsListening(false);\n      };\n      recognition.onerror = () => setIsListening(false);\n      recognition.onend = () => setIsListening(false);\n      recognition.start();\n    }\n  };\n  const handleCameraClick = () => {\n    setIsUploadModalOpen(true);\n  };\n  const handleAnalysisComplete = async foodName => {\n    try {\n      console.log('Image analysis completed, food detected:', foodName);\n      setNewQuery(foodName);\n      fetchResults(foodName);\n      onNewSearch(foodName);\n      setIsUploadModalOpen(false);\n    } catch (error) {\n      console.error('Error processing analyzed food:', error);\n      alert('Failed to process the analyzed food. Please try again.');\n    }\n  };\n  const handleUserChange = user => {\n    console.log('User changed:', user);\n  };\n  const handleSignIn = user => {\n    console.log('User signed in:', user);\n  };\n  const handleSignOut = () => {\n    console.log('User signed out');\n  };\n  const convertLinksToClickable = text => {\n    // Simple regex to convert URLs to clickable links\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const parts = text.split(urlRegex);\n    return parts.map((part, index) => {\n      if (part.match(urlRegex)) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: part,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this);\n      }\n      return part;\n    });\n  };\n\n  // Test query check\n  const isTestQuery = query.toLowerCase() === 'test';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(MultiAuthLogin, {\n      position: \"top-right\",\n      className: \"results-login-button\",\n      onUserChange: handleUserChange,\n      onSignIn: handleSignIn,\n      onSignOut: handleSignOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-search-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/whatishealthylogo.svg\",\n          alt: \"What is Healthy?\",\n          className: \"results-search-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNewSearchSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Ask anything about health...\",\n            value: newQuery,\n            onChange: e => setNewQuery(e.target.value),\n            className: \"search-input results-search-input\",\n            \"data-query\": isTestQuery ? 'test' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-icons\",\n          children: [(newQuery || image) && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleClearAll,\n            className: \"icon-button clear-button\",\n            \"aria-label\": \"Clear all\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCameraClick,\n            className: \"icon-button\",\n            \"aria-label\": \"Upload image\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVoiceInput,\n            className: `icon-button ${isListening ? 'listening' : ''}`,\n            \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [!isLoading && results && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"results-header\",\n          children: [\"Search Results for: \\\"\", query, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-info-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-info-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"markdown-content\",\n                children: dataSource === 'vnutrition' ? (() => {\n                  let nutrition;\n                  try {\n                    nutrition = typeof results === 'string' ? JSON.parse(results) : results;\n                    if (nutrition && nutrition.found !== false) {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Nutrition Information\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 441,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Calories per serving: \", nutrition.calories_per_serving || 0]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 443,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Protein: \", nutrition.protein_g || 0, \"g\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 444,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Carbs: \", nutrition.carbs_g || 0, \"g\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 445,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Fat: \", nutrition.fat_g || 0, \"g\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 446,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"NOVA Score: \", nutrition.nova_classification || 1]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 447,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Processing Level: \", nutrition.nova_description || nutrition.processed_level || 'Unknown']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 448,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 442,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 31\n                      }, this);\n                    } else {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Raw Database Data (Debug)\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 455,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                          style: {\n                            fontSize: '12px',\n                            background: '#f5f5f5',\n                            padding: '10px'\n                          },\n                          children: JSON.stringify(nutrition, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 456,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  } catch {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Error parsing nutrition data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 34\n                    }, this);\n                  }\n                })() : convertLinksToClickable(results)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-source-indicator\",\n              children: dataSource === 'openai' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Powered by AI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this) : dataSource === 'error' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-source\",\n                children: \"Error retrieving data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"What Is Healthy?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quality-chart-container\",\n              style: {\n                marginBottom: \"2rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ResultQualityPie, {\n                query: query,\n                results: results,\n                dataSource: dataSource,\n                citations: citations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), dataSource === 'vnutrition' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nutrition-chart-container\",\n                style: {\n                  marginBottom: \"2rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    fontSize: \"1.1rem\",\n                    marginBottom: \"1rem\",\n                    color: \"#374151\"\n                  },\n                  children: \"Nutrition Breakdown\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(NutritionChart, {\n                  query: query,\n                  results: results,\n                  dataSource: dataSource\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nova-chart-container\",\n                style: {\n                  marginBottom: \"2rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    fontSize: \"1.1rem\",\n                    marginBottom: \"1rem\",\n                    color: \"#374151\"\n                  },\n                  children: \"Processing Level (NOVA Score)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(NovaChart, {\n                  query: query,\n                  results: results,\n                  dataSource: dataSource\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"related-topics-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Related Health Topics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"related-topics-list\",\n                children: isTestQuery ? dummyTestData.relatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => onNewSearch(topic),\n                    className: \"topic-button\",\n                    children: topic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 25\n                }, this)) : defaultRelatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => onNewSearch(topic),\n                    className: \"topic-button\",\n                    children: topic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resources-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Useful Resources\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"resources-list\",\n                children: isTestQuery ? dummyTestData.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: resource.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: resource.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 25\n                }, this)) : defaultResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: resource.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: resource.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n        overlay: true,\n        message: \"Searching.......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n        isOpen: isUploadModalOpen,\n        onClose: () => setIsUploadModalOpen(false),\n        onAnalysisComplete: handleAnalysisComplete,\n        title: \"Upload Image\",\n        subtitle: \"Upload images for analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"F6YLRHM6w+TScPUKdUwGo81jeqQ=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","healthSearchService","ImageUploadModal","MultiAuthLogin","ResultQualityPie","NutritionChart","NovaChart","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRelatedTopics","defaultResources","text","url","dummyTestData","healthInfo","relatedTopics","resources","SearchResults","query","results","propResults","onBackToSearch","onNewSearch","isLoading","propIsLoading","dataSource","propDataSource","citations","propCitations","recommendations","propRecommendations","disclaimer","propDisclaimer","_s","location","navigationState","state","setResults","setDataSource","setIsLoading","setCitations","setRecommendations","setDisclaimer","newQuery","setNewQuery","image","setImage","currentPhotoId","setCurrentPhotoId","isUploadModalOpen","setIsUploadModalOpen","isListening","setIsListening","imageError","setImageError","fetchResults","searchQuery","trim","console","log","cacheResponse","fetch","encodeURIComponent","ok","cachedData","json","source","cacheError","nutritionUrl","nutritionResponse","nutritionData","found","JSON","stringify","method","headers","body","catch","err","warn","error","openaiResult","searchHealthInfo","formattedResults","summary","details","sources","medicalDisclaimer","Error","handleNewSearchSubmit","e","preventDefault","trimmedQuery","toLowerCase","handleClearAll","fileInput","document","getElementById","value","searchInput","querySelector","classList","remove","handleVoiceInput","window","alert","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","transcript","onerror","onend","start","handleCameraClick","handleAnalysisComplete","foodName","handleUserChange","user","handleSignIn","handleSignOut","convertLinksToClickable","urlRegex","parts","split","map","part","index","match","href","target","rel","children","fileName","_jsxFileName","lineNumber","columnNumber","isTestQuery","className","position","onUserChange","onSignIn","onSignOut","src","alt","onSubmit","type","placeholder","onChange","onClick","viewBox","fill","d","nutrition","parse","calories_per_serving","protein_g","carbs_g","fat_g","nova_classification","nova_description","processed_level","style","fontSize","background","padding","marginBottom","color","topic","resource","overlay","message","isOpen","onClose","onAnalysisComplete","title","subtitle","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/SearchResults.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { searchCache } from './services/searchCache';\r\nimport { photoStorageService } from './services/photoStorageService';\r\nimport { foodAnalysisService } from './components/foodAnalysisService';\r\nimport { openaiAPI } from './services/openaiAPI';\r\nimport { healthSearchService } from './services/healthSearchService';\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';\r\nimport ResultQualityPie from './components/ResultQualityPie';\r\nimport NutritionChart from './components/NutritionChart';\r\nimport NovaChart from './components/NovaChart';\r\nimport './VHealthSearch.css';\r\nimport Spinner from './components/Spinner';\r\n\r\n// Define default topics and resources\r\nconst defaultRelatedTopics = [\r\n  \"Nutrition and Diet Guidelines\",\r\n  \"Exercise and Physical Activity\", \r\n  \"Mental Health and Wellness\",\r\n  \"Preventive Care and Screenings\",\r\n  \"Chronic Disease Management\",\r\n  \"Healthy Lifestyle Choices\"\r\n];\r\n\r\nconst defaultResources = [\r\n  { text: \"Nutrition ED - Learn More\", url: \"https://vowels.com\" },\r\n  { text: \"Nutrition 101\", url: \"https://members.vowels.com\" },\r\n  { text: \"The World Counts\", url: \"https://www.theworldcounts.com/\" }\r\n];\r\n\r\n// Define the dummy data for \"test\" queries\r\nconst dummyTestData = {\r\n  healthInfo: `**Detailed Information:**\r\n\r\n**Balanced Diet:** A healthy diet includes a variety of nutrient-rich foods from all the major food groups: fruits, vegetables, whole grains, lean proteins, and healthy fats. Focus on colorful fruits and vegetables, which provide essential vitamins, minerals, and antioxidants.\r\n\r\n**Portion Control:** Managing portion sizes is crucial for maintaining a healthy weight and preventing overeating. Use smaller plates, measure portions, and listen to your body's hunger and fullness cues.\r\n\r\n**Hydration:** Proper hydration is essential for optimal body function. Aim for 8-10 glasses of water daily, and more if you're physically active or in hot weather.\r\n\r\n**Regular Exercise:** Incorporate at least 150 minutes of moderate-intensity aerobic activity weekly, plus muscle-strengthening exercises twice a week. This combination supports cardiovascular health, muscle strength, and mental well-being.\r\n\r\n**Quality Sleep:** Adults should aim for 7-9 hours of quality sleep nightly. Good sleep hygiene includes maintaining a consistent sleep schedule and creating a restful environment.\r\n\r\n**Stress Management:** Chronic stress can impact both physical and mental health. Practice stress-reduction techniques like meditation, deep breathing, or regular physical activity.\r\n\r\n**Preventive Care:** Regular check-ups, screenings, and vaccinations are essential for early detection and prevention of health issues.\r\n\r\n**Medical Disclaimer:** This information is for educational purposes only and should not replace professional medical advice. Always consult with qualified healthcare providers for personalized health recommendations and before making significant changes to your diet, exercise routine, or lifestyle.`,\r\n  relatedTopics: [\r\n    \"Heart-Healthy Foods\",\r\n    \"Exercise for Beginners\", \r\n    \"Stress Management Techniques\",\r\n    \"Sleep Hygiene Tips\",\r\n    \"Preventive Health Screenings\"\r\n  ],\r\n  resources: [\r\n    { text: \"CDC Nutrition Guidelines\", url: \"https://www.cdc.gov/nutrition\" },\r\n    { text: \"American Heart Association\", url: \"https://www.heart.org\" },\r\n    { text: \"Mayo Clinic Health Info\", url: \"https://www.mayoclinic.org\" }\r\n  ]\r\n};\r\n\r\n// Update the interface to match what App.tsx is passing\r\ninterface SearchResultsProps {\r\n  query: string;\r\n  results: string;\r\n  onBackToSearch: () => void;\r\n  onNewSearch: (query: string) => void;\r\n  isLoading: boolean;\r\n  dataSource: \"openai\" | \"local\" | \"error\" | \"vnutrition\";\r\n  citations: string[];\r\n  recommendations: string[];\r\n  disclaimer: string;\r\n}\r\n\r\nconst SearchResults: React.FC<SearchResultsProps> = ({ \r\n  query, \r\n  results: propResults,\r\n  onBackToSearch,\r\n  onNewSearch,\r\n  isLoading: propIsLoading,\r\n  dataSource: propDataSource,\r\n  citations: propCitations,\r\n  recommendations: propRecommendations,\r\n  disclaimer: propDisclaimer\r\n}) => {\r\n  const location = useLocation();\r\n  const navigationState = location.state as {\r\n    results?: any;\r\n    dataSource?: string;\r\n    fromSearch?: boolean;\r\n  } | null;\r\n\r\n  // Use props from App.tsx (which has already made the API calls)\r\n  const [results, setResults] = useState(propResults);\r\n  const [dataSource, setDataSource] = useState<\"openai\" | \"local\" | \"error\" | \"vnutrition\">(propDataSource);\r\n  const [isLoading, setIsLoading] = useState(propIsLoading);\r\n  const [citations, setCitations] = useState<string[]>(propCitations);\r\n  const [recommendations, setRecommendations] = useState<string[]>(propRecommendations);\r\n  const [disclaimer, setDisclaimer] = useState<string>(propDisclaimer);\r\n  const [newQuery, setNewQuery] = useState('');\r\n  const [image, setImage] = useState<File | null>(null);\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [imageError, setImageError] = useState(false);\r\n\r\n  // Update state when props change\r\n  useEffect(() => {\r\n    setResults(propResults);\r\n    setDataSource(propDataSource);\r\n    setIsLoading(propIsLoading);\r\n    setCitations(propCitations);\r\n    setRecommendations(propRecommendations);\r\n    setDisclaimer(propDisclaimer);\r\n  }, [propResults, propDataSource, propIsLoading, propCitations, propRecommendations, propDisclaimer]);\r\n\r\n  // Cleanup function for blob URLs\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typeof image === 'object' && image !== null) {\r\n        // Cleanup logic for File objects if needed\r\n      }\r\n    };\r\n  }, [image]);\r\n\r\n  // Only fetch results if we don't have any from props (direct URL access)\r\n  const fetchResults = async (searchQuery: string) => {\r\n    if (!searchQuery?.trim()) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    console.log('SearchResults: Fetching data for', searchQuery);\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Step 1: Check database cache first\r\n      try {\r\n        const cacheResponse = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(searchQuery)}`);\r\n        \r\n        if (cacheResponse.ok) {\r\n          const cachedData = await cacheResponse.json();\r\n          console.log('Using cached results from database');\r\n          setResults(cachedData.results);\r\n          setDataSource(cachedData.source || 'local');\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n      } catch (cacheError) {\r\n        console.log('No cache found, proceeding with API call');\r\n      }\r\n\r\n      // Step 2: Try nutrition database\r\n      try {\r\n        const nutritionUrl = `http://localhost:5000/api/search/food?q=${encodeURIComponent(searchQuery)}`;\r\n        const nutritionResponse = await fetch(nutritionUrl);\r\n        \r\n        if (nutritionResponse.ok) {\r\n          const nutritionData = await nutritionResponse.json();\r\n          if (nutritionData && nutritionData.found !== false) {\r\n            console.log('Using nutrition database results');\r\n            setResults(typeof nutritionData === 'string' ? nutritionData : JSON.stringify(nutritionData));\r\n            setDataSource('vnutrition');\r\n            \r\n            // Save to cache\r\n            fetch('http://localhost:5000/api/cache/save', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({\r\n                query: searchQuery,\r\n                results: nutritionData,\r\n                source: 'vnutrition'\r\n              })\r\n            }).catch(err => console.warn('Cache save error:', err));\r\n            \r\n            setIsLoading(false);\r\n            return;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log('Nutrition API not available, using OpenAI');\r\n      }\r\n\r\n      // Step 3: Fallback to OpenAI\r\n      const openaiResult = await healthSearchService.searchHealthInfo(searchQuery);\r\n      \r\n      // Format the results properly\r\n      let formattedResults = '';\r\n      if (openaiResult.summary) formattedResults += `${openaiResult.summary}\\n\\n`;\r\n      if (openaiResult.details) formattedResults += `${openaiResult.details}\\n\\n`;\r\n      \r\n      if (formattedResults) {\r\n        console.log('Using OpenAI results');\r\n        setResults(formattedResults);\r\n        setDataSource('openai');\r\n        \r\n        if (openaiResult.sources) setCitations(openaiResult.sources);\r\n        if (openaiResult.recommendations) setRecommendations(openaiResult.recommendations);\r\n        if (openaiResult.medicalDisclaimer) setDisclaimer(openaiResult.medicalDisclaimer);\r\n        \r\n        // Save to cache\r\n        fetch('http://localhost:5000/api/cache/save', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            query: searchQuery,\r\n            results: formattedResults,\r\n            source: 'openai'\r\n          })\r\n        }).catch(err => console.warn('Cache save error:', err));\r\n        \r\n      } else {\r\n        throw new Error('No content received from OpenAI');\r\n      }\r\n    } catch (error) {\r\n      console.error('Search error:', error);\r\n      setResults('Sorry, there was an error processing your request. Please try again.');\r\n      setDataSource('error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Only fetch if we don't have results from props (direct URL access)\r\n  useEffect(() => {\r\n    if (!results && query) {\r\n      console.log('No results from props, fetching for:', query);\r\n      fetchResults(query);\r\n    }\r\n  }, [query, results]);\r\n\r\n  // Handle new search submission\r\n  const handleNewSearchSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newQuery.trim()) return;\r\n    \r\n    const trimmedQuery = newQuery.trim();\r\n    \r\n    // Check for test query - return fake data without API call\r\n    if (trimmedQuery.toLowerCase() === 'test') {\r\n      console.log('Test query detected - using dummy data');\r\n      setResults(dummyTestData.healthInfo);\r\n      setDataSource('openai');\r\n      setIsLoading(false);\r\n      onNewSearch(trimmedQuery);\r\n      setNewQuery('');\r\n      return;\r\n    }\r\n    \r\n    // Make API call for new search directly in SearchResults\r\n    console.log('Making new search from SearchResults:', trimmedQuery);\r\n    fetchResults(trimmedQuery);\r\n    onNewSearch(trimmedQuery); // This updates the URL\r\n    setNewQuery(''); // Reset input\r\n  };\r\n\r\n  const handleClearAll = () => {\r\n    setNewQuery('');\r\n    setImage(null);\r\n    setCurrentPhotoId(null);\r\n    \r\n    const fileInput = document.getElementById('camera-input') as HTMLInputElement;\r\n    if (fileInput) {\r\n      fileInput.value = '';\r\n    }\r\n    \r\n    const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n    if (searchInput) {\r\n      searchInput.classList.remove('with-image');\r\n    }\r\n  };\r\n\r\n  const handleVoiceInput = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (!isListening) {\r\n      const recognition = new (window as any).webkitSpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      recognition.lang = 'en-US';\r\n\r\n      recognition.onstart = () => setIsListening(true);\r\n      recognition.onresult = (event: any) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setNewQuery(transcript);\r\n        setIsListening(false);\r\n      };\r\n      recognition.onerror = () => setIsListening(false);\r\n      recognition.onend = () => setIsListening(false);\r\n\r\n      recognition.start();\r\n    }\r\n  };\r\n\r\n  const handleCameraClick = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  const handleAnalysisComplete = async (foodName: string): Promise<void> => {\r\n    try {\r\n      console.log('Image analysis completed, food detected:', foodName);\r\n      setNewQuery(foodName);\r\n      fetchResults(foodName);\r\n      onNewSearch(foodName);\r\n      setIsUploadModalOpen(false);\r\n    } catch (error) {\r\n      console.error('Error processing analyzed food:', error);\r\n      alert('Failed to process the analyzed food. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleUserChange = (user: any) => {\r\n    console.log('User changed:', user);\r\n  };\r\n\r\n  const handleSignIn = (user: any) => {\r\n    console.log('User signed in:', user);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    console.log('User signed out');\r\n  };\r\n\r\n  const convertLinksToClickable = (text: string) => {\r\n    // Simple regex to convert URLs to clickable links\r\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n    const parts = text.split(urlRegex);\r\n    \r\n    return parts.map((part, index) => {\r\n      if (part.match(urlRegex)) {\r\n        return (\r\n          <a key={index} href={part} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {part}\r\n          </a>\r\n        );\r\n      }\r\n      return part;\r\n    });\r\n  };\r\n\r\n  // Test query check\r\n  const isTestQuery = query.toLowerCase() === 'test';\r\n\r\n  return (\r\n    <div className={`results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`}>\r\n      <MultiAuthLogin \r\n        position=\"top-right\"\r\n        className=\"results-login-button\"\r\n        onUserChange={handleUserChange}\r\n        onSignIn={handleSignIn}\r\n        onSignOut={handleSignOut}\r\n      />\r\n\r\n      {/* Always show header with logo */}\r\n      <div className=\"results-search-header\">\r\n        <div className=\"results-logo-container\">\r\n          <img \r\n            src=\"/assets/whatishealthylogo.svg\" \r\n            alt=\"What is Healthy?\" \r\n            className=\"results-search-logo\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"search-input-container\">\r\n          <form onSubmit={handleNewSearchSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ask anything about health...\"\r\n              value={newQuery}\r\n              onChange={(e) => setNewQuery(e.target.value)}\r\n              className=\"search-input results-search-input\"\r\n              data-query={isTestQuery ? 'test' : ''}\r\n            />\r\n          </form>\r\n          \r\n          <div className=\"search-icons\">\r\n            {(newQuery || image) && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleClearAll}\r\n                className=\"icon-button clear-button\"\r\n                aria-label=\"Clear all\"\r\n              >\r\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n                </svg>\r\n              </button>\r\n            )}\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCameraClick}\r\n              className=\"icon-button\"\r\n              aria-label=\"Upload image\"\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n              </svg>\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleVoiceInput}\r\n              className={`icon-button ${isListening ? 'listening' : ''}`}\r\n              aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n                <path d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Results Content - Only show when not loading */}\r\n      <div className=\"results-container\">\r\n        {!isLoading && results && (\r\n          <>\r\n            <h1 className=\"results-header\">Search Results for: \"{query}\"</h1>\r\n            \r\n            <div className=\"results-content\">\r\n              <div className=\"health-info-card\">\r\n                <div className=\"health-info-content\">\r\n                  <div className=\"markdown-content\">\r\n                    {dataSource === 'vnutrition' ? (\r\n                      (() => {\r\n                        let nutrition;\r\n                        try {\r\n                          nutrition = typeof results === 'string' ? JSON.parse(results) : results;\r\n                          \r\n                          if (nutrition && nutrition.found !== false) {\r\n                            return (\r\n                              <div>\r\n                                <h3>Nutrition Information</h3>\r\n                                <ul>\r\n                                  <li>Calories per serving: {nutrition.calories_per_serving || 0}</li>\r\n                                  <li>Protein: {nutrition.protein_g || 0}g</li>\r\n                                  <li>Carbs: {nutrition.carbs_g || 0}g</li>\r\n                                  <li>Fat: {nutrition.fat_g || 0}g</li>\r\n                                  <li>NOVA Score: {nutrition.nova_classification || 1}</li>\r\n                                  <li>Processing Level: {nutrition.nova_description || nutrition.processed_level || 'Unknown'}</li>\r\n                                </ul>\r\n                              </div>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <div>\r\n                                <h3>Raw Database Data (Debug)</h3>\r\n                                <pre style={{ fontSize: '12px', background: '#f5f5f5', padding: '10px' }}>\r\n                                  {JSON.stringify(nutrition, null, 2)}\r\n                                </pre>\r\n                              </div>\r\n                            );\r\n                          }\r\n                        } catch {\r\n                          return <div>Error parsing nutrition data</div>;\r\n                        }\r\n                      })()\r\n                    ) : (\r\n                      convertLinksToClickable(results)\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"data-source-indicator\">\r\n                  {dataSource === 'openai' ? (\r\n                    <span>Powered by AI</span>\r\n                  ) : dataSource === 'error' ? (\r\n                    <span className=\"error-source\">Error retrieving data</span>\r\n                  ) : (\r\n                    <span>What Is Healthy?</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"sidebar\">\r\n                <div className=\"quality-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                  <ResultQualityPie \r\n                    query={query}\r\n                    results={results}\r\n                    dataSource={dataSource}\r\n                    citations={citations}\r\n                  />\r\n                </div>\r\n\r\n                {dataSource === 'vnutrition' && (\r\n                  <>\r\n                    <div className=\"nutrition-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                      <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                        Nutrition Breakdown\r\n                      </h3>\r\n                      <NutritionChart \r\n                        query={query}\r\n                        results={results}\r\n                        dataSource={dataSource}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"nova-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                      <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                        Processing Level (NOVA Score)\r\n                      </h3>\r\n                      <NovaChart \r\n                        query={query}\r\n                        results={results}\r\n                        dataSource={dataSource}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n                \r\n                <div className=\"related-topics-card\">\r\n                  <h3>Related Health Topics</h3>\r\n                  <ul className=\"related-topics-list\">\r\n                    {isTestQuery ? (\r\n                      dummyTestData.relatedTopics.map((topic, index) => (\r\n                        <li key={index}>\r\n                          <button \r\n                            onClick={() => onNewSearch(topic)}\r\n                            className=\"topic-button\"\r\n                          >\r\n                            {topic}\r\n                          </button>\r\n                        </li>\r\n                      ))\r\n                    ) : \r\n                      defaultRelatedTopics.map((topic, index) => (\r\n                        <li key={index}>\r\n                          <button \r\n                            onClick={() => onNewSearch(topic)}\r\n                            className=\"topic-button\"\r\n                          >\r\n                            {topic}\r\n                          </button>\r\n                        </li>\r\n                      ))\r\n                    }\r\n                  </ul>\r\n                </div>\r\n                \r\n                <div className=\"resources-card\">\r\n                  <h3>Useful Resources</h3>\r\n                  <ul className=\"resources-list\">\r\n                    {isTestQuery ? (\r\n                      dummyTestData.resources.map((resource, index) => (\r\n                        <li key={index}>\r\n                          <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {resource.text}\r\n                          </a>\r\n                        </li>\r\n                      ))\r\n                    ) : (\r\n                      defaultResources.map((resource, index) => (\r\n                        <li key={index}>\r\n                          <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {resource.text}\r\n                          </a>\r\n                        </li>\r\n                      ))\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        \r\n        {/* Loading State Overlay */}\r\n        {isLoading && (\r\n          <Spinner overlay message=\"Searching.......\" />\r\n        )}\r\n\r\n        {/* ImageUploadModal */}\r\n        <ImageUploadModal\r\n          isOpen={isUploadModalOpen}\r\n          onClose={() => setIsUploadModalOpen(false)}\r\n          onAnalysisComplete={handleAnalysisComplete}\r\n          title=\"Upload Image\"\r\n          subtitle=\"Upload images for analysis\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}