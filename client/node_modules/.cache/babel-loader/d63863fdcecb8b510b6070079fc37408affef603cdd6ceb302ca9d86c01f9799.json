{"ast":null,"code":"// Environment configuration for API endpoints\nexport const API_CONFIG = {\n  // WIHY API - Use localhost for development, production for build\n  WIHY_API_URL: process.env.REACT_APP_WIHY_API_URL || (process.env.NODE_ENV === 'development' ? 'http://localhost:8000' : 'https://ml.wihy.ai')\n};\n\n// Dynamic endpoint helper functions\nexport const getApiEndpoint = (path = '') => {\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\n  return `${API_CONFIG.WIHY_API_URL}${cleanPath}`;\n};\nexport const getWihyEndpoint = (path = '') => {\n  return getApiEndpoint(path);\n};\nexport default API_CONFIG;","map":{"version":3,"names":["API_CONFIG","WIHY_API_URL","process","env","REACT_APP_WIHY_API_URL","NODE_ENV","getApiEndpoint","path","cleanPath","startsWith","getWihyEndpoint"],"sources":["C:/repo/wihy_ui/client/src/config/apiConfig.ts"],"sourcesContent":["// Environment configuration for API endpoints\r\nexport const API_CONFIG = {\r\n  // WIHY API - Use localhost for development, production for build\r\n  WIHY_API_URL: process.env.REACT_APP_WIHY_API_URL || \r\n    (process.env.NODE_ENV === 'development' ? 'http://localhost:8000' : 'https://ml.wihy.ai'),\r\n} as const;\r\n\r\n// Dynamic endpoint helper functions\r\nexport const getApiEndpoint = (path: string = '') => {\r\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\r\n  return `${API_CONFIG.WIHY_API_URL}${cleanPath}`;\r\n};\r\n\r\nexport const getWihyEndpoint = (path: string = '') => {\r\n  return getApiEndpoint(path);\r\n};\r\n\r\nexport default API_CONFIG;"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG;EACxB;EACAC,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,KAC7CF,OAAO,CAACC,GAAG,CAACE,QAAQ,KAAK,aAAa,GAAG,uBAAuB,GAAG,oBAAoB;AAC5F,CAAU;;AAEV;AACA,OAAO,MAAMC,cAAc,GAAGA,CAACC,IAAY,GAAG,EAAE,KAAK;EACnD,MAAMC,SAAS,GAAGD,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,GAAGF,IAAI,GAAG,IAAIA,IAAI,EAAE;EAC1D,OAAO,GAAGP,UAAU,CAACC,YAAY,GAAGO,SAAS,EAAE;AACjD,CAAC;AAED,OAAO,MAAME,eAAe,GAAGA,CAACH,IAAY,GAAG,EAAE,KAAK;EACpD,OAAOD,cAAc,CAACC,IAAI,CAAC;AAC7B,CAAC;AAED,eAAeP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}