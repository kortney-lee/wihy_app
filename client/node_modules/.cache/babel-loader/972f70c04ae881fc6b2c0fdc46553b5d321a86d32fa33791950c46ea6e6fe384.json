{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import{fetchNewsFeed,getArticlesByCategory}from'../services/newsService';import{useNavigate}from'react-router-dom';import'./HealthNewsFeed.css';// Update the props interface to receive the search functions\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// Define placeholder images by category\nconst PLACEHOLDER_IMAGES={'Nutrition & Diet':['https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&q=80','https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&q=80','https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80','https://images.unsplash.com/photo-1547592180-85f173990554?w=800&q=80'],'Medical Research':['https://images.unsplash.com/photo-1582719508461-905c673771fd?w=800&q=80','https://images.unsplash.com/photo-1579154204601-01588f351e67?w=800&q=80','https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80','https://images.unsplash.com/photo-1581093588401-fbb62a02f120?w=800&q=80'],'Public Health':['https://images.unsplash.com/photo-1585435557343-3b092031a831?w=800&q=80','https://images.unsplash.com/photo-1530497610245-94d3c16cda28?w=800&q=80','https://images.unsplash.com/photo-1584017911766-d451b3d0e843?w=800&q=80','https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80'],'Clinical Studies':['https://images.unsplash.com/photo-1579684385127-1ef15d508118?w=800&q=80','https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?w=800&q=80','https://images.unsplash.com/photo-1624727828489-a1e03b79bba8?w=800&q=80','https://images.unsplash.com/photo-1516069677022-53fe679c7ccb?w=800&q=80'],'Disease Prevention':['https://images.unsplash.com/photo-1584982751601-97dcc096659c?w=800&q=80','https://images.unsplash.com/photo-1598256989800-fe5f95da9787?w=800&q=80','https://images.unsplash.com/photo-1576091160550-2173dba999ef?w=800&q=80','https://images.unsplash.com/photo-1603398938378-e54eab446dde?w=800&q=80'],'Mental Health':['https://images.unsplash.com/photo-1493836512294-502baa1986e2?w=800&q=80','https://images.unsplash.com/photo-1527736947477-2790e28f3443?w=800&q=80','https://images.unsplash.com/photo-1546290581-22fe67c7bd0e?w=800&q=80','https://images.unsplash.com/photo-1569893033503-9204c3ab911c?w=800&q=80'],'General Health':['https://images.unsplash.com/photo-1498837167922-ddd27525d352?w=800&q=80','https://images.unsplash.com/photo-1511688878353-3a2f5be94cd7?w=800&q=80','https://images.unsplash.com/photo-1571019613576-2b22c76fd955?w=800&q=80','https://images.unsplash.com/photo-1579126038374-6064e9370f0f?w=800&q=80'],'default':['https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80','https://images.unsplash.com/photo-1538108149393-fbbd81895907?w=800&q=80','https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80','https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80']};// Helper function to get a random placeholder image for a category\nconst getRandomPlaceholderImage=category=>{// Default to 'default' category if the category doesn't exist or is not provided\nconst categoryImages=PLACEHOLDER_IMAGES[category||'']||PLACEHOLDER_IMAGES['default'];// Get a random image from the array\nconst randomIndex=Math.floor(Math.random()*categoryImages.length);return categoryImages[randomIndex];};// Helper function to get a color based on category\nconst getCategoryColor=category=>{if(!category)return'#94a3b8';const colors={'Nutrition & Diet':'#4caf50','Medical Research':'#2196f3','Public Health':'#ff9800','Clinical Studies':'#9c27b0','Disease Prevention':'#f44336','Mental Health':'#03a9f4','General Health':'#ffeb3b'};return colors[category]||'#94a3b8';};const formatTimeAgo=dateString=>{if(!dateString)return'Recently';const now=new Date();const date=new Date(dateString);const diffInSeconds=Math.floor((now.getTime()-date.getTime())/1000);if(diffInSeconds<60)return'Just now';if(diffInSeconds<3600)return\"\".concat(Math.floor(diffInSeconds/60),\" minutes ago\");if(diffInSeconds<86400)return\"\".concat(Math.floor(diffInSeconds/3600),\" hours ago\");if(diffInSeconds<604800)return\"\".concat(Math.floor(diffInSeconds/86400),\" days ago\");return date.toLocaleDateString();};const HealthNewsFeed=_ref=>{let{maxArticles=6,onAnalyzeArticle=query=>{// Default implementation that will ensure the button always appears\nconsole.log('Article analysis requested:',query);// You could show a toast notification here or redirect to the analysis page\nwindow.open(\"/analyze?query=\".concat(encodeURIComponent(query)),'_blank');},setSearchQuery,triggerSearch}=_ref;const[articles,setArticles]=useState([]);const[loading,setLoading]=useState(true);const[loadingMore,setLoadingMore]=useState(false);const[selectedCategory,setSelectedCategory]=useState('all');const[analyzingArticle,setAnalyzingArticle]=useState(null);const[currentPage,setCurrentPage]=useState(1);const[hasMorePages,setHasMorePages]=useState(true);const navigate=useNavigate();const prevFetchParamsRef=useRef({category:'',max:0});const observerTarget=useRef(null);const categories=[{id:'all',label:'All Health News'},{id:'Nutrition & Diet',label:'Nutrition'},{id:'Medical Research',label:'Medical Research'},{id:'Public Health',label:'Public Health'},{id:'Clinical Studies',label:'Clinical Studies'},{id:'Disease Prevention',label:'Prevention'},{id:'Mental Health',label:'Mental Health'},{id:'General Health',label:'General Health'}];// Fetch initial articles when category changes\nuseEffect(()=>{// Only fetch if category or maxArticles actually changed\nconst prevParams=prevFetchParamsRef.current;if(prevParams.category!==selectedCategory||prevParams.max!==maxArticles){prevFetchParamsRef.current={category:selectedCategory,max:maxArticles};setCurrentPage(1);// Reset to first page when changing categories\nsetHasMorePages(true);// Reset pagination state\nfetchHealthNews(true);// true means reset (first page)\n}},[selectedCategory,maxArticles]);// Set up intersection observer for infinite scroll\nconst handleObserver=useCallback(entries=>{const[target]=entries;if(target.isIntersecting&&!loading&&!loadingMore&&hasMorePages){fetchHealthNews(false);// false means don't reset, load more\n}},[loading,loadingMore,hasMorePages]);useEffect(()=>{const element=observerTarget.current;const option={root:null,rootMargin:'0px',threshold:0.1};const observer=new IntersectionObserver(handleObserver,option);if(element)observer.observe(element);return()=>{if(element)observer.unobserve(element);};},[handleObserver,observerTarget]);// Update the fetchHealthNews function with priority handling\nconst fetchHealthNews=async function(){let resetPage=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;if(resetPage){setLoading(true);setCurrentPage(1);}else{setLoadingMore(true);setCurrentPage(prev=>prev+1);}try{const page=resetPage?1:currentPage+1;console.log('Fetching health news for category:',selectedCategory,'page:',page);let response;// Define all health categories and their priority order\nconst healthCategories=['Nutrition & Diet','Medical Research','Public Health','Clinical Studies','Disease Prevention','Mental Health','General Health'];if(selectedCategory==='all'){// Explicitly pass an empty array to ensure NO category filters are applied\nresponse=await fetchNewsFeed([],maxArticles*2);console.log('Fetching ALL news with no category filters');}else{response=await getArticlesByCategory(selectedCategory,maxArticles);}if(response.success&&response.articles&&response.articles.length>0){let processedArticles=response.articles;console.log(\"Received \".concat(processedArticles.length,\" articles from API\"));// For \"all\" category, still sort and diversify\nif(selectedCategory==='all'){// Sort articles by category priority\nprocessedArticles=sortArticlesByPriority(response.articles,healthCategories);// Diversify sources\nprocessedArticles=diversifySources(processedArticles);// Limit to maxArticles if we're on the first page\nif(resetPage){processedArticles=processedArticles.slice(0,maxArticles);}else{// For subsequent pages, limit to maxArticles more\nprocessedArticles=processedArticles.slice(0,maxArticles);}}if(resetPage){setArticles(processedArticles);}else{// Append new articles to existing ones\nsetArticles(prev=>[...prev,...processedArticles]);}// If API doesn't provide pagination info, infer it from response length\nif(response.pagination){setHasMorePages(response.pagination.has_next_page);}else{// If we received at least as many articles as we requested, assume there are more\nsetHasMorePages(response.articles.length>=maxArticles);}}else{console.log('No articles found for the selected category on page',page);// If no articles found and it's \"all\" category, try one more time with really no filters\nif(selectedCategory==='all'){console.log('Trying again with absolutely no filters');// Last resort - force no filtering at all\ntry{const fallbackResponse=await fetch('/api/news/articles?limit='+maxArticles);const fallbackData=await fallbackResponse.json();if(fallbackData.success&&fallbackData.articles&&fallbackData.articles.length>0){console.log('Fallback succeeded, got articles');if(resetPage){setArticles(fallbackData.articles);}else{setArticles(prev=>[...prev,...fallbackData.articles]);}setHasMorePages(fallbackData.articles.length>=maxArticles);}else{if(resetPage){setArticles([]);}setHasMorePages(false);}}catch(fallbackError){console.error('Even fallback failed:',fallbackError);if(resetPage){setArticles([]);}setHasMorePages(false);}}else{if(resetPage){setArticles([]);}setHasMorePages(false);}}}catch(error){console.error('Error fetching health news:',error);if(resetPage){setArticles([]);}setHasMorePages(false);}finally{setLoading(false);setLoadingMore(false);}};// Replace your current sortArticlesByPriority function with this one\nconst sortArticlesByPriority=(articles,priorityCategories)=>{// Create a copy of the articles array\nconst sortedArticles=[...articles];// Define a function to get priority score (lower is higher priority)\nconst getPriorityScore=article=>{const category=article.category||'';// 1. Exact match with priority categories (in order)\nfor(let i=0;i<priorityCategories.length;i++){if(category===priorityCategories[i]){return i;// Return the exact index position (0, 1, 2, etc.)\n}}// 2. Partial match with priority categories\nfor(let i=0;i<priorityCategories.length;i++){if(category.includes(priorityCategories[i])){return i+20;// Still keep order but with lower priority than exact matches\n}}// 3. Check for health-related keywords in title/description\nconst title=article.title||'';const description=article.description||'';const content=title+' '+description;const contentLower=content.toLowerCase();const healthKeywords=['health','medical','medicine','doctor','patient','hospital','disease','treatment','cure','wellness','fitness','diet','nutrition','mental','therapy','clinical','drug','vaccine','symptom','diagnosis','cancer','heart','diabetes','covid'];if(healthKeywords.some(keyword=>contentLower.includes(keyword))){return 100;// All health-related content after categorized content\n}// 4. Tech content goes last\nconst techKeywords=['tech','technology','computing','software','hardware','ai','artificial intelligence'];if(techKeywords.some(keyword=>category.toLowerCase().includes(keyword)||contentLower.includes(keyword))){return 1000;// Tech content at the bottom\n}// 5. Everything else\nreturn 500;// Other content in the middle\n};// Debug the categories before sorting\nconsole.log('Priority order:',priorityCategories);// Sort articles by priority score\nsortedArticles.sort((a,b)=>{const priorityA=getPriorityScore(a);const priorityB=getPriorityScore(b);// First sort by priority category\nif(priorityA!==priorityB){return priorityA-priorityB;}// If same priority category, sort by date (newest first)\nconst dateA=a.publishedDate||a.published_date;const dateB=b.publishedDate||b.published_date;if(dateA&&dateB){return new Date(dateB).getTime()-new Date(dateA).getTime();}return 0;});// Log the first few articles to debug the sorting\nconsole.log('Articles after sorting:');sortedArticles.slice(0,5).forEach((article,i)=>{const score=getPriorityScore(article);console.log(\"  \".concat(i+1,\". [\").concat(score,\"] \").concat(article.category||'uncategorized',\": \").concat(article.title));});return sortedArticles;};// Function to ensure diversity of sources\nconst diversifySources=articles=>{if(!articles||articles.length<=4)return articles;// Group articles by source\nconst sourceMap={};articles.forEach(article=>{const source=article.source||'unknown';if(!sourceMap[source]){sourceMap[source]=[];}sourceMap[source].push(article);});// Get all unique sources\nconst sources=Object.keys(sourceMap);console.log('Available sources:',sources);// If we only have one source, return original articles\nif(sources.length<=1)return articles;// Build a diversified list by alternating between sources\nconst diversified=[];let remainingArticles=[...articles];// Limit articles per source based on how many sources we have\nconst maxPerSource=Math.max(2,Math.ceil(articles.length/sources.length));// First pass: Take up to the limit from each source\nsources.forEach(source=>{const sourceArticles=sourceMap[source].slice(0,maxPerSource);diversified.push(...sourceArticles);// Remove the ones we've taken\nremainingArticles=remainingArticles.filter(article=>!sourceArticles.includes(article));});// Add any remaining articles up to the original length\nif(remainingArticles.length>0){const neededCount=articles.length-diversified.length;diversified.push(...remainingArticles.slice(0,neededCount));}console.log(\"Source diversity: from \".concat(articles.length,\" articles with \").concat(sources.length,\" sources, created \").concat(diversified.length,\" diversified articles\"));return diversified;};// Replace the handleAnalyzeWithWihy function (lines 471-493)\nconst handleAnalyzeWithWihy=(article,e)=>{e.stopPropagation();e.preventDefault();if(analyzingArticle===article.id)return;setAnalyzingArticle(article.id);const searchQuery=\"Analyze this health article: \".concat(article.title,\". \\nSummary: \").concat(article.description||article.summary||'No description available',\".\\nSource: \").concat(article.source||'Unknown source',\"\\nCategory: \").concat(article.category||'Uncategorized');console.log('Starting article analysis:',article.title);// Try the new direct approach first\nif(triggerSearch){console.log('Using triggerSearch with custom query');// Also update the search input for visual feedback\nif(setSearchQuery){setSearchQuery(searchQuery);}// Pass the query directly to triggerSearch\ntriggerSearch(searchQuery);}else{// FALLBACK: Directly manipulate DOM and submit the form\nconst searchElement=document.querySelector('.search-input');if(searchElement){// Direct DOM update for immediate effect\nsearchElement.value=searchQuery;searchElement.focus();// Find the form and submit it directly\nconst form=searchElement.closest('form');if(form){console.log('Found form, submitting directly');// Also update React state\nif(setSearchQuery){setSearchQuery(searchQuery);}// Submit the form\nsetTimeout(()=>{form.dispatchEvent(new Event('submit',{bubbles:true,cancelable:true}));},10);}else{// No form found, fall back to setSearchQuery\nconsole.log('No form found, using setSearchQuery only');if(setSearchQuery){setSearchQuery(searchQuery);}}}else{// Can't find search element, use the props approach\nconsole.log('No search input found, using prop methods');if(setSearchQuery){setSearchQuery(searchQuery);}// Last resort - use the onAnalyzeArticle function\nif(onAnalyzeArticle){onAnalyzeArticle(searchQuery);}}}// Reset analyzing state after delay\nsetTimeout(()=>setAnalyzingArticle(null),2000);};if(loading&&currentPage===1){return/*#__PURE__*/_jsxs(\"div\",{className:\"news-feed-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"news-categories\",children:categories.map(category=>/*#__PURE__*/_jsx(\"button\",{className:\"category-btn \".concat(selectedCategory===category.id?'active':''),onClick:()=>setSelectedCategory(category.id),children:category.label},category.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"loading-news\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/assets/whatishealthyspinner.gif\",alt:\"Loading...\",style:{width:'48px',height:'48px',objectFit:'contain',marginBottom:'16px'}}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading latest health news...\"})]})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"news-feed-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"news-categories\",children:categories.map(category=>/*#__PURE__*/_jsx(\"button\",{className:\"category-btn \".concat(selectedCategory===category.id?'active':''),onClick:()=>setSelectedCategory(category.id),children:category.label},category.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"news-grid\",children:articles.map(article=>{var _article$tags;return/*#__PURE__*/_jsxs(\"article\",{className:\"news-card\",\"data-category\":article.category,onClick:()=>window.open(article.link||article.url,'_blank'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"news-image\",children:article.image_url||article.thumbnail||article.imageUrl||article.thumbnailUrl?/*#__PURE__*/_jsx(\"img\",{src:article.image_url||article.thumbnail||article.imageUrl||article.thumbnailUrl,alt:article.title,onError:e=>{console.log('Image failed to load:',article.image_url||article.thumbnail);// Use category-specific random placeholder instead of hiding\ne.target.src=getRandomPlaceholderImage(article.category);// Add placeholder class for styling\ne.target.classList.add('placeholder-image');}}):/*#__PURE__*/// Use category-specific random placeholder when no image is provided\n_jsx(\"img\",{src:getRandomPlaceholderImage(article.category),alt:article.title||'Health article',className:\"placeholder-image\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"news-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"news-meta\",children:[onAnalyzeArticle&&/*#__PURE__*/_jsx(\"div\",{className:\"wihy-btn-wrapper\",style:{display:'inline-block',animation:analyzingArticle===article.id?'none':'wiH-border-sweep 2.2s linear infinite',background:analyzingArticle===article.id?'linear-gradient(#f3f4f6, #f3f4f6)':'linear-gradient(#fff, #fff) padding-box, linear-gradient(90deg, #fa5f06, #ffffff, #C0C0C0, #4cbb17) border-box',backgroundSize:'100% 100%, 200% 100%',border:'2px solid transparent',borderRadius:'16px'},children:/*#__PURE__*/_jsx(\"button\",{className:\"analyze-wihy-btn\",onClick:e=>handleAnalyzeWithWihy(article,e),disabled:analyzingArticle===article.id,style:{background:'transparent',border:'none',borderRadius:'16px',padding:'6px 12px',fontSize:'11px',fontWeight:'600',cursor:analyzingArticle===article.id?'not-allowed':'pointer',boxShadow:'none',transform:'none'},children:analyzingArticle===article.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"analyze-spinner\"}),\"Analyzing...\"]}):/*#__PURE__*/_jsx(_Fragment,{children:\"Analyze with WiHy\"})})}),/*#__PURE__*/_jsx(\"span\",{className:\"news-category\",style:{backgroundColor:getCategoryColor(article.category)},children:article.category}),/*#__PURE__*/_jsx(\"span\",{className:\"news-time\",children:formatTimeAgo(article.publishedDate||article.published_date)})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"news-title\",children:article.title}),/*#__PURE__*/_jsx(\"p\",{className:\"news-summary\",children:article.summary||article.description}),/*#__PURE__*/_jsx(\"div\",{className:\"news-tags\",children:(_article$tags=article.tags)===null||_article$tags===void 0?void 0:_article$tags.slice(0,3).map(tag=>/*#__PURE__*/_jsxs(\"span\",{className:\"news-tag\",children:[\"#\",tag]},tag))}),/*#__PURE__*/_jsxs(\"div\",{className:\"news-footer\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"relevance-score\",children:[\"Relevance: \",Math.round((article.relevanceScore||0)*100),\"%\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"read-more-btn\",children:\"Read Full Article \\u2192\"})]})]})]},article.id);})}),articles.length===0&&!loading&&/*#__PURE__*/_jsx(\"div\",{className:\"no-articles\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No articles found for the selected category. Try selecting a different category.\"})}),loadingMore&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-more\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading more articles...\"})]}),hasMorePages&&!loadingMore&&articles.length>0&&/*#__PURE__*/_jsx(\"div\",{ref:observerTarget,className:\"intersection-observer-target\",style:{height:'20px',margin:'20px 0',visibility:'hidden'}})]});};export default HealthNewsFeed;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","fetchNewsFeed","getArticlesByCategory","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PLACEHOLDER_IMAGES","getRandomPlaceholderImage","category","categoryImages","randomIndex","Math","floor","random","length","getCategoryColor","colors","formatTimeAgo","dateString","now","Date","date","diffInSeconds","getTime","concat","toLocaleDateString","HealthNewsFeed","_ref","maxArticles","onAnalyzeArticle","query","console","log","window","open","encodeURIComponent","setSearchQuery","triggerSearch","articles","setArticles","loading","setLoading","loadingMore","setLoadingMore","selectedCategory","setSelectedCategory","analyzingArticle","setAnalyzingArticle","currentPage","setCurrentPage","hasMorePages","setHasMorePages","navigate","prevFetchParamsRef","max","observerTarget","categories","id","label","prevParams","current","fetchHealthNews","handleObserver","entries","target","isIntersecting","element","option","root","rootMargin","threshold","observer","IntersectionObserver","observe","unobserve","resetPage","arguments","undefined","prev","page","response","healthCategories","success","processedArticles","sortArticlesByPriority","diversifySources","slice","pagination","has_next_page","fallbackResponse","fetch","fallbackData","json","fallbackError","error","priorityCategories","sortedArticles","getPriorityScore","article","i","includes","title","description","content","contentLower","toLowerCase","healthKeywords","some","keyword","techKeywords","sort","a","b","priorityA","priorityB","dateA","publishedDate","published_date","dateB","forEach","score","sourceMap","source","push","sources","Object","keys","diversified","remainingArticles","maxPerSource","ceil","sourceArticles","filter","neededCount","handleAnalyzeWithWihy","e","stopPropagation","preventDefault","searchQuery","summary","searchElement","document","querySelector","value","focus","form","closest","setTimeout","dispatchEvent","Event","bubbles","cancelable","className","children","map","onClick","src","alt","style","width","height","objectFit","marginBottom","_article$tags","link","url","image_url","thumbnail","imageUrl","thumbnailUrl","onError","classList","add","display","animation","background","backgroundSize","border","borderRadius","disabled","padding","fontSize","fontWeight","cursor","boxShadow","transform","backgroundColor","tags","tag","round","relevanceScore","ref","margin","visibility"],"sources":["C:/repo/wihy_ui/client/src/components/HealthNewsFeed.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { fetchNewsFeed, getArticlesByCategory, NewsArticle } from '../services/newsService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './HealthNewsFeed.css';\r\n\r\n// Update the props interface to receive the search functions\r\ninterface NewsFeedProps {\r\n  maxArticles?: number;\r\n  onAnalyzeArticle?: (query: string) => void;\r\n  setSearchQuery?: (query: string) => void;\r\n  triggerSearch?: (customQuery?: string) => void;\r\n}\r\n\r\n// Define placeholder images by category\r\nconst PLACEHOLDER_IMAGES: Record<string, string[]> = {\r\n  'Nutrition & Diet': [\r\n    'https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1547592180-85f173990554?w=800&q=80'\r\n  ],\r\n  'Medical Research': [\r\n    'https://images.unsplash.com/photo-1582719508461-905c673771fd?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1579154204601-01588f351e67?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1581093588401-fbb62a02f120?w=800&q=80'\r\n  ],\r\n  'Public Health': [\r\n    'https://images.unsplash.com/photo-1585435557343-3b092031a831?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1530497610245-94d3c16cda28?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1584017911766-d451b3d0e843?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80'\r\n  ],\r\n  'Clinical Studies': [\r\n    'https://images.unsplash.com/photo-1579684385127-1ef15d508118?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1624727828489-a1e03b79bba8?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1516069677022-53fe679c7ccb?w=800&q=80'\r\n  ],\r\n  'Disease Prevention': [\r\n    'https://images.unsplash.com/photo-1584982751601-97dcc096659c?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1598256989800-fe5f95da9787?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1576091160550-2173dba999ef?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1603398938378-e54eab446dde?w=800&q=80'\r\n  ],\r\n  'Mental Health': [\r\n    'https://images.unsplash.com/photo-1493836512294-502baa1986e2?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1527736947477-2790e28f3443?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1546290581-22fe67c7bd0e?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1569893033503-9204c3ab911c?w=800&q=80'\r\n  ],\r\n  'General Health': [\r\n    'https://images.unsplash.com/photo-1498837167922-ddd27525d352?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1511688878353-3a2f5be94cd7?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1571019613576-2b22c76fd955?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1579126038374-6064e9370f0f?w=800&q=80'\r\n  ],\r\n  'default': [\r\n    'https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1538108149393-fbbd81895907?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80'\r\n  ]\r\n};\r\n\r\n// Helper function to get a random placeholder image for a category\r\nconst getRandomPlaceholderImage = (category?: string): string => {\r\n  // Default to 'default' category if the category doesn't exist or is not provided\r\n  const categoryImages = PLACEHOLDER_IMAGES[category || ''] || PLACEHOLDER_IMAGES['default'];\r\n  \r\n  // Get a random image from the array\r\n  const randomIndex = Math.floor(Math.random() * categoryImages.length);\r\n  return categoryImages[randomIndex];\r\n};\r\n\r\n// Helper function to get a color based on category\r\nconst getCategoryColor = (category?: string) => {\r\n  if (!category) return '#94a3b8';\r\n  \r\n  const colors: {[key: string]: string} = {\r\n    'Nutrition & Diet': '#4caf50',\r\n    'Medical Research': '#2196f3',\r\n    'Public Health': '#ff9800',\r\n    'Clinical Studies': '#9c27b0',\r\n    'Disease Prevention': '#f44336',\r\n    'Mental Health': '#03a9f4',\r\n    'General Health': '#ffeb3b'\r\n  };\r\n  \r\n  return colors[category] || '#94a3b8';\r\n};\r\n\r\nconst formatTimeAgo = (dateString?: string) => {\r\n  if (!dateString) return 'Recently';\r\n  \r\n  const now = new Date();\r\n  const date = new Date(dateString);\r\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\r\n  \r\n  if (diffInSeconds < 60) return 'Just now';\r\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;\r\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\r\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} days ago`;\r\n  \r\n  return date.toLocaleDateString();\r\n};\r\n\r\nconst HealthNewsFeed: React.FC<NewsFeedProps> = ({ \r\n  maxArticles = 6, \r\n  onAnalyzeArticle = (query: string) => {\r\n    // Default implementation that will ensure the button always appears\r\n    console.log('Article analysis requested:', query);\r\n    // You could show a toast notification here or redirect to the analysis page\r\n    window.open(`/analyze?query=${encodeURIComponent(query)}`, '_blank');\r\n  },\r\n  setSearchQuery,\r\n  triggerSearch\r\n}) => {\r\n  const [articles, setArticles] = useState<NewsArticle[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [analyzingArticle, setAnalyzingArticle] = useState<string | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [hasMorePages, setHasMorePages] = useState(true);\r\n  const navigate = useNavigate();\r\n  \r\n  const prevFetchParamsRef = useRef<{category: string, max: number}>({category: '', max: 0});\r\n  const observerTarget = useRef<HTMLDivElement>(null);\r\n\r\n  const categories = [\r\n    { id: 'all', label: 'All Health News' },\r\n    { id: 'Nutrition & Diet', label: 'Nutrition' },\r\n    { id: 'Medical Research', label: 'Medical Research' },\r\n    { id: 'Public Health', label: 'Public Health' },\r\n    { id: 'Clinical Studies', label: 'Clinical Studies' },\r\n    { id: 'Disease Prevention', label: 'Prevention' },\r\n    { id: 'Mental Health', label: 'Mental Health' },\r\n    { id: 'General Health', label: 'General Health' }\r\n  ];\r\n\r\n  // Fetch initial articles when category changes\r\n  useEffect(() => {\r\n    // Only fetch if category or maxArticles actually changed\r\n    const prevParams = prevFetchParamsRef.current;\r\n    if (prevParams.category !== selectedCategory || prevParams.max !== maxArticles) {\r\n      prevFetchParamsRef.current = {category: selectedCategory, max: maxArticles};\r\n      setCurrentPage(1); // Reset to first page when changing categories\r\n      setHasMorePages(true); // Reset pagination state\r\n      fetchHealthNews(true); // true means reset (first page)\r\n    }\r\n  }, [selectedCategory, maxArticles]);\r\n\r\n  // Set up intersection observer for infinite scroll\r\n  const handleObserver = useCallback((entries: IntersectionObserverEntry[]) => {\r\n    const [target] = entries;\r\n    if (target.isIntersecting && !loading && !loadingMore && hasMorePages) {\r\n      fetchHealthNews(false); // false means don't reset, load more\r\n    }\r\n  }, [loading, loadingMore, hasMorePages]);\r\n\r\n  useEffect(() => {\r\n    const element = observerTarget.current;\r\n    const option = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.1,\r\n    };\r\n    \r\n    const observer = new IntersectionObserver(handleObserver, option);\r\n    \r\n    if (element) observer.observe(element);\r\n    \r\n    return () => {\r\n      if (element) observer.unobserve(element);\r\n    };\r\n  }, [handleObserver, observerTarget]);\r\n\r\n  // Update the fetchHealthNews function with priority handling\r\n\r\n  const fetchHealthNews = async (resetPage: boolean = true) => {\r\n    if (resetPage) {\r\n      setLoading(true);\r\n      setCurrentPage(1);\r\n    } else {\r\n      setLoadingMore(true);\r\n      setCurrentPage(prev => prev + 1);\r\n    }\r\n\r\n    try {\r\n      const page = resetPage ? 1 : currentPage + 1;\r\n      console.log('Fetching health news for category:', selectedCategory, 'page:', page);\r\n      \r\n      let response;\r\n      \r\n      // Define all health categories and their priority order\r\n      const healthCategories = [\r\n        'Nutrition & Diet', \r\n        'Medical Research', \r\n        'Public Health', \r\n        'Clinical Studies', \r\n        'Disease Prevention', \r\n        'Mental Health', \r\n        'General Health'\r\n      ];\r\n      \r\n      if (selectedCategory === 'all') {\r\n        // Explicitly pass an empty array to ensure NO category filters are applied\r\n        response = await fetchNewsFeed([], maxArticles * 2);\r\n        console.log('Fetching ALL news with no category filters');\r\n      } else {\r\n        response = await getArticlesByCategory(selectedCategory, maxArticles);\r\n      }\r\n      \r\n      if (response.success && response.articles && response.articles.length > 0) {\r\n        let processedArticles = response.articles;\r\n        console.log(`Received ${processedArticles.length} articles from API`);\r\n        \r\n        // For \"all\" category, still sort and diversify\r\n        if (selectedCategory === 'all') {\r\n          // Sort articles by category priority\r\n          processedArticles = sortArticlesByPriority(response.articles, healthCategories);\r\n          \r\n          // Diversify sources\r\n          processedArticles = diversifySources(processedArticles);\r\n          \r\n          // Limit to maxArticles if we're on the first page\r\n          if (resetPage) {\r\n            processedArticles = processedArticles.slice(0, maxArticles);\r\n          } else {\r\n            // For subsequent pages, limit to maxArticles more\r\n            processedArticles = processedArticles.slice(0, maxArticles);\r\n          }\r\n        }\r\n        \r\n        if (resetPage) {\r\n          setArticles(processedArticles);\r\n        } else {\r\n          // Append new articles to existing ones\r\n          setArticles(prev => [...prev, ...processedArticles]);\r\n        }\r\n        \r\n        // If API doesn't provide pagination info, infer it from response length\r\n        if (response.pagination) {\r\n          setHasMorePages(response.pagination.has_next_page);\r\n        } else {\r\n          // If we received at least as many articles as we requested, assume there are more\r\n          setHasMorePages(response.articles.length >= maxArticles);\r\n        }\r\n      } else {\r\n        console.log('No articles found for the selected category on page', page);\r\n        // If no articles found and it's \"all\" category, try one more time with really no filters\r\n        if (selectedCategory === 'all') {\r\n          console.log('Trying again with absolutely no filters');\r\n          // Last resort - force no filtering at all\r\n          try {\r\n            const fallbackResponse = await fetch('/api/news/articles?limit=' + maxArticles);\r\n            const fallbackData = await fallbackResponse.json();\r\n            \r\n            if (fallbackData.success && fallbackData.articles && fallbackData.articles.length > 0) {\r\n              console.log('Fallback succeeded, got articles');\r\n              if (resetPage) {\r\n                setArticles(fallbackData.articles);\r\n              } else {\r\n                setArticles(prev => [...prev, ...fallbackData.articles]);\r\n              }\r\n              setHasMorePages(fallbackData.articles.length >= maxArticles);\r\n            } else {\r\n              if (resetPage) {\r\n                setArticles([]);\r\n              }\r\n              setHasMorePages(false);\r\n            }\r\n          } catch (fallbackError) {\r\n            console.error('Even fallback failed:', fallbackError);\r\n            if (resetPage) {\r\n              setArticles([]);\r\n            }\r\n            setHasMorePages(false);\r\n          }\r\n        } else {\r\n          if (resetPage) {\r\n            setArticles([]);\r\n          }\r\n          setHasMorePages(false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching health news:', error);\r\n      if (resetPage) {\r\n        setArticles([]);\r\n      }\r\n      setHasMorePages(false);\r\n    } finally {\r\n      setLoading(false);\r\n      setLoadingMore(false);\r\n    }\r\n  };\r\n  \r\n  // Replace your current sortArticlesByPriority function with this one\r\n\r\n  const sortArticlesByPriority = (articles: NewsArticle[], priorityCategories: string[]): NewsArticle[] => {\r\n    // Create a copy of the articles array\r\n    const sortedArticles = [...articles];\r\n    \r\n    // Define a function to get priority score (lower is higher priority)\r\n    const getPriorityScore = (article: NewsArticle): number => {\r\n      const category = article.category || '';\r\n      \r\n      // 1. Exact match with priority categories (in order)\r\n      for (let i = 0; i < priorityCategories.length; i++) {\r\n        if (category === priorityCategories[i]) {\r\n          return i; // Return the exact index position (0, 1, 2, etc.)\r\n        }\r\n      }\r\n      \r\n      // 2. Partial match with priority categories\r\n      for (let i = 0; i < priorityCategories.length; i++) {\r\n        if (category.includes(priorityCategories[i])) {\r\n          return i + 20; // Still keep order but with lower priority than exact matches\r\n        }\r\n      }\r\n      \r\n      // 3. Check for health-related keywords in title/description\r\n      const title = article.title || '';\r\n      const description = article.description || '';\r\n      const content = title + ' ' + description;\r\n      const contentLower = content.toLowerCase();\r\n      \r\n      const healthKeywords = [\r\n        'health', 'medical', 'medicine', 'doctor', 'patient', 'hospital',\r\n        'disease', 'treatment', 'cure', 'wellness', 'fitness', 'diet',\r\n        'nutrition', 'mental', 'therapy', 'clinical', 'drug', 'vaccine',\r\n        'symptom', 'diagnosis', 'cancer', 'heart', 'diabetes', 'covid'\r\n      ];\r\n      \r\n      if (healthKeywords.some(keyword => contentLower.includes(keyword))) {\r\n        return 100; // All health-related content after categorized content\r\n      }\r\n      \r\n      // 4. Tech content goes last\r\n      const techKeywords = ['tech', 'technology', 'computing', 'software', 'hardware', 'ai', 'artificial intelligence'];\r\n      if (techKeywords.some(keyword => \r\n        category.toLowerCase().includes(keyword) || \r\n        contentLower.includes(keyword)\r\n      )) {\r\n        return 1000; // Tech content at the bottom\r\n      }\r\n      \r\n      // 5. Everything else\r\n      return 500; // Other content in the middle\r\n    };\r\n    \r\n    // Debug the categories before sorting\r\n    console.log('Priority order:', priorityCategories);\r\n    \r\n    // Sort articles by priority score\r\n    sortedArticles.sort((a, b) => {\r\n      const priorityA = getPriorityScore(a);\r\n      const priorityB = getPriorityScore(b);\r\n      \r\n      // First sort by priority category\r\n      if (priorityA !== priorityB) {\r\n        return priorityA - priorityB;\r\n      }\r\n      \r\n      // If same priority category, sort by date (newest first)\r\n      const dateA = a.publishedDate || a.published_date;\r\n      const dateB = b.publishedDate || b.published_date;\r\n      \r\n      if (dateA && dateB) {\r\n        return new Date(dateB).getTime() - new Date(dateA).getTime();\r\n      }\r\n      \r\n      return 0;\r\n    });\r\n    \r\n    // Log the first few articles to debug the sorting\r\n    console.log('Articles after sorting:');\r\n    sortedArticles.slice(0, 5).forEach((article, i) => {\r\n      const score = getPriorityScore(article);\r\n      console.log(`  ${i+1}. [${score}] ${article.category || 'uncategorized'}: ${article.title}`);\r\n    });\r\n    \r\n    return sortedArticles;\r\n  };\r\n  \r\n  // Function to ensure diversity of sources\r\n  const diversifySources = (articles: NewsArticle[]): NewsArticle[] => {\r\n    if (!articles || articles.length <= 4) return articles;\r\n    \r\n    // Group articles by source\r\n    const sourceMap: Record<string, NewsArticle[]> = {};\r\n    articles.forEach(article => {\r\n      const source = article.source || 'unknown';\r\n      if (!sourceMap[source]) {\r\n        sourceMap[source] = [];\r\n      }\r\n      sourceMap[source].push(article);\r\n    });\r\n    \r\n    // Get all unique sources\r\n    const sources = Object.keys(sourceMap);\r\n    console.log('Available sources:', sources);\r\n    \r\n    // If we only have one source, return original articles\r\n    if (sources.length <= 1) return articles;\r\n    \r\n    // Build a diversified list by alternating between sources\r\n    const diversified: NewsArticle[] = [];\r\n    let remainingArticles = [...articles];\r\n    \r\n    // Limit articles per source based on how many sources we have\r\n    const maxPerSource = Math.max(2, Math.ceil(articles.length / sources.length));\r\n    \r\n    // First pass: Take up to the limit from each source\r\n    sources.forEach(source => {\r\n      const sourceArticles = sourceMap[source].slice(0, maxPerSource);\r\n      diversified.push(...sourceArticles);\r\n      \r\n      // Remove the ones we've taken\r\n      remainingArticles = remainingArticles.filter(\r\n        article => !sourceArticles.includes(article)\r\n      );\r\n    });\r\n    \r\n    // Add any remaining articles up to the original length\r\n    if (remainingArticles.length > 0) {\r\n      const neededCount = articles.length - diversified.length;\r\n      diversified.push(...remainingArticles.slice(0, neededCount));\r\n    }\r\n    \r\n    console.log(`Source diversity: from ${articles.length} articles with ${sources.length} sources, created ${diversified.length} diversified articles`);\r\n    \r\n    return diversified;\r\n  };\r\n  \r\n  // Replace the handleAnalyzeWithWihy function (lines 471-493)\r\n\r\n  const handleAnalyzeWithWihy = (article: NewsArticle, e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    \r\n    if (analyzingArticle === article.id) return;\r\n    \r\n    setAnalyzingArticle(article.id);\r\n    \r\n    const searchQuery = `Analyze this health article: ${article.title}. \r\nSummary: ${article.description || article.summary || 'No description available'}.\r\nSource: ${article.source || 'Unknown source'}\r\nCategory: ${article.category || 'Uncategorized'}`;\r\n\r\n    console.log('Starting article analysis:', article.title);\r\n    \r\n    // Try the new direct approach first\r\n    if (triggerSearch) {\r\n      console.log('Using triggerSearch with custom query');\r\n      // Also update the search input for visual feedback\r\n      if (setSearchQuery) {\r\n        setSearchQuery(searchQuery);\r\n      }\r\n      // Pass the query directly to triggerSearch\r\n      triggerSearch(searchQuery);\r\n    } else {\r\n      // FALLBACK: Directly manipulate DOM and submit the form\r\n      const searchElement = document.querySelector('.search-input') as HTMLInputElement;\r\n      if (searchElement) {\r\n        // Direct DOM update for immediate effect\r\n        searchElement.value = searchQuery;\r\n        searchElement.focus();\r\n        \r\n        // Find the form and submit it directly\r\n        const form = searchElement.closest('form');\r\n        if (form) {\r\n          console.log('Found form, submitting directly');\r\n          \r\n          // Also update React state\r\n          if (setSearchQuery) {\r\n            setSearchQuery(searchQuery);\r\n          }\r\n          \r\n          // Submit the form\r\n          setTimeout(() => {\r\n            form.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n          }, 10);\r\n        } else {\r\n          // No form found, fall back to setSearchQuery\r\n          console.log('No form found, using setSearchQuery only');\r\n          if (setSearchQuery) {\r\n            setSearchQuery(searchQuery);\r\n          }\r\n        }\r\n      } else {\r\n        // Can't find search element, use the props approach\r\n        console.log('No search input found, using prop methods');\r\n        \r\n        if (setSearchQuery) {\r\n          setSearchQuery(searchQuery);\r\n        }\r\n        \r\n        // Last resort - use the onAnalyzeArticle function\r\n        if (onAnalyzeArticle) {\r\n          onAnalyzeArticle(searchQuery);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Reset analyzing state after delay\r\n    setTimeout(() => setAnalyzingArticle(null), 2000);\r\n  };\r\n  \r\n  if (loading && currentPage === 1) {\r\n    return (\r\n      <div className=\"news-feed-container\">\r\n        <div className=\"news-categories\">\r\n          {categories.map(category => (\r\n            <button\r\n              key={category.id}\r\n              className={`category-btn ${selectedCategory === category.id ? 'active' : ''}`}\r\n              onClick={() => setSelectedCategory(category.id)}\r\n            >\r\n              {category.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"loading-news\">\r\n          <img \r\n            src=\"/assets/whatishealthyspinner.gif\" \r\n            alt=\"Loading...\" \r\n            style={{\r\n              width: '48px',\r\n              height: '48px',\r\n              objectFit: 'contain',\r\n              marginBottom: '16px'\r\n            }}\r\n          />\r\n          <p>Loading latest health news...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"news-feed-container\">\r\n      <div className=\"news-categories\">\r\n        {categories.map(category => (\r\n          <button\r\n            key={category.id}\r\n            className={`category-btn ${selectedCategory === category.id ? 'active' : ''}`}\r\n            onClick={() => setSelectedCategory(category.id)}\r\n          >\r\n            {category.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"news-grid\">\r\n        {articles.map((article) => (\r\n          <article \r\n            key={article.id} \r\n            className=\"news-card\"\r\n            data-category={article.category}\r\n            onClick={() => window.open(article.link || article.url, '_blank')}\r\n          >\r\n            {/* Image Section - Using category-based random placeholders only when needed */}\r\n            <div className=\"news-image\">\r\n              {(article.image_url || article.thumbnail || article.imageUrl || article.thumbnailUrl) ? (\r\n                <img \r\n                  src={article.image_url || article.thumbnail || article.imageUrl || article.thumbnailUrl} \r\n                  alt={article.title}\r\n                  onError={(e) => {\r\n                    console.log('Image failed to load:', article.image_url || article.thumbnail);\r\n                    // Use category-specific random placeholder instead of hiding\r\n                    (e.target as HTMLImageElement).src = getRandomPlaceholderImage(article.category);\r\n                    // Add placeholder class for styling\r\n                    (e.target as HTMLImageElement).classList.add('placeholder-image');\r\n                  }}\r\n                />\r\n              ) : (\r\n                // Use category-specific random placeholder when no image is provided\r\n                <img \r\n                  src={getRandomPlaceholderImage(article.category)}\r\n                  alt={article.title || 'Health article'}\r\n                  className=\"placeholder-image\"\r\n                />\r\n              )}\r\n            </div>\r\n            \r\n            {/* Content Section */}\r\n            <div className=\"news-content\">\r\n              {/* Meta Information */}\r\n              <div className=\"news-meta\">\r\n                {/* Analyze with WIHY Button - Updated with Wrapper */}\r\n                {onAnalyzeArticle && (\r\n                  <div className=\"wihy-btn-wrapper\" style={{\r\n                    display: 'inline-block',\r\n                    animation: analyzingArticle === article.id ? 'none' : 'wiH-border-sweep 2.2s linear infinite',\r\n                    background: analyzingArticle === article.id \r\n                      ? 'linear-gradient(#f3f4f6, #f3f4f6)' \r\n                      : 'linear-gradient(#fff, #fff) padding-box, linear-gradient(90deg, #fa5f06, #ffffff, #C0C0C0, #4cbb17) border-box',\r\n                    backgroundSize: '100% 100%, 200% 100%',\r\n                    border: '2px solid transparent',\r\n                    borderRadius: '16px'\r\n                  }}>\r\n                    <button \r\n                      className=\"analyze-wihy-btn\"\r\n                      onClick={(e) => handleAnalyzeWithWihy(article, e)}\r\n                      disabled={analyzingArticle === article.id}\r\n                      style={{\r\n                        background: 'transparent',\r\n                        border: 'none',\r\n                        borderRadius: '16px',\r\n                        padding: '6px 12px',\r\n                        fontSize: '11px',\r\n                        fontWeight: '600',\r\n                        cursor: analyzingArticle === article.id ? 'not-allowed' : 'pointer',\r\n                        boxShadow: 'none',\r\n                        transform: 'none'\r\n                      }}\r\n                    >\r\n                      {analyzingArticle === article.id ? (\r\n                        <>\r\n                          <div className=\"analyze-spinner\"></div>\r\n                          Analyzing...\r\n                        </>\r\n                      ) : (\r\n                        <>Analyze with WiHy</>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* Source Tag */}\r\n                <span \r\n                  className=\"news-category\"\r\n                  style={{ backgroundColor: getCategoryColor(article.category) }}\r\n                >\r\n                  {article.category}\r\n                </span>\r\n                <span className=\"news-time\">{formatTimeAgo(article.publishedDate || article.published_date)}</span>\r\n              </div>\r\n              \r\n              <h3 className=\"news-title\">{article.title}</h3>\r\n              <p className=\"news-summary\">{article.summary || article.description}</p>\r\n              \r\n              <div className=\"news-tags\">\r\n                {article.tags?.slice(0, 3).map(tag => (\r\n                  <span key={tag} className=\"news-tag\">#{tag}</span>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"news-footer\">\r\n                <span className=\"relevance-score\">\r\n                  Relevance: {Math.round((article.relevanceScore || 0) * 100)}%\r\n                </span>\r\n                <span className=\"read-more-btn\">\r\n                  Read Full Article →\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Empty state */}\r\n      {articles.length === 0 && !loading && (\r\n        <div className=\"no-articles\">\r\n          <p>No articles found for the selected category. Try selecting a different category.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Loading more indicator */}\r\n      {loadingMore && (\r\n        <div className=\"loading-more\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading more articles...</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Intersection Observer Target - invisible element that triggers loading when scrolled into view */}\r\n      {hasMorePages && !loadingMore && articles.length > 0 && (\r\n        <div\r\n          ref={observerTarget} \r\n          className=\"intersection-observer-target\"\r\n          style={{ height: '20px', margin: '20px 0', visibility: 'hidden' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthNewsFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}