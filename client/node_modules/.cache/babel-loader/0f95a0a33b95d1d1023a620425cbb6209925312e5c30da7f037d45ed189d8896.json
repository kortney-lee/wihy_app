{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SearchResults from './SearchResults';\nimport ImageUploadModal from './components/ImageUploadModal';\nimport { searchCache } from './services/searchCache';\nimport { healthSearchService } from './services/healthSearchService';\nimport { photoStorageService } from './services/photoStorageService';\nimport { fetchNewsFeed } from './services/newsService'; // Add this import\nimport './VHealthSearch.css';\nimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';\n\n// Add TypeScript declaration for Speech Recognition\n\n// Update the type to include health_news but keep it compatible with SearchResults\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Main search component (formerly vHealthApp)\nconst VHealthAppContent = () => {\n  _s();\n  const [apiStatus, setApiStatus] = useState({\n    connected: false,\n    message: 'Checking API connection...'\n  });\n  const [currentView, setCurrentView] = useState('search');\n  const [currentQuery, setCurrentQuery] = useState('');\n  const [currentResults, setCurrentResults] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataSource, setDataSource] = useState(\"openai\");\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [isListening, setIsListening] = useState(false);\n  const [image, setImage] = useState(null);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [citations, setCitations] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [disclaimer, setDisclaimer] = useState('');\n  const recognitionRef = useRef(null);\n\n  // Handle browser navigation (back/forward buttons)\n  useEffect(() => {\n    const handlePopState = event => {\n      const state = event.state;\n      if (state) {\n        setCurrentView(state.view);\n        setCurrentQuery(state.query || '');\n        setCurrentResults(state.results || '');\n        setDataSource(state.dataSource || 'local');\n        setIsLoading(false);\n      } else {\n        // No state means we're at the root\n        setCurrentView('search');\n        setCurrentQuery('');\n        setCurrentResults('');\n      }\n    };\n    window.addEventListener('popstate', handlePopState);\n\n    // Check for initial query in URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const queryParam = urlParams.get('q');\n    const isHealthNews = urlParams.get('type') === 'health_news';\n    if (queryParam) {\n      handleSearch(queryParam, false); // Don't push to history on initial load\n    } else if (isHealthNews) {\n      handleFeelingHealthy(); // Handle health news request\n    }\n    return () => window.removeEventListener('popstate', handlePopState);\n  }, []);\n\n  // Add the \"I'm Feeling Healthy\" handler\n  const handleFeelingHealthy = async () => {\n    console.log('🌟 I\\'m Feeling Healthy clicked - fetching health news');\n    setIsLoading(true);\n    setCurrentQuery('Latest Health News');\n    setCurrentView('results');\n    try {\n      const healthNewsResult = await fetchNewsFeed(['all'], 6);\n      if (healthNewsResult.success && healthNewsResult.articles) {\n        console.log('✅ Health news fetched successfully');\n\n        // Format the articles for display\n        const formattedResults = formatHealthNews(healthNewsResult.articles);\n        setCurrentResults(formattedResults);\n        setDataSource('health_news');\n        setDisclaimer('Health news provided by AI. Always consult healthcare professionals for medical advice.');\n\n        // Cache the results\n        const cacheKey = 'health_news_all';\n        searchCache.setCachedResult(cacheKey, formattedResults, window.location.href);\n\n        // Update URL\n        const url = '?type=health_news&category=all';\n        window.history.pushState({\n          view: 'results',\n          query: 'Latest Health News',\n          results: formattedResults,\n          dataSource: 'health_news'\n        }, '', url);\n      } else {\n        throw new Error(healthNewsResult.message || 'Failed to fetch health news');\n      }\n    } catch (error) {\n      console.error('❌ Error fetching health news:', error);\n      const errorMessage = 'Sorry, we encountered an error while fetching health news. Please try again.';\n      setCurrentResults(errorMessage);\n      setDataSource('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Add function to format health news articles\n  const formatHealthNews = articles => {\n    let formatted = '# Latest Health News\\n\\n';\n    articles.forEach((article, index) => {\n      formatted += `## ${article.title}\\n\\n`;\n      formatted += `**Source:** ${article.source} (${article.domain})\\n`;\n      formatted += `**Category:** ${article.category}\\n`;\n      formatted += `**Published:** ${new Date(article.publishedDate).toLocaleDateString()}\\n`;\n      formatted += `**Relevance:** ${Math.round(article.relevanceScore * 100)}%\\n\\n`;\n      formatted += `${article.summary}\\n\\n`;\n      if (article.tags && article.tags.length > 0) {\n        formatted += `**Tags:** ${article.tags.join(', ')}\\n\\n`;\n      }\n      formatted += `[Read Full Article](${article.url})\\n\\n`;\n      formatted += '---\\n\\n';\n    });\n    return formatted;\n  };\n  const handleSearch = async (query, pushToHistory = true) => {\n    console.log('🔍 SEARCH DEBUG: handleSearch called with query:', query);\n    setIsLoading(true);\n    console.log('🔍 SEARCH DEBUG: setIsLoading(true) called');\n    if (!query.trim()) return;\n    const trimmedQuery = query.trim();\n    setCurrentQuery(trimmedQuery);\n    setCurrentView('results'); // Switch to results view immediately\n\n    // Check cache first\n    const cachedResults = searchCache.getCachedResult(trimmedQuery);\n    if (cachedResults) {\n      console.log('🔍 SEARCH DEBUG: Using cached results');\n      setCurrentResults(cachedResults);\n      setDataSource('local');\n      setIsLoading(false);\n      if (pushToHistory) {\n        const url = `?q=${encodeURIComponent(trimmedQuery)}`;\n        window.history.pushState({\n          view: 'results',\n          query: trimmedQuery,\n          results: cachedResults\n        }, '', url);\n      }\n      return;\n    }\n    console.log('🔍 SEARCH DEBUG: Making new search request');\n    try {\n      // Step 1: Try nutrition database first\n      console.log('🔍 SEARCH DEBUG: Trying nutrition database first');\n      try {\n        const nutritionUrl = `http://localhost:5000/api/search/food?q=${encodeURIComponent(trimmedQuery)}`;\n        const nutritionResponse = await fetch(nutritionUrl);\n        if (nutritionResponse.ok) {\n          const nutritionData = await nutritionResponse.json();\n          console.log('🔍 SEARCH DEBUG: Nutrition API response:', nutritionData);\n          if (nutritionData && nutritionData.found !== false) {\n            console.log('🔍 SEARCH DEBUG: Using nutrition database results');\n            const formattedResults = typeof nutritionData === 'string' ? nutritionData : JSON.stringify(nutritionData);\n            setCurrentResults(formattedResults);\n            setDataSource('vnutrition');\n            searchCache.setCachedResult(trimmedQuery, formattedResults, window.location.href);\n\n            // Save to API cache\n            fetch('http://localhost:5000/api/cache/save', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                query: trimmedQuery,\n                results: formattedResults,\n                source: 'vnutrition'\n              })\n            }).catch(err => console.log('Cache save error:', err));\n            setIsLoading(false);\n            if (pushToHistory) {\n              const url = `?q=${encodeURIComponent(trimmedQuery)}`;\n              window.history.replaceState({\n                view: 'results',\n                query: trimmedQuery,\n                results: formattedResults,\n                dataSource: 'vnutrition'\n              }, '', url);\n            }\n            return;\n          }\n        }\n      } catch (nutritionError) {\n        console.log('🔍 SEARCH DEBUG: Nutrition API error, trying OpenAI fallback');\n      }\n\n      // Step 2: Fallback to OpenAI\n      console.log('🔍 SEARCH DEBUG: About to call healthSearchService.searchHealthInfo');\n      const healthData = await healthSearchService.searchHealthInfo(trimmedQuery);\n      console.log('🔍 SEARCH DEBUG: Got response from healthSearchService:', healthData);\n\n      // Format the results for display\n      const formattedResults = formatHealthResults(healthData);\n      setCurrentResults(formattedResults);\n      setDataSource('openai');\n\n      // Set additional data if available\n      if (healthData.sources) setCitations(healthData.sources);\n      if (healthData.recommendations) setRecommendations(healthData.recommendations);\n      if (healthData.medicalDisclaimer) setDisclaimer(healthData.medicalDisclaimer);\n      searchCache.setCachedResult(trimmedQuery, formattedResults, window.location.href);\n\n      // Save AI analysis results to cache\n      fetch('http://localhost:5000/api/cache/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: trimmedQuery,\n          results: formattedResults,\n          source: 'openai'\n        })\n      }).catch(err => console.log('Cache save error:', err));\n\n      // If this search included an image, silently save the analysis\n      if (currentPhotoId && image) {\n        await photoStorageService.updatePhotoAnalysis(currentPhotoId, formattedResults);\n        console.log('AI analysis saved for photo:', currentPhotoId);\n      }\n\n      // Update history with results\n      if (pushToHistory) {\n        const url = `?q=${encodeURIComponent(trimmedQuery)}`;\n        window.history.replaceState({\n          view: 'results',\n          query: trimmedQuery,\n          results: formattedResults,\n          dataSource: 'openai'\n        }, '', url);\n      }\n      console.log(`✅ Search completed using: ${healthData.dataSource === 'openai' ? 'ChatGPT' : 'Local Database'}`);\n    } catch (error) {\n      console.error('🔍 SEARCH DEBUG: Error in search:', error);\n      const errorMessage = 'Sorry, we encountered an error while searching for health information. Please try again or consult with a healthcare provider for medical advice.';\n      setCurrentResults(errorMessage);\n      setDataSource('error');\n    } finally {\n      console.log('🔍 SEARCH DEBUG: setIsLoading(false) called');\n      setIsLoading(false);\n      setCurrentPhotoId(null); // Reset after use\n    }\n  };\n  const formatHealthResults = healthData => {\n    let formatted = '';\n\n    // Keep only the clean content:\n    formatted += `${healthData.summary}\\n\\n`;\n    formatted += `${healthData.details}\\n\\n`;\n    if (healthData.recommendations && healthData.recommendations.length > 0) {\n      formatted += `**Recommendations:**\\n${healthData.recommendations.map(r => `• ${r}`).join('\\n')}\\n\\n`;\n    }\n    if (healthData.sources && healthData.sources.length > 0) {\n      formatted += `**Sources:** ${healthData.sources.join(', ')}\\n\\n`;\n    }\n    formatted += `**Medical Disclaimer:** ${healthData.medicalDisclaimer}`;\n    return formatted;\n  };\n  const handleBackToSearch = () => {\n    setCurrentView('search');\n    setCurrentQuery('');\n    setCurrentResults('');\n    window.history.pushState({\n      view: 'search'\n    }, '', '/');\n  };\n  const handleNewSearch = newQuery => {\n    handleSearch(newQuery);\n  };\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!currentQuery.trim()) return;\n    console.log('🚀 Starting search with ChatGPT...');\n    handleSearch(currentQuery.trim());\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleTextSubmit(e);\n    }\n  };\n  const handleClearAll = () => {\n    setCurrentQuery('');\n    setImage(null);\n    setCurrentPhotoId(null);\n\n    // Clear file input and CSS classes\n    const fileInput = document.getElementById('camera-input');\n    if (fileInput) {\n      fileInput.value = '';\n    }\n    const searchInput = document.querySelector('.search-input');\n    if (searchInput) {\n      searchInput.classList.remove('with-image');\n    }\n  };\n  const handleVoiceInput = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser');\n      return;\n    }\n    if (!isListening) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setCurrentQuery(transcript);\n        setIsListening(false);\n      };\n      recognition.onerror = () => {\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n      recognition.start();\n    } else {\n      var _recognitionRef$curre;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Clear expired cache on component mount\n  useEffect(() => {\n    searchCache.clearExpiredCache();\n  }, []);\n  useEffect(() => {\n    // Check service status on load\n    healthSearchService.checkServiceStatus().then(status => {\n      console.log('🔧 Health Search Service Status:', status);\n    });\n  }, []);\n  const handleCameraClick = () => {\n    setIsUploadModalOpen(true);\n  };\n  const handleAnalysisComplete = async foodName => {\n    try {\n      console.log('Image analysis completed, food detected:', foodName);\n\n      // Set the analyzed food name as the search query\n      setCurrentQuery(foodName);\n\n      // Trigger a search with the analyzed food name\n      await handleSearch(foodName);\n\n      // Close the modal\n      setIsUploadModalOpen(false);\n    } catch (error) {\n      console.error('Error processing analyzed food:', error);\n      alert('Failed to process the analyzed food. Please try again.');\n    }\n  };\n  const handleUserChange = user => {\n    console.log('User changed:', user);\n  };\n  const handleSignIn = user => {\n    console.log('User signed in:', user);\n  };\n  const handleSignOut = () => {\n    console.log('User signed out');\n  };\n  if (currentView === 'results') {\n    return /*#__PURE__*/_jsxDEV(SearchResults, {\n      query: currentQuery,\n      results: currentResults,\n      onBackToSearch: handleBackToSearch,\n      onNewSearch: handleNewSearch,\n      isLoading: isLoading,\n      dataSource: dataSource === 'health_news' ? 'openai' : dataSource // Convert health_news to openai for compatibility\n      ,\n      citations: citations,\n      recommendations: recommendations,\n      disclaimer: disclaimer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(MultiAuthLogin, {\n      position: \"top-right\",\n      className: \"main-login-button\",\n      onUserChange: handleUserChange,\n      onSignIn: handleSignIn,\n      onSignOut: handleSignOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"search-title\",\n      children: \"What is Healthy?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTextSubmit,\n      className: \"search-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Ask anything about health...\",\n          value: currentQuery,\n          onChange: e => setCurrentQuery(e.target.value),\n          onKeyPress: handleKeyPress,\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"image-name\",\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setImage(null);\n              setCurrentPhotoId(null);\n              const searchInput = document.querySelector('.search-input');\n              if (searchInput) {\n                searchInput.classList.remove('with-image');\n              }\n            },\n            className: \"remove-image\",\n            \"aria-label\": \"Remove image\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-icons\",\n          children: [(currentQuery || image) && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleClearAll,\n            className: \"icon-button clear-button\",\n            \"aria-label\": \"Clear all\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCameraClick,\n            className: \"icon-button\",\n            \"aria-label\": \"Upload image\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVoiceInput,\n            className: `icon-button ${isListening ? 'listening' : ''}`,\n            \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"search-button\",\n        onClick: handleFeelingHealthy // Updated to use the health news function\n        ,\n        children: \"I'm Feeling Healthy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"search-button\",\n        onClick: () => window.open('https://mhealth.com', '_blank'),\n        children: \"mHealth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"search-button\",\n        onClick: () => window.open('https://whatishealthy.org', '_blank'),\n        children: \"What is Healthy?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-feedback\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDFA4 Listening...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n      isOpen: isUploadModalOpen,\n      onClose: () => setIsUploadModalOpen(false),\n      onAnalysisComplete: handleAnalysisComplete,\n      title: \"Upload Image\",\n      subtitle: \"Upload images for analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 480,\n    columnNumber: 5\n  }, this);\n};\n\n// Wrapper with Router for routing support (if needed in the future)\n_s(VHealthAppContent, \"egGAL7HPKSMvvxu16ZLsjL7GxQY=\");\n_c = VHealthAppContent;\nconst App = () => {\n  console.log(\"App component rendered\");\n  return /*#__PURE__*/_jsxDEV(VHealthAppContent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 612,\n    columnNumber: 10\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"VHealthAppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SearchResults","ImageUploadModal","searchCache","healthSearchService","photoStorageService","fetchNewsFeed","MultiAuthLogin","jsxDEV","_jsxDEV","VHealthAppContent","_s","apiStatus","setApiStatus","connected","message","currentView","setCurrentView","currentQuery","setCurrentQuery","currentResults","setCurrentResults","isLoading","setIsLoading","dataSource","setDataSource","currentPhotoId","setCurrentPhotoId","isListening","setIsListening","image","setImage","isUploadModalOpen","setIsUploadModalOpen","citations","setCitations","recommendations","setRecommendations","disclaimer","setDisclaimer","recognitionRef","handlePopState","event","state","view","query","results","window","addEventListener","urlParams","URLSearchParams","location","search","queryParam","get","isHealthNews","handleSearch","handleFeelingHealthy","removeEventListener","console","log","healthNewsResult","success","articles","formattedResults","formatHealthNews","cacheKey","setCachedResult","href","url","history","pushState","Error","error","errorMessage","formatted","forEach","article","index","title","source","domain","category","Date","publishedDate","toLocaleDateString","Math","round","relevanceScore","summary","tags","length","join","pushToHistory","trim","trimmedQuery","cachedResults","getCachedResult","encodeURIComponent","nutritionUrl","nutritionResponse","fetch","ok","nutritionData","json","found","JSON","stringify","method","headers","body","catch","err","replaceState","nutritionError","healthData","searchHealthInfo","formatHealthResults","sources","medicalDisclaimer","updatePhotoAnalysis","details","map","r","handleBackToSearch","handleNewSearch","newQuery","handleTextSubmit","e","preventDefault","handleKeyPress","key","handleClearAll","fileInput","document","getElementById","value","searchInput","querySelector","classList","remove","handleVoiceInput","alert","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","transcript","onerror","onend","current","start","_recognitionRef$curre","stop","clearExpiredCache","checkServiceStatus","then","status","handleCameraClick","handleAnalysisComplete","foodName","handleUserChange","user","handleSignIn","handleSignOut","onBackToSearch","onNewSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","children","position","onUserChange","onSignIn","onSignOut","onSubmit","type","placeholder","onChange","target","onKeyPress","name","onClick","viewBox","fill","d","open","isOpen","onClose","onAnalysisComplete","subtitle","_c","App","_c2","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport VHealthSearch from './VHealthSearch';\r\nimport SearchResults from './SearchResults';\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport { searchCache } from './services/searchCache';\r\nimport { healthSearchService } from './services/healthSearchService';\r\nimport { photoStorageService } from './services/photoStorageService';\r\nimport { foodAnalysisService } from './components/foodAnalysisService';\r\nimport { fetchNewsFeed } from './services/newsService'; // Add this import\r\nimport './VHealthSearch.css';\r\nimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';\r\n\r\n// Add TypeScript declaration for Speech Recognition\r\ndeclare global {\r\n  interface Window {\r\n    webkitSpeechRecognition: any;\r\n    SpeechRecognition: any;\r\n  }\r\n}\r\n\r\ninterface SpeechRecognition extends EventTarget {\r\n  continuous: boolean;\r\n  interimResults: boolean;\r\n  lang: string;\r\n  start(): void;\r\n  stop(): void;\r\n  onstart: () => void;\r\n  onresult: (event: any) => void;\r\n  onerror: () => void;\r\n  onend: () => void;\r\n}\r\n\r\n// Update the type to include health_news but keep it compatible with SearchResults\r\ntype AllowedDataSource = \"openai\" | \"local\" | \"error\" | \"vnutrition\" | \"health_news\";\r\n\r\n// Main search component (formerly vHealthApp)\r\nconst VHealthAppContent: React.FC = () => {\r\n  const [apiStatus, setApiStatus] = useState({\r\n    connected: false,\r\n    message: 'Checking API connection...'\r\n  });\r\n  const [currentView, setCurrentView] = useState<'search' | 'results'>('search');\r\n  const [currentQuery, setCurrentQuery] = useState('');\r\n  const [currentResults, setCurrentResults] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [dataSource, setDataSource] = useState<AllowedDataSource>(\"openai\");\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [image, setImage] = useState<File | null>(null);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [citations, setCitations] = useState<string[]>([]);\r\n  const [recommendations, setRecommendations] = useState<string[]>([]);\r\n  const [disclaimer, setDisclaimer] = useState<string>('');\r\n\r\n  const recognitionRef = useRef<SpeechRecognition | null>(null);\r\n\r\n  // Handle browser navigation (back/forward buttons)\r\n  useEffect(() => {\r\n    const handlePopState = (event: PopStateEvent) => {\r\n      const state = event.state;\r\n      if (state) {\r\n        setCurrentView(state.view);\r\n        setCurrentQuery(state.query || '');\r\n        setCurrentResults(state.results || '');\r\n        setDataSource(state.dataSource || 'local');\r\n        setIsLoading(false);\r\n      } else {\r\n        // No state means we're at the root\r\n        setCurrentView('search');\r\n        setCurrentQuery('');\r\n        setCurrentResults('');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('popstate', handlePopState);\r\n    \r\n    // Check for initial query in URL\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const queryParam = urlParams.get('q');\r\n    const isHealthNews = urlParams.get('type') === 'health_news';\r\n    \r\n    if (queryParam) {\r\n      handleSearch(queryParam, false); // Don't push to history on initial load\r\n    } else if (isHealthNews) {\r\n      handleFeelingHealthy(); // Handle health news request\r\n    }\r\n\r\n    return () => window.removeEventListener('popstate', handlePopState);\r\n  }, []);\r\n\r\n  // Add the \"I'm Feeling Healthy\" handler\r\n  const handleFeelingHealthy = async () => {\r\n    console.log('🌟 I\\'m Feeling Healthy clicked - fetching health news');\r\n    \r\n    setIsLoading(true);\r\n    setCurrentQuery('Latest Health News');\r\n    setCurrentView('results');\r\n    \r\n    try {\r\n      const healthNewsResult = await fetchNewsFeed(['all'], 6);\r\n      \r\n      if (healthNewsResult.success && healthNewsResult.articles) {\r\n        console.log('✅ Health news fetched successfully');\r\n        \r\n        // Format the articles for display\r\n        const formattedResults = formatHealthNews(healthNewsResult.articles);\r\n        \r\n        setCurrentResults(formattedResults);\r\n        setDataSource('health_news');\r\n        setDisclaimer('Health news provided by AI. Always consult healthcare professionals for medical advice.');\r\n        \r\n        // Cache the results\r\n        const cacheKey = 'health_news_all';\r\n        searchCache.setCachedResult(cacheKey, formattedResults, window.location.href);\r\n        \r\n        // Update URL\r\n        const url = '?type=health_news&category=all';\r\n        window.history.pushState(\r\n          { \r\n            view: 'results', \r\n            query: 'Latest Health News', \r\n            results: formattedResults,\r\n            dataSource: 'health_news'\r\n          },\r\n          '',\r\n          url\r\n        );\r\n        \r\n      } else {\r\n        throw new Error(healthNewsResult.message || 'Failed to fetch health news');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error fetching health news:', error);\r\n      const errorMessage = 'Sorry, we encountered an error while fetching health news. Please try again.';\r\n      setCurrentResults(errorMessage);\r\n      setDataSource('error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Add function to format health news articles\r\n  const formatHealthNews = (articles: any[]): string => {\r\n    let formatted = '# Latest Health News\\n\\n';\r\n    \r\n    articles.forEach((article, index) => {\r\n      formatted += `## ${article.title}\\n\\n`;\r\n      formatted += `**Source:** ${article.source} (${article.domain})\\n`;\r\n      formatted += `**Category:** ${article.category}\\n`;\r\n      formatted += `**Published:** ${new Date(article.publishedDate).toLocaleDateString()}\\n`;\r\n      formatted += `**Relevance:** ${Math.round(article.relevanceScore * 100)}%\\n\\n`;\r\n      formatted += `${article.summary}\\n\\n`;\r\n      \r\n      if (article.tags && article.tags.length > 0) {\r\n        formatted += `**Tags:** ${article.tags.join(', ')}\\n\\n`;\r\n      }\r\n      \r\n      formatted += `[Read Full Article](${article.url})\\n\\n`;\r\n      formatted += '---\\n\\n';\r\n    });\r\n    \r\n    return formatted;\r\n  };\r\n\r\n  const handleSearch = async (query: string, pushToHistory = true) => {\r\n    console.log('🔍 SEARCH DEBUG: handleSearch called with query:', query);\r\n    \r\n    setIsLoading(true);\r\n    console.log('🔍 SEARCH DEBUG: setIsLoading(true) called');\r\n    \r\n    if (!query.trim()) return;\r\n\r\n    const trimmedQuery = query.trim();\r\n    setCurrentQuery(trimmedQuery);\r\n    setCurrentView('results'); // Switch to results view immediately\r\n    \r\n    // Check cache first\r\n    const cachedResults = searchCache.getCachedResult(trimmedQuery);\r\n    \r\n    if (cachedResults) {\r\n      console.log('🔍 SEARCH DEBUG: Using cached results');\r\n      setCurrentResults(cachedResults);\r\n      setDataSource('local');\r\n      setIsLoading(false);\r\n      \r\n      if (pushToHistory) {\r\n        const url = `?q=${encodeURIComponent(trimmedQuery)}`;\r\n        window.history.pushState(\r\n          { view: 'results', query: trimmedQuery, results: cachedResults },\r\n          '',\r\n          url\r\n        );\r\n      }\r\n      return;\r\n    }\r\n\r\n    console.log('🔍 SEARCH DEBUG: Making new search request');\r\n    \r\n    try {\r\n      // Step 1: Try nutrition database first\r\n      console.log('🔍 SEARCH DEBUG: Trying nutrition database first');\r\n      try {\r\n        const nutritionUrl = `http://localhost:5000/api/search/food?q=${encodeURIComponent(trimmedQuery)}`;\r\n        const nutritionResponse = await fetch(nutritionUrl);\r\n        \r\n        if (nutritionResponse.ok) {\r\n          const nutritionData = await nutritionResponse.json();\r\n          console.log('🔍 SEARCH DEBUG: Nutrition API response:', nutritionData);\r\n          \r\n          if (nutritionData && nutritionData.found !== false) {\r\n            console.log('🔍 SEARCH DEBUG: Using nutrition database results');\r\n            const formattedResults = typeof nutritionData === 'string' ? nutritionData : JSON.stringify(nutritionData);\r\n            \r\n            setCurrentResults(formattedResults);\r\n            setDataSource('vnutrition');\r\n            searchCache.setCachedResult(trimmedQuery, formattedResults, window.location.href);\r\n            \r\n            // Save to API cache\r\n            fetch('http://localhost:5000/api/cache/save', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({\r\n                query: trimmedQuery,\r\n                results: formattedResults,\r\n                source: 'vnutrition'\r\n              })\r\n            }).catch(err => console.log('Cache save error:', err));\r\n            \r\n            setIsLoading(false);\r\n            \r\n            if (pushToHistory) {\r\n              const url = `?q=${encodeURIComponent(trimmedQuery)}`;\r\n              window.history.replaceState(\r\n                { \r\n                  view: 'results', \r\n                  query: trimmedQuery, \r\n                  results: formattedResults,\r\n                  dataSource: 'vnutrition'\r\n                },\r\n                '',\r\n                url\r\n              );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      } catch (nutritionError) {\r\n        console.log('🔍 SEARCH DEBUG: Nutrition API error, trying OpenAI fallback');\r\n      }\r\n\r\n      // Step 2: Fallback to OpenAI\r\n      console.log('🔍 SEARCH DEBUG: About to call healthSearchService.searchHealthInfo');\r\n      const healthData = await healthSearchService.searchHealthInfo(trimmedQuery);\r\n      console.log('🔍 SEARCH DEBUG: Got response from healthSearchService:', healthData);\r\n      \r\n      // Format the results for display\r\n      const formattedResults = formatHealthResults(healthData);\r\n      \r\n      setCurrentResults(formattedResults);\r\n      setDataSource('openai');\r\n      \r\n      // Set additional data if available\r\n      if (healthData.sources) setCitations(healthData.sources);\r\n      if (healthData.recommendations) setRecommendations(healthData.recommendations);\r\n      if (healthData.medicalDisclaimer) setDisclaimer(healthData.medicalDisclaimer);\r\n      \r\n      searchCache.setCachedResult(trimmedQuery, formattedResults, window.location.href);\r\n      \r\n      // Save AI analysis results to cache\r\n      fetch('http://localhost:5000/api/cache/save', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          query: trimmedQuery,\r\n          results: formattedResults,\r\n          source: 'openai'\r\n        })\r\n      }).catch(err => console.log('Cache save error:', err));\r\n      \r\n      // If this search included an image, silently save the analysis\r\n      if (currentPhotoId && image) {\r\n        await photoStorageService.updatePhotoAnalysis(currentPhotoId, formattedResults);\r\n        console.log('AI analysis saved for photo:', currentPhotoId);\r\n      }\r\n      \r\n      // Update history with results\r\n      if (pushToHistory) {\r\n        const url = `?q=${encodeURIComponent(trimmedQuery)}`;\r\n        window.history.replaceState(\r\n          { \r\n            view: 'results', \r\n            query: trimmedQuery, \r\n            results: formattedResults,\r\n            dataSource: 'openai'\r\n          },\r\n          '',\r\n          url\r\n        );\r\n      }\r\n\r\n      console.log(`✅ Search completed using: ${healthData.dataSource === 'openai' ? 'ChatGPT' : 'Local Database'}`);\r\n      \r\n    } catch (error) {\r\n      console.error('🔍 SEARCH DEBUG: Error in search:', error);\r\n      const errorMessage = 'Sorry, we encountered an error while searching for health information. Please try again or consult with a healthcare provider for medical advice.';\r\n      setCurrentResults(errorMessage);\r\n      setDataSource('error');\r\n    } finally {\r\n      console.log('🔍 SEARCH DEBUG: setIsLoading(false) called');\r\n      setIsLoading(false);\r\n      setCurrentPhotoId(null); // Reset after use\r\n    }\r\n  };\r\n\r\n  const formatHealthResults = (healthData: any): string => {\r\n    let formatted = '';\r\n    \r\n    // Keep only the clean content:\r\n    formatted += `${healthData.summary}\\n\\n`;\r\n    formatted += `${healthData.details}\\n\\n`;\r\n    \r\n    if (healthData.recommendations && healthData.recommendations.length > 0) {\r\n      formatted += `**Recommendations:**\\n${healthData.recommendations.map((r: string) => `• ${r}`).join('\\n')}\\n\\n`;\r\n    }\r\n    \r\n    if (healthData.sources && healthData.sources.length > 0) {\r\n      formatted += `**Sources:** ${healthData.sources.join(', ')}\\n\\n`;\r\n    }\r\n    \r\n    formatted += `**Medical Disclaimer:** ${healthData.medicalDisclaimer}`;\r\n    \r\n    return formatted;\r\n  };\r\n\r\n  const handleBackToSearch = () => {\r\n    setCurrentView('search');\r\n    setCurrentQuery('');\r\n    setCurrentResults('');\r\n    window.history.pushState({ view: 'search' }, '', '/');\r\n  };\r\n\r\n  const handleNewSearch = (newQuery: string) => {\r\n    handleSearch(newQuery);\r\n  };\r\n\r\n  const handleTextSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!currentQuery.trim()) return;\r\n    console.log('🚀 Starting search with ChatGPT...');\r\n    handleSearch(currentQuery.trim());\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleTextSubmit(e as any);\r\n    }\r\n  };\r\n\r\n  const handleClearAll = () => {\r\n    setCurrentQuery('');\r\n    setImage(null);\r\n    setCurrentPhotoId(null);\r\n    \r\n    // Clear file input and CSS classes\r\n    const fileInput = document.getElementById('camera-input') as HTMLInputElement;\r\n    if (fileInput) {\r\n      fileInput.value = '';\r\n    }\r\n    \r\n    const searchInput = document.querySelector('.search-input') as HTMLInputElement;\r\n    if (searchInput) {\r\n      searchInput.classList.remove('with-image');\r\n    }\r\n  };\r\n\r\n  const handleVoiceInput = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (!isListening) {\r\n      const recognition = new (window as any).webkitSpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      recognition.lang = 'en-US';\r\n\r\n      recognition.onstart = () => {\r\n        setIsListening(true);\r\n      };\r\n\r\n      recognition.onresult = (event: any) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setCurrentQuery(transcript);\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onerror = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n      recognition.start();\r\n    } else {\r\n      recognitionRef.current?.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  // Clear expired cache on component mount\r\n  useEffect(() => {\r\n    searchCache.clearExpiredCache();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Check service status on load\r\n    healthSearchService.checkServiceStatus().then(status => {\r\n      console.log('🔧 Health Search Service Status:', status);\r\n    });\r\n  }, []);\r\n\r\n  const handleCameraClick = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  const handleAnalysisComplete = async (foodName: string) => {\r\n    try {\r\n      console.log('Image analysis completed, food detected:', foodName);\r\n      \r\n      // Set the analyzed food name as the search query\r\n      setCurrentQuery(foodName);\r\n      \r\n      // Trigger a search with the analyzed food name\r\n      await handleSearch(foodName);\r\n      \r\n      // Close the modal\r\n      setIsUploadModalOpen(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error processing analyzed food:', error);\r\n      alert('Failed to process the analyzed food. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleUserChange = (user: any) => {\r\n    console.log('User changed:', user);\r\n  };\r\n\r\n  const handleSignIn = (user: any) => {\r\n    console.log('User signed in:', user);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    console.log('User signed out');\r\n  };\r\n\r\n  if (currentView === 'results') {\r\n    return (\r\n      <SearchResults\r\n        query={currentQuery}\r\n        results={currentResults}\r\n        onBackToSearch={handleBackToSearch}\r\n        onNewSearch={handleNewSearch}\r\n        isLoading={isLoading}\r\n        dataSource={dataSource === 'health_news' ? 'openai' : dataSource} // Convert health_news to openai for compatibility\r\n        citations={citations}\r\n        recommendations={recommendations}\r\n        disclaimer={disclaimer}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <MultiAuthLogin \r\n        position=\"top-right\"\r\n        className=\"main-login-button\"\r\n        onUserChange={handleUserChange}\r\n        onSignIn={handleSignIn}\r\n        onSignOut={handleSignOut}\r\n      />\r\n\r\n      <h1 className=\"search-title\">What is Healthy?</h1>\r\n\r\n      <form onSubmit={handleTextSubmit} className=\"search-form\">\r\n        <div className=\"search-input-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Ask anything about health...\"\r\n            value={currentQuery}\r\n            onChange={(e) => setCurrentQuery(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            className=\"search-input\"\r\n          />\r\n          \r\n          {/* Show image chip when image is uploaded */}\r\n          {image && (\r\n            <div className=\"image-preview\">\r\n              <div className=\"image-icon\">📷</div>\r\n              <span className=\"image-name\">{image.name}</span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setImage(null);\r\n                  setCurrentPhotoId(null);\r\n                  const searchInput = document.querySelector('.search-input') as HTMLInputElement;\r\n                  if (searchInput) {\r\n                    searchInput.classList.remove('with-image');\r\n                  }\r\n                }}\r\n                className=\"remove-image\"\r\n                aria-label=\"Remove image\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"search-icons\">\r\n            {(currentQuery || image) && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleClearAll}\r\n                className=\"icon-button clear-button\"\r\n                aria-label=\"Clear all\"\r\n              >\r\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n                </svg>\r\n              </button>\r\n            )}\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCameraClick}\r\n              className=\"icon-button\"\r\n              aria-label=\"Upload image\"\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n              </svg>\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleVoiceInput}\r\n              className={`icon-button ${isListening ? 'listening' : ''}`}\r\n              aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n                <path d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"search-actions\">\r\n        <button \r\n          type=\"button\" \r\n          className=\"search-button\"\r\n          onClick={handleFeelingHealthy} // Updated to use the health news function\r\n        >\r\n          I'm Feeling Healthy\r\n        </button>\r\n        <button \r\n          type=\"button\" \r\n          className=\"search-button\"\r\n          onClick={() => window.open('https://mhealth.com', '_blank')}\r\n        >\r\n          mHealth\r\n        </button>\r\n        <button \r\n          type=\"button\"\r\n          className=\"search-button\"\r\n          onClick={() => window.open('https://whatishealthy.org', '_blank')}\r\n        >\r\n          What is Healthy?\r\n        </button>\r\n      </div>\r\n\r\n      {/* Voice Feedback */}\r\n      {isListening && (\r\n        <div className=\"voice-feedback\">\r\n          <p>🎤 Listening...</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add the ImageUploadModal */}\r\n      <ImageUploadModal\r\n        isOpen={isUploadModalOpen}\r\n        onClose={() => setIsUploadModalOpen(false)}\r\n        onAnalysisComplete={handleAnalysisComplete}\r\n        title=\"Upload Image\"\r\n        subtitle=\"Upload images for analysis\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Wrapper with Router for routing support (if needed in the future)\r\nconst App: React.FC = () => {\r\n  console.log(\"App component rendered\");\r\n  \r\n  return <VHealthAppContent />;\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAG1D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,mBAAmB,QAAQ,gCAAgC;AAEpE,SAASC,aAAa,QAAQ,wBAAwB,CAAC,CAAC;AACxD,OAAO,qBAAqB;AAC5B,OAAOC,cAAc,MAAM,+CAA+C;;AAE1E;;AAoBA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA;AACA,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC;IACzCgB,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAuB,QAAQ,CAAC;EAC9E,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAoB,QAAQ,CAAC;EACzE,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAc,IAAI,CAAC;EACrD,MAAM,CAACkC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAW,EAAE,CAAC;EACxD,MAAM,CAACsC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvC,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAS,EAAE,CAAC;EAExD,MAAM0C,cAAc,GAAGxC,MAAM,CAA2B,IAAI,CAAC;;EAE7D;EACAD,SAAS,CAAC,MAAM;IACd,MAAM0C,cAAc,GAAIC,KAAoB,IAAK;MAC/C,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK;MACzB,IAAIA,KAAK,EAAE;QACT1B,cAAc,CAAC0B,KAAK,CAACC,IAAI,CAAC;QAC1BzB,eAAe,CAACwB,KAAK,CAACE,KAAK,IAAI,EAAE,CAAC;QAClCxB,iBAAiB,CAACsB,KAAK,CAACG,OAAO,IAAI,EAAE,CAAC;QACtCrB,aAAa,CAACkB,KAAK,CAACnB,UAAU,IAAI,OAAO,CAAC;QAC1CD,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,MAAM;QACL;QACAN,cAAc,CAAC,QAAQ,CAAC;QACxBE,eAAe,CAAC,EAAE,CAAC;QACnBE,iBAAiB,CAAC,EAAE,CAAC;MACvB;IACF,CAAC;IAED0B,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAEP,cAAc,CAAC;;IAEnD;IACA,MAAMQ,SAAS,GAAG,IAAIC,eAAe,CAACH,MAAM,CAACI,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,UAAU,GAAGJ,SAAS,CAACK,GAAG,CAAC,GAAG,CAAC;IACrC,MAAMC,YAAY,GAAGN,SAAS,CAACK,GAAG,CAAC,MAAM,CAAC,KAAK,aAAa;IAE5D,IAAID,UAAU,EAAE;MACdG,YAAY,CAACH,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC,MAAM,IAAIE,YAAY,EAAE;MACvBE,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAC1B;IAEA,OAAO,MAAMV,MAAM,CAACW,mBAAmB,CAAC,UAAU,EAAEjB,cAAc,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMgB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvCE,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;IAErErC,YAAY,CAAC,IAAI,CAAC;IAClBJ,eAAe,CAAC,oBAAoB,CAAC;IACrCF,cAAc,CAAC,SAAS,CAAC;IAEzB,IAAI;MACF,MAAM4C,gBAAgB,GAAG,MAAMvD,aAAa,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;MAExD,IAAIuD,gBAAgB,CAACC,OAAO,IAAID,gBAAgB,CAACE,QAAQ,EAAE;QACzDJ,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;;QAEjD;QACA,MAAMI,gBAAgB,GAAGC,gBAAgB,CAACJ,gBAAgB,CAACE,QAAQ,CAAC;QAEpE1C,iBAAiB,CAAC2C,gBAAgB,CAAC;QACnCvC,aAAa,CAAC,aAAa,CAAC;QAC5Bc,aAAa,CAAC,yFAAyF,CAAC;;QAExG;QACA,MAAM2B,QAAQ,GAAG,iBAAiB;QAClC/D,WAAW,CAACgE,eAAe,CAACD,QAAQ,EAAEF,gBAAgB,EAAEjB,MAAM,CAACI,QAAQ,CAACiB,IAAI,CAAC;;QAE7E;QACA,MAAMC,GAAG,GAAG,gCAAgC;QAC5CtB,MAAM,CAACuB,OAAO,CAACC,SAAS,CACtB;UACE3B,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,oBAAoB;UAC3BC,OAAO,EAAEkB,gBAAgB;UACzBxC,UAAU,EAAE;QACd,CAAC,EACD,EAAE,EACF6C,GACF,CAAC;MAEH,CAAC,MAAM;QACL,MAAM,IAAIG,KAAK,CAACX,gBAAgB,CAAC9C,OAAO,IAAI,6BAA6B,CAAC;MAC5E;IACF,CAAC,CAAC,OAAO0D,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMC,YAAY,GAAG,8EAA8E;MACnGrD,iBAAiB,CAACqD,YAAY,CAAC;MAC/BjD,aAAa,CAAC,OAAO,CAAC;IACxB,CAAC,SAAS;MACRF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAM0C,gBAAgB,GAAIF,QAAe,IAAa;IACpD,IAAIY,SAAS,GAAG,0BAA0B;IAE1CZ,QAAQ,CAACa,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MACnCH,SAAS,IAAI,MAAME,OAAO,CAACE,KAAK,MAAM;MACtCJ,SAAS,IAAI,eAAeE,OAAO,CAACG,MAAM,KAAKH,OAAO,CAACI,MAAM,KAAK;MAClEN,SAAS,IAAI,iBAAiBE,OAAO,CAACK,QAAQ,IAAI;MAClDP,SAAS,IAAI,kBAAkB,IAAIQ,IAAI,CAACN,OAAO,CAACO,aAAa,CAAC,CAACC,kBAAkB,CAAC,CAAC,IAAI;MACvFV,SAAS,IAAI,kBAAkBW,IAAI,CAACC,KAAK,CAACV,OAAO,CAACW,cAAc,GAAG,GAAG,CAAC,OAAO;MAC9Eb,SAAS,IAAI,GAAGE,OAAO,CAACY,OAAO,MAAM;MAErC,IAAIZ,OAAO,CAACa,IAAI,IAAIb,OAAO,CAACa,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3ChB,SAAS,IAAI,aAAaE,OAAO,CAACa,IAAI,CAACE,IAAI,CAAC,IAAI,CAAC,MAAM;MACzD;MAEAjB,SAAS,IAAI,uBAAuBE,OAAO,CAACR,GAAG,OAAO;MACtDM,SAAS,IAAI,SAAS;IACxB,CAAC,CAAC;IAEF,OAAOA,SAAS;EAClB,CAAC;EAED,MAAMnB,YAAY,GAAG,MAAAA,CAAOX,KAAa,EAAEgD,aAAa,GAAG,IAAI,KAAK;IAClElC,OAAO,CAACC,GAAG,CAAC,kDAAkD,EAAEf,KAAK,CAAC;IAEtEtB,YAAY,CAAC,IAAI,CAAC;IAClBoC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAEzD,IAAI,CAACf,KAAK,CAACiD,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,YAAY,GAAGlD,KAAK,CAACiD,IAAI,CAAC,CAAC;IACjC3E,eAAe,CAAC4E,YAAY,CAAC;IAC7B9E,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3B;IACA,MAAM+E,aAAa,GAAG7F,WAAW,CAAC8F,eAAe,CAACF,YAAY,CAAC;IAE/D,IAAIC,aAAa,EAAE;MACjBrC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpDvC,iBAAiB,CAAC2E,aAAa,CAAC;MAChCvE,aAAa,CAAC,OAAO,CAAC;MACtBF,YAAY,CAAC,KAAK,CAAC;MAEnB,IAAIsE,aAAa,EAAE;QACjB,MAAMxB,GAAG,GAAG,MAAM6B,kBAAkB,CAACH,YAAY,CAAC,EAAE;QACpDhD,MAAM,CAACuB,OAAO,CAACC,SAAS,CACtB;UAAE3B,IAAI,EAAE,SAAS;UAAEC,KAAK,EAAEkD,YAAY;UAAEjD,OAAO,EAAEkD;QAAc,CAAC,EAChE,EAAE,EACF3B,GACF,CAAC;MACH;MACA;IACF;IAEAV,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAEzD,IAAI;MACF;MACAD,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;MAC/D,IAAI;QACF,MAAMuC,YAAY,GAAG,2CAA2CD,kBAAkB,CAACH,YAAY,CAAC,EAAE;QAClG,MAAMK,iBAAiB,GAAG,MAAMC,KAAK,CAACF,YAAY,CAAC;QAEnD,IAAIC,iBAAiB,CAACE,EAAE,EAAE;UACxB,MAAMC,aAAa,GAAG,MAAMH,iBAAiB,CAACI,IAAI,CAAC,CAAC;UACpD7C,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE2C,aAAa,CAAC;UAEtE,IAAIA,aAAa,IAAIA,aAAa,CAACE,KAAK,KAAK,KAAK,EAAE;YAClD9C,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;YAChE,MAAMI,gBAAgB,GAAG,OAAOuC,aAAa,KAAK,QAAQ,GAAGA,aAAa,GAAGG,IAAI,CAACC,SAAS,CAACJ,aAAa,CAAC;YAE1GlF,iBAAiB,CAAC2C,gBAAgB,CAAC;YACnCvC,aAAa,CAAC,YAAY,CAAC;YAC3BtB,WAAW,CAACgE,eAAe,CAAC4B,YAAY,EAAE/B,gBAAgB,EAAEjB,MAAM,CAACI,QAAQ,CAACiB,IAAI,CAAC;;YAEjF;YACAiC,KAAK,CAAC,sCAAsC,EAAE;cAC5CO,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBAAE,cAAc,EAAE;cAAmB,CAAC;cAC/CC,IAAI,EAAEJ,IAAI,CAACC,SAAS,CAAC;gBACnB9D,KAAK,EAAEkD,YAAY;gBACnBjD,OAAO,EAAEkB,gBAAgB;gBACzBgB,MAAM,EAAE;cACV,CAAC;YACH,CAAC,CAAC,CAAC+B,KAAK,CAACC,GAAG,IAAIrD,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEoD,GAAG,CAAC,CAAC;YAEtDzF,YAAY,CAAC,KAAK,CAAC;YAEnB,IAAIsE,aAAa,EAAE;cACjB,MAAMxB,GAAG,GAAG,MAAM6B,kBAAkB,CAACH,YAAY,CAAC,EAAE;cACpDhD,MAAM,CAACuB,OAAO,CAAC2C,YAAY,CACzB;gBACErE,IAAI,EAAE,SAAS;gBACfC,KAAK,EAAEkD,YAAY;gBACnBjD,OAAO,EAAEkB,gBAAgB;gBACzBxC,UAAU,EAAE;cACd,CAAC,EACD,EAAE,EACF6C,GACF,CAAC;YACH;YACA;UACF;QACF;MACF,CAAC,CAAC,OAAO6C,cAAc,EAAE;QACvBvD,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;MAC7E;;MAEA;MACAD,OAAO,CAACC,GAAG,CAAC,qEAAqE,CAAC;MAClF,MAAMuD,UAAU,GAAG,MAAM/G,mBAAmB,CAACgH,gBAAgB,CAACrB,YAAY,CAAC;MAC3EpC,OAAO,CAACC,GAAG,CAAC,yDAAyD,EAAEuD,UAAU,CAAC;;MAElF;MACA,MAAMnD,gBAAgB,GAAGqD,mBAAmB,CAACF,UAAU,CAAC;MAExD9F,iBAAiB,CAAC2C,gBAAgB,CAAC;MACnCvC,aAAa,CAAC,QAAQ,CAAC;;MAEvB;MACA,IAAI0F,UAAU,CAACG,OAAO,EAAEnF,YAAY,CAACgF,UAAU,CAACG,OAAO,CAAC;MACxD,IAAIH,UAAU,CAAC/E,eAAe,EAAEC,kBAAkB,CAAC8E,UAAU,CAAC/E,eAAe,CAAC;MAC9E,IAAI+E,UAAU,CAACI,iBAAiB,EAAEhF,aAAa,CAAC4E,UAAU,CAACI,iBAAiB,CAAC;MAE7EpH,WAAW,CAACgE,eAAe,CAAC4B,YAAY,EAAE/B,gBAAgB,EAAEjB,MAAM,CAACI,QAAQ,CAACiB,IAAI,CAAC;;MAEjF;MACAiC,KAAK,CAAC,sCAAsC,EAAE;QAC5CO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEJ,IAAI,CAACC,SAAS,CAAC;UACnB9D,KAAK,EAAEkD,YAAY;UACnBjD,OAAO,EAAEkB,gBAAgB;UACzBgB,MAAM,EAAE;QACV,CAAC;MACH,CAAC,CAAC,CAAC+B,KAAK,CAACC,GAAG,IAAIrD,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEoD,GAAG,CAAC,CAAC;;MAEtD;MACA,IAAItF,cAAc,IAAII,KAAK,EAAE;QAC3B,MAAMzB,mBAAmB,CAACmH,mBAAmB,CAAC9F,cAAc,EAAEsC,gBAAgB,CAAC;QAC/EL,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAElC,cAAc,CAAC;MAC7D;;MAEA;MACA,IAAImE,aAAa,EAAE;QACjB,MAAMxB,GAAG,GAAG,MAAM6B,kBAAkB,CAACH,YAAY,CAAC,EAAE;QACpDhD,MAAM,CAACuB,OAAO,CAAC2C,YAAY,CACzB;UACErE,IAAI,EAAE,SAAS;UACfC,KAAK,EAAEkD,YAAY;UACnBjD,OAAO,EAAEkB,gBAAgB;UACzBxC,UAAU,EAAE;QACd,CAAC,EACD,EAAE,EACF6C,GACF,CAAC;MACH;MAEAV,OAAO,CAACC,GAAG,CAAC,6BAA6BuD,UAAU,CAAC3F,UAAU,KAAK,QAAQ,GAAG,SAAS,GAAG,gBAAgB,EAAE,CAAC;IAE/G,CAAC,CAAC,OAAOiD,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,MAAMC,YAAY,GAAG,mJAAmJ;MACxKrD,iBAAiB,CAACqD,YAAY,CAAC;MAC/BjD,aAAa,CAAC,OAAO,CAAC;IACxB,CAAC,SAAS;MACRkC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;MAC1DrC,YAAY,CAAC,KAAK,CAAC;MACnBI,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EAED,MAAM0F,mBAAmB,GAAIF,UAAe,IAAa;IACvD,IAAIxC,SAAS,GAAG,EAAE;;IAElB;IACAA,SAAS,IAAI,GAAGwC,UAAU,CAAC1B,OAAO,MAAM;IACxCd,SAAS,IAAI,GAAGwC,UAAU,CAACM,OAAO,MAAM;IAExC,IAAIN,UAAU,CAAC/E,eAAe,IAAI+E,UAAU,CAAC/E,eAAe,CAACuD,MAAM,GAAG,CAAC,EAAE;MACvEhB,SAAS,IAAI,yBAAyBwC,UAAU,CAAC/E,eAAe,CAACsF,GAAG,CAAEC,CAAS,IAAK,KAAKA,CAAC,EAAE,CAAC,CAAC/B,IAAI,CAAC,IAAI,CAAC,MAAM;IAChH;IAEA,IAAIuB,UAAU,CAACG,OAAO,IAAIH,UAAU,CAACG,OAAO,CAAC3B,MAAM,GAAG,CAAC,EAAE;MACvDhB,SAAS,IAAI,gBAAgBwC,UAAU,CAACG,OAAO,CAAC1B,IAAI,CAAC,IAAI,CAAC,MAAM;IAClE;IAEAjB,SAAS,IAAI,2BAA2BwC,UAAU,CAACI,iBAAiB,EAAE;IAEtE,OAAO5C,SAAS;EAClB,CAAC;EAED,MAAMiD,kBAAkB,GAAGA,CAAA,KAAM;IAC/B3G,cAAc,CAAC,QAAQ,CAAC;IACxBE,eAAe,CAAC,EAAE,CAAC;IACnBE,iBAAiB,CAAC,EAAE,CAAC;IACrB0B,MAAM,CAACuB,OAAO,CAACC,SAAS,CAAC;MAAE3B,IAAI,EAAE;IAAS,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;EACvD,CAAC;EAED,MAAMiF,eAAe,GAAIC,QAAgB,IAAK;IAC5CtE,YAAY,CAACsE,QAAQ,CAAC;EACxB,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,CAAkB,IAAK;IACrDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC/G,YAAY,CAAC4E,IAAI,CAAC,CAAC,EAAE;IAC1BnC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjDJ,YAAY,CAACtC,YAAY,CAAC4E,IAAI,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMoC,cAAc,GAAIF,CAAsB,IAAK;IACjD,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;MACrBH,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBF,gBAAgB,CAACC,CAAQ,CAAC;IAC5B;EACF,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BjH,eAAe,CAAC,EAAE,CAAC;IACnBY,QAAQ,CAAC,IAAI,CAAC;IACdJ,iBAAiB,CAAC,IAAI,CAAC;;IAEvB;IACA,MAAM0G,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAqB;IAC7E,IAAIF,SAAS,EAAE;MACbA,SAAS,CAACG,KAAK,GAAG,EAAE;IACtB;IAEA,MAAMC,WAAW,GAAGH,QAAQ,CAACI,aAAa,CAAC,eAAe,CAAqB;IAC/E,IAAID,WAAW,EAAE;MACfA,WAAW,CAACE,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;IAC5C;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,EAAE,yBAAyB,IAAI9F,MAAM,CAAC,EAAE;MAC1C+F,KAAK,CAAC,kDAAkD,CAAC;MACzD;IACF;IAEA,IAAI,CAAClH,WAAW,EAAE;MAChB,MAAMmH,WAAW,GAAG,IAAKhG,MAAM,CAASiG,uBAAuB,CAAC,CAAC;MACjED,WAAW,CAACE,UAAU,GAAG,KAAK;MAC9BF,WAAW,CAACG,cAAc,GAAG,KAAK;MAClCH,WAAW,CAACI,IAAI,GAAG,OAAO;MAE1BJ,WAAW,CAACK,OAAO,GAAG,MAAM;QAC1BvH,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC;MAEDkH,WAAW,CAACM,QAAQ,GAAI3G,KAAU,IAAK;QACrC,MAAM4G,UAAU,GAAG5G,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACwG,UAAU;QACjDnI,eAAe,CAACmI,UAAU,CAAC;QAC3BzH,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDkH,WAAW,CAACQ,OAAO,GAAG,MAAM;QAC1B1H,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDkH,WAAW,CAACS,KAAK,GAAG,MAAM;QACxB3H,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDW,cAAc,CAACiH,OAAO,GAAGV,WAAW;MACpCA,WAAW,CAACW,KAAK,CAAC,CAAC;IACrB,CAAC,MAAM;MAAA,IAAAC,qBAAA;MACL,CAAAA,qBAAA,GAAAnH,cAAc,CAACiH,OAAO,cAAAE,qBAAA,uBAAtBA,qBAAA,CAAwBC,IAAI,CAAC,CAAC;MAC9B/H,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;;EAED;EACA9B,SAAS,CAAC,MAAM;IACdI,WAAW,CAAC0J,iBAAiB,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN9J,SAAS,CAAC,MAAM;IACd;IACAK,mBAAmB,CAAC0J,kBAAkB,CAAC,CAAC,CAACC,IAAI,CAACC,MAAM,IAAI;MACtDrG,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEoG,MAAM,CAAC;IACzD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BhI,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMiI,sBAAsB,GAAG,MAAOC,QAAgB,IAAK;IACzD,IAAI;MACFxG,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEuG,QAAQ,CAAC;;MAEjE;MACAhJ,eAAe,CAACgJ,QAAQ,CAAC;;MAEzB;MACA,MAAM3G,YAAY,CAAC2G,QAAQ,CAAC;;MAE5B;MACAlI,oBAAoB,CAAC,KAAK,CAAC;IAE7B,CAAC,CAAC,OAAOwC,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDqE,KAAK,CAAC,wDAAwD,CAAC;IACjE;EACF,CAAC;EAED,MAAMsB,gBAAgB,GAAIC,IAAS,IAAK;IACtC1G,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEyG,IAAI,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAID,IAAS,IAAK;IAClC1G,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEyG,IAAI,CAAC;EACtC,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B5G,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC;EAED,IAAI5C,WAAW,KAAK,SAAS,EAAE;IAC7B,oBACEP,OAAA,CAACR,aAAa;MACZ4C,KAAK,EAAE3B,YAAa;MACpB4B,OAAO,EAAE1B,cAAe;MACxBoJ,cAAc,EAAE5C,kBAAmB;MACnC6C,WAAW,EAAE5C,eAAgB;MAC7BvG,SAAS,EAAEA,SAAU;MACrBE,UAAU,EAAEA,UAAU,KAAK,aAAa,GAAG,QAAQ,GAAGA,UAAW,CAAC;MAAA;MAClEU,SAAS,EAAEA,SAAU;MACrBE,eAAe,EAAEA,eAAgB;MACjCE,UAAU,EAAEA;IAAW;MAAAoI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAEN;EAEA,oBACEpK,OAAA;IAAKqK,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BtK,OAAA,CAACF,cAAc;MACbyK,QAAQ,EAAC,WAAW;MACpBF,SAAS,EAAC,mBAAmB;MAC7BG,YAAY,EAAEb,gBAAiB;MAC/Bc,QAAQ,EAAEZ,YAAa;MACvBa,SAAS,EAAEZ;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEFpK,OAAA;MAAIqK,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElDpK,OAAA;MAAM2K,QAAQ,EAAErD,gBAAiB;MAAC+C,SAAS,EAAC,aAAa;MAAAC,QAAA,eACvDtK,OAAA;QAAKqK,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCtK,OAAA;UACE4K,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,8BAA8B;UAC1C9C,KAAK,EAAEtH,YAAa;UACpBqK,QAAQ,EAAGvD,CAAC,IAAK7G,eAAe,CAAC6G,CAAC,CAACwD,MAAM,CAAChD,KAAK,CAAE;UACjDiD,UAAU,EAAEvD,cAAe;UAC3B4C,SAAS,EAAC;QAAc;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,EAGD/I,KAAK,iBACJrB,OAAA;UAAKqK,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BtK,OAAA;YAAKqK,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpCpK,OAAA;YAAMqK,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEjJ,KAAK,CAAC4J;UAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChDpK,OAAA;YACE4K,IAAI,EAAC,QAAQ;YACbM,OAAO,EAAEA,CAAA,KAAM;cACb5J,QAAQ,CAAC,IAAI,CAAC;cACdJ,iBAAiB,CAAC,IAAI,CAAC;cACvB,MAAM8G,WAAW,GAAGH,QAAQ,CAACI,aAAa,CAAC,eAAe,CAAqB;cAC/E,IAAID,WAAW,EAAE;gBACfA,WAAW,CAACE,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;cAC5C;YACF,CAAE;YACFkC,SAAS,EAAC,cAAc;YACxB,cAAW,cAAc;YAAAC,QAAA,EAC1B;UAED;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,eAEDpK,OAAA;UAAKqK,SAAS,EAAC,cAAc;UAAAC,QAAA,GAC1B,CAAC7J,YAAY,IAAIY,KAAK,kBACrBrB,OAAA;YACE4K,IAAI,EAAC,QAAQ;YACbM,OAAO,EAAEvD,cAAe;YACxB0C,SAAS,EAAC,0BAA0B;YACpC,cAAW,WAAW;YAAAC,QAAA,eAEtBtK,OAAA;cAAKmL,OAAO,EAAC,WAAW;cAACC,IAAI,EAAC,cAAc;cAAAd,QAAA,eAC1CtK,OAAA;gBAAMqL,CAAC,EAAC;cAAuG;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9G;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACT,eAEDpK,OAAA;YACE4K,IAAI,EAAC,QAAQ;YACbM,OAAO,EAAE1B,iBAAkB;YAC3Ba,SAAS,EAAC,aAAa;YACvB,cAAW,cAAc;YAAAC,QAAA,eAEzBtK,OAAA;cAAKmL,OAAO,EAAC,WAAW;cAACC,IAAI,EAAC,cAAc;cAAAd,QAAA,eAC1CtK,OAAA;gBAAMqL,CAAC,EAAC;cAA2J;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAETpK,OAAA;YACE4K,IAAI,EAAC,QAAQ;YACbM,OAAO,EAAE9C,gBAAiB;YAC1BiC,SAAS,EAAE,eAAelJ,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;YAC3D,cAAYA,WAAW,GAAG,gBAAgB,GAAG,mBAAoB;YAAAmJ,QAAA,eAEjEtK,OAAA;cAAKmL,OAAO,EAAC,WAAW;cAACC,IAAI,EAAC,cAAc;cAAAd,QAAA,gBAC1CtK,OAAA;gBAAMqL,CAAC,EAAC;cAA8E;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC,eACxFpK,OAAA;gBAAMqL,CAAC,EAAC;cAAqG;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5G;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEPpK,OAAA;MAAKqK,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BtK,OAAA;QACE4K,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,eAAe;QACzBa,OAAO,EAAElI,oBAAqB,CAAC;QAAA;QAAAsH,QAAA,EAChC;MAED;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpK,OAAA;QACE4K,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,eAAe;QACzBa,OAAO,EAAEA,CAAA,KAAM5I,MAAM,CAACgJ,IAAI,CAAC,qBAAqB,EAAE,QAAQ,CAAE;QAAAhB,QAAA,EAC7D;MAED;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpK,OAAA;QACE4K,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,eAAe;QACzBa,OAAO,EAAEA,CAAA,KAAM5I,MAAM,CAACgJ,IAAI,CAAC,2BAA2B,EAAE,QAAQ,CAAE;QAAAhB,QAAA,EACnE;MAED;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLjJ,WAAW,iBACVnB,OAAA;MAAKqK,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BtK,OAAA;QAAAsK,QAAA,EAAG;MAAe;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACN,eAGDpK,OAAA,CAACP,gBAAgB;MACf8L,MAAM,EAAEhK,iBAAkB;MAC1BiK,OAAO,EAAEA,CAAA,KAAMhK,oBAAoB,CAAC,KAAK,CAAE;MAC3CiK,kBAAkB,EAAEhC,sBAAuB;MAC3CnF,KAAK,EAAC,cAAc;MACpBoH,QAAQ,EAAC;IAA4B;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAED;AAAAlK,EAAA,CA1jBMD,iBAA2B;AAAA0L,EAAA,GAA3B1L,iBAA2B;AA2jBjC,MAAM2L,GAAa,GAAGA,CAAA,KAAM;EAC1B1I,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EAErC,oBAAOnD,OAAA,CAACC,iBAAiB;IAAAgK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9B,CAAC;AAACyB,GAAA,GAJID,GAAa;AAMnB,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}