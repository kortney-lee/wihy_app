{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { searchCache } from './services/searchCache';\nimport { foodAnalysisService } from './components/foodAnalysisService';\nimport ImageUploadModal from './components/ImageUploadModal';\nimport LoginButton from './components/LoginButton/LoginButton';\nimport ResultQualityPie from './components/ResultQualityPie';\nimport NutritionChart from './components/NutritionChart';\nimport NovaChart from './components/NovaChart';\nimport './VHealthSearch.css';\nimport Spinner from './components/Spinner';\n\n/* Define default topics and resources */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRelatedTopics = [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"];\nconst defaultResources = [{\n  text: \"🩺 mHealth - Mobile Health Solutions\",\n  url: \"https://mhealth.com\"\n}, {\n  text: \"🏥 CDC - Health Guidelines\",\n  url: \"https://cdc.gov/healthliving\"\n}, {\n  text: \"🌍 WHO - Global Health Information\",\n  url: \"https://who.int/health-topics\"\n}];\n\n// Define the dummy data for \"test\" queries\nconst dummyTestData = {\n  query: \"test\",\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\n\n**Recommendations:**\n• Consult healthcare professionals for personalized medical advice\n• Verify information with your doctor or medical provider\n• Follow evidence-based medical guidelines\n• Seek regular medical check-ups and screenings\n\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\n\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\n  relatedTopics: [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"],\n  resources: [{\n    text: \"🩺 mHealth - Mobile Health Solutions\",\n    url: \"#\"\n  }, {\n    text: \"🏥 CDC - Health Guidelines\",\n    url: \"#\"\n  }, {\n    text: \"🌍 WHO - Global Health Information\",\n    url: \"#\"\n  }]\n};\n\n// Update the SearchResultsProps interface to include the new properties\n\n// Add this function before the SearchResults component\nconst convertLinksToClickable = text => {\n  // Handle non-string inputs\n  if (!text) return null;\n\n  // If text is not a string, convert it to string first\n  if (typeof text !== 'string') {\n    // If it's an object, try to stringify it or extract meaningful content\n    if (typeof text === 'object') {\n      // If it has specific properties we can use\n      if (text.content) {\n        text = text.content;\n      } else if (text.message) {\n        text = text.message;\n      } else if (text.details) {\n        text = text.details;\n      } else {\n        // Last resort - stringify the object\n        text = JSON.stringify(text);\n      }\n    } else {\n      // Convert other types to string\n      text = String(text);\n    }\n  }\n\n  // Now we're sure text is a string, proceed with original logic\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  const parts = text.split(urlRegex);\n  return parts.map((part, index) => {\n    if (part.match(urlRegex)) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: part,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          color: '#2563eb',\n          textDecoration: 'underline'\n        },\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this);\n    }\n    return part;\n  });\n};\nconst SearchResults = ({\n  query,\n  results,\n  onBackToSearch,\n  onNewSearch,\n  isLoading = false,\n  dataSource // Remove the default value\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [newQuery, setNewQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [isUploadLoading, setUploadLoading] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Cache results when they change\n  useEffect(() => {\n    if (query && results && !isLoading) {\n      searchCache.setCachedResult(query, results, window.location.href);\n    }\n  }, [query, results, isLoading]);\n\n  // Add effect to manage body class when modal opens/closes\n  useEffect(() => {\n    if (isUploadModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [isUploadModalOpen]);\n\n  // Add cleanup effect\n  useEffect(() => {\n    return () => {\n      if (typeof image === 'string' && image.startsWith('blob:')) {\n        URL.revokeObjectURL(image);\n      }\n    };\n  }, [image]);\n\n  // Add this effect\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Handle new search submission\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const trimmedQuery = input.trim();\n\n    // Check for test query - return fake data without API call\n    if (trimmedQuery.toLowerCase() === 'test') {\n      console.log('🧪 Test query detected in SearchResults - avoiding API call');\n      onNewSearch(trimmedQuery); // This will trigger the test logic in parent\n      return;\n    }\n    onNewSearch(trimmedQuery);\n  };\n\n  // Handle voice input\n  const handleVoiceInput = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser');\n      return;\n    }\n    if (!recognitionRef.current) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setNewQuery(transcript); // Update the input field\n        setIsListening(false);\n      };\n      recognition.onerror = () => {\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n    }\n    if (!isListening) {\n      recognitionRef.current.start();\n    } else {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      setImage(file);\n      console.log(`Image uploaded: ${file.name}`);\n    }\n  };\n\n  // Clear all search items\n  const handleClearAll = () => {\n    setInput('');\n    setNewQuery(''); // <-- Add this line\n    setImage(null);\n    setCurrentPhotoId(null);\n    setIsListening(false);\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n\n    // Remove CSS class\n    const searchInput = document.querySelector('.results-search-input');\n    if (searchInput) {\n      searchInput.classList.remove('with-image');\n    }\n  };\n\n  // Handle Enter key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleTextSubmit(e);\n    }\n  };\n\n  // Photo modal handlers\n  const handleCameraClick = () => {\n    setIsUploadModalOpen(true);\n  };\n\n  // Fix the handleFileSelect function:\n  const handleFileSelect = async file => {\n    setUploadLoading(true);\n    setImage(URL.createObjectURL(file));\n    try {\n      // Use the existing foodAnalysisService instead of the undefined function\n      const result = await foodAnalysisService.analyzeFoodImage(file);\n      console.log(\"File analysis result:\", result);\n      let searchTerm = '';\n      if (typeof result === 'string') {\n        searchTerm = result;\n      } else if (result && typeof result === 'object') {\n        searchTerm = result.name || result.foodName || result.food || 'food item';\n      }\n      if (searchTerm) {\n        setNewQuery(searchTerm);\n        onNewSearch(searchTerm); // Only one call now\n      } else {\n        setNotification({\n          message: 'Could not identify food in image',\n          type: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error processing image:', error);\n      setNotification({\n        message: 'Error analyzing image. Please try again.',\n        type: 'error'\n      });\n    } finally {\n      setUploadLoading(false);\n      setIsUploadModalOpen(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      handleFileSelect(imageFile);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleNewSearchSubmit = e => {\n    e.preventDefault();\n    if (!newQuery.trim()) return;\n    onNewSearch(newQuery);\n    setNewQuery(''); // Reset after search\n  };\n\n  // Check if current query is \"test\" to show dummy data styles\n  const isTestQuery = query.toLowerCase().trim() === 'test';\n\n  // Replace the calculateQualityScore function with this improved version\n\n  const calculateQualityScore = () => {\n    console.log('Calculating quality score for:', query);\n    console.log('Results:', results);\n    console.log('DataSource:', dataSource);\n\n    // Special case: Invalid query responses should score ZERO\n    if (/not appear to be a recognized medical term/.test(results) || /not a recognized|unrecognized|isn't recognized/.test(results) || /could not find information|no information found/.test(results) || /does not seem to be|doesn't seem to be/.test(results) || /please provide more|please clarify/.test(results)) {\n      console.log('Invalid query detected');\n      return 0;\n    }\n\n    // Check if the query itself looks like gibberish\n    if (/^[a-z0-9]{1,7}$/i.test(query) && !/^(hiv|flu|cold|covid|bp|bmi|gerd|ibs|std|uti)$/i.test(query)) {\n      console.log('Gibberish query detected');\n      return 0;\n    }\n\n    // If error, return low score immediately\n    if (dataSource === 'error') {\n      console.log('Error data source');\n      return 0.2;\n    }\n\n    // HIGH SCORE: For nutrition data from API\n    if (dataSource === 'vnutrition') {\n      console.log('VNutrition data source - high score');\n      return 0.9;\n    }\n\n    // For text-based search results, analyze content quality\n    const resultsText = results.toLowerCase();\n\n    // Start with a baseline score\n    let score = 0.4; // Lower baseline, we'll add points for quality\n\n    console.log('Starting with baseline score:', score);\n\n    // Check for academic citations and journal references\n    const hasCitations = /\\b(?:usda|mayo clinic|nutrition journal|doi|pmid|pubmed|journal|citation)\\b/i.test(resultsText);\n    const hasJournalNames = /\\b(?:jama|nejm|lancet|bmj|nih|nature|science|cell|journal|usda|mayo)\\b/i.test(resultsText);\n    const hasAcademicSources = /\\b(?:study|research|clinical trial|meta-analysis|systematic review)\\b/i.test(resultsText);\n\n    // Check for actionable content\n    const hasActionableContent = /\\b(?:recommend|should|can|treatment option|therapy|steps|guidelines|advice|benefits|health)\\b/i.test(resultsText);\n    const hasNumericData = /\\b\\d+(?:\\.\\d+)?%?\\s*(?:mg|g|mcg|iu|percent|patients|cases|risk|grams|calories)\\b/i.test(resultsText);\n\n    // Check for specific health information\n    const hasSpecificInfo = /\\b(?:vitamin|mineral|antioxidant|fiber|protein|nutrients|calories|inflammation|immune|heart health)\\b/i.test(resultsText);\n\n    // Check for URL sources (links to credible sources)\n    const hasURLSources = /https?:\\/\\/[^\\s]+/.test(results);\n\n    // Check for structured information\n    const hasStructuredInfo = /\\*\\*.*\\*\\*/.test(results) || /^\\d+\\./.test(results);\n    console.log('Quality indicators:', {\n      hasCitations,\n      hasJournalNames,\n      hasAcademicSources,\n      hasActionableContent,\n      hasNumericData,\n      hasSpecificInfo,\n      hasURLSources,\n      hasStructuredInfo\n    });\n\n    // Add points for quality indicators\n    if (hasCitations) {\n      score += 0.2;\n      console.log('+0.2 for citations');\n    }\n    if (hasJournalNames) {\n      score += 0.15;\n      console.log('+0.15 for journal names');\n    }\n    if (hasAcademicSources) {\n      score += 0.1;\n      console.log('+0.1 for academic sources');\n    }\n    if (hasActionableContent) {\n      score += 0.1;\n      console.log('+0.1 for actionable content');\n    }\n    if (hasNumericData) {\n      score += 0.15;\n      console.log('+0.15 for numeric data');\n    }\n    if (hasSpecificInfo) {\n      score += 0.1;\n      console.log('+0.1 for specific health info');\n    }\n    if (hasURLSources) {\n      score += 0.1;\n      console.log('+0.1 for URL sources');\n    }\n    if (hasStructuredInfo) {\n      score += 0.05;\n      console.log('+0.05 for structured info');\n    }\n\n    // Special bonus for comprehensive health/nutrition content\n    if (/apple|nutrition|vitamin|fiber|antioxidant/.test(resultsText) && hasCitations) {\n      score += 0.15;\n      console.log('+0.15 for comprehensive nutrition content with sources');\n    }\n\n    // Cap the score between 0.1 and 0.95\n    const finalScore = Math.min(0.95, Math.max(0.1, score));\n    console.log('Final quality score:', finalScore);\n    return finalScore;\n  };\n\n  // Move extractNutritionData function inside the component but before it's used\n  const extractNutritionData = () => {\n    console.log('=== EXTRACTING NUTRITION DATA ===');\n    console.log('Query:', query);\n    console.log('DataSource:', dataSource);\n    console.log('Results type:', typeof results);\n    console.log('Results content:', results);\n\n    // Only process if we have actual nutrition data from API\n    if (dataSource === 'vnutrition') {\n      try {\n        var _nutrition, _nutrition2, _nutrition3;\n        console.log('Processing vnutrition data source');\n        let nutrition;\n        if (typeof results === 'string') {\n          console.log('Parsing string results');\n          nutrition = JSON.parse(results);\n        } else {\n          console.log('Using object results directly');\n          nutrition = results;\n        }\n        console.log('Parsed nutrition object:', nutrition);\n        console.log('Nutrition found status:', (_nutrition = nutrition) === null || _nutrition === void 0 ? void 0 : _nutrition.found);\n        console.log('Raw nova_classification:', (_nutrition2 = nutrition) === null || _nutrition2 === void 0 ? void 0 : _nutrition2.nova_classification);\n        console.log('Raw nova_description:', (_nutrition3 = nutrition) === null || _nutrition3 === void 0 ? void 0 : _nutrition3.nova_description);\n        if (nutrition && nutrition.found !== false) {\n          const extractedData = {\n            calories: nutrition.calories_per_serving || 0,\n            protein: nutrition.protein_g || 0,\n            carbs: nutrition.carbs_g || 0,\n            fat: nutrition.fat_g || 0,\n            fiber: nutrition.fiber_g || 0,\n            sugar: nutrition.sugar_g || 0,\n            sodium: nutrition.sodium_mg || 0,\n            novaScore: nutrition.nova_classification || 1,\n            processedLevel: nutrition.nova_description || 'Unknown'\n          };\n          console.log('=== FINAL EXTRACTED DATA ===');\n          console.log('Extracted nutrition data:', extractedData);\n          console.log('NOVA Score from database:', extractedData.novaScore);\n          console.log('Processing Level:', extractedData.processedLevel);\n          return extractedData;\n        } else {\n          console.log('No nutrition data found - nutrition.found is false or nutrition is null');\n          console.log('Full nutrition object:', JSON.stringify(nutrition, null, 2));\n          return null;\n        }\n      } catch (error) {\n        console.error('Error parsing nutrition data:', error);\n        console.error('Raw results that failed to parse:', results);\n        return null;\n      }\n    }\n    console.log('Not vnutrition source - returning null');\n    return null;\n  };\n  const resultQualityScore = calculateQualityScore();\n  const nutritionData = extractNutritionData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(LoginButton, {\n      position: \"top-right\",\n      className: \"results-login-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-search-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNewSearchSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Ask anything about health...\",\n            value: newQuery,\n            onChange: e => setNewQuery(e.target.value),\n            className: \"search-input results-search-input\",\n            \"data-query\": isTestQuery ? 'test' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"image-name\",\n            children: typeof image === 'object' && image !== null ? image.name : 'Uploaded image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setImage(null);\n              setCurrentPhotoId(null);\n              const searchInput = document.querySelector('.results-search-input');\n              if (searchInput) {\n                searchInput.classList.remove('with-image');\n              }\n            },\n            className: \"remove-image\",\n            \"aria-label\": \"Remove image\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-icons\",\n          children: [(newQuery || image) && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleClearAll,\n            className: \"icon-button clear-button\",\n            \"aria-label\": \"Clear all\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCameraClick,\n            className: \"icon-button\",\n            \"aria-label\": \"Upload image\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVoiceInput,\n            className: `icon-button ${isListening ? 'listening' : ''}`,\n            \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"results-header\",\n        children: [\"Search Results for: \\\"\", query, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health-info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-info-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"markdown-content\",\n              children: dataSource === 'vnutrition' ? (() => {\n                const nutritionData = extractNutritionData();\n                console.log('Nutrition data in JSX:', nutritionData);\n                if (nutritionData) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Nutrition Information\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Calories per serving: \", nutritionData.calories]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 629,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Protein: \", nutritionData.protein, \"g\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 630,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Carbs: \", nutritionData.carbs, \"g\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 631,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Fat: \", nutritionData.fat, \"g\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 632,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"NOVA Score: \", nutritionData.novaScore]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 633,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Processing Level: \", nutritionData.processedLevel]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 634,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 628,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 25\n                  }, this);\n                } else {\n                  // Try to parse and display raw data for debugging\n                  let nutrition;\n                  try {\n                    nutrition = typeof results === 'string' ? JSON.parse(results) : results;\n                    console.log('Raw nutrition object for debugging:', nutrition);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        children: \"Raw Database Data (Debug)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                        style: {\n                          fontSize: '12px',\n                          background: '#f5f5f5',\n                          padding: '10px'\n                        },\n                        children: JSON.stringify(nutrition, null, 2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 648,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 27\n                    }, this);\n                  } catch {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Error parsing nutrition data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 654,\n                      columnNumber: 32\n                    }, this);\n                  }\n                }\n              })() : convertLinksToClickable(results)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-source-indicator\",\n            children: dataSource === 'openai' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Powered by AI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this) : dataSource === 'error' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-source\",\n              children: \"Error retrieving data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"From health database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-chart-container\",\n            style: {\n              marginBottom: \"2rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ResultQualityPie, {\n              qualityScore: resultQualityScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 13\n          }, this), nutritionData && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nutrition-chart-container\",\n              style: {\n                marginBottom: \"2rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  fontSize: \"1.1rem\",\n                  marginBottom: \"1rem\",\n                  color: \"#374151\"\n                },\n                children: \"Nutrition Breakdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NutritionChart, {\n                nutritionData: nutritionData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nova-chart-container\",\n              style: {\n                marginBottom: \"2rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  fontSize: \"1.1rem\",\n                  marginBottom: \"1rem\",\n                  color: \"#374151\"\n                },\n                children: \"Processing Level (NOVA Score)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NovaChart, {\n                novaScore: nutritionData.novaScore,\n                processedLevel: nutritionData.processedLevel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"related-topics-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Related Health Topics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"related-topics-list\",\n              children: isTestQuery ? dummyTestData.relatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onNewSearch(topic),\n                  className: \"topic-button\",\n                  children: topic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 21\n              }, this)) : defaultRelatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onNewSearch(topic),\n                  className: \"topic-button\",\n                  children: topic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resources-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Useful Resources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"resources-list\",\n              children: isTestQuery ? dummyTestData.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: resource.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: resource.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 21\n              }, this)) : defaultResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: resource.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: resource.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          message: \"Searching for health information...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n        isOpen: isUploadModalOpen,\n        onClose: () => setIsUploadModalOpen(false),\n        onFileSelect: handleFileSelect,\n        title: \"Upload Health Image\",\n        subtitle: \"Upload food, medical, or health-related images for AI analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"AanjdCSQDekMdS6+gTWhT5m9iRM=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","searchCache","foodAnalysisService","ImageUploadModal","LoginButton","ResultQualityPie","NutritionChart","NovaChart","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRelatedTopics","defaultResources","text","url","dummyTestData","query","healthInfo","relatedTopics","resources","convertLinksToClickable","content","message","details","JSON","stringify","String","urlRegex","parts","split","map","part","index","match","href","target","rel","style","color","textDecoration","children","fileName","_jsxFileName","lineNumber","columnNumber","SearchResults","results","onBackToSearch","onNewSearch","isLoading","dataSource","_s","input","setInput","image","setImage","currentPhotoId","setCurrentPhotoId","newQuery","setNewQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","notification","setNotification","isUploadLoading","setUploadLoading","recognitionRef","setCachedResult","window","location","document","body","classList","add","remove","startsWith","URL","revokeObjectURL","timer","setTimeout","clearTimeout","handleTextSubmit","e","preventDefault","trim","trimmedQuery","toLowerCase","console","log","handleVoiceInput","alert","current","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","transcript","onerror","onend","start","stop","handleImageUpload","_e$target$files","file","files","name","handleClearAll","searchInput","querySelector","handleKeyPress","key","handleCameraClick","handleFileSelect","createObjectURL","result","analyzeFoodImage","searchTerm","foodName","food","type","error","handleDrop","Array","from","dataTransfer","imageFile","find","handleDragOver","handleNewSearchSubmit","isTestQuery","calculateQualityScore","test","resultsText","score","hasCitations","hasJournalNames","hasAcademicSources","hasActionableContent","hasNumericData","hasSpecificInfo","hasURLSources","hasStructuredInfo","finalScore","Math","min","max","extractNutritionData","_nutrition","_nutrition2","_nutrition3","nutrition","parse","found","nova_classification","nova_description","extractedData","calories","calories_per_serving","protein","protein_g","carbs","carbs_g","fat","fat_g","fiber","fiber_g","sugar","sugar_g","sodium","sodium_mg","novaScore","processedLevel","resultQualityScore","nutritionData","className","position","onSubmit","placeholder","value","onChange","onClick","viewBox","fill","d","fontSize","background","padding","marginBottom","qualityScore","topic","resource","isOpen","onClose","onFileSelect","title","subtitle","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/SearchResults.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { searchCache } from './services/searchCache';\r\nimport { photoStorageService } from './services/photoStorageService';\r\nimport { foodAnalysisService } from './components/foodAnalysisService';\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport LoginButton from './components/LoginButton/LoginButton';\r\nimport ResultQualityPie from './components/ResultQualityPie';\r\nimport NutritionChart from './components/NutritionChart';\r\nimport NovaChart from './components/NovaChart';\r\nimport './VHealthSearch.css';\r\nimport Spinner from './components/Spinner';\r\n\r\n/* Define default topics and resources */\r\nconst defaultRelatedTopics = [\r\n  \"Nutrition and Diet Guidelines\",\r\n  \"Exercise and Physical Activity\", \r\n  \"Mental Health and Wellness\",\r\n  \"Preventive Care and Screenings\",\r\n  \"Chronic Disease Management\",\r\n  \"Healthy Lifestyle Choices\"\r\n];\r\n\r\nconst defaultResources = [\r\n  { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"https://mhealth.com\" },\r\n  { text: \"🏥 CDC - Health Guidelines\", url: \"https://cdc.gov/healthliving\" },\r\n  { text: \"🌍 WHO - Global Health Information\", url: \"https://who.int/health-topics\" }\r\n];\r\n\r\n// Define the dummy data for \"test\" queries\r\nconst dummyTestData = {\r\n  query: \"test\",\r\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\r\n\r\n**Recommendations:**\r\n• Consult healthcare professionals for personalized medical advice\r\n• Verify information with your doctor or medical provider\r\n• Follow evidence-based medical guidelines\r\n• Seek regular medical check-ups and screenings\r\n\r\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\r\n\r\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\r\n  relatedTopics: [\r\n    \"Nutrition and Diet Guidelines\",\r\n    \"Exercise and Physical Activity\", \r\n    \"Mental Health and Wellness\",\r\n    \"Preventive Care and Screenings\",\r\n    \"Chronic Disease Management\",\r\n    \"Healthy Lifestyle Choices\"\r\n  ],\r\n  resources: [\r\n    { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"#\" },\r\n    { text: \"🏥 CDC - Health Guidelines\", url: \"#\" },\r\n    { text: \"🌍 WHO - Global Health Information\", url: \"#\" }\r\n  ]\r\n};\r\n\r\n// Update the SearchResultsProps interface to include the new properties\r\ninterface SearchResultsProps {\r\n  query: string;\r\n  results: string;\r\n  onBackToSearch: () => void;\r\n  onNewSearch: (query: string) => void;\r\n  isLoading: boolean;\r\n  dataSource: \"error\" | \"openai\" | \"local\" | \"vnutrition\";\r\n  citations?: string[];\r\n  recommendations?: string[];\r\n  disclaimer?: string;\r\n}\r\n\r\n// Add this function before the SearchResults component\r\nconst convertLinksToClickable = (text: any): React.ReactNode => {\r\n  // Handle non-string inputs\r\n  if (!text) return null;\r\n  \r\n  // If text is not a string, convert it to string first\r\n  if (typeof text !== 'string') {\r\n    // If it's an object, try to stringify it or extract meaningful content\r\n    if (typeof text === 'object') {\r\n      // If it has specific properties we can use\r\n      if (text.content) {\r\n        text = text.content;\r\n      } else if (text.message) {\r\n        text = text.message;\r\n      } else if (text.details) {\r\n        text = text.details;\r\n      } else {\r\n        // Last resort - stringify the object\r\n        text = JSON.stringify(text);\r\n      }\r\n    } else {\r\n      // Convert other types to string\r\n      text = String(text);\r\n    }\r\n  }\r\n\r\n  // Now we're sure text is a string, proceed with original logic\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  const parts = text.split(urlRegex);\r\n  \r\n  return parts.map((part: string, index: number) => {\r\n    if (part.match(urlRegex)) {\r\n      return (\r\n        <a \r\n          key={index} \r\n          href={part} \r\n          target=\"_blank\" \r\n          rel=\"noopener noreferrer\"\r\n          style={{ color: '#2563eb', textDecoration: 'underline' }}\r\n        >\r\n          {part}\r\n        </a>\r\n      );\r\n    }\r\n    return part;\r\n  });\r\n};\r\n\r\nconst SearchResults: React.FC<SearchResultsProps> = ({ \r\n  query, \r\n  results, \r\n  onBackToSearch,\r\n  onNewSearch,\r\n  isLoading = false,\r\n  dataSource // Remove the default value\r\n}) => {\r\n  const [input, setInput] = useState('');\r\n  const [image, setImage] = useState<File | string | null>(null);\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [newQuery, setNewQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [notification, setNotification] = useState<{message: string, type: string} | null>(null);\r\n  const [isUploadLoading, setUploadLoading] = useState(false);\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // Cache results when they change\r\n  useEffect(() => {\r\n    if (query && results && !isLoading) {\r\n      searchCache.setCachedResult(query, results, window.location.href);\r\n    }\r\n  }, [query, results, isLoading]);\r\n\r\n  // Add effect to manage body class when modal opens/closes\r\n  useEffect(() => {\r\n    if (isUploadModalOpen) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      document.body.classList.remove('modal-open');\r\n    };\r\n  }, [isUploadModalOpen]);\r\n\r\n  // Add cleanup effect\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typeof image === 'string' && image.startsWith('blob:')) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [image]);\r\n\r\n  // Add this effect\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Handle new search submission\r\n  const handleTextSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    \r\n    const trimmedQuery = input.trim();\r\n    \r\n    // Check for test query - return fake data without API call\r\n    if (trimmedQuery.toLowerCase() === 'test') {\r\n      console.log('🧪 Test query detected in SearchResults - avoiding API call');\r\n      onNewSearch(trimmedQuery); // This will trigger the test logic in parent\r\n      return;\r\n    }\r\n    \r\n    onNewSearch(trimmedQuery);\r\n  };\r\n\r\n  // Handle voice input\r\n  const handleVoiceInput = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (!recognitionRef.current) {\r\n      const recognition = new (window as any).webkitSpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      recognition.lang = 'en-US';\r\n\r\n      recognition.onstart = () => {\r\n        setIsListening(true);\r\n      };\r\n\r\n      recognition.onresult = (event: any) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setNewQuery(transcript); // Update the input field\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onerror = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    }\r\n\r\n    if (!isListening) {\r\n      recognitionRef.current.start();\r\n    } else {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setImage(file);\r\n      console.log(`Image uploaded: ${file.name}`);\r\n    }\r\n  };\r\n\r\n  // Clear all search items\r\n  const handleClearAll = () => {\r\n    setInput('');\r\n    setNewQuery(''); // <-- Add this line\r\n    setImage(null);\r\n    setCurrentPhotoId(null);\r\n    setIsListening(false);\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n    }\r\n    \r\n    // Remove CSS class\r\n    const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n    if (searchInput) {\r\n      searchInput.classList.remove('with-image');\r\n    }\r\n  };\r\n\r\n  // Handle Enter key press\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleTextSubmit(e as any);\r\n    }\r\n  };\r\n\r\n  // Photo modal handlers\r\n  const handleCameraClick = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  // Fix the handleFileSelect function:\r\n  const handleFileSelect = async (file: File) => {\r\n    setUploadLoading(true);\r\n    setImage(URL.createObjectURL(file));\r\n    \r\n    try {\r\n      // Use the existing foodAnalysisService instead of the undefined function\r\n      const result = await foodAnalysisService.analyzeFoodImage(file);\r\n      console.log(\"File analysis result:\", result);\r\n      \r\n      let searchTerm = '';\r\n      \r\n      if (typeof result === 'string') {\r\n        searchTerm = result;\r\n      } else if (result && typeof result === 'object') {\r\n        searchTerm = (result as any).name || \r\n                    (result as any).foodName || \r\n                    (result as any).food || \r\n                    'food item';\r\n      }\r\n      \r\n      if (searchTerm) {\r\n        setNewQuery(searchTerm);\r\n        onNewSearch(searchTerm); // Only one call now\r\n      } else {\r\n        setNotification({\r\n          message: 'Could not identify food in image',\r\n          type: 'error'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing image:', error);\r\n      setNotification({\r\n        message: 'Error analyzing image. Please try again.',\r\n        type: 'error'\r\n      });\r\n    } finally {\r\n      setUploadLoading(false);\r\n      setIsUploadModalOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    if (imageFile) {\r\n      handleFileSelect(imageFile);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewSearchSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newQuery.trim()) return;\r\n    onNewSearch(newQuery);\r\n    setNewQuery(''); // Reset after search\r\n  };\r\n\r\n  // Check if current query is \"test\" to show dummy data styles\r\n  const isTestQuery = query.toLowerCase().trim() === 'test';\r\n\r\n  // Replace the calculateQualityScore function with this improved version\r\n\r\n  const calculateQualityScore = (): number => {\r\n    console.log('Calculating quality score for:', query);\r\n    console.log('Results:', results);\r\n    console.log('DataSource:', dataSource);\r\n    \r\n    // Special case: Invalid query responses should score ZERO\r\n    if (/not appear to be a recognized medical term/.test(results) || \r\n        /not a recognized|unrecognized|isn't recognized/.test(results) ||\r\n        /could not find information|no information found/.test(results) ||\r\n        /does not seem to be|doesn't seem to be/.test(results) ||\r\n        /please provide more|please clarify/.test(results)) {\r\n      console.log('Invalid query detected');\r\n      return 0;\r\n    }\r\n    \r\n    // Check if the query itself looks like gibberish\r\n    if (/^[a-z0-9]{1,7}$/i.test(query) && !/^(hiv|flu|cold|covid|bp|bmi|gerd|ibs|std|uti)$/i.test(query)) {\r\n      console.log('Gibberish query detected');\r\n      return 0;\r\n    }\r\n    \r\n    // If error, return low score immediately\r\n    if (dataSource === 'error') {\r\n      console.log('Error data source');\r\n      return 0.2;\r\n    }\r\n    \r\n    // HIGH SCORE: For nutrition data from API\r\n    if (dataSource === 'vnutrition') {\r\n      console.log('VNutrition data source - high score');\r\n      return 0.9;\r\n    }\r\n    \r\n    // For text-based search results, analyze content quality\r\n    const resultsText = results.toLowerCase();\r\n    \r\n    // Start with a baseline score\r\n    let score = 0.4; // Lower baseline, we'll add points for quality\r\n    \r\n    console.log('Starting with baseline score:', score);\r\n    \r\n    // Check for academic citations and journal references\r\n    const hasCitations = /\\b(?:usda|mayo clinic|nutrition journal|doi|pmid|pubmed|journal|citation)\\b/i.test(resultsText);\r\n    const hasJournalNames = /\\b(?:jama|nejm|lancet|bmj|nih|nature|science|cell|journal|usda|mayo)\\b/i.test(resultsText);\r\n    const hasAcademicSources = /\\b(?:study|research|clinical trial|meta-analysis|systematic review)\\b/i.test(resultsText);\r\n    \r\n    // Check for actionable content\r\n    const hasActionableContent = /\\b(?:recommend|should|can|treatment option|therapy|steps|guidelines|advice|benefits|health)\\b/i.test(resultsText);\r\n    const hasNumericData = /\\b\\d+(?:\\.\\d+)?%?\\s*(?:mg|g|mcg|iu|percent|patients|cases|risk|grams|calories)\\b/i.test(resultsText);\r\n    \r\n    // Check for specific health information\r\n    const hasSpecificInfo = /\\b(?:vitamin|mineral|antioxidant|fiber|protein|nutrients|calories|inflammation|immune|heart health)\\b/i.test(resultsText);\r\n    \r\n    // Check for URL sources (links to credible sources)\r\n    const hasURLSources = /https?:\\/\\/[^\\s]+/.test(results);\r\n    \r\n    // Check for structured information\r\n    const hasStructuredInfo = /\\*\\*.*\\*\\*/.test(results) || /^\\d+\\./.test(results);\r\n    \r\n    console.log('Quality indicators:', {\r\n      hasCitations,\r\n      hasJournalNames,\r\n      hasAcademicSources,\r\n      hasActionableContent,\r\n      hasNumericData,\r\n      hasSpecificInfo,\r\n      hasURLSources,\r\n      hasStructuredInfo\r\n    });\r\n    \r\n    // Add points for quality indicators\r\n    if (hasCitations) {\r\n      score += 0.2;\r\n      console.log('+0.2 for citations');\r\n    }\r\n    if (hasJournalNames) {\r\n      score += 0.15;\r\n      console.log('+0.15 for journal names');\r\n    }\r\n    if (hasAcademicSources) {\r\n      score += 0.1;\r\n      console.log('+0.1 for academic sources');\r\n    }\r\n    if (hasActionableContent) {\r\n      score += 0.1;\r\n      console.log('+0.1 for actionable content');\r\n    }\r\n    if (hasNumericData) {\r\n      score += 0.15;\r\n      console.log('+0.15 for numeric data');\r\n    }\r\n    if (hasSpecificInfo) {\r\n      score += 0.1;\r\n      console.log('+0.1 for specific health info');\r\n    }\r\n    if (hasURLSources) {\r\n      score += 0.1;\r\n      console.log('+0.1 for URL sources');\r\n    }\r\n    if (hasStructuredInfo) {\r\n      score += 0.05;\r\n      console.log('+0.05 for structured info');\r\n    }\r\n    \r\n    // Special bonus for comprehensive health/nutrition content\r\n    if (/apple|nutrition|vitamin|fiber|antioxidant/.test(resultsText) && hasCitations) {\r\n      score += 0.15;\r\n      console.log('+0.15 for comprehensive nutrition content with sources');\r\n    }\r\n    \r\n    // Cap the score between 0.1 and 0.95\r\n    const finalScore = Math.min(0.95, Math.max(0.1, score));\r\n    console.log('Final quality score:', finalScore);\r\n    \r\n    return finalScore;\r\n  };\r\n\r\n  // Move extractNutritionData function inside the component but before it's used\r\n  const extractNutritionData = () => {\r\n    console.log('=== EXTRACTING NUTRITION DATA ===');\r\n    console.log('Query:', query);\r\n    console.log('DataSource:', dataSource);\r\n    console.log('Results type:', typeof results);\r\n    console.log('Results content:', results);\r\n    \r\n    // Only process if we have actual nutrition data from API\r\n    if (dataSource === 'vnutrition') {\r\n      try {\r\n        console.log('Processing vnutrition data source');\r\n        let nutrition;\r\n        \r\n        if (typeof results === 'string') {\r\n          console.log('Parsing string results');\r\n          nutrition = JSON.parse(results);\r\n        } else {\r\n          console.log('Using object results directly');\r\n          nutrition = results;\r\n        }\r\n        \r\n        console.log('Parsed nutrition object:', nutrition);\r\n        console.log('Nutrition found status:', nutrition?.found);\r\n        console.log('Raw nova_classification:', nutrition?.nova_classification);\r\n        console.log('Raw nova_description:', nutrition?.nova_description);\r\n        \r\n        if (nutrition && nutrition.found !== false) {\r\n          const extractedData = {\r\n            calories: nutrition.calories_per_serving || 0,\r\n            protein: nutrition.protein_g || 0,\r\n            carbs: nutrition.carbs_g || 0,\r\n            fat: nutrition.fat_g || 0,\r\n            fiber: nutrition.fiber_g || 0,\r\n            sugar: nutrition.sugar_g || 0,\r\n            sodium: nutrition.sodium_mg || 0,\r\n            novaScore: nutrition.nova_classification || 1,\r\n            processedLevel: nutrition.nova_description || 'Unknown'\r\n          };\r\n          \r\n          console.log('=== FINAL EXTRACTED DATA ===');\r\n          console.log('Extracted nutrition data:', extractedData);\r\n          console.log('NOVA Score from database:', extractedData.novaScore);\r\n          console.log('Processing Level:', extractedData.processedLevel);\r\n          \r\n          return extractedData;\r\n        } else {\r\n          console.log('No nutrition data found - nutrition.found is false or nutrition is null');\r\n          console.log('Full nutrition object:', JSON.stringify(nutrition, null, 2));\r\n          return null;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing nutrition data:', error);\r\n        console.error('Raw results that failed to parse:', results);\r\n        return null;\r\n      }\r\n    }\r\n    \r\n    console.log('Not vnutrition source - returning null');\r\n    return null;\r\n  };\r\n\r\n  const resultQualityScore = calculateQualityScore();\r\n  const nutritionData = extractNutritionData();\r\n\r\n  return (\r\n    <div className={`results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`}>\r\n      <LoginButton \r\n        position=\"top-right\"\r\n        className=\"results-login-button\"\r\n      />\r\n\r\n      {/* Always show header */}\r\n      <div className=\"results-search-header\">\r\n        <div className=\"search-input-container\">\r\n          <form onSubmit={handleNewSearchSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ask anything about health...\"\r\n              value={newQuery}\r\n              onChange={(e) => setNewQuery(e.target.value)}\r\n              className=\"search-input results-search-input\"\r\n              data-query={isTestQuery ? 'test' : ''}\r\n            />\r\n          </form>\r\n          \r\n          {/* Show image chip when image is uploaded */}\r\n          {image && (\r\n            <div className=\"image-preview\">\r\n              <div className=\"image-icon\">📷</div>\r\n              <span className=\"image-name\">\r\n                {typeof image === 'object' && image !== null ? image.name : 'Uploaded image'}\r\n              </span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setImage(null);\r\n                  setCurrentPhotoId(null);\r\n                  const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n                  if (searchInput) {\r\n                    searchInput.classList.remove('with-image');\r\n                  }\r\n                }}\r\n                className=\"remove-image\"\r\n                aria-label=\"Remove image\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"search-icons\">\r\n            {(newQuery || image) && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleClearAll}\r\n                className=\"icon-button clear-button\"\r\n                aria-label=\"Clear all\"\r\n              >\r\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n                </svg>\r\n              </button>\r\n            )}\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCameraClick}\r\n              className=\"icon-button\"\r\n              aria-label=\"Upload image\"\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n              </svg>\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleVoiceInput}\r\n              className={`icon-button ${isListening ? 'listening' : ''}`}\r\n              aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n                <path d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Always show Results Content */}\r\n      <div className=\"results-container\">\r\n        <h1 className=\"results-header\">Search Results for: \"{query}\"</h1>\r\n        \r\n        <div className=\"results-content\">\r\n          <div className=\"health-info-card\">\r\n            <div className=\"health-info-content\">\r\n              {/* Use the link conversion function */}\r\n              <div className=\"markdown-content\">\r\n                {dataSource === 'vnutrition' ? (\r\n                  (() => {\r\n                    const nutritionData = extractNutritionData();\r\n                    console.log('Nutrition data in JSX:', nutritionData);\r\n                    \r\n                    if (nutritionData) {\r\n                      return (\r\n                        <div>\r\n                          <h3>Nutrition Information</h3>\r\n                          <ul>\r\n                            <li>Calories per serving: {nutritionData.calories}</li>\r\n                            <li>Protein: {nutritionData.protein}g</li>\r\n                            <li>Carbs: {nutritionData.carbs}g</li>\r\n                            <li>Fat: {nutritionData.fat}g</li>\r\n                            <li>NOVA Score: {nutritionData.novaScore}</li>\r\n                            <li>Processing Level: {nutritionData.processedLevel}</li>\r\n                          </ul>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      // Try to parse and display raw data for debugging\r\n                      let nutrition;\r\n                      try {\r\n                        nutrition = typeof results === 'string' ? JSON.parse(results) : results;\r\n                        console.log('Raw nutrition object for debugging:', nutrition);\r\n                        \r\n                        return (\r\n                          <div>\r\n                            <h3>Raw Database Data (Debug)</h3>\r\n                            <pre style={{ fontSize: '12px', background: '#f5f5f5', padding: '10px' }}>\r\n                              {JSON.stringify(nutrition, null, 2)}\r\n                            </pre>\r\n                          </div>\r\n                        );\r\n                      } catch {\r\n                        return <div>Error parsing nutrition data</div>;\r\n                      }\r\n                    }\r\n                  })()\r\n                ) : (\r\n                  convertLinksToClickable(results)\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"data-source-indicator\">\r\n              {dataSource === 'openai' ? (\r\n                <span>Powered by AI</span>\r\n              ) : dataSource === 'error' ? (\r\n                <span className=\"error-source\">Error retrieving data</span>\r\n              ) : (\r\n                <span>From health database</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"sidebar\">\r\n            {/* Quality Chart */}\r\n            <div className=\"quality-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n              <ResultQualityPie qualityScore={resultQualityScore} />\r\n            </div>\r\n\r\n            {/* Nutrition Charts - Only show when we have nutrition data */}\r\n            {nutritionData && (\r\n              <>\r\n                <div className=\"nutrition-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                  <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                    Nutrition Breakdown\r\n                  </h3>\r\n                  <NutritionChart nutritionData={nutritionData} />\r\n                </div>\r\n\r\n                <div className=\"nova-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                  <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                    Processing Level (NOVA Score)\r\n                  </h3>\r\n                  <NovaChart \r\n                    novaScore={nutritionData.novaScore} \r\n                    processedLevel={nutritionData.processedLevel}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n            \r\n            <div className=\"related-topics-card\">\r\n              <h3>Related Health Topics</h3>\r\n              <ul className=\"related-topics-list\">\r\n                {isTestQuery ? (\r\n                  dummyTestData.relatedTopics.map((topic, index) => (\r\n                    <li key={index}>\r\n                      <button \r\n                        onClick={() => onNewSearch(topic)}\r\n                        className=\"topic-button\"\r\n                      >\r\n                        {topic}\r\n                      </button>\r\n                    </li>\r\n                  ))\r\n                ) : \r\n                  defaultRelatedTopics.map((topic, index) => (\r\n                    <li key={index}>\r\n                      <button \r\n                        onClick={() => onNewSearch(topic)}\r\n                        className=\"topic-button\"\r\n                      >\r\n                        {topic}\r\n                      </button>\r\n                    </li>\r\n                  ))\r\n                }\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"resources-card\">\r\n              <h3>Useful Resources</h3>\r\n              <ul className=\"resources-list\">\r\n                {isTestQuery ? (\r\n                  dummyTestData.resources.map((resource, index) => (\r\n                    <li key={index}>\r\n                      <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {resource.text}\r\n                      </a>\r\n                    </li>\r\n                  ))\r\n                ) : (\r\n                  defaultResources.map((resource, index) => (\r\n                    <li key={index}>\r\n                      <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {resource.text}\r\n                      </a>\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Loading State Overlay - Only shows when loading */}\r\n        {isLoading && (\r\n          <div className=\"loading-container\">\r\n            <Spinner message=\"Searching for health information...\" />\r\n          </div>\r\n        )}\r\n\r\n        {/* ImageUploadModal - always available */}\r\n        <ImageUploadModal\r\n          isOpen={isUploadModalOpen}\r\n          onClose={() => setIsUploadModalOpen(false)}\r\n          onFileSelect={handleFileSelect}\r\n          title=\"Upload Health Image\"\r\n          subtitle=\"Upload food, medical, or health-related images for AI analysis\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}