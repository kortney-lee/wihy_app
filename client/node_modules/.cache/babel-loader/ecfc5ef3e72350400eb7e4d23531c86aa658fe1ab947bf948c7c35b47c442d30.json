{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { searchCache } from './services/searchCache';\nimport ImageUploadModal from './components/ImageUploadModal';\nimport MultiAuthLogin from './components/MultiAuthLogin';\nimport ResultQualityPie from './components/ResultQualityPie';\nimport NutritionChart from './components/NutritionChart';\nimport NovaChart from './components/NovaChart';\nimport './VHealthSearch.css';\nimport Spinner from './components/Spinner';\n\n/* Define default topics and resources */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRelatedTopics = [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"];\nconst defaultResources = [{\n  text: \"Nutrition ED - Learn More\",\n  url: \"https://vowels.com\"\n}, {\n  text: \"Nutrition 101\",\n  url: \"https://members.vowels.com\"\n}, {\n  text: \"The World Counts\",\n  url: \"https://www.theworldcounts.com/\"\n}];\n\n// Define the dummy data for \"test\" queries\nconst dummyTestData = {\n  query: \"test\",\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\n\n**Recommendations:**\n• Consult healthcare professionals for personalized medical advice\n• Verify information with your doctor or medical provider\n• Follow evidence-based medical guidelines\n• Seek regular medical check-ups and screenings\n\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\n\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\n  relatedTopics: [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"],\n  resources: [{\n    text: \"🩺 mHealth - Mobile Health Solutions\",\n    url: \"#\"\n  }, {\n    text: \"🏥 CDC - Health Guidelines\",\n    url: \"#\"\n  }, {\n    text: \"🌍 WHO - Global Health Information\",\n    url: \"#\"\n  }]\n};\n\n// Update the SearchResultsProps interface to include the new properties\n\n// Add this function before the SearchResults component\nconst convertLinksToClickable = text => {\n  // Handle non-string inputs\n  if (!text) return null;\n\n  // If text is not a string, convert it to string first\n  if (typeof text !== 'string') {\n    // If it's an object, try to stringify it or extract meaningful content\n    if (typeof text === 'object') {\n      // If it has specific properties we can use\n      if (text.content) {\n        text = text.content;\n      } else if (text.message) {\n        text = text.message;\n      } else if (text.details) {\n        text = text.details;\n      } else {\n        // Last resort - stringify the object\n        text = JSON.stringify(text);\n      }\n    } else {\n      // Convert other types to string\n      text = String(text);\n    }\n  }\n\n  // Now we're sure text is a string, proceed with original logic\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  const parts = text.split(urlRegex);\n  return parts.map((part, index) => {\n    if (part.match(urlRegex)) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: part,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          color: '#2563eb',\n          textDecoration: 'underline'\n        },\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this);\n    }\n    return part;\n  });\n};\nconst SearchResults = ({\n  query,\n  results,\n  onBackToSearch,\n  onNewSearch,\n  isLoading = false,\n  dataSource,\n  citations\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [newQuery, setNewQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [isUploadLoading, setUploadLoading] = useState(false);\n  const [lastProcessedQuery, setLastProcessedQuery] = useState('');\n  const recognitionRef = useRef(null);\n\n  // Check if we have valid results to display\n  const hasValidResults = results && results.trim() !== '' && !isLoading;\n\n  // Cache results when they change\n  useEffect(() => {\n    if (query && results && !isLoading) {\n      searchCache.setCachedResult(query, results, window.location.href);\n    }\n  }, [query, results, isLoading]);\n\n  // Add effect to manage body class when modal opens/closes\n  useEffect(() => {\n    if (isUploadModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [isUploadModalOpen]);\n\n  // Add cleanup effect\n  useEffect(() => {\n    return () => {\n      if (typeof image === 'string' && image.startsWith('blob:')) {\n        URL.revokeObjectURL(image);\n      }\n    };\n  }, [image]);\n\n  // Add this effect\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Handle new search submission - only allow if user explicitly searches from results page\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const trimmedQuery = input.trim();\n\n    // Prevent duplicate searches\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\n      console.log('Preventing duplicate search for:', trimmedQuery);\n      return;\n    }\n    setLastProcessedQuery(trimmedQuery);\n    onNewSearch(trimmedQuery);\n    setInput(''); // Clear input after search\n  };\n\n  // Handle voice input\n  const handleVoiceInput = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser');\n      return;\n    }\n    if (!recognitionRef.current) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setNewQuery(transcript); // Update the input field\n        setIsListening(false);\n      };\n      recognition.onerror = () => {\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n    }\n    if (!isListening) {\n      recognitionRef.current.start();\n    } else {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      setImage(file);\n      console.log(`Image uploaded: ${file.name}`);\n    }\n  };\n\n  // Clear all search items\n  const handleClearAll = () => {\n    setInput('');\n    setNewQuery(''); // <-- Add this line\n    setImage(null);\n    setCurrentPhotoId(null);\n    setIsListening(false);\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n\n    // Remove CSS class\n    const searchInput = document.querySelector('.results-search-input');\n    if (searchInput) {\n      searchInput.classList.remove('with-image');\n    }\n  };\n\n  // Handle Enter key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleTextSubmit(e);\n    }\n  };\n\n  // Photo modal handlers\n  const handleCameraClick = () => {\n    setIsUploadModalOpen(true);\n  };\n\n  // Simple handler that just triggers a new search - only when user explicitly requests it\n  const handleAnalysisComplete = foodName => {\n    if (foodName && foodName !== lastProcessedQuery && foodName !== query) {\n      console.log('User explicit search from image analysis:', foodName);\n      setNewQuery(foodName);\n      setLastProcessedQuery(foodName);\n      onNewSearch(foodName);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      // Instead of calling handleFileSelect, open the modal and let it handle the file\n      setIsUploadModalOpen(true);\n      // You could also trigger the analysis directly if you want immediate processing\n      // But it's cleaner to let the user see the modal and confirm\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleNewSearchSubmit = e => {\n    e.preventDefault();\n    if (!newQuery.trim() || isLoading) return;\n    const trimmedQuery = newQuery.trim();\n\n    // Prevent duplicate searches\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\n      console.log('Preventing duplicate search for:', trimmedQuery);\n      return;\n    }\n    console.log('User explicit search from new query:', trimmedQuery);\n    setLastProcessedQuery(trimmedQuery);\n    onNewSearch(trimmedQuery);\n    setNewQuery(''); // Reset after search\n  };\n\n  // Update last processed query when props change\n  useEffect(() => {\n    if (query && query !== lastProcessedQuery) {\n      setLastProcessedQuery(query);\n    }\n  }, [query]);\n\n  // Check if current query is \"test\" to show dummy data styles\n  const isTestQuery = query.toLowerCase().trim() === 'test';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(MultiAuthLogin, {\n        className: \"results-login-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      overlay: true,\n      message: \"Searching.......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    /* ONLY show content when NOT loading */\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-search-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleNewSearchSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Ask anything about health...\",\n              value: newQuery,\n              onChange: e => setNewQuery(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleNewSearchSubmit(e);\n                }\n              },\n              className: \"search-input results-search-input\",\n              \"data-query\": isTestQuery ? 'test' : '',\n              rows: 1,\n              style: {\n                resize: 'none',\n                overflow: 'hidden'\n              },\n              onInput: e => {\n                const target = e.target;\n                const container = target.closest('.search-input-container');\n\n                // Reset height to measure content\n                target.style.height = '44px';\n                target.classList.remove('expanded');\n\n                // Check if content needs wrapping\n                const hasOverflow = target.scrollHeight > 44;\n                if (hasOverflow) {\n                  target.classList.add('expanded');\n                  target.style.height = Math.min(target.scrollHeight, 120) + 'px';\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 5\n          }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-icon\",\n              children: \"\\uD83D\\uDCF7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"image-name\",\n              children: typeof image === 'object' && image !== null ? image.name : 'Uploaded image'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setImage(null);\n                setCurrentPhotoId(null);\n                const searchInput = document.querySelector('.results-search-input');\n                if (searchInput) {\n                  searchInput.classList.remove('with-image');\n                }\n              },\n              className: \"remove-image\",\n              \"aria-label\": \"Remove image\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-icons\",\n            children: [(newQuery || image) && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleClearAll,\n              className: \"icon-button clear-button\",\n              \"aria-label\": \"Clear all\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleCameraClick,\n              className: \"icon-button\",\n              \"aria-label\": \"Upload image\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleVoiceInput,\n              className: `icon-button ${isListening ? 'listening' : ''}`,\n              \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-container\",\n        children: hasValidResults ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"results-header\",\n            children: [\"Search Results for: \\\"\", query, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-info-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"health-info-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"markdown-content\",\n                  children: dataSource === 'vnutrition' ? (() => {\n                    let nutrition;\n                    try {\n                      nutrition = typeof results === 'string' ? JSON.parse(results) : results;\n                      console.log('Raw nutrition object for debugging:', nutrition);\n                      if (nutrition && nutrition.found !== false) {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                            children: \"Nutrition Information\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 479,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [\"Calories per serving: \", nutrition.calories_per_serving || 0]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 481,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [\"Protein: \", nutrition.protein_g || 0, \"g\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 482,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [\"Carbs: \", nutrition.carbs_g || 0, \"g\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 483,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [\"Fat: \", nutrition.fat_g || 0, \"g\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 484,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [\"NOVA Score: \", nutrition.nova_classification || 1]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 485,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [\"Processing Level: \", nutrition.nova_description || nutrition.processed_level || 'Unknown']\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 486,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 480,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 478,\n                          columnNumber: 35\n                        }, this);\n                      } else {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                            children: \"Raw Database Data (Debug)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 493,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                            style: {\n                              fontSize: '12px',\n                              background: '#f5f5f5',\n                              padding: '10px'\n                            },\n                            children: JSON.stringify(nutrition, null, 2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 494,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 492,\n                          columnNumber: 35\n                        }, this);\n                      }\n                    } catch {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: \"Error parsing nutrition data\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 38\n                      }, this);\n                    }\n                  })() : convertLinksToClickable(results)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-source-indicator\",\n                children: dataSource === 'openai' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Powered by AI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 25\n                }, this) : dataSource === 'error' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-source\",\n                  children: \"Error retrieving data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"What Is Healthy?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quality-chart-container\",\n                style: {\n                  marginBottom: \"2rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ResultQualityPie, {\n                  query: query || '',\n                  results: results || '',\n                  dataSource: dataSource || 'openai',\n                  citations: citations || []\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 21\n              }, this), dataSource === 'vnutrition' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nutrition-chart-container\",\n                  style: {\n                    marginBottom: \"2rem\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    style: {\n                      fontSize: \"1.1rem\",\n                      marginBottom: \"1rem\",\n                      color: \"#374151\"\n                    },\n                    children: \"Nutrition Breakdown\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(NutritionChart, {\n                    query: query,\n                    results: results,\n                    dataSource: dataSource\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nova-chart-container\",\n                  style: {\n                    marginBottom: \"2rem\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    style: {\n                      fontSize: \"1.1rem\",\n                      marginBottom: \"1rem\",\n                      color: \"#374151\"\n                    },\n                    children: \"Processing Level (NOVA Score)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(NovaChart, {\n                    query: query,\n                    results: results,\n                    dataSource: dataSource\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"related-topics-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Related Health Topics\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"related-topics-list\",\n                  children: isTestQuery ? dummyTestData.relatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        if (topic !== lastProcessedQuery && topic !== query && !isLoading) {\n                          console.log('User explicit search from related topic:', topic);\n                          setLastProcessedQuery(topic);\n                          onNewSearch(topic);\n                        }\n                      },\n                      className: \"topic-button\",\n                      disabled: isLoading,\n                      children: topic\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 31\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 29\n                  }, this)) : defaultRelatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        if (topic !== lastProcessedQuery && topic !== query && !isLoading) {\n                          console.log('User explicit search from related topic:', topic);\n                          setLastProcessedQuery(topic);\n                          onNewSearch(topic);\n                        }\n                      },\n                      className: \"topic-button\",\n                      disabled: isLoading,\n                      children: topic\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 585,\n                      columnNumber: 31\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"resources-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Useful Resources\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"resources-list\",\n                  children: isTestQuery ? dummyTestData.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: resource.url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: resource.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 31\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 29\n                  }, this)) : defaultResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: resource.url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: resource.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 31\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        /* No results message */\n        _jsxDEV(\"div\", {\n          className: \"no-results-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No results to display. Try searching for something else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n      isOpen: isUploadModalOpen,\n      onClose: () => setIsUploadModalOpen(false),\n      onAnalysisComplete: handleAnalysisComplete,\n      title: \"Upload Image\",\n      subtitle: \"Upload images for analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"DNWvTMRvPa4sCOvyMcZEq1BDoQg=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","searchCache","ImageUploadModal","MultiAuthLogin","ResultQualityPie","NutritionChart","NovaChart","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRelatedTopics","defaultResources","text","url","dummyTestData","query","healthInfo","relatedTopics","resources","convertLinksToClickable","content","message","details","JSON","stringify","String","urlRegex","parts","split","map","part","index","match","href","target","rel","style","color","textDecoration","children","fileName","_jsxFileName","lineNumber","columnNumber","SearchResults","results","onBackToSearch","onNewSearch","isLoading","dataSource","citations","_s","input","setInput","image","setImage","currentPhotoId","setCurrentPhotoId","newQuery","setNewQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","notification","setNotification","isUploadLoading","setUploadLoading","lastProcessedQuery","setLastProcessedQuery","recognitionRef","hasValidResults","trim","setCachedResult","window","location","document","body","classList","add","remove","startsWith","URL","revokeObjectURL","timer","setTimeout","clearTimeout","handleTextSubmit","e","preventDefault","trimmedQuery","console","log","handleVoiceInput","alert","current","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","transcript","onerror","onend","start","stop","handleImageUpload","_e$target$files","file","files","name","handleClearAll","searchInput","querySelector","handleKeyPress","key","handleCameraClick","handleAnalysisComplete","foodName","handleDrop","Array","from","dataTransfer","imageFile","find","type","handleDragOver","handleNewSearchSubmit","isTestQuery","toLowerCase","className","position","top","right","zIndex","overlay","onSubmit","placeholder","value","onChange","onKeyDown","shiftKey","rows","resize","overflow","onInput","container","closest","height","hasOverflow","scrollHeight","Math","min","onClick","viewBox","fill","d","nutrition","parse","found","calories_per_serving","protein_g","carbs_g","fat_g","nova_classification","nova_description","processed_level","fontSize","background","padding","marginBottom","topic","disabled","resource","isOpen","onClose","onAnalysisComplete","title","subtitle","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/SearchResults.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { searchCache } from './services/searchCache';\r\nimport { photoStorageService } from './services/photoStorageService';\r\nimport { foodAnalysisService } from './components/foodAnalysisService';\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport MultiAuthLogin from './components/MultiAuthLogin';\r\nimport ResultQualityPie from './components/ResultQualityPie';\r\nimport NutritionChart from './components/NutritionChart';\r\nimport NovaChart from './components/NovaChart';\r\nimport './VHealthSearch.css';\r\nimport Spinner from './components/Spinner';\r\n\r\n/* Define default topics and resources */\r\nconst defaultRelatedTopics = [\r\n  \"Nutrition and Diet Guidelines\",\r\n  \"Exercise and Physical Activity\", \r\n  \"Mental Health and Wellness\",\r\n  \"Preventive Care and Screenings\",\r\n  \"Chronic Disease Management\",\r\n  \"Healthy Lifestyle Choices\"\r\n];\r\n\r\nconst defaultResources = [\r\n  { text: \"Nutrition ED - Learn More\", url: \"https://vowels.com\" },\r\n  { text: \"Nutrition 101\", url: \"https://members.vowels.com\" },\r\n  { text: \"The World Counts\", url: \"https://www.theworldcounts.com/\" }\r\n];\r\n\r\n// Define the dummy data for \"test\" queries\r\nconst dummyTestData = {\r\n  query: \"test\",\r\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\r\n\r\n**Recommendations:**\r\n• Consult healthcare professionals for personalized medical advice\r\n• Verify information with your doctor or medical provider\r\n• Follow evidence-based medical guidelines\r\n• Seek regular medical check-ups and screenings\r\n\r\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\r\n\r\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\r\n  relatedTopics: [\r\n    \"Nutrition and Diet Guidelines\",\r\n    \"Exercise and Physical Activity\", \r\n    \"Mental Health and Wellness\",\r\n    \"Preventive Care and Screenings\",\r\n    \"Chronic Disease Management\",\r\n    \"Healthy Lifestyle Choices\"\r\n  ],\r\n  resources: [\r\n    { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"#\" },\r\n    { text: \"🏥 CDC - Health Guidelines\", url: \"#\" },\r\n    { text: \"🌍 WHO - Global Health Information\", url: \"#\" }\r\n  ]\r\n};\r\n\r\n// Update the SearchResultsProps interface to include the new properties\r\ninterface SearchResultsProps {\r\n  query: string;\r\n  results: string;\r\n  onBackToSearch: () => void;\r\n  onNewSearch: (query: string) => void;\r\n  isLoading: boolean;\r\n  dataSource: \"error\" | \"openai\" | \"local\" | \"vnutrition\";\r\n  citations?: string[];\r\n  recommendations?: string[];\r\n  disclaimer?: string;\r\n}\r\n\r\n// Add this function before the SearchResults component\r\nconst convertLinksToClickable = (text: any): React.ReactNode => {\r\n  // Handle non-string inputs\r\n  if (!text) return null;\r\n  \r\n  // If text is not a string, convert it to string first\r\n  if (typeof text !== 'string') {\r\n    // If it's an object, try to stringify it or extract meaningful content\r\n    if (typeof text === 'object') {\r\n      // If it has specific properties we can use\r\n      if (text.content) {\r\n        text = text.content;\r\n      } else if (text.message) {\r\n        text = text.message;\r\n      } else if (text.details) {\r\n        text = text.details;\r\n      } else {\r\n        // Last resort - stringify the object\r\n        text = JSON.stringify(text);\r\n      }\r\n    } else {\r\n      // Convert other types to string\r\n      text = String(text);\r\n    }\r\n  }\r\n\r\n  // Now we're sure text is a string, proceed with original logic\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  const parts = text.split(urlRegex);\r\n  \r\n  return parts.map((part: string, index: number) => {\r\n    if (part.match(urlRegex)) {\r\n      return (\r\n        <a \r\n          key={index} \r\n          href={part} \r\n          target=\"_blank\" \r\n          rel=\"noopener noreferrer\"\r\n          style={{ color: '#2563eb', textDecoration: 'underline' }}\r\n        >\r\n          {part}\r\n        </a>\r\n      );\r\n    }\r\n    return part;\r\n  });\r\n};\r\n\r\nconst SearchResults: React.FC<SearchResultsProps> = ({ \r\n  query, \r\n  results, \r\n  onBackToSearch,\r\n  onNewSearch,\r\n  isLoading = false,\r\n  dataSource,\r\n  citations\r\n}) => {\r\n  const [input, setInput] = useState('');\r\n  const [image, setImage] = useState<File | string | null>(null);\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [newQuery, setNewQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [notification, setNotification] = useState<{message: string, type: string} | null>(null);\r\n  const [isUploadLoading, setUploadLoading] = useState(false);\r\n  const [lastProcessedQuery, setLastProcessedQuery] = useState<string>('');\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // Check if we have valid results to display\r\n  const hasValidResults = results && results.trim() !== '' && !isLoading;\r\n  \r\n  // Cache results when they change\r\n  useEffect(() => {\r\n    if (query && results && !isLoading) {\r\n      searchCache.setCachedResult(query, results, window.location.href);\r\n    }\r\n  }, [query, results, isLoading]);\r\n\r\n  // Add effect to manage body class when modal opens/closes\r\n  useEffect(() => {\r\n    if (isUploadModalOpen) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      document.body.classList.remove('modal-open');\r\n    };\r\n  }, [isUploadModalOpen]);\r\n\r\n  // Add cleanup effect\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typeof image === 'string' && image.startsWith('blob:')) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [image]);\r\n\r\n  // Add this effect\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Handle new search submission - only allow if user explicitly searches from results page\r\n  const handleTextSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim() || isLoading) return;\r\n    \r\n    const trimmedQuery = input.trim();\r\n    \r\n    // Prevent duplicate searches\r\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\r\n      console.log('Preventing duplicate search for:', trimmedQuery);\r\n      return;\r\n    }\r\n    \r\n    setLastProcessedQuery(trimmedQuery);\r\n    onNewSearch(trimmedQuery);\r\n    setInput(''); // Clear input after search\r\n  };\r\n\r\n  // Handle voice input\r\n  const handleVoiceInput = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (!recognitionRef.current) {\r\n      const recognition = new (window as any).webkitSpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      recognition.lang = 'en-US';\r\n\r\n      recognition.onstart = () => {\r\n        setIsListening(true);\r\n      };\r\n\r\n      recognition.onresult = (event: any) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setNewQuery(transcript); // Update the input field\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onerror = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    }\r\n\r\n    if (!isListening) {\r\n      recognitionRef.current.start();\r\n    } else {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setImage(file);\r\n      console.log(`Image uploaded: ${file.name}`);\r\n    }\r\n  };\r\n\r\n  // Clear all search items\r\n  const handleClearAll = () => {\r\n    setInput('');\r\n    setNewQuery(''); // <-- Add this line\r\n    setImage(null);\r\n    setCurrentPhotoId(null);\r\n    setIsListening(false);\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n    }\r\n    \r\n    // Remove CSS class\r\n    const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n    if (searchInput) {\r\n      searchInput.classList.remove('with-image');\r\n    }\r\n  };\r\n\r\n  // Handle Enter key press\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleTextSubmit(e as any);\r\n    }\r\n  };\r\n\r\n  // Photo modal handlers\r\n  const handleCameraClick = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  // Simple handler that just triggers a new search - only when user explicitly requests it\r\n  const handleAnalysisComplete = (foodName: string) => {\r\n    if (foodName && foodName !== lastProcessedQuery && foodName !== query) {\r\n      console.log('User explicit search from image analysis:', foodName);\r\n      setNewQuery(foodName);\r\n      setLastProcessedQuery(foodName);\r\n      onNewSearch(foodName);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    if (imageFile) {\r\n      // Instead of calling handleFileSelect, open the modal and let it handle the file\r\n      setIsUploadModalOpen(true);\r\n      // You could also trigger the analysis directly if you want immediate processing\r\n      // But it's cleaner to let the user see the modal and confirm\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewSearchSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newQuery.trim() || isLoading) return;\r\n    \r\n    const trimmedQuery = newQuery.trim();\r\n    \r\n    // Prevent duplicate searches\r\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\r\n      console.log('Preventing duplicate search for:', trimmedQuery);\r\n      return;\r\n    }\r\n    \r\n    console.log('User explicit search from new query:', trimmedQuery);\r\n    setLastProcessedQuery(trimmedQuery);\r\n    onNewSearch(trimmedQuery);\r\n    setNewQuery(''); // Reset after search\r\n  };\r\n\r\n  // Update last processed query when props change\r\n  useEffect(() => {\r\n    if (query && query !== lastProcessedQuery) {\r\n      setLastProcessedQuery(query);\r\n    }\r\n  }, [query]);\r\n\r\n  // Check if current query is \"test\" to show dummy data styles\r\n  const isTestQuery = query.toLowerCase().trim() === 'test';\r\n\r\n  return (\r\n    <div className={`results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`}>\r\n      {/* Login button - always visible */}\r\n      <div style={{\r\n  position: 'fixed',\r\n  top: '20px',\r\n  right: '20px',\r\n  zIndex: 1000\r\n}}>\r\n  <MultiAuthLogin className=\"results-login-button\" />\r\n</div>\r\n\r\n      {/* ONLY show loading spinner when loading - hide EVERYTHING else */}\r\n      {isLoading ? (\r\n        <Spinner overlay message=\"Searching.......\" />\r\n      ) : (\r\n        /* ONLY show content when NOT loading */\r\n        <>\r\n          {/* Search header */}\r\n          <div className=\"results-search-header\">\r\n  <div className=\"search-input-container\">\r\n    <form onSubmit={handleNewSearchSubmit}>\r\n      <textarea\r\n        placeholder=\"Ask anything about health...\"\r\n        value={newQuery}\r\n        onChange={(e) => setNewQuery(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleNewSearchSubmit(e as any);\r\n          }\r\n        }}\r\n        className=\"search-input results-search-input\"\r\n        data-query={isTestQuery ? 'test' : ''}\r\n        rows={1}\r\n        style={{\r\n          resize: 'none',\r\n          overflow: 'hidden'\r\n        }}\r\n        onInput={(e) => {\r\n          const target = e.target as HTMLTextAreaElement;\r\n          const container = target.closest('.search-input-container') as HTMLElement;\r\n          \r\n          // Reset height to measure content\r\n          target.style.height = '44px';\r\n          target.classList.remove('expanded');\r\n          \r\n          // Check if content needs wrapping\r\n          const hasOverflow = target.scrollHeight > 44;\r\n          \r\n          if (hasOverflow) {\r\n            target.classList.add('expanded');\r\n            target.style.height = Math.min(target.scrollHeight, 120) + 'px';\r\n          }\r\n        }}\r\n      />\r\n    </form>\r\n    \r\n    {/* Image preview */}\r\n    {image && (\r\n      <div className=\"image-preview\">\r\n        <div className=\"image-icon\">📷</div>\r\n        <span className=\"image-name\">\r\n          {typeof image === 'object' && image !== null ? image.name : 'Uploaded image'}\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setImage(null);\r\n            setCurrentPhotoId(null);\r\n            const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n            if (searchInput) {\r\n              searchInput.classList.remove('with-image');\r\n            }\r\n          }}\r\n          className=\"remove-image\"\r\n          aria-label=\"Remove image\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n    )}\r\n    \r\n    <div className=\"search-icons\">\r\n      {(newQuery || image) && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleClearAll}\r\n          className=\"icon-button clear-button\"\r\n          aria-label=\"Clear all\"\r\n        >\r\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n          </svg>\r\n        </button>\r\n      )}\r\n      \r\n      <button\r\n        type=\"button\"\r\n        onClick={handleCameraClick}\r\n        className=\"icon-button\"\r\n        aria-label=\"Upload image\"\r\n      >\r\n        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n          <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n        </svg>\r\n      </button>\r\n      \r\n      <button\r\n        type=\"button\"\r\n        onClick={handleVoiceInput}\r\n        className={`icon-button ${isListening ? 'listening' : ''}`}\r\n        aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n      >\r\n        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n          <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n          <path d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"/>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n          {/* Results Container - ONLY when NOT loading */}\r\n          <div className=\"results-container\">\r\n            {hasValidResults ? (\r\n              <>\r\n                <h1 className=\"results-header\">Search Results for: \"{query}\"</h1>\r\n                \r\n                <div className=\"results-content\">\r\n                  {/* Main content */}\r\n                  <div className=\"health-info-card\">\r\n                    <div className=\"health-info-content\">\r\n                      <div className=\"markdown-content\">\r\n                        {dataSource === 'vnutrition' ? (\r\n                          (() => {\r\n                            let nutrition;\r\n                            try {\r\n                              nutrition = typeof results === 'string' ? JSON.parse(results) : results;\r\n                              console.log('Raw nutrition object for debugging:', nutrition);\r\n                              \r\n                              if (nutrition && nutrition.found !== false) {\r\n                                return (\r\n                                  <div>\r\n                                    <h3>Nutrition Information</h3>\r\n                                    <ul>\r\n                                      <li>Calories per serving: {nutrition.calories_per_serving || 0}</li>\r\n                                      <li>Protein: {nutrition.protein_g || 0}g</li>\r\n                                      <li>Carbs: {nutrition.carbs_g || 0}g</li>\r\n                                      <li>Fat: {nutrition.fat_g || 0}g</li>\r\n                                      <li>NOVA Score: {nutrition.nova_classification || 1}</li>\r\n                                      <li>Processing Level: {nutrition.nova_description || nutrition.processed_level || 'Unknown'}</li>\r\n                                    </ul>\r\n                                  </div>\r\n                                );\r\n                              } else {\r\n                                return (\r\n                                  <div>\r\n                                    <h3>Raw Database Data (Debug)</h3>\r\n                                    <pre style={{ fontSize: '12px', background: '#f5f5f5', padding: '10px' }}>\r\n                                      {JSON.stringify(nutrition, null, 2)}\r\n                                    </pre>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                            } catch {\r\n                              return <div>Error parsing nutrition data</div>;\r\n                            }\r\n                          })()\r\n                        ) : (\r\n                          convertLinksToClickable(results)\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"data-source-indicator\">\r\n                      {dataSource === 'openai' ? (\r\n                        <span>Powered by AI</span>\r\n                      ) : dataSource === 'error' ? (\r\n                        <span className=\"error-source\">Error retrieving data</span>\r\n                      ) : (\r\n                        <span>What Is Healthy?</span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Sidebar - ONLY when NOT loading and we have results */}\r\n                  <div className=\"sidebar\">\r\n                    {/* Quality Chart */}\r\n                    <div className=\"quality-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                      <ResultQualityPie \r\n                        query={query || ''} \r\n                        results={results || ''}\r\n                        dataSource={dataSource || 'openai'}\r\n                        citations={citations || []}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Nutrition Charts - Only show when we have nutrition data */}\r\n                    {dataSource === 'vnutrition' && (\r\n                      <>\r\n                        <div className=\"nutrition-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                          <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                            Nutrition Breakdown\r\n                          </h3>\r\n                          <NutritionChart \r\n                            query={query}\r\n                            results={results}\r\n                            dataSource={dataSource}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"nova-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                          <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                            Processing Level (NOVA Score)\r\n                          </h3>\r\n                          <NovaChart \r\n                            query={query}\r\n                            results={results}\r\n                            dataSource={dataSource}\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    \r\n                    {/* Related Topics */}\r\n                    <div className=\"related-topics-card\">\r\n                      <h3>Related Health Topics</h3>\r\n                      <ul className=\"related-topics-list\">\r\n                        {isTestQuery ? (\r\n                          dummyTestData.relatedTopics.map((topic, index) => (\r\n                            <li key={index}>\r\n                              <button \r\n                                onClick={() => {\r\n                                  if (topic !== lastProcessedQuery && topic !== query && !isLoading) {\r\n                                    console.log('User explicit search from related topic:', topic);\r\n                                    setLastProcessedQuery(topic);\r\n                                    onNewSearch(topic);\r\n                                  }\r\n                                }}\r\n                                className=\"topic-button\"\r\n                                disabled={isLoading}\r\n                              >\r\n                                {topic}\r\n                              </button>\r\n                            </li>\r\n                          ))\r\n                        ) : (\r\n                          defaultRelatedTopics.map((topic, index) => (\r\n                            <li key={index}>\r\n                              <button \r\n                                onClick={() => {\r\n                                  if (topic !== lastProcessedQuery && topic !== query && !isLoading) {\r\n                                    console.log('User explicit search from related topic:', topic);\r\n                                    setLastProcessedQuery(topic);\r\n                                    onNewSearch(topic);\r\n                                  }\r\n                                }}\r\n                                className=\"topic-button\"\r\n                                disabled={isLoading}\r\n                              >\r\n                                {topic}\r\n                              </button>\r\n                            </li>\r\n                          ))\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n                    \r\n                    {/* Resources */}\r\n                    <div className=\"resources-card\">\r\n                      <h3>Useful Resources</h3>\r\n                      <ul className=\"resources-list\">\r\n                        {isTestQuery ? (\r\n                          dummyTestData.resources.map((resource, index) => (\r\n                            <li key={index}>\r\n                              <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {resource.text}\r\n                              </a>\r\n                            </li>\r\n                          ))\r\n                        ) : (\r\n                          defaultResources.map((resource, index) => (\r\n                            <li key={index}>\r\n                              <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {resource.text}\r\n                              </a>\r\n                            </li>\r\n                          ))\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              /* No results message */\r\n              <div className=\"no-results-message\">\r\n                <p>No results to display. Try searching for something else.</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* ImageUploadModal - always available */}\r\n      <ImageUploadModal\r\n        isOpen={isUploadModalOpen}\r\n        onClose={() => setIsUploadModalOpen(false)}\r\n        onAnalysisComplete={handleAnalysisComplete}\r\n        title=\"Upload Image\"\r\n        subtitle=\"Upload images for analysis\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}