{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { ArgumentException, BinaryBitmap, ChecksumException, DecodeHintType, FormatException, HybridBinarizer, NotFoundException } from '@zxing/library';\nimport { HTMLCanvasElementLuminanceSource } from '../common/HTMLCanvasElementLuminanceSource';\nimport { canEnumerateDevices, hasNavigator } from '../common/navigator-utils';\nvar defaultOptions = {\n  delayBetweenScanAttempts: 500,\n  delayBetweenScanSuccess: 500,\n  tryPlayVideoTimeout: 5000\n};\n/**\n * Base class for browser code reader.\n */\nvar BrowserCodeReader = /** @class */function () {\n  /**\n   * Creates an instance of BrowserCodeReader.\n   * @param {Reader} reader The reader instance to decode the barcode\n   * @param hints Holds the hints the user sets for the Reader.\n   */\n  function BrowserCodeReader(reader, hints, options) {\n    if (hints === void 0) {\n      hints = new Map();\n    }\n    if (options === void 0) {\n      options = {};\n    }\n    this.reader = reader;\n    this.hints = hints;\n    this.options = __assign(__assign({}, defaultOptions), options);\n  }\n  Object.defineProperty(BrowserCodeReader.prototype, \"possibleFormats\", {\n    /**\n     * Allows to change the possible formats the decoder should\n     * search for while scanning some image. Useful for changing\n     * the possible formats during BrowserCodeReader::scan.\n     */\n    set: function (formats) {\n      this.hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Defines what the videoElement src will be.\n   *\n   * @param videoElement\n   * @param stream The stream to be added as a source.\n   */\n  BrowserCodeReader.addVideoSource = function (videoElement, stream) {\n    // Older browsers may not have `srcObject`\n    try {\n      // @note Throws Exception if interrupted by a new loaded request\n      videoElement.srcObject = stream;\n    } catch (err) {\n      console.error(\"got interrupted by new loading request\");\n    }\n  };\n  /**\n   * Enables or disables the torch in a media stream.\n   *\n   * @experimental This doesn't work across all browsers and is still a Draft.\n   */\n  BrowserCodeReader.mediaStreamSetTorch = function (track, onOff) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, track.applyConstraints({\n              advanced: [{\n                fillLightMode: onOff ? 'flash' : 'off',\n                torch: onOff ? true : false\n              }]\n            })];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Checks if the stream has torch support.\n   */\n  BrowserCodeReader.mediaStreamIsTorchCompatible = function (params) {\n    var e_1, _a;\n    var tracks = params.getVideoTracks();\n    try {\n      for (var tracks_1 = __values(tracks), tracks_1_1 = tracks_1.next(); !tracks_1_1.done; tracks_1_1 = tracks_1.next()) {\n        var track = tracks_1_1.value;\n        if (BrowserCodeReader.mediaStreamIsTorchCompatibleTrack(track)) {\n          return true;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (tracks_1_1 && !tracks_1_1.done && (_a = tracks_1.return)) _a.call(tracks_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return false;\n  };\n  /**\n   *\n   * @param track The media stream track that will be checked for compatibility.\n   */\n  BrowserCodeReader.mediaStreamIsTorchCompatibleTrack = function (track) {\n    try {\n      var capabilities = track.getCapabilities();\n      return 'torch' in capabilities;\n    } catch (err) {\n      // some browsers may not be compatible with ImageCapture\n      // so we are ignoring this for now.\n      // tslint:disable-next-line:no-console\n      console.error(err);\n      // tslint:disable-next-line:no-console\n      console.warn('Your browser may be not fully compatible with WebRTC and/or ImageCapture specs. Torch will not be available.');\n      return false;\n    }\n  };\n  /**\n   * Checks if the given video element is currently playing.\n   */\n  BrowserCodeReader.isVideoPlaying = function (video) {\n    return video.currentTime > 0 && !video.paused && video.readyState > 2;\n  };\n  /**\n   * Searches and validates a media element.\n   */\n  BrowserCodeReader.getMediaElement = function (mediaElementId, type) {\n    var mediaElement = document.getElementById(mediaElementId);\n    if (!mediaElement) {\n      throw new ArgumentException(\"element with id '\".concat(mediaElementId, \"' not found\"));\n    }\n    if (mediaElement.nodeName.toLowerCase() !== type.toLowerCase()) {\n      throw new ArgumentException(\"element with id '\".concat(mediaElementId, \"' must be an \").concat(type, \" element\"));\n    }\n    return mediaElement;\n  };\n  /**\n   * Receives a source and makes sure to return a Video Element from it or fail.\n   */\n  BrowserCodeReader.createVideoElement = function (videoThingy) {\n    if (videoThingy instanceof HTMLVideoElement) {\n      return videoThingy;\n    }\n    if (typeof videoThingy === 'string') {\n      return BrowserCodeReader.getMediaElement(videoThingy, 'video');\n    }\n    if (!videoThingy && typeof document !== 'undefined') {\n      var videoElement = document.createElement('video');\n      videoElement.width = 200;\n      videoElement.height = 200;\n      return videoElement;\n    }\n    throw new Error('Couldn\\'t get videoElement from videoSource!');\n  };\n  /**\n   * Receives a source and makes sure to return an Image Element from it or fail.\n   */\n  BrowserCodeReader.prepareImageElement = function (imageSource) {\n    if (imageSource instanceof HTMLImageElement) {\n      return imageSource;\n    }\n    if (typeof imageSource === 'string') {\n      return BrowserCodeReader.getMediaElement(imageSource, 'img');\n    }\n    if (typeof imageSource === 'undefined') {\n      var imageElement = document.createElement('img');\n      imageElement.width = 200;\n      imageElement.height = 200;\n      return imageElement;\n    }\n    throw new Error('Couldn\\'t get imageElement from imageSource!');\n  };\n  /**\n   * Sets a HTMLVideoElement for scanning or creates a new one.\n   *\n   * @param videoElem The HTMLVideoElement to be set.\n   */\n  BrowserCodeReader.prepareVideoElement = function (videoElem) {\n    var videoElement = BrowserCodeReader.createVideoElement(videoElem);\n    // @todo the following lines should not always be done this way, should conditionally\n    // change according were we created the element or not\n    // Needed for iOS 11\n    videoElement.setAttribute('autoplay', 'true');\n    videoElement.setAttribute('muted', 'true');\n    videoElement.setAttribute('playsinline', 'true');\n    return videoElement;\n  };\n  /**\n   * Checks if and HTML image is loaded.\n   */\n  BrowserCodeReader.isImageLoaded = function (img) {\n    // During the onload event, IE correctly identifies any images that\n    // weren't downloaded as not complete. Others should too. Gecko-based\n    // browsers act like NS4 in that they report this incorrectly.\n    if (!img.complete) {\n      return false;\n    }\n    // However, they do have two very useful properties: naturalWidth and\n    // naturalHeight. These give the true size of the image. If it failed\n    // to load, either of these should be zero.\n    if (img.naturalWidth === 0) {\n      return false;\n    }\n    // No other way of checking: assume it’s ok.\n    return true;\n  };\n  /**\n   * Creates a binaryBitmap based in a canvas.\n   *\n   * @param canvas HTML canvas element containing the image source draw.\n   */\n  BrowserCodeReader.createBinaryBitmapFromCanvas = function (canvas) {\n    var luminanceSource = new HTMLCanvasElementLuminanceSource(canvas);\n    var hybridBinarizer = new HybridBinarizer(luminanceSource);\n    return new BinaryBitmap(hybridBinarizer);\n  };\n  /**\n   * Overwriting this allows you to manipulate the snapshot image in anyway you want before decode.\n   */\n  BrowserCodeReader.drawImageOnCanvas = function (canvasElementContext, srcElement) {\n    canvasElementContext.drawImage(srcElement, 0, 0);\n  };\n  BrowserCodeReader.getMediaElementDimensions = function (mediaElement) {\n    if (mediaElement instanceof HTMLVideoElement) {\n      return {\n        height: mediaElement.videoHeight,\n        width: mediaElement.videoWidth\n      };\n    }\n    if (mediaElement instanceof HTMLImageElement) {\n      return {\n        height: mediaElement.naturalHeight || mediaElement.height,\n        width: mediaElement.naturalWidth || mediaElement.width\n      };\n    }\n    throw new Error('Couldn\\'t find the Source\\'s dimensions!');\n  };\n  /**\n   * 🖌 Prepares the canvas for capture and scan frames.\n   */\n  BrowserCodeReader.createCaptureCanvas = function (mediaElement) {\n    if (!mediaElement) {\n      throw new ArgumentException('Cannot create a capture canvas without a media element.');\n    }\n    if (typeof document === 'undefined') {\n      throw new Error('The page \"Document\" is undefined, make sure you\\'re running in a browser.');\n    }\n    var canvasElement = document.createElement('canvas');\n    var _a = BrowserCodeReader.getMediaElementDimensions(mediaElement),\n      width = _a.width,\n      height = _a.height;\n    canvasElement.style.width = width + 'px';\n    canvasElement.style.height = height + 'px';\n    canvasElement.width = width;\n    canvasElement.height = height;\n    return canvasElement;\n  };\n  /**\n   * Just tries to play the video and logs any errors.\n   * The play call is only made is the video is not already playing.\n   */\n  BrowserCodeReader.tryPlayVideo = function (videoElement) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (videoElement === null || videoElement === void 0 ? void 0 : videoElement.ended) {\n              // tslint:disable-next-line:no-console\n              console.error('Trying to play video that has ended.');\n              return [2 /*return*/, false];\n            }\n            if (BrowserCodeReader.isVideoPlaying(videoElement)) {\n              // tslint:disable-next-line:no-console\n              console.warn('Trying to play video that is already playing.');\n              return [2 /*return*/, true];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, videoElement.play()];\n          case 2:\n            _a.sent();\n            return [2 /*return*/, true];\n          case 3:\n            error_1 = _a.sent();\n            // tslint:disable-next-line:no-console\n            console.warn('It was not possible to play the video.', error_1);\n            return [2 /*return*/, false];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Creates a canvas and draws the current image frame from the media element on it.\n   *\n   * @param mediaElement HTML media element to extract an image frame from.\n   */\n  BrowserCodeReader.createCanvasFromMediaElement = function (mediaElement) {\n    var canvas = BrowserCodeReader.createCaptureCanvas(mediaElement);\n    var ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Couldn\\'t find Canvas 2D Context.');\n    }\n    BrowserCodeReader.drawImageOnCanvas(ctx, mediaElement);\n    return canvas;\n  };\n  /**\n   * Creates a binaryBitmap based in some image source.\n   *\n   * @param mediaElement HTML element containing drawable image source.\n   */\n  BrowserCodeReader.createBinaryBitmapFromMediaElem = function (mediaElement) {\n    var canvas = BrowserCodeReader.createCanvasFromMediaElement(mediaElement);\n    return BrowserCodeReader.createBinaryBitmapFromCanvas(canvas);\n  };\n  BrowserCodeReader.destroyImageElement = function (imageElement) {\n    imageElement.src = '';\n    imageElement.removeAttribute('src');\n    imageElement = undefined;\n  };\n  /**\n   * Lists all the available video input devices.\n   */\n  BrowserCodeReader.listVideoInputDevices = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var devices, videoDevices, devices_1, devices_1_1, device, kind, deviceId, label, groupId, videoDevice;\n      var e_2, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!hasNavigator()) {\n              throw new Error('Can\\'t enumerate devices, navigator is not present.');\n            }\n            if (!canEnumerateDevices()) {\n              throw new Error('Can\\'t enumerate devices, method not supported.');\n            }\n            return [4 /*yield*/, navigator.mediaDevices.enumerateDevices()];\n          case 1:\n            devices = _b.sent();\n            videoDevices = [];\n            try {\n              for (devices_1 = __values(devices), devices_1_1 = devices_1.next(); !devices_1_1.done; devices_1_1 = devices_1.next()) {\n                device = devices_1_1.value;\n                kind = device.kind === 'video' ? 'videoinput' : device.kind;\n                if (kind !== 'videoinput') {\n                  continue;\n                }\n                deviceId = device.deviceId || device.id;\n                label = device.label || \"Video device \".concat(videoDevices.length + 1);\n                groupId = device.groupId;\n                videoDevice = {\n                  deviceId: deviceId,\n                  label: label,\n                  kind: kind,\n                  groupId: groupId\n                };\n                videoDevices.push(videoDevice);\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (devices_1_1 && !devices_1_1.done && (_a = devices_1.return)) _a.call(devices_1);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n            return [2 /*return*/, videoDevices];\n        }\n      });\n    });\n  };\n  /**\n   * Let's you find a device using it's Id.\n   */\n  BrowserCodeReader.findDeviceById = function (deviceId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var devices;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, BrowserCodeReader.listVideoInputDevices()];\n          case 1:\n            devices = _a.sent();\n            if (!devices) {\n              return [2 /*return*/];\n            }\n            return [2 /*return*/, devices.find(function (x) {\n              return x.deviceId === deviceId;\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Unbinds a HTML video src property.\n   */\n  BrowserCodeReader.cleanVideoSource = function (videoElement) {\n    if (!videoElement) {\n      return;\n    }\n    // forgets about that element 😢\n    try {\n      videoElement.srcObject = null;\n    } catch (err) {\n      videoElement.src = '';\n    }\n    if (videoElement) {\n      videoElement.removeAttribute('src');\n    }\n  };\n  /**\n   * Stops all media streams that are created.\n   */\n  BrowserCodeReader.releaseAllStreams = function () {\n    if (BrowserCodeReader.streamTracker.length !== 0) {\n      // tslint:disable-next-line:no-console\n      BrowserCodeReader.streamTracker.forEach(function (mediaStream) {\n        mediaStream.getTracks().forEach(function (track) {\n          return track.stop();\n        });\n      });\n    }\n    BrowserCodeReader.streamTracker = [];\n  };\n  /**\n   * Waits for a video to load and then hits play on it.\n   * To accomplish that, it binds listeners and callbacks to the video element.\n   *\n   * @param element The video element.\n   * @param callbackFn Callback invoked when the video is played.\n   */\n  BrowserCodeReader.playVideoOnLoadAsync = function (element, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n      var isPlaying;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, BrowserCodeReader.tryPlayVideo(element)];\n          case 1:\n            isPlaying = _a.sent();\n            if (isPlaying) {\n              return [2 /*return*/, true];\n            }\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              // waits 3 seconds or rejects.\n              var timeoutId = setTimeout(function () {\n                if (BrowserCodeReader.isVideoPlaying(element)) {\n                  // if video is playing then we had success, just ignore\n                  return;\n                }\n                reject(false);\n                element.removeEventListener('canplay', videoCanPlayListener);\n              }, timeout);\n              /**\n               * Should contain the current registered listener for video loaded-metadata,\n               * used to unregister that listener when needed.\n               */\n              var videoCanPlayListener = function () {\n                BrowserCodeReader.tryPlayVideo(element).then(function (hasPlayed) {\n                  clearTimeout(timeoutId);\n                  element.removeEventListener('canplay', videoCanPlayListener);\n                  resolve(hasPlayed);\n                });\n              };\n              // both should be unregistered after called\n              element.addEventListener('canplay', videoCanPlayListener);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Sets the new stream and request a new decoding-with-delay.\n   *\n   * @param stream The stream to be shown in the video element.\n   * @param decodeFn A callback for the decode method.\n   */\n  BrowserCodeReader.attachStreamToVideo = function (stream, preview, previewPlayTimeout) {\n    if (previewPlayTimeout === void 0) {\n      previewPlayTimeout = 5000;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var videoElement;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            videoElement = BrowserCodeReader.prepareVideoElement(preview);\n            BrowserCodeReader.addVideoSource(videoElement, stream);\n            return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(videoElement, previewPlayTimeout)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, videoElement];\n        }\n      });\n    });\n  };\n  /**\n   * Returns a Promise that resolves when the given image element loads.\n   */\n  BrowserCodeReader._waitImageLoad = function (element) {\n    return new Promise(function (resolve, reject) {\n      var timeout = 10000;\n      // waits 10 seconds or rejects.\n      var timeoutId = setTimeout(function () {\n        if (BrowserCodeReader.isImageLoaded(element)) {\n          // if video is playing then we had success, just ignore\n          return;\n        }\n        // removes the listener\n        element.removeEventListener('load', imageLoadedListener);\n        // rejects the load\n        reject();\n      }, timeout);\n      var imageLoadedListener = function () {\n        clearTimeout(timeoutId);\n        // removes the listener\n        element.removeEventListener('load', imageLoadedListener);\n        // resolves the load\n        resolve();\n      };\n      element.addEventListener('load', imageLoadedListener);\n    });\n  };\n  /**\n   * Checks if the `callbackFn` is defined, otherwise throws.\n   */\n  BrowserCodeReader.checkCallbackFnOrThrow = function (callbackFn) {\n    if (!callbackFn) {\n      throw new ArgumentException('`callbackFn` is a required parameter, you cannot capture results without it.');\n    }\n  };\n  /**\n   * Standard method to dispose a media stream object.\n   */\n  BrowserCodeReader.disposeMediaStream = function (stream) {\n    stream.getVideoTracks().forEach(function (x) {\n      return x.stop();\n    });\n    stream = undefined;\n  };\n  /**\n   * Gets the BinaryBitmap for ya! (and decodes it)\n   */\n  BrowserCodeReader.prototype.decode = function (element) {\n    // get binary bitmap for decode function\n    var canvas = BrowserCodeReader.createCanvasFromMediaElement(element);\n    return this.decodeFromCanvas(canvas);\n  };\n  /**\n   * Call the encapsulated readers decode\n   */\n  BrowserCodeReader.prototype.decodeBitmap = function (binaryBitmap) {\n    return this.reader.decode(binaryBitmap, this.hints);\n  };\n  /**\n   * Decodes some barcode from a canvas!\n   */\n  BrowserCodeReader.prototype.decodeFromCanvas = function (canvas) {\n    var binaryBitmap = BrowserCodeReader.createBinaryBitmapFromCanvas(canvas);\n    return this.decodeBitmap(binaryBitmap);\n  };\n  /**\n   * Decodes something from an image HTML element.\n   */\n  BrowserCodeReader.prototype.decodeFromImageElement = function (source) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!source) {\n              throw new ArgumentException('An image element must be provided.');\n            }\n            element = BrowserCodeReader.prepareImageElement(source);\n            return [4 /*yield*/, this._decodeOnLoadImage(element)];\n          case 1:\n            // onLoad will remove it's callback once done\n            // we do not need to dispose or destroy the image\n            // since it came from the user\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes an image from a URL.\n   */\n  BrowserCodeReader.prototype.decodeFromImageUrl = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!url) {\n              throw new ArgumentException('An URL must be provided.');\n            }\n            element = BrowserCodeReader.prepareImageElement();\n            // loads the image.\n            element.src = url;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1,, 3, 4]);\n            return [4 /*yield*/, this.decodeFromImageElement(element)];\n          case 2:\n            // it waits the task so we can destroy the created image after\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            // we created this element, so we destroy it\n            BrowserCodeReader.destroyImageElement(element);\n            return [7 /*endfinally*/];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Continuously tries to decode the barcode from a stream obtained from the given constraints\n   * while showing the video in the specified video element.\n   *\n   * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n   * @param {string|HTMLVideoElement} [previewElem] the video element in page where to show the video while\n   *  decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in\n   *  which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeFromConstraints = function (constraints, previewElem, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var stream, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            return [4 /*yield*/, this.getUserMedia(constraints)];\n          case 1:\n            stream = _a.sent();\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, this.decodeFromStream(stream, previewElem, callbackFn)];\n          case 3:\n            return [2 /*return*/, _a.sent()];\n          case 4:\n            error_2 = _a.sent();\n            BrowserCodeReader.disposeMediaStream(stream);\n            throw error_2;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * In one attempt, tries to decode the barcode from a stream obtained from the given constraints\n   * while showing the video in the specified video element.\n   *\n   * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n   * @param {string|HTMLVideoElement} [preview] the video element in page where to show the video\n   *  while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeFromStream = function (stream, preview, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var timeout, video, finalizeCallback, originalControls, videoTracks, controls, isTorchAvailable, torchTrack_1, switchTorch_1;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            timeout = this.options.tryPlayVideoTimeout;\n            return [4 /*yield*/, BrowserCodeReader.attachStreamToVideo(stream, preview, timeout)];\n          case 1:\n            video = _a.sent();\n            finalizeCallback = function () {\n              // stops video tracks and releases the stream reference\n              BrowserCodeReader.disposeMediaStream(stream);\n              // this video was just a preview, so in order\n              // to release the stream we gotta stop showing\n              // it (the stream) in the video element\n              BrowserCodeReader.cleanVideoSource(video);\n            };\n            originalControls = this.scan(video, callbackFn, finalizeCallback);\n            videoTracks = stream.getVideoTracks();\n            controls = __assign(__assign({}, originalControls), {\n              stop: function () {\n                originalControls.stop();\n              },\n              streamVideoConstraintsApply: function (constraints, trackFilter) {\n                return __awaiter(this, void 0, void 0, function () {\n                  var tracks, tracks_2, tracks_2_1, track, e_3_1;\n                  var e_3, _a;\n                  return __generator(this, function (_b) {\n                    switch (_b.label) {\n                      case 0:\n                        tracks = trackFilter ? videoTracks.filter(trackFilter) : videoTracks;\n                        _b.label = 1;\n                      case 1:\n                        _b.trys.push([1, 6, 7, 8]);\n                        tracks_2 = __values(tracks), tracks_2_1 = tracks_2.next();\n                        _b.label = 2;\n                      case 2:\n                        if (!!tracks_2_1.done) return [3 /*break*/, 5];\n                        track = tracks_2_1.value;\n                        return [4 /*yield*/, track.applyConstraints(constraints)];\n                      case 3:\n                        _b.sent();\n                        _b.label = 4;\n                      case 4:\n                        tracks_2_1 = tracks_2.next();\n                        return [3 /*break*/, 2];\n                      case 5:\n                        return [3 /*break*/, 8];\n                      case 6:\n                        e_3_1 = _b.sent();\n                        e_3 = {\n                          error: e_3_1\n                        };\n                        return [3 /*break*/, 8];\n                      case 7:\n                        try {\n                          if (tracks_2_1 && !tracks_2_1.done && (_a = tracks_2.return)) _a.call(tracks_2);\n                        } finally {\n                          if (e_3) throw e_3.error;\n                        }\n                        return [7 /*endfinally*/];\n                      case 8:\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              },\n              streamVideoConstraintsGet: function (trackFilter) {\n                return videoTracks.find(trackFilter).getConstraints();\n              },\n              streamVideoSettingsGet: function (trackFilter) {\n                return videoTracks.find(trackFilter).getSettings();\n              },\n              streamVideoCapabilitiesGet: function (trackFilter) {\n                return videoTracks.find(trackFilter).getCapabilities();\n              }\n            });\n            isTorchAvailable = BrowserCodeReader.mediaStreamIsTorchCompatible(stream);\n            if (isTorchAvailable) {\n              torchTrack_1 = videoTracks === null || videoTracks === void 0 ? void 0 : videoTracks.find(function (t) {\n                return BrowserCodeReader.mediaStreamIsTorchCompatibleTrack(t);\n              });\n              switchTorch_1 = function (onOff) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4 /*yield*/, BrowserCodeReader.mediaStreamSetTorch(torchTrack_1, onOff)];\n                      case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              };\n              controls.switchTorch = switchTorch_1;\n              controls.stop = function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        originalControls.stop();\n                        return [4 /*yield*/, switchTorch_1(false)];\n                      case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              };\n            }\n            return [2 /*return*/, controls];\n        }\n      });\n    });\n  };\n  /**\n   * Continuously tries to decode the barcode from the device specified by device while showing\n   * the video in the specified video element.\n   *\n   * @param {string|null} [deviceId] the id of one of the devices obtained after calling\n   *  getVideoInputDevices. Can be undefined, in this case it will decode from one of the\n   *  available devices, preferring the main camera (environment facing) if available.\n   * @param {string|HTMLVideoElement|null} [video] the video element in page where to show the video\n   *  while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeFromVideoDevice = function (deviceId, previewElem, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var videoConstraints, constraints;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            if (!deviceId) {\n              videoConstraints = {\n                facingMode: 'environment'\n              };\n            } else {\n              videoConstraints = {\n                deviceId: {\n                  exact: deviceId\n                }\n              };\n            }\n            constraints = {\n              video: videoConstraints\n            };\n            return [4 /*yield*/, this.decodeFromConstraints(constraints, previewElem, callbackFn)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes something from an image HTML element.\n   */\n  BrowserCodeReader.prototype.decodeFromVideoElement = function (source, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element, timeout;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            if (!source) {\n              throw new ArgumentException('A video element must be provided.');\n            }\n            element = BrowserCodeReader.prepareVideoElement(source);\n            timeout = this.options.tryPlayVideoTimeout;\n            // plays the video\n            return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(element, timeout)];\n          case 1:\n            // plays the video\n            _a.sent();\n            // starts decoding after played the video\n            return [2 /*return*/, this.scan(element, callbackFn)];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes a video from a URL until it ends.\n   */\n  BrowserCodeReader.prototype.decodeFromVideoUrl = function (url, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element, finalizeCallback, timeout, controls;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            if (!url) {\n              throw new ArgumentException('An URL must be provided.');\n            }\n            element = BrowserCodeReader.prepareVideoElement();\n            // starts loading the video\n            element.src = url;\n            finalizeCallback = function () {\n              // dispose created video element\n              BrowserCodeReader.cleanVideoSource(element);\n            };\n            timeout = this.options.tryPlayVideoTimeout;\n            // plays the video\n            return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(element, timeout)];\n          case 1:\n            // plays the video\n            _a.sent();\n            controls = this.scan(element, callbackFn, finalizeCallback);\n            return [2 /*return*/, controls];\n        }\n      });\n    });\n  };\n  /**\n   * In one attempt, tries to decode the barcode from a stream obtained from the given\n   * constraints while showing the video in the specified video element.\n   *\n   * @param constraints the media stream constraints to get s valid media stream to decode from\n   * @param videoSource the video element in page where to show the video while decoding.\n   *  Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   *  The decoding result.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromConstraints = function (constraints, videoSource) {\n    return __awaiter(this, void 0, void 0, function () {\n      var stream;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getUserMedia(constraints)];\n          case 1:\n            stream = _a.sent();\n            return [4 /*yield*/, this.decodeOnceFromStream(stream, videoSource)];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * In one attempt, tries to decode the barcode from a stream obtained from the given\n   * constraints while showing the video in the specified video element.\n   *\n   * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n   * @param {string|HTMLVideoElement} [video] the video element in page where to show the video while decoding.\n   *  Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromStream = function (stream, preview) {\n    return __awaiter(this, void 0, void 0, function () {\n      var receivedPreview, video, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            receivedPreview = Boolean(preview);\n            return [4 /*yield*/, BrowserCodeReader.attachStreamToVideo(stream, preview)];\n          case 1:\n            video = _a.sent();\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2,, 4, 5]);\n            return [4 /*yield*/, this.scanOneResult(video)];\n          case 3:\n            result = _a.sent();\n            return [2 /*return*/, result];\n          case 4:\n            if (!receivedPreview) {\n              BrowserCodeReader.cleanVideoSource(video);\n            }\n            return [7 /*endfinally*/];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * In one attempt, tries to decode the barcode from the device specified by deviceId\n   * while showing the video in the specified video element.\n   *\n   * @param deviceId the id of one of the devices obtained after calling getVideoInputDevices.\n   *  Can be undefined, in this case it will decode from one of the available devices,\n   *  preferring the main camera (environment facing) if available.\n   * @param videoSource the video element in page where to show the video while decoding.\n   *  Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromVideoDevice = function (deviceId, videoSource) {\n    return __awaiter(this, void 0, void 0, function () {\n      var videoConstraints, constraints;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!deviceId) {\n              videoConstraints = {\n                facingMode: 'environment'\n              };\n            } else {\n              videoConstraints = {\n                deviceId: {\n                  exact: deviceId\n                }\n              };\n            }\n            constraints = {\n              video: videoConstraints\n            };\n            return [4 /*yield*/, this.decodeOnceFromConstraints(constraints, videoSource)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes something from an image HTML element.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromVideoElement = function (source) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element, timeout;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!source) {\n              throw new ArgumentException('A video element must be provided.');\n            }\n            element = BrowserCodeReader.prepareVideoElement(source);\n            timeout = this.options.tryPlayVideoTimeout;\n            // plays the video\n            return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(element, timeout)];\n          case 1:\n            // plays the video\n            _a.sent();\n            return [4 /*yield*/, this.scanOneResult(element)];\n          case 2:\n            // starts decoding after played the video\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes a video from a URL.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromVideoUrl = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element, task;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!url) {\n              throw new ArgumentException('An URL must be provided.');\n            }\n            element = BrowserCodeReader.prepareVideoElement();\n            // starts loading the video\n            element.src = url;\n            task = this.decodeOnceFromVideoElement(element);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1,, 3, 4]);\n            return [4 /*yield*/, task];\n          case 2:\n            // it waits the task so we can destroy the created image after\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            // we created this element, so we destroy it\n            BrowserCodeReader.cleanVideoSource(element);\n            return [7 /*endfinally*/];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Tries to decode from the video input until it finds some value.\n   */\n  BrowserCodeReader.prototype.scanOneResult = function (element, retryIfNotFound, retryIfChecksumError, retryIfFormatError) {\n    var _this = this;\n    if (retryIfNotFound === void 0) {\n      retryIfNotFound = true;\n    }\n    if (retryIfChecksumError === void 0) {\n      retryIfChecksumError = true;\n    }\n    if (retryIfFormatError === void 0) {\n      retryIfFormatError = true;\n    }\n    return new Promise(function (resolve, reject) {\n      // reuses the scan API, but returns at the first successful result\n      _this.scan(element, function (result, error, controls) {\n        if (result) {\n          // good result, returning\n          resolve(result);\n          controls.stop();\n          return;\n        }\n        if (error) {\n          // checks if it should retry\n          if (error instanceof NotFoundException && retryIfNotFound) {\n            return;\n          }\n          if (error instanceof ChecksumException && retryIfChecksumError) {\n            return;\n          }\n          if (error instanceof FormatException && retryIfFormatError) {\n            return;\n          }\n          // not re-trying\n          controls.stop(); // stops scan loop\n          reject(error); // returns the error\n        }\n      });\n    });\n  };\n  /**\n   * Continuously decodes from video input.\n   *\n   * @param element HTML element to scan/decode from. It will not be disposed or destroyed.\n   * @param callbackFn Called after every scan attempt, being it successful or errored.\n   * @param finalizeCallback Called after scan process reaches the end or stop is called.\n   */\n  BrowserCodeReader.prototype.scan = function (element, callbackFn, finalizeCallback) {\n    var _this = this;\n    BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n    /**\n     * The HTML canvas element, used to draw the video or image's frame for decoding.\n     */\n    var captureCanvas = BrowserCodeReader.createCaptureCanvas(element);\n    /**\n     * The HTML canvas element context.\n     */\n    var captureCanvasContext;\n    try {\n      captureCanvasContext = captureCanvas.getContext('2d', {\n        willReadFrequently: true\n      });\n    } catch (e) {\n      captureCanvasContext = captureCanvas.getContext('2d');\n    }\n    // cannot proceed w/o this\n    if (!captureCanvasContext) {\n      throw new Error('Couldn\\'t create canvas for visual element scan.');\n    }\n    var disposeCanvas = function () {\n      captureCanvasContext = undefined;\n      captureCanvas = undefined;\n    };\n    var stopScan = false;\n    var lastTimeoutId;\n    // can be called to break the scan loop\n    var stop = function () {\n      stopScan = true;\n      clearTimeout(lastTimeoutId);\n      disposeCanvas();\n      if (finalizeCallback) {\n        finalizeCallback();\n      }\n    };\n    // created for extensibility\n    var controls = {\n      stop: stop\n    };\n    // this async loop allows infinite (or almost? maybe) scans\n    var loop = function () {\n      if (stopScan) {\n        // no need to clear timeouts as none was create yet in this scope.\n        return;\n      }\n      try {\n        BrowserCodeReader.drawImageOnCanvas(captureCanvasContext, element);\n        var result = _this.decodeFromCanvas(captureCanvas);\n        callbackFn(result, undefined, controls);\n        lastTimeoutId = setTimeout(loop, _this.options.delayBetweenScanSuccess);\n      } catch (error) {\n        callbackFn(undefined, error, controls);\n        var isChecksumError = error instanceof ChecksumException;\n        var isFormatError = error instanceof FormatException;\n        var isNotFound = error instanceof NotFoundException;\n        if (isChecksumError || isFormatError || isNotFound) {\n          // trying again\n          lastTimeoutId = setTimeout(loop, _this.options.delayBetweenScanAttempts);\n          return;\n        }\n        // not trying again\n        disposeCanvas();\n        if (finalizeCallback) {\n          finalizeCallback(error);\n        }\n      }\n    };\n    // starts the async loop\n    loop();\n    return controls;\n  };\n  /**\n   * Waits for the image to load and then tries to decode it.\n   */\n  BrowserCodeReader.prototype._decodeOnLoadImage = function (element) {\n    return __awaiter(this, void 0, void 0, function () {\n      var isImageLoaded;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            isImageLoaded = BrowserCodeReader.isImageLoaded(element);\n            if (!!isImageLoaded) return [3 /*break*/, 2];\n            return [4 /*yield*/, BrowserCodeReader._waitImageLoad(element)];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/, this.decode(element)];\n        }\n      });\n    });\n  };\n  /**\n   * Get MediaStream from browser to be used.\n   * @param constraints constraints the media stream constraints to get s valid media stream to decode from.\n   * @private For private use.\n   */\n  BrowserCodeReader.prototype.getUserMedia = function (constraints) {\n    return __awaiter(this, void 0, void 0, function () {\n      var stream;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, navigator.mediaDevices.getUserMedia(constraints)];\n          case 1:\n            stream = _a.sent();\n            BrowserCodeReader.streamTracker.push(stream);\n            return [2 /*return*/, stream];\n        }\n      });\n    });\n  };\n  /**\n   * Keeps track to created media streams.\n   * @private there is no need this array to be accessible from outside.\n   */\n  BrowserCodeReader.streamTracker = [];\n  return BrowserCodeReader;\n}();\nexport { BrowserCodeReader };","map":{"version":3,"names":["ArgumentException","BinaryBitmap","ChecksumException","DecodeHintType","FormatException","HybridBinarizer","NotFoundException","HTMLCanvasElementLuminanceSource","canEnumerateDevices","hasNavigator","defaultOptions","delayBetweenScanAttempts","delayBetweenScanSuccess","tryPlayVideoTimeout","BrowserCodeReader","reader","hints","options","Map","__assign","Object","defineProperty","prototype","set","formats","POSSIBLE_FORMATS","addVideoSource","videoElement","stream","srcObject","err","console","error","mediaStreamSetTorch","track","onOff","applyConstraints","advanced","fillLightMode","torch","_a","sent","mediaStreamIsTorchCompatible","params","tracks","getVideoTracks","tracks_1","__values","tracks_1_1","next","done","value","mediaStreamIsTorchCompatibleTrack","capabilities","getCapabilities","warn","isVideoPlaying","video","currentTime","paused","readyState","getMediaElement","mediaElementId","type","mediaElement","document","getElementById","concat","nodeName","toLowerCase","createVideoElement","videoThingy","HTMLVideoElement","createElement","width","height","Error","prepareImageElement","imageSource","HTMLImageElement","imageElement","prepareVideoElement","videoElem","setAttribute","isImageLoaded","img","complete","naturalWidth","createBinaryBitmapFromCanvas","canvas","luminanceSource","hybridBinarizer","drawImageOnCanvas","canvasElementContext","srcElement","drawImage","getMediaElementDimensions","videoHeight","videoWidth","naturalHeight","createCaptureCanvas","canvasElement","style","tryPlayVideo","ended","play","error_1","createCanvasFromMediaElement","ctx","getContext","createBinaryBitmapFromMediaElem","destroyImageElement","src","removeAttribute","undefined","listVideoInputDevices","navigator","mediaDevices","enumerateDevices","devices","_b","videoDevices","devices_1","devices_1_1","device","kind","deviceId","id","label","length","groupId","videoDevice","push","findDeviceById","find","x","cleanVideoSource","releaseAllStreams","streamTracker","forEach","mediaStream","getTracks","stop","playVideoOnLoadAsync","element","timeout","isPlaying","Promise","resolve","reject","timeoutId","setTimeout","removeEventListener","videoCanPlayListener","then","hasPlayed","clearTimeout","addEventListener","attachStreamToVideo","preview","previewPlayTimeout","_waitImageLoad","imageLoadedListener","checkCallbackFnOrThrow","callbackFn","disposeMediaStream","decode","decodeFromCanvas","decodeBitmap","binaryBitmap","decodeFromImageElement","source","_decodeOnLoadImage","decodeFromImageUrl","url","decodeFromConstraints","constraints","previewElem","getUserMedia","decodeFromStream","error_2","finalizeCallback","originalControls","scan","videoTracks","controls","streamVideoConstraintsApply","trackFilter","filter","tracks_2","tracks_2_1","streamVideoConstraintsGet","getConstraints","streamVideoSettingsGet","getSettings","streamVideoCapabilitiesGet","isTorchAvailable","torchTrack_1","t","switchTorch_1","__awaiter","_this","switchTorch","decodeFromVideoDevice","videoConstraints","facingMode","exact","decodeFromVideoElement","decodeFromVideoUrl","decodeOnceFromConstraints","videoSource","decodeOnceFromStream","receivedPreview","Boolean","scanOneResult","result","decodeOnceFromVideoDevice","decodeOnceFromVideoElement","decodeOnceFromVideoUrl","task","retryIfNotFound","retryIfChecksumError","retryIfFormatError","captureCanvas","captureCanvasContext","willReadFrequently","e","disposeCanvas","stopScan","lastTimeoutId","loop","isChecksumError","isFormatError","isNotFound"],"sources":["../../../src/readers/BrowserCodeReader.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}