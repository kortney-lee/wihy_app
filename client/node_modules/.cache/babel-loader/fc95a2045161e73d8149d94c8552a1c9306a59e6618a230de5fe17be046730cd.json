{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\components\\\\NovaChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst NovaChart = ({\n  novaScore,\n  processedLevel\n}) => {\n  // NOVA score colors - same as ResultQualityPie style\n  const getNovaColors = score => {\n    switch (score) {\n      case 1:\n        return {\n          primary: '#4ade80',\n          secondary: '#dcfce7'\n        };\n      // Green\n      case 2:\n        return {\n          primary: '#f59e0b',\n          secondary: '#fef3c7'\n        };\n      // Yellow\n      case 3:\n        return {\n          primary: '#f97316',\n          secondary: '#fed7aa'\n        };\n      // Orange\n      case 4:\n        return {\n          primary: '#ef4444',\n          secondary: '#fecaca'\n        };\n      // Red\n      default:\n        return {\n          primary: '#6b7280',\n          secondary: '#f3f4f6'\n        };\n      // Gray\n    }\n  };\n  const getNovaRating = score => {\n    switch (score) {\n      case 1:\n        return \"Excellent\";\n      case 2:\n        return \"Good\";\n      case 3:\n        return \"Fair\";\n      case 4:\n        return \"Poor\";\n      default:\n        return \"Unknown\";\n    }\n  };\n  const colors = getNovaColors(novaScore);\n  const rating = getNovaRating(novaScore);\n\n  // Calculate percentage (NOVA is 1-4 scale)\n  const percentage = Math.round((5 - novaScore) / 4 * 100);\n  const chartData = {\n    datasets: [{\n      data: [percentage, 100 - percentage],\n      backgroundColor: [colors.primary, colors.secondary],\n      borderWidth: 0,\n      cutout: '70%'\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        height: '200px',\n        width: '200px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '2rem',\n            fontWeight: 'bold',\n            color: '#374151'\n          },\n          children: novaScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '0.9rem',\n            color: '#6b7280'\n          },\n          children: \"NOVA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginBottom: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1.25rem',\n            marginRight: '0.5rem'\n          },\n          children: \"\\uD83C\\uDFED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.9rem',\n          color: '#6b7280'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colors.primary\n          },\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), \" \", processedLevel, \": \", percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = NovaChart;\nexport default NovaChart;\nvar _c;\n$RefreshReg$(_c, \"NovaChart\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsxDEV","_jsxDEV","register","NovaChart","novaScore","processedLevel","getNovaColors","score","primary","secondary","getNovaRating","colors","rating","percentage","Math","round","chartData","datasets","data","backgroundColor","borderWidth","cutout","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","style","textAlign","children","position","height","width","margin","options","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","fontSize","fontWeight","color","marginTop","alignItems","justifyContent","marginBottom","marginRight","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/components/NovaChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\ninterface NovaChartProps {\r\n  novaScore: number;\r\n  processedLevel: string;\r\n}\r\n\r\nconst NovaChart: React.FC<NovaChartProps> = ({ novaScore, processedLevel }) => {\r\n  // NOVA score colors - same as ResultQualityPie style\r\n  const getNovaColors = (score: number) => {\r\n    switch (score) {\r\n      case 1: return { primary: '#4ade80', secondary: '#dcfce7' }; // Green\r\n      case 2: return { primary: '#f59e0b', secondary: '#fef3c7' }; // Yellow\r\n      case 3: return { primary: '#f97316', secondary: '#fed7aa' }; // Orange\r\n      case 4: return { primary: '#ef4444', secondary: '#fecaca' }; // Red\r\n      default: return { primary: '#6b7280', secondary: '#f3f4f6' }; // Gray\r\n    }\r\n  };\r\n\r\n  const getNovaRating = (score: number) => {\r\n    switch (score) {\r\n      case 1: return \"Excellent\";\r\n      case 2: return \"Good\";\r\n      case 3: return \"Fair\";\r\n      case 4: return \"Poor\";\r\n      default: return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  const colors = getNovaColors(novaScore);\r\n  const rating = getNovaRating(novaScore);\r\n  \r\n  // Calculate percentage (NOVA is 1-4 scale)\r\n  const percentage = Math.round(((5 - novaScore) / 4) * 100);\r\n\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: [percentage, 100 - percentage],\r\n        backgroundColor: [colors.primary, colors.secondary],\r\n        borderWidth: 0,\r\n        cutout: '70%',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        enabled: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div style={{ position: 'relative', height: '200px', width: '200px', margin: '0 auto' }}>\r\n        <Doughnut data={chartData} options={chartOptions} />\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          textAlign: 'center'\r\n        }}>\r\n          <div style={{ fontSize: '2rem', fontWeight: 'bold', color: '#374151' }}>\r\n            {novaScore}\r\n          </div>\r\n          <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\r\n            NOVA\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '1rem' }}>\r\n        <div style={{ \r\n          display: 'flex', \r\n          alignItems: 'center', \r\n          justifyContent: 'center',\r\n          marginBottom: '0.5rem'\r\n        }}>\r\n          <span style={{ fontSize: '1.25rem', marginRight: '0.5rem' }}>üè≠</span>\r\n          <span style={{ fontWeight: '600', color: '#374151' }}>{rating}</span>\r\n        </div>\r\n        \r\n        <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\r\n          <span style={{ color: colors.primary }}>‚ñ†</span> {processedLevel}: {percentage}%\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}