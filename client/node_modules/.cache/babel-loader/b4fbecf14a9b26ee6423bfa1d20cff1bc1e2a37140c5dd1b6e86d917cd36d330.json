{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { IllegalArgumentException, InvertedLuminanceSource, LuminanceSource } from '@zxing/library';\n/**/\nvar HTMLCanvasElementLuminanceSource = /** @class */function (_super) {\n  __extends(HTMLCanvasElementLuminanceSource, _super);\n  function HTMLCanvasElementLuminanceSource(canvas) {\n    var _this = _super.call(this, canvas.width, canvas.height) || this;\n    _this.canvas = canvas;\n    _this.tempCanvasElement = null;\n    _this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(canvas);\n    return _this;\n  }\n  HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData = function (canvas) {\n    var canvasCtx;\n    try {\n      canvasCtx = canvas.getContext('2d', {\n        willReadFrequently: true\n      });\n    } catch (e) {\n      canvasCtx = canvas.getContext('2d');\n    }\n    if (!canvasCtx) {\n      throw new Error('Couldn\\'t get canvas context.');\n    }\n    var imageData = canvasCtx.getImageData(0, 0, canvas.width, canvas.height);\n    return HTMLCanvasElementLuminanceSource.toGrayscaleBuffer(imageData.data, canvas.width, canvas.height);\n  };\n  HTMLCanvasElementLuminanceSource.toGrayscaleBuffer = function (imageBuffer, width, height) {\n    var grayscaleBuffer = new Uint8ClampedArray(width * height);\n    for (var i = 0, j = 0, length_1 = imageBuffer.length; i < length_1; i += 4, j++) {\n      var gray = void 0;\n      var alpha = imageBuffer[i + 3];\n      // The color of fully-transparent pixels is irrelevant. They are often, technically, fully-transparent\n      // black (0 alpha, and then 0 RGB). They are often used, of course as the \"white\" area in a\n      // barcode image. Force any such pixel to be white:\n      if (alpha === 0) {\n        gray = 0xFF;\n      } else {\n        var pixelR = imageBuffer[i];\n        var pixelG = imageBuffer[i + 1];\n        var pixelB = imageBuffer[i + 2];\n        // .299R + 0.587G + 0.114B (YUV/YIQ for PAL and NTSC),\n        // (306*R) >> 10 is approximately equal to R*0.299, and so on.\n        // 0x200 >> 10 is 0.5, it implements rounding.\n        // tslint:disable-next-line:no-bitwise\n        gray = 306 * pixelR + 601 * pixelG + 117 * pixelB + 0x200 >> 10;\n      }\n      grayscaleBuffer[j] = gray;\n    }\n    return grayscaleBuffer;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.getRow = function (y /*int*/, row) {\n    if (y < 0 || y >= this.getHeight()) {\n      throw new IllegalArgumentException('Requested row is outside the image: ' + y);\n    }\n    var width = this.getWidth();\n    var start = y * width;\n    if (row === null) {\n      row = this.buffer.slice(start, start + width);\n    } else {\n      if (row.length < width) {\n        row = new Uint8ClampedArray(width);\n      }\n      // The underlying raster of image consists of bytes with the luminance values\n      // TODO: can avoid set/slice?\n      row.set(this.buffer.slice(start, start + width));\n    }\n    return row;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.getMatrix = function () {\n    return this.buffer;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.isCropSupported = function () {\n    return true;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.crop = function (left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n    _super.prototype.crop.call(this, left, top, width, height);\n    return this;\n  };\n  /**\n   * This is always true, since the image is a gray-scale image.\n   *\n   * @return true\n   */\n  HTMLCanvasElementLuminanceSource.prototype.isRotateSupported = function () {\n    return true;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise = function () {\n    this.rotate(-90);\n    return this;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise45 = function () {\n    this.rotate(-45);\n    return this;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.invert = function () {\n    return new InvertedLuminanceSource(this);\n  };\n  HTMLCanvasElementLuminanceSource.prototype.getTempCanvasElement = function () {\n    if (null === this.tempCanvasElement) {\n      var tempCanvasElement = this.canvas.ownerDocument.createElement('canvas');\n      tempCanvasElement.width = this.canvas.width;\n      tempCanvasElement.height = this.canvas.height;\n      this.tempCanvasElement = tempCanvasElement;\n    }\n    return this.tempCanvasElement;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.rotate = function (angle) {\n    var tempCanvasElement = this.getTempCanvasElement();\n    if (!tempCanvasElement) {\n      throw new Error('Could not create a Canvas element.');\n    }\n    var angleRadians = angle * HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS;\n    // Calculate and set new dimensions for temp canvas\n    var width = this.canvas.width;\n    var height = this.canvas.height;\n    var newWidth = Math.ceil(Math.abs(Math.cos(angleRadians)) * width + Math.abs(Math.sin(angleRadians)) * height);\n    var newHeight = Math.ceil(Math.abs(Math.sin(angleRadians)) * width + Math.abs(Math.cos(angleRadians)) * height);\n    tempCanvasElement.width = newWidth;\n    tempCanvasElement.height = newHeight;\n    var tempContext = tempCanvasElement.getContext('2d');\n    if (!tempContext) {\n      throw new Error('Could not create a Canvas Context element.');\n    }\n    // Draw at center of temp canvas to prevent clipping of image data\n    tempContext.translate(newWidth / 2, newHeight / 2);\n    tempContext.rotate(angleRadians);\n    tempContext.drawImage(this.canvas, width / -2, height / -2);\n    this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(tempCanvasElement);\n    return this;\n  };\n  HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS = Math.PI / 180;\n  return HTMLCanvasElementLuminanceSource;\n}(LuminanceSource);\nexport { HTMLCanvasElementLuminanceSource };","map":{"version":3,"names":["IllegalArgumentException","InvertedLuminanceSource","LuminanceSource","HTMLCanvasElementLuminanceSource","_super","__extends","canvas","_this","call","width","height","tempCanvasElement","buffer","makeBufferFromCanvasImageData","canvasCtx","getContext","willReadFrequently","e","Error","imageData","getImageData","toGrayscaleBuffer","data","imageBuffer","grayscaleBuffer","Uint8ClampedArray","i","j","length_1","length","gray","alpha","pixelR","pixelG","pixelB","prototype","getRow","y","row","getHeight","getWidth","start","slice","set","getMatrix","isCropSupported","crop","left","top","isRotateSupported","rotateCounterClockwise","rotate","rotateCounterClockwise45","invert","getTempCanvasElement","ownerDocument","createElement","angle","angleRadians","DEGREE_TO_RADIANS","newWidth","Math","ceil","abs","cos","sin","newHeight","tempContext","translate","drawImage","PI"],"sources":["../../../src/common/HTMLCanvasElementLuminanceSource.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}