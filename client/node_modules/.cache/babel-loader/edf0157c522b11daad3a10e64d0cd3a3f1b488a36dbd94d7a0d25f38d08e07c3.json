{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport { __extends } from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nvar packageName = \"@azure/cognitiveservices-computervision\";\nvar packageVersion = \"8.2.0\";\nvar ComputerVisionClientContext = /** @class */function (_super) {\n  __extends(ComputerVisionClientContext, _super);\n  /**\n   * Initializes a new instance of the ComputerVisionClientContext class.\n   * @param endpoint Supported Cognitive Services endpoints.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  function ComputerVisionClientContext(credentials, endpoint, options) {\n    var _this = this;\n    if (endpoint == undefined) {\n      throw new Error(\"'endpoint' cannot be null.\");\n    }\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      var defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = packageName + \"/\" + packageVersion + \" \" + defaultUserAgent;\n    }\n    _this = _super.call(this, credentials, options) || this;\n    _this.baseUri = \"{Endpoint}/vision/v3.2\";\n    _this.requestContentType = \"application/json; charset=utf-8\";\n    _this.endpoint = endpoint;\n    _this.credentials = credentials;\n    return _this;\n  }\n  return ComputerVisionClientContext;\n}(msRest.ServiceClient);\nexport { ComputerVisionClientContext };","map":{"version":3,"names":["msRest","packageName","packageVersion","ComputerVisionClientContext","_super","__extends","credentials","endpoint","options","_this","undefined","Error","userAgent","defaultUserAgent","getDefaultUserAgentValue","call","baseUri","requestContentType","ServiceClient"],"sources":["C:\\repo\\wihy_ui\\client\\node_modules\\@azure\\cognitiveservices-computervision\\src\\computerVisionClientContext.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nconst packageName = \"@azure/cognitiveservices-computervision\";\nconst packageVersion = \"8.2.0\";\n\nexport class ComputerVisionClientContext extends msRest.ServiceClient {\n  endpoint: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the ComputerVisionClientContext class.\n   * @param endpoint Supported Cognitive Services endpoints.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    if (endpoint == undefined) {\n      throw new Error(\"'endpoint' cannot be null.\");\n    }\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.baseUri = \"{Endpoint}/vision/v3.2\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.endpoint = endpoint;\n    this.credentials = credentials;\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;AASA,OAAO,KAAKA,MAAM,MAAM,mBAAmB;AAE3C,IAAMC,WAAW,GAAG,yCAAyC;AAC7D,IAAMC,cAAc,GAAG,OAAO;AAE9B,IAAAC,2BAAA,0BAAAC,MAAA;EAAiDC,SAAA,CAAAF,2BAAA,EAAAC,MAAA;EAI/C;;;;;;EAMA,SAAAD,4BAAYG,WAA4C,EAAEC,QAAgB,EAAEC,OAAqC;IAAjH,IAAAC,KAAA;IACE,IAAIF,QAAQ,IAAIG,SAAS,EAAE;MACzB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;;IAE/C,IAAIL,WAAW,IAAII,SAAS,EAAE;MAC5B,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;;IAGlD,IAAI,CAACH,OAAO,EAAE;MACZA,OAAO,GAAG,EAAE;;IAGd,IAAI,CAACA,OAAO,CAACI,SAAS,EAAE;MACtB,IAAMC,gBAAgB,GAAGb,MAAM,CAACc,wBAAwB,EAAE;MAC1DN,OAAO,CAACI,SAAS,GAAMX,WAAW,SAAIC,cAAc,SAAIW,gBAAkB;;IAG5EJ,KAAA,GAAAL,MAAA,CAAAW,IAAA,OAAMT,WAAW,EAAEE,OAAO,CAAC;IAE3BC,KAAI,CAACO,OAAO,GAAG,wBAAwB;IACvCP,KAAI,CAACQ,kBAAkB,GAAG,iCAAiC;IAC3DR,KAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxBE,KAAI,CAACH,WAAW,GAAGA,WAAW;;EAChC;EACF,OAAAH,2BAAC;AAAD,CAAC,CAlCgDH,MAAM,CAACkB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}