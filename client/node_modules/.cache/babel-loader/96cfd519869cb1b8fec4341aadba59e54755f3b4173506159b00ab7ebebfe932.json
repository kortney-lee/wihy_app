{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\components\\\\ResultQualityPie.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultQualityPie = ({\n  qualityScore\n}) => {\n  // Calculate the stroke dasharray for the SVG circle\n  const circumference = 2 * Math.PI * 90; // 2œÄr where r=90\n  const goodOffset = circumference * (1 - qualityScore);\n  const goodPercentage = Math.round(qualityScore * 100);\n  const badPercentage = 100 - goodPercentage;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 220,\n      margin: '0 auto',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"220\",\n      height: \"220\",\n      viewBox: \"0 0 220 220\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"110\",\n        cy: \"110\",\n        r: \"90\",\n        fill: \"transparent\",\n        stroke: \"#f44336\",\n        strokeWidth: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"110\",\n        cy: \"110\",\n        r: \"90\",\n        fill: \"transparent\",\n        stroke: \"#4caf50\",\n        strokeWidth: \"30\",\n        strokeDasharray: circumference,\n        strokeDashoffset: goodOffset,\n        transform: \"rotate(-90, 110, 110)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"110\",\n        cy: \"110\",\n        r: \"70\",\n        fill: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"110\",\n        y: \"105\",\n        textAnchor: \"middle\",\n        fontSize: \"24\",\n        fontWeight: \"bold\",\n        children: [goodPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"110\",\n        y: \"130\",\n        textAnchor: \"middle\",\n        fontSize: \"16\",\n        children: \"Quality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 600,\n        marginTop: 8\n      },\n      children: qualityScore > 0.7 ? 'üëç Good Result' : '‚ö†Ô∏è Needs Review'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginRight: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 12,\n            height: 12,\n            backgroundColor: '#4caf50',\n            marginRight: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Good: \", goodPercentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 12,\n            height: 12,\n            backgroundColor: '#f44336',\n            marginRight: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Bad: \", badPercentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultQualityPie;\nexport default ResultQualityPie;\nvar _c;\n$RefreshReg$(_c, \"ResultQualityPie\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultQualityPie","qualityScore","circumference","Math","PI","goodOffset","goodPercentage","round","badPercentage","style","width","margin","textAlign","children","height","viewBox","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeDashoffset","transform","x","y","textAnchor","fontSize","fontWeight","marginTop","display","justifyContent","alignItems","marginRight","backgroundColor","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/components/ResultQualityPie.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface ResultQualityPieProps {\r\n  qualityScore: number; // 0 to 1, where 1 is 100% good\r\n}\r\n\r\nconst ResultQualityPie: React.FC<ResultQualityPieProps> = ({ qualityScore }) => {\r\n  // Calculate the stroke dasharray for the SVG circle\r\n  const circumference = 2 * Math.PI * 90; // 2œÄr where r=90\r\n  const goodOffset = circumference * (1 - qualityScore);\r\n  const goodPercentage = Math.round(qualityScore * 100);\r\n  const badPercentage = 100 - goodPercentage;\r\n  \r\n  return (\r\n    <div style={{ width: 220, margin: '0 auto', textAlign: 'center' }}>\r\n      <svg width=\"220\" height=\"220\" viewBox=\"0 0 220 220\">\r\n        {/* Background circle (red - bad) */}\r\n        <circle \r\n          cx=\"110\" \r\n          cy=\"110\" \r\n          r=\"90\" \r\n          fill=\"transparent\" \r\n          stroke=\"#f44336\" \r\n          strokeWidth=\"30\"\r\n        />\r\n        {/* Foreground circle (green - good) */}\r\n        <circle \r\n          cx=\"110\" \r\n          cy=\"110\" \r\n          r=\"90\" \r\n          fill=\"transparent\" \r\n          stroke=\"#4caf50\" \r\n          strokeWidth=\"30\"\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={goodOffset}\r\n          transform=\"rotate(-90, 110, 110)\"\r\n        />\r\n        {/* White center */}\r\n        <circle \r\n          cx=\"110\" \r\n          cy=\"110\" \r\n          r=\"70\" \r\n          fill=\"white\" \r\n        />\r\n        {/* Score text */}\r\n        <text \r\n          x=\"110\" \r\n          y=\"105\" \r\n          textAnchor=\"middle\" \r\n          fontSize=\"24\" \r\n          fontWeight=\"bold\"\r\n        >\r\n          {goodPercentage}%\r\n        </text>\r\n        <text \r\n          x=\"110\" \r\n          y=\"130\" \r\n          textAnchor=\"middle\" \r\n          fontSize=\"16\"\r\n        >\r\n          Quality\r\n        </text>\r\n      </svg>\r\n      \r\n      {/* Verdict */}\r\n      <div style={{ fontWeight: 600, marginTop: 8 }}>\r\n        {qualityScore > 0.7 ? 'üëç Good Result' : '‚ö†Ô∏è Needs Review'}\r\n      </div>\r\n      \r\n      {/* Legend */}\r\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: 8 }}>\r\n        <div style={{ display: 'flex', alignItems: 'center', marginRight: 16 }}>\r\n          <div style={{ width: 12, height: 12, backgroundColor: '#4caf50', marginRight: 4 }}></div>\r\n          <span>Good: {goodPercentage}%</span>\r\n        </div>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ width: 12, height: 12, backgroundColor: '#f44336', marginRight: 4 }}></div>\r\n          <span>Bad: {badPercentage}%</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultQualityPie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}