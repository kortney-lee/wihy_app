{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\search\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { searchCache } from '../../services/searchCache';\nimport ImageUploadModal from '../ui/ImageUploadModal';\nimport ResultQualityPie from '../charts/ResultQualityPie';\n// Chart imports removed - charts now handled by vHealthApp with new API structure\nimport ChatWidget from '../ui/ChatWidget';\nimport DashboardCharts from '../charts/DashboardCharts';\nimport '../../styles/VHealthSearch.css';\nimport Header from '../shared/Header';\nimport Spinner from '../ui/Spinner';\nimport { wihyAPI } from '../../services/wihyAPI';\nimport { logger } from '../../utils/logger';\n\n/* Define default topics and resources */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRelatedTopics = [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"];\nconst defaultResources = [{\n  text: \"Nutrition ED - Learn More\",\n  url: \"https://vowels.com\"\n}, {\n  text: \"Nutrition 101\",\n  url: \"https://members.vowels.com\"\n}, {\n  text: \"The World Counts\",\n  url: \"https://www.theworldcounts.com/\"\n}];\n\n// Define the dummy data for \"test\" queries\nconst dummyTestData = {\n  query: \"test\",\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\n\n**Recommendations:**\n• Consult healthcare professionals for personalized medical advice\n• Verify information with your doctor or medical provider\n• Follow evidence-based medical guidelines\n• Seek regular medical check-ups and screenings\n\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\n\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\n  relatedTopics: [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"],\n  resources: [{\n    text: \"🩺 mHealth - Mobile Health Solutions\",\n    url: \"#\"\n  }, {\n    text: \"🏥 CDC - Health Guidelines\",\n    url: \"#\"\n  }, {\n    text: \"🌍 WHO - Global Health Information\",\n    url: \"#\"\n  }]\n};\n\n// Update the SearchResultsProps interface to include the new properties\n\n// Add this function before the SearchResults component\nconst convertLinksToClickable = text => {\n  // Handle non-string inputs\n  if (!text) return null;\n\n  // If text is not a string, convert it to string first\n  if (typeof text !== 'string') {\n    // If it's an object, try to stringify it or extract meaningful content\n    if (typeof text === 'object') {\n      // If it has specific properties we can use\n      if (text.content) {\n        text = text.content;\n      } else if (text.message) {\n        text = text.message;\n      } else if (text.details) {\n        text = text.details;\n      } else {\n        // Last resort - stringify the object\n        text = JSON.stringify(text);\n      }\n    } else {\n      // Convert other types to string\n      text = String(text);\n    }\n  }\n\n  // Now we're sure text is a string, proceed with original logic\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  const parts = text.split(urlRegex);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: parts.map((part, index) => urlRegex.test(part) ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: part,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        color: '#2563eb',\n        textDecoration: 'underline'\n      },\n      children: part\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this) : part)\n  }, void 0, false);\n};\nconst SearchResults = ({\n  query,\n  results,\n  onBackToSearch,\n  onNewSearch,\n  isLoading,\n  dataSource,\n  citations = [],\n  recommendations = [],\n  disclaimer = \"\",\n  apiResponse,\n  initialDemoMode = false\n}) => {\n  _s();\n  // Only log on significant changes, not every render\n  const prevQueryRef = useRef('');\n  useEffect(() => {\n    if (query !== prevQueryRef.current) {\n      console.log('🔍 SEARCH RESULTS: New query -', query);\n      prevQueryRef.current = query;\n    }\n  }, [query]);\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [newQuery, setNewQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [isUploadLoading, setUploadLoading] = useState(false);\n  const [lastProcessedQuery, setLastProcessedQuery] = useState('');\n  const [imageError, setImageError] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [currentContext, setCurrentContext] = useState('search results');\n  const [windowWidth, setWindowWidth] = useState(typeof window !== 'undefined' ? window.innerWidth : 1200);\n  const [isDemoMode, setIsDemoMode] = useState(initialDemoMode);\n\n  // Header search state - independent from main search\n  const [headerSearchResults, setHeaderSearchResults] = useState('');\n  const [headerSearchQuery, setHeaderSearchQuery] = useState('');\n  const [headerApiResponse, setHeaderApiResponse] = useState(null);\n  const [isHeaderSearchLoading, setIsHeaderSearchLoading] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Handle window resize for responsive layout\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Prevent body scroll when component mounts  \n  useEffect(() => {\n    // Remove any body scroll restrictions - let the CSS variable approach handle positioning\n    document.body.style.overflow = 'auto';\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, []);\n\n  // Check if we have valid results to display\n  const hasValidResults = results && results.trim() !== '' && !isLoading;\n\n  // Set context for ChatWidget based on search results\n  useEffect(() => {\n    if (results && typeof results === 'string' && results.trim()) {\n      // Extract a meaningful summary for chat context\n      const contextSummary = results.length > 300 ? results.substring(0, 300) + '...' : results;\n      setCurrentContext(`Search results for \"${query}\": ${contextSummary}`);\n      console.log('🔍 SEARCH RESULTS: Updated chat context');\n    } else {\n      setCurrentContext('search results');\n    }\n  }, [results, query]);\n\n  // 🔍 SEARCH RESULTS LOGGING: Track loading states\n  useEffect(() => {\n    if (isLoading) {\n      console.log('🔍 SEARCH RESULTS LOADING STATE:', {\n        query: query,\n        timestamp: new Date().toISOString(),\n        component: 'SearchResults',\n        action: 'loadingStarted',\n        isLoading: true,\n        hasValidResults: hasValidResults\n      });\n    } else {\n      console.log('🔍 SEARCH RESULTS LOADING COMPLETE:', {\n        query: query,\n        timestamp: new Date().toISOString(),\n        component: 'SearchResults',\n        action: 'loadingComplete',\n        isLoading: false,\n        hasValidResults: hasValidResults,\n        resultsLength: (results === null || results === void 0 ? void 0 : results.length) || 0\n      });\n    }\n  }, [isLoading, hasValidResults]);\n\n  // Cache results when they change\n  useEffect(() => {\n    if (query && results && !isLoading) {\n      searchCache.setCachedResult(query, results, window.location.href);\n    }\n  }, [query, results, isLoading]);\n\n  // Add effect to manage body class when modal opens/closes\n  useEffect(() => {\n    if (isUploadModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [isUploadModalOpen]);\n\n  // Add cleanup effect\n  useEffect(() => {\n    return () => {\n      if (typeof image === 'string' && image.startsWith('blob:')) {\n        URL.revokeObjectURL(image);\n      }\n    };\n  }, [image]);\n\n  // Add this effect\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Handle new search submission\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const trimmedQuery = input.trim();\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\n      console.log('Preventing duplicate search for:', trimmedQuery);\n      return;\n    }\n    console.log('User explicit search from results page:', trimmedQuery);\n    setLastProcessedQuery(trimmedQuery);\n    setIsSearching(true);\n    onNewSearch(trimmedQuery);\n  };\n\n  // Handle voice input (placeholder for now)\n  const handleVoiceInput = () => {\n    setIsListening(!isListening);\n  };\n\n  // Handle image upload\n  const handleImageUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      setImage(file);\n      setIsUploadModalOpen(true);\n    }\n  };\n\n  // Handle image upload completion\n  const handleAnalysisComplete = results => {\n    setIsUploadModalOpen(false);\n    if (results) {\n      onNewSearch(JSON.stringify(results));\n    }\n  };\n\n  // Check if this is a test query\n  const isTestQuery = query.toLowerCase() === 'test';\n\n  // Handle new search from header - makes its own API request\n  const handleHeaderSearch = async searchQuery => {\n    console.log('🔍 HEADER SEARCH initiated:', {\n      searchQuery\n    });\n    if (!searchQuery.trim()) return;\n    setIsHeaderSearchLoading(true);\n    try {\n      logger.debug('Header search: Making WiHy API call', {\n        query: searchQuery\n      });\n      const wihyResponse = await wihyAPI.searchHealth(searchQuery);\n      if (wihyResponse.success) {\n        // Extract response content\n        let summary = 'Health information provided';\n        if ('data' in wihyResponse) {\n          var _data, _data2, _data2$ai_response;\n          // New unified API response format\n          summary = ((_data = wihyResponse.data) === null || _data === void 0 ? void 0 : _data.response) || ((_data2 = wihyResponse.data) === null || _data2 === void 0 ? void 0 : (_data2$ai_response = _data2.ai_response) === null || _data2$ai_response === void 0 ? void 0 : _data2$ai_response.response) || summary;\n        } else {\n          var _wihy_response;\n          // Legacy WihyResponse format\n          summary = ((_wihy_response = wihyResponse.wihy_response) === null || _wihy_response === void 0 ? void 0 : _wihy_response.core_principle) || summary;\n        }\n\n        // Update our local state and add to chat conversation\n        setHeaderSearchResults(summary);\n        setHeaderSearchQuery(searchQuery);\n        setHeaderApiResponse(wihyResponse);\n\n        // Add the new search to the existing chat conversation\n        handleAddToChatConversation(searchQuery, summary);\n        console.log('🔍 HEADER SEARCH state updated:', {\n          query: searchQuery,\n          hasResults: !!summary,\n          timestamp: new Date().toISOString()\n        });\n        logger.info('Header search completed successfully', {\n          query: searchQuery\n        });\n        console.log('🔍 HEADER SEARCH completed:', {\n          query: searchQuery,\n          success: true,\n          hasResponse: !!summary,\n          timestamp: new Date().toISOString()\n        });\n      } else {\n        throw new Error('WiHy API request failed');\n      }\n    } catch (error) {\n      logger.error('Header search failed:', error);\n      setHeaderSearchResults('Sorry, there was an error processing your search. Please try again.');\n      setHeaderApiResponse(null);\n      console.log('🔍 HEADER SEARCH failed:', {\n        query: searchQuery,\n        error: error.message,\n        timestamp: new Date().toISOString()\n      });\n    } finally {\n      setIsHeaderSearchLoading(false);\n    }\n  };\n\n  // Handle new search from ChatWidget\n  const handleChatSearch = query => {\n    console.log('🔍 ChatWidget triggered new search:', {\n      query\n    });\n    // Clear any header search results when using ChatWidget\n    setHeaderSearchResults('');\n    setHeaderSearchQuery('');\n    setHeaderApiResponse(null);\n    // Use the main navigation flow for ChatWidget searches\n    onNewSearch(query);\n  };\n\n  // Handle header search - add messages to existing conversation\n  const handleAddToChatConversation = (userMessage, assistantMessage) => {\n    console.log('🔍 ATTEMPTING TO ADD TO CHAT:', {\n      userMessage,\n      assistantMessage: assistantMessage.substring(0, 100) + '...',\n      hasAddChatMessage: !!window.addChatMessage,\n      timestamp: new Date().toISOString()\n    });\n    if (window.addChatMessage) {\n      window.addChatMessage(userMessage, assistantMessage);\n    } else {\n      console.error('🔍 addChatMessage function not available on window');\n    }\n  };\n\n  // Debug logging for state changes\n  useEffect(() => {\n    console.log('🔍 SEARCHRESULTS STATE DEBUG:', {\n      headerSearchQuery,\n      originalQuery: query,\n      hasHeaderSearchResults: !!headerSearchResults,\n      isHeaderSearchLoading,\n      chatWidgetKey: `chatwidget-${headerSearchQuery || query}`,\n      timestamp: new Date().toISOString()\n    });\n  }, [headerSearchQuery, headerSearchResults, query, isHeaderSearchLoading]);\n\n  // Clear header search results when main query changes\n  useEffect(() => {\n    if (query && headerSearchQuery && query !== headerSearchQuery) {\n      console.log('🔍 Main query changed, clearing header search results');\n      setHeaderSearchResults('');\n      setHeaderSearchQuery('');\n      setHeaderApiResponse(null);\n    }\n  }, [query, headerSearchQuery]);\n\n  // 🔍 SEARCH RESULTS LOGGING: Track prop changes\n  useEffect(() => {\n    console.log('🔍 SEARCH RESULTS PROPS CHANGED:', {\n      query: query,\n      timestamp: new Date().toISOString(),\n      component: 'SearchResults',\n      action: 'propsChanged',\n      isLoading: isLoading,\n      dataSource: dataSource,\n      hasResults: !!results,\n      resultsLength: (results === null || results === void 0 ? void 0 : results.length) || 0,\n      hasApiResponse: !!apiResponse\n    });\n  }, [query, results, isLoading, dataSource, apiResponse]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-container\",\n    style: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      paddingTop: 'var(--vh-header-height)',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 1000,\n        backgroundColor: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        variant: \"results\",\n        showLogin: true,\n        showSearchInput: true,\n        onSearchSubmit: handleHeaderSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), (isLoading || isHeaderSearchLoading) && /*#__PURE__*/_jsxDEV(Spinner, {\n      overlay: true,\n      title: \"Analyzing with AI...\",\n      subtitle: \"Processing your health query...\",\n      disableEsc: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: 'calc(100vh - var(--vh-header-height))',\n        overflow: 'hidden',\n        padding: windowWidth <= 768 ? '12px' : '20px',\n        backgroundColor: '#f8fafc'\n      },\n      children: hasValidResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: windowWidth <= 768 ? '1fr' : isDemoMode ? '1fr 2fr' : '2fr 1fr',\n          gridTemplateRows: windowWidth <= 768 ? '1fr 300px' : '1fr',\n          gap: '20px',\n          maxWidth: isDemoMode ? '1400px' : '1200px',\n          margin: '0 auto',\n          minHeight: 'calc(100vh - var(--vh-header-height) - 40px)',\n          // Account for padding\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            borderRadius: '12px',\n            border: '1px solid #e5e7eb',\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n            padding: windowWidth <= 768 ? '16px' : '24px',\n            display: 'flex',\n            flexDirection: 'column',\n            overflow: 'hidden'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              marginBottom: '16px',\n              flexShrink: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsDemoMode(!isDemoMode),\n              style: {\n                padding: '8px 16px',\n                backgroundColor: isDemoMode ? '#10b981' : '#f3f4f6',\n                color: isDemoMode ? 'white' : '#374151',\n                border: 'none',\n                borderRadius: '8px',\n                fontSize: '14px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease',\n                boxShadow: isDemoMode ? '0 2px 4px rgba(16, 185, 129, 0.2)' : '0 1px 2px rgba(0, 0, 0, 0.1)'\n              },\n              children: isDemoMode ? '📊 Demo Active' : '📊 Show Demo Charts'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              overflow: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(ChatWidget, {\n              // Stable key since we're adding to conversation instead of replacing\n              isOpen: true,\n              onClose: () => {},\n              currentContext: currentContext,\n              inline: true,\n              searchQuery: query // Always use original query for initialization\n              ,\n              onNewSearch: handleChatSearch,\n              onAddMessage: handleAddToChatConversation,\n              searchResponse: ((_apiResponse$data, _apiResponse$data$ai_, _apiResponse$data2, _extractedResponse) => {\n                // Use original results for initialization, header search will be added via onAddMessage\n                let extractedResponse = '';\n                if (apiResponse !== null && apiResponse !== void 0 && (_apiResponse$data = apiResponse.data) !== null && _apiResponse$data !== void 0 && (_apiResponse$data$ai_ = _apiResponse$data.ai_response) !== null && _apiResponse$data$ai_ !== void 0 && _apiResponse$data$ai_.response) {\n                  extractedResponse = apiResponse.data.ai_response.response;\n                } else if (apiResponse !== null && apiResponse !== void 0 && (_apiResponse$data2 = apiResponse.data) !== null && _apiResponse$data2 !== void 0 && _apiResponse$data2.response) {\n                  extractedResponse = apiResponse.data.response;\n                } else {\n                  extractedResponse = results;\n                }\n                console.log('🔍 SEARCHRESULTS DEBUG: Using original results for initialization:', {\n                  query,\n                  extractedResponse: ((_extractedResponse = extractedResponse) === null || _extractedResponse === void 0 ? void 0 : _extractedResponse.substring(0, 100)) + '...',\n                  apiResponse: !!apiResponse,\n                  results: !!results\n                });\n                return extractedResponse;\n              })()\n            }, `chatwidget-${query}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: windowWidth <= 768 ? '16px' : '20px',\n            backgroundColor: '#ffffff',\n            borderRadius: '12px',\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n            display: 'flex',\n            flexDirection: 'column',\n            overflow: 'hidden'\n          },\n          children: isDemoMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '20px',\n                color: '#1f2937',\n                fontSize: '18px',\n                fontWeight: '600',\n                flexShrink: 0\n              },\n              children: \"Health Dashboard Demo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 1,\n                overflow: 'auto',\n                paddingRight: '4px'\n              },\n              children: /*#__PURE__*/_jsxDEV(DashboardCharts, {\n                period: \"week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '20px',\n                color: '#1f2937',\n                fontSize: '18px',\n                fontWeight: '600',\n                flexShrink: 0\n              },\n              children: \"Analysis Charts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '20px',\n                flex: 1,\n                overflow: 'auto',\n                paddingRight: '4px'\n              },\n              children: (results || headerSearchResults) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      marginBottom: '12px',\n                      color: '#374151',\n                      fontSize: '14px'\n                    },\n                    children: \"Quality Analysis\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(ResultQualityPie, {\n                    apiResponse: headerApiResponse || apiResponse,\n                    query: headerSearchQuery || query,\n                    results: headerSearchResults || results,\n                    dataSource: dataSource === 'wihy' ? 'vnutrition' : dataSource\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this) : !isLoading && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          textAlign: 'center',\n          padding: '40px',\n          color: '#6b7280'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No results to display. Try searching for something else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n      isOpen: isUploadModalOpen,\n      onClose: () => setIsUploadModalOpen(false),\n      onAnalysisComplete: handleAnalysisComplete,\n      title: \"Upload Image\",\n      subtitle: \"Upload images for analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"8M+m/AtJJcuiCAKeVyD73Fwde90=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","searchCache","ImageUploadModal","ResultQualityPie","ChatWidget","DashboardCharts","Header","Spinner","wihyAPI","logger","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRelatedTopics","defaultResources","text","url","dummyTestData","query","healthInfo","relatedTopics","resources","convertLinksToClickable","content","message","details","JSON","stringify","String","urlRegex","parts","split","children","map","part","index","test","href","target","rel","style","color","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","SearchResults","results","onBackToSearch","onNewSearch","isLoading","dataSource","citations","recommendations","disclaimer","apiResponse","initialDemoMode","_s","prevQueryRef","current","console","log","input","setInput","image","setImage","currentPhotoId","setCurrentPhotoId","newQuery","setNewQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","notification","setNotification","isUploadLoading","setUploadLoading","lastProcessedQuery","setLastProcessedQuery","imageError","setImageError","isSearching","setIsSearching","currentContext","setCurrentContext","windowWidth","setWindowWidth","window","innerWidth","isDemoMode","setIsDemoMode","headerSearchResults","setHeaderSearchResults","headerSearchQuery","setHeaderSearchQuery","headerApiResponse","setHeaderApiResponse","isHeaderSearchLoading","setIsHeaderSearchLoading","recognitionRef","handleResize","addEventListener","removeEventListener","document","body","overflow","hasValidResults","trim","contextSummary","length","substring","timestamp","Date","toISOString","component","action","resultsLength","setCachedResult","location","classList","add","remove","startsWith","URL","revokeObjectURL","timer","setTimeout","clearTimeout","handleTextSubmit","e","preventDefault","trimmedQuery","handleVoiceInput","handleImageUpload","event","_event$target$files","file","files","handleAnalysisComplete","isTestQuery","toLowerCase","handleHeaderSearch","searchQuery","debug","wihyResponse","searchHealth","success","summary","_data","_data2","_data2$ai_response","data","response","ai_response","_wihy_response","wihy_response","core_principle","handleAddToChatConversation","hasResults","info","hasResponse","Error","error","handleChatSearch","userMessage","assistantMessage","hasAddChatMessage","addChatMessage","originalQuery","hasHeaderSearchResults","chatWidgetKey","hasApiResponse","className","minHeight","display","flexDirection","paddingTop","position","top","left","right","zIndex","backgroundColor","variant","showLogin","showSearchInput","onSearchSubmit","overlay","title","subtitle","disableEsc","padding","gridTemplateColumns","gridTemplateRows","gap","maxWidth","margin","borderRadius","border","boxShadow","justifyContent","marginBottom","flexShrink","onClick","fontSize","fontWeight","cursor","transition","flex","isOpen","onClose","inline","onAddMessage","searchResponse","_apiResponse$data","_apiResponse$data$ai_","_apiResponse$data2","_extractedResponse","extractedResponse","paddingRight","period","alignItems","height","textAlign","onAnalysisComplete","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/search/SearchResults.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { searchCache } from '../../services/searchCache';\r\nimport { photoStorageService } from '../../services/photoStorageService';\r\nimport { foodAnalysisService } from '../../services/foodAnalysisService';\r\nimport ImageUploadModal from '../ui/ImageUploadModal';\r\nimport MultiAuthLogin from '../shared/MultiAuthLogin';\r\nimport ResultQualityPie from '../charts/ResultQualityPie';\r\n// Chart imports removed - charts now handled by vHealthApp with new API structure\r\nimport ChatWidget from '../ui/ChatWidget';\r\nimport DashboardCharts from '../charts/DashboardCharts';\r\nimport '../../styles/VHealthSearch.css';\r\nimport Header from '../shared/Header';\r\nimport Spinner from '../ui/Spinner';\r\nimport { wihyAPI } from '../../services/wihyAPI';\r\nimport { logger } from '../../utils/logger';\r\n\r\n/* Define default topics and resources */\r\nconst defaultRelatedTopics = [\r\n  \"Nutrition and Diet Guidelines\",\r\n  \"Exercise and Physical Activity\", \r\n  \"Mental Health and Wellness\",\r\n  \"Preventive Care and Screenings\",\r\n  \"Chronic Disease Management\",\r\n  \"Healthy Lifestyle Choices\"\r\n];\r\n\r\nconst defaultResources = [\r\n  { text: \"Nutrition ED - Learn More\", url: \"https://vowels.com\" },\r\n  { text: \"Nutrition 101\", url: \"https://members.vowels.com\" },\r\n  { text: \"The World Counts\", url: \"https://www.theworldcounts.com/\" }\r\n];\r\n\r\n// Define the dummy data for \"test\" queries\r\nconst dummyTestData = {\r\n  query: \"test\",\r\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\r\n\r\n**Recommendations:**\r\n• Consult healthcare professionals for personalized medical advice\r\n• Verify information with your doctor or medical provider\r\n• Follow evidence-based medical guidelines\r\n• Seek regular medical check-ups and screenings\r\n\r\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\r\n\r\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\r\n  relatedTopics: [\r\n    \"Nutrition and Diet Guidelines\",\r\n    \"Exercise and Physical Activity\", \r\n    \"Mental Health and Wellness\",\r\n    \"Preventive Care and Screenings\",\r\n    \"Chronic Disease Management\",\r\n    \"Healthy Lifestyle Choices\"\r\n  ],\r\n  resources: [\r\n    { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"#\" },\r\n    { text: \"🏥 CDC - Health Guidelines\", url: \"#\" },\r\n    { text: \"🌍 WHO - Global Health Information\", url: \"#\" }\r\n  ]\r\n};\r\n\r\n// Update the SearchResultsProps interface to include the new properties\r\ninterface SearchResultsProps {\r\n  query: string;\r\n  results: string;\r\n  onBackToSearch: () => void;\r\n  onNewSearch: (query: string) => void;\r\n  isLoading: boolean;\r\n  dataSource: \"error\" | \"openai\" | \"local\" | \"vnutrition\" | \"wihy\";\r\n  citations?: string[];\r\n  recommendations?: string[];\r\n  disclaimer?: string;\r\n  apiResponse?: any; // Add unified API response for chart components\r\n  initialDemoMode?: boolean; // Add prop to start in demo mode\r\n}\r\n\r\n// Add this function before the SearchResults component\r\nconst convertLinksToClickable = (text: any): React.ReactNode => {\r\n  // Handle non-string inputs\r\n  if (!text) return null;\r\n  \r\n  // If text is not a string, convert it to string first\r\n  if (typeof text !== 'string') {\r\n    // If it's an object, try to stringify it or extract meaningful content\r\n    if (typeof text === 'object') {\r\n      // If it has specific properties we can use\r\n      if (text.content) {\r\n        text = text.content;\r\n      } else if (text.message) {\r\n        text = text.message;\r\n      } else if (text.details) {\r\n        text = text.details;\r\n      } else {\r\n        // Last resort - stringify the object\r\n        text = JSON.stringify(text);\r\n      }\r\n    } else {\r\n      // Convert other types to string\r\n      text = String(text);\r\n    }\r\n  }\r\n\r\n  // Now we're sure text is a string, proceed with original logic\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  const parts = text.split(urlRegex);\r\n  \r\n  return (\r\n    <>\r\n      {parts.map((part, index) => (\r\n        urlRegex.test(part) ? (\r\n          <a \r\n            key={index} \r\n            href={part} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            style={{ color: '#2563eb', textDecoration: 'underline' }}\r\n          >\r\n            {part}\r\n          </a>\r\n        ) : (\r\n          part\r\n        )\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SearchResults: React.FC<SearchResultsProps> = ({\r\n  query,\r\n  results,\r\n  onBackToSearch,\r\n  onNewSearch,\r\n  isLoading,\r\n  dataSource,\r\n  citations = [],\r\n  recommendations = [],\r\n  disclaimer = \"\",\r\n  apiResponse,\r\n  initialDemoMode = false\r\n}) => {\r\n  // Only log on significant changes, not every render\r\n  const prevQueryRef = useRef<string>('');\r\n  \r\n  useEffect(() => {\r\n    if (query !== prevQueryRef.current) {\r\n      console.log('🔍 SEARCH RESULTS: New query -', query);\r\n      prevQueryRef.current = query;\r\n    }\r\n  }, [query]);\r\n  \r\n  const [input, setInput] = useState('');\r\n  const [image, setImage] = useState<File | string | null>(null);\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [newQuery, setNewQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [notification, setNotification] = useState<{message: string, type: string} | null>(null);\r\n  const [isUploadLoading, setUploadLoading] = useState(false);\r\n  const [lastProcessedQuery, setLastProcessedQuery] = useState<string>('');\r\n  const [imageError, setImageError] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [currentContext, setCurrentContext] = useState<string>('search results');\r\n  const [windowWidth, setWindowWidth] = useState(typeof window !== 'undefined' ? window.innerWidth : 1200);\r\n  const [isDemoMode, setIsDemoMode] = useState(initialDemoMode);\r\n  \r\n  // Header search state - independent from main search\r\n  const [headerSearchResults, setHeaderSearchResults] = useState<string>('');\r\n  const [headerSearchQuery, setHeaderSearchQuery] = useState<string>('');\r\n  const [headerApiResponse, setHeaderApiResponse] = useState<any>(null);\r\n  const [isHeaderSearchLoading, setIsHeaderSearchLoading] = useState(false);\r\n  \r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // Handle window resize for responsive layout\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Prevent body scroll when component mounts  \r\n  useEffect(() => {\r\n    // Remove any body scroll restrictions - let the CSS variable approach handle positioning\r\n    document.body.style.overflow = 'auto';\r\n    \r\n    return () => {\r\n      document.body.style.overflow = 'auto';\r\n    };\r\n  }, []);\r\n\r\n  // Check if we have valid results to display\r\n  const hasValidResults = results && results.trim() !== '' && !isLoading;\r\n  \r\n  // Set context for ChatWidget based on search results\r\n  useEffect(() => {\r\n    if (results && typeof results === 'string' && results.trim()) {\r\n      // Extract a meaningful summary for chat context\r\n      const contextSummary = results.length > 300 ? results.substring(0, 300) + '...' : results;\r\n      setCurrentContext(`Search results for \"${query}\": ${contextSummary}`);\r\n      console.log('🔍 SEARCH RESULTS: Updated chat context');\r\n    } else {\r\n      setCurrentContext('search results');\r\n    }\r\n  }, [results, query]);\r\n  \r\n  // 🔍 SEARCH RESULTS LOGGING: Track loading states\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      console.log('🔍 SEARCH RESULTS LOADING STATE:', {\r\n        query: query,\r\n        timestamp: new Date().toISOString(),\r\n        component: 'SearchResults',\r\n        action: 'loadingStarted',\r\n        isLoading: true,\r\n        hasValidResults: hasValidResults\r\n      });\r\n    } else {\r\n      console.log('🔍 SEARCH RESULTS LOADING COMPLETE:', {\r\n        query: query,\r\n        timestamp: new Date().toISOString(),\r\n        component: 'SearchResults',\r\n        action: 'loadingComplete',\r\n        isLoading: false,\r\n        hasValidResults: hasValidResults,\r\n        resultsLength: results?.length || 0\r\n      });\r\n    }\r\n  }, [isLoading, hasValidResults]);\r\n  \r\n  // Cache results when they change\r\n  useEffect(() => {\r\n    if (query && results && !isLoading) {\r\n      searchCache.setCachedResult(query, results, window.location.href);\r\n    }\r\n  }, [query, results, isLoading]);\r\n\r\n  // Add effect to manage body class when modal opens/closes\r\n  useEffect(() => {\r\n    if (isUploadModalOpen) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n    \r\n    return () => {\r\n      document.body.classList.remove('modal-open');\r\n    };\r\n  }, [isUploadModalOpen]);\r\n\r\n  // Add cleanup effect\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typeof image === 'string' && image.startsWith('blob:')) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [image]);\r\n\r\n  // Add this effect\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Handle new search submission\r\n  const handleTextSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim() || isLoading) return;\r\n    \r\n    const trimmedQuery = input.trim();\r\n    \r\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\r\n      console.log('Preventing duplicate search for:', trimmedQuery);\r\n      return;\r\n    }\r\n    \r\n    console.log('User explicit search from results page:', trimmedQuery);\r\n    setLastProcessedQuery(trimmedQuery);\r\n    setIsSearching(true);\r\n    onNewSearch(trimmedQuery);\r\n  };\r\n\r\n  // Handle voice input (placeholder for now)\r\n  const handleVoiceInput = () => {\r\n    setIsListening(!isListening);\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setIsUploadModalOpen(true);\r\n    }\r\n  };\r\n\r\n  // Handle image upload completion\r\n  const handleAnalysisComplete = (results: any) => {\r\n    setIsUploadModalOpen(false);\r\n    if (results) {\r\n      onNewSearch(JSON.stringify(results));\r\n    }\r\n  };\r\n\r\n  // Check if this is a test query\r\n  const isTestQuery = query.toLowerCase() === 'test';\r\n\r\n  // Handle new search from header - makes its own API request\r\n  const handleHeaderSearch = async (searchQuery: string) => {\r\n    console.log('🔍 HEADER SEARCH initiated:', { searchQuery });\r\n    \r\n    if (!searchQuery.trim()) return;\r\n    \r\n    setIsHeaderSearchLoading(true);\r\n    \r\n    try {\r\n      logger.debug('Header search: Making WiHy API call', { query: searchQuery });\r\n      \r\n      const wihyResponse = await wihyAPI.searchHealth(searchQuery);\r\n      \r\n      if (wihyResponse.success) {\r\n        // Extract response content\r\n        let summary = 'Health information provided';\r\n        if ('data' in wihyResponse) {\r\n          // New unified API response format\r\n          summary = (wihyResponse as any).data?.response || \r\n                   (wihyResponse as any).data?.ai_response?.response || \r\n                   summary;\r\n        } else {\r\n          // Legacy WihyResponse format\r\n          summary = (wihyResponse as any).wihy_response?.core_principle || summary;\r\n        }\r\n        \r\n        // Update our local state and add to chat conversation\r\n        setHeaderSearchResults(summary);\r\n        setHeaderSearchQuery(searchQuery);\r\n        setHeaderApiResponse(wihyResponse);\r\n        \r\n        // Add the new search to the existing chat conversation\r\n        handleAddToChatConversation(searchQuery, summary);\r\n        \r\n        console.log('🔍 HEADER SEARCH state updated:', {\r\n          query: searchQuery,\r\n          hasResults: !!summary,\r\n          timestamp: new Date().toISOString()\r\n        });\r\n        \r\n        logger.info('Header search completed successfully', { query: searchQuery });\r\n        \r\n        console.log('🔍 HEADER SEARCH completed:', {\r\n          query: searchQuery,\r\n          success: true,\r\n          hasResponse: !!summary,\r\n          timestamp: new Date().toISOString()\r\n        });\r\n        \r\n      } else {\r\n        throw new Error('WiHy API request failed');\r\n      }\r\n      \r\n    } catch (error) {\r\n      logger.error('Header search failed:', error);\r\n      setHeaderSearchResults('Sorry, there was an error processing your search. Please try again.');\r\n      setHeaderApiResponse(null);\r\n      \r\n      console.log('🔍 HEADER SEARCH failed:', {\r\n        query: searchQuery,\r\n        error: error.message,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    } finally {\r\n      setIsHeaderSearchLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle new search from ChatWidget\r\n  const handleChatSearch = (query: string) => {\r\n    console.log('🔍 ChatWidget triggered new search:', { query });\r\n    // Clear any header search results when using ChatWidget\r\n    setHeaderSearchResults('');\r\n    setHeaderSearchQuery('');\r\n    setHeaderApiResponse(null);\r\n    // Use the main navigation flow for ChatWidget searches\r\n    onNewSearch(query);\r\n  };\r\n\r\n  // Handle header search - add messages to existing conversation\r\n  const handleAddToChatConversation = (userMessage: string, assistantMessage: string) => {\r\n    console.log('🔍 ATTEMPTING TO ADD TO CHAT:', {\r\n      userMessage,\r\n      assistantMessage: assistantMessage.substring(0, 100) + '...',\r\n      hasAddChatMessage: !!(window as any).addChatMessage,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n    \r\n    if ((window as any).addChatMessage) {\r\n      (window as any).addChatMessage(userMessage, assistantMessage);\r\n    } else {\r\n      console.error('🔍 addChatMessage function not available on window');\r\n    }\r\n  };\r\n\r\n  // Debug logging for state changes\r\n  useEffect(() => {\r\n    console.log('🔍 SEARCHRESULTS STATE DEBUG:', {\r\n      headerSearchQuery,\r\n      originalQuery: query,\r\n      hasHeaderSearchResults: !!headerSearchResults,\r\n      isHeaderSearchLoading,\r\n      chatWidgetKey: `chatwidget-${headerSearchQuery || query}`,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  }, [headerSearchQuery, headerSearchResults, query, isHeaderSearchLoading]);\r\n\r\n  // Clear header search results when main query changes\r\n  useEffect(() => {\r\n    if (query && headerSearchQuery && query !== headerSearchQuery) {\r\n      console.log('🔍 Main query changed, clearing header search results');\r\n      setHeaderSearchResults('');\r\n      setHeaderSearchQuery('');\r\n      setHeaderApiResponse(null);\r\n    }\r\n  }, [query, headerSearchQuery]);\r\n\r\n  // 🔍 SEARCH RESULTS LOGGING: Track prop changes\r\n  useEffect(() => {\r\n    console.log('🔍 SEARCH RESULTS PROPS CHANGED:', {\r\n      query: query,\r\n      timestamp: new Date().toISOString(),\r\n      component: 'SearchResults',\r\n      action: 'propsChanged',\r\n      isLoading: isLoading,\r\n      dataSource: dataSource,\r\n      hasResults: !!results,\r\n      resultsLength: results?.length || 0,\r\n      hasApiResponse: !!apiResponse\r\n    });\r\n  }, [query, results, isLoading, dataSource, apiResponse]);\r\n\r\n  return (\r\n    <div className=\"search-results-container\" style={{ \r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      paddingTop: 'var(--vh-header-height)',\r\n      overflow: 'hidden'\r\n    }}>\r\n      <div style={{ \r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 1000, \r\n        backgroundColor: 'white'\r\n      }}>\r\n        <Header\r\n          variant=\"results\"\r\n          showLogin={true}\r\n          showSearchInput={true}\r\n          onSearchSubmit={handleHeaderSearch}\r\n        />\r\n      </div>\r\n\r\n      {/* Show spinner when loading from parent OR header search */}\r\n      {(isLoading || isHeaderSearchLoading) && (\r\n        <Spinner\r\n          overlay={true}\r\n          title=\"Analyzing with AI...\"\r\n          subtitle=\"Processing your health query...\"\r\n          disableEsc={true}\r\n        />\r\n      )}\r\n      \r\n      {/* Main Content Area with Dashboard Layout */}\r\n      <div style={{ \r\n        minHeight: 'calc(100vh - var(--vh-header-height))',\r\n        overflow: 'hidden',\r\n        padding: windowWidth <= 768 ? '12px' : '20px',\r\n        backgroundColor: '#f8fafc'\r\n      }}>\r\n        \r\n        {hasValidResults ? (\r\n          <div style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: windowWidth <= 768 ? '1fr' : (isDemoMode ? '1fr 2fr' : '2fr 1fr'),\r\n            gridTemplateRows: windowWidth <= 768 ? '1fr 300px' : '1fr',\r\n            gap: '20px',\r\n            maxWidth: isDemoMode ? '1400px' : '1200px',\r\n            margin: '0 auto',\r\n            minHeight: 'calc(100vh - var(--vh-header-height) - 40px)', // Account for padding\r\n            overflow: 'hidden'\r\n          }}>\r\n            \r\n            {/* Chat Widget as Main Content */}\r\n            <div style={{\r\n              backgroundColor: 'white',\r\n              borderRadius: '12px',\r\n              border: '1px solid #e5e7eb',\r\n              boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n              padding: windowWidth <= 768 ? '16px' : '24px',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              overflow: 'hidden'\r\n            }}>\r\n              {/* Demo Toggle Button */}\r\n              <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'flex-end', \r\n                marginBottom: '16px',\r\n                flexShrink: 0\r\n              }}>\r\n                <button\r\n                  onClick={() => setIsDemoMode(!isDemoMode)}\r\n                  style={{\r\n                    padding: '8px 16px',\r\n                    backgroundColor: isDemoMode ? '#10b981' : '#f3f4f6',\r\n                    color: isDemoMode ? 'white' : '#374151',\r\n                    border: 'none',\r\n                    borderRadius: '8px',\r\n                    fontSize: '14px',\r\n                    fontWeight: '500',\r\n                    cursor: 'pointer',\r\n                    transition: 'all 0.2s ease',\r\n                    boxShadow: isDemoMode ? '0 2px 4px rgba(16, 185, 129, 0.2)' : '0 1px 2px rgba(0, 0, 0, 0.1)'\r\n                  }}\r\n                >\r\n                  {isDemoMode ? '📊 Demo Active' : '📊 Show Demo Charts'}\r\n                </button>\r\n              </div>\r\n              \r\n              {/* Chat Widget - header now included inside */}\r\n              <div style={{ flex: 1, overflow: 'hidden' }}>\r\n                <ChatWidget\r\n                  key={`chatwidget-${query}`} // Stable key since we're adding to conversation instead of replacing\r\n                  isOpen={true}\r\n                  onClose={() => {}}\r\n                  currentContext={currentContext}\r\n                  inline={true}\r\n                  searchQuery={query} // Always use original query for initialization\r\n                  onNewSearch={handleChatSearch}\r\n                  onAddMessage={handleAddToChatConversation}\r\n                  searchResponse={(() => {\r\n                    // Use original results for initialization, header search will be added via onAddMessage\r\n                    let extractedResponse = '';\r\n                    if (apiResponse?.data?.ai_response?.response) {\r\n                      extractedResponse = apiResponse.data.ai_response.response;\r\n                    } else if (apiResponse?.data?.response) {\r\n                      extractedResponse = apiResponse.data.response;\r\n                    } else {\r\n                      extractedResponse = results;\r\n                    }\r\n                    \r\n                    console.log('🔍 SEARCHRESULTS DEBUG: Using original results for initialization:', {\r\n                      query,\r\n                      extractedResponse: extractedResponse?.substring(0, 100) + '...',\r\n                      apiResponse: !!apiResponse,\r\n                      results: !!results\r\n                    });\r\n                    \r\n                    return extractedResponse;\r\n                  })()}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Charts Sidebar - conditional content based on demo mode */}\r\n            <div style={{\r\n              padding: windowWidth <= 768 ? '16px' : '20px',\r\n              backgroundColor: '#ffffff',\r\n              borderRadius: '12px',\r\n              boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              overflow: 'hidden'\r\n            }}>\r\n              {isDemoMode ? (\r\n                <>\r\n                  <h3 style={{ marginBottom: '20px', color: '#1f2937', fontSize: '18px', fontWeight: '600', flexShrink: 0 }}>\r\n                    Health Dashboard Demo\r\n                  </h3>\r\n                  <div style={{ \r\n                    flex: 1,\r\n                    overflow: 'auto',\r\n                    paddingRight: '4px'\r\n                  }}>\r\n                    <DashboardCharts period=\"week\" />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <h3 style={{ marginBottom: '20px', color: '#1f2937', fontSize: '18px', fontWeight: '600', flexShrink: 0 }}>\r\n                    Analysis Charts\r\n                  </h3>\r\n                  <div style={{ \r\n                    display: 'flex', \r\n                    flexDirection: 'column', \r\n                    gap: '20px',\r\n                    flex: 1,\r\n                    overflow: 'auto',\r\n                    paddingRight: '4px'\r\n                  }}>\r\n                    {(results || headerSearchResults) && (\r\n                      <>\r\n                        <div>\r\n                          <h4 style={{ marginBottom: '12px', color: '#374151', fontSize: '14px' }}>Quality Analysis</h4>\r\n                          <ResultQualityPie \r\n                            apiResponse={headerApiResponse || apiResponse}\r\n                            query={headerSearchQuery || query}\r\n                            results={headerSearchResults || results} \r\n                            dataSource={dataSource === 'wihy' ? 'vnutrition' : dataSource}\r\n                          />\r\n                        </div>\r\n                        {/* Chart components removed - now handled by vHealthApp with new API structure */}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          !isLoading && !isSearching && (\r\n            <div style={{ \r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              height: '100%',\r\n              textAlign: 'center', \r\n              padding: '40px',\r\n              color: '#6b7280'\r\n            }}>\r\n              <p>No results to display. Try searching for something else.</p>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n\r\n      {/* ImageUploadModal - always available */}\r\n      <ImageUploadModal\r\n        isOpen={isUploadModalOpen}\r\n        onClose={() => setIsUploadModalOpen(false)}\r\n        onAnalysisComplete={handleAnalysisComplete}\r\n        title=\"Upload Image\"\r\n        subtitle=\"Upload images for analysis\"\r\n      />\r\n      \r\n      {/* Add CSS for header search loading animation */}\r\n      <style>{`\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}