{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\ImageUploadModal.tsx\",\n  _s = $RefreshSig$();\n// src/components/ImageUploadModal.tsx\nimport React, { useState } from 'react';\nimport './Spinner.css';\nimport '../styles/VHealthSearch.css';\nimport './ModernImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploadModal = ({\n  isOpen,\n  onClose,\n  onAnalysisComplete,\n  // Updated prop name\n  title = \"Upload Image\",\n  subtitle = \"Upload images for analysis\"\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  if (!isOpen) return null;\n\n  // Handle file drop\n  const handleDrop = async e => {\n    e.preventDefault();\n    setIsDragging(false);\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      await processFile(imageFile);\n    } else {\n      alert('Please upload an image file (JPG, PNG, GIF, etc.)');\n    }\n  };\n\n  // Handle drag events\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n\n  // Handle file input\n  const handleFileInput = async e => {\n    var _e$target$files;\n    console.log('📁 File input triggered');\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    console.log('📁 Selected file:', file);\n    if (file) {\n      await processFile(file);\n    } else {\n      console.log('❌ No file selected');\n    }\n  };\n\n  // Handle URL upload\n  const handleUrlUpload = async () => {\n    if (!imageUrl.trim()) {\n      alert('Please enter a valid image URL');\n      return;\n    }\n    setIsProcessing(true);\n    try {\n      const response = await fetch(imageUrl);\n      const blob = await response.blob();\n      if (!blob.type.startsWith('image/')) {\n        throw new Error('URL does not point to an image');\n      }\n      const file = new File([blob], 'uploaded-image.jpg', {\n        type: blob.type\n      });\n      await processFile(file);\n    } catch (error) {\n      console.error('Error loading image from URL:', error);\n      alert('Failed to load image from URL. Please check the URL and try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Process file and analyze it\n  const processFile = async file => {\n    console.log('🔍 STEP 1: File received:', {\n      name: file.name,\n      type: file.type,\n      size: file.size\n    });\n    setIsProcessing(true);\n    try {\n      console.log('🔍 STEP 2: Using WiHy Scan API...');\n\n      // Import wihyAPI dynamically to avoid circular imports\n      const {\n        wihyAPI\n      } = await import('../services/wihyAPI');\n      console.log('🔍 STEP 3: Making scan API call...');\n      const result = await wihyAPI.scanFood(file);\n      console.log('🔍 STEP 4: Scan API response received:', result);\n\n      // Extract food name from the scan result using unified format\n      let foodName = 'unknown';\n\n      // Type-safe check for unified response format\n      if (result.success && 'data' in result && result.data) {\n        var _unifiedResult$data$a;\n        const unifiedResult = result; // Use any to handle type checking\n\n        // Primary: Get health advice from AI response\n        if ((_unifiedResult$data$a = unifiedResult.data.ai_response) !== null && _unifiedResult$data$a !== void 0 && _unifiedResult$data$a.response) {\n          foodName = unifiedResult.data.ai_response.response;\n          console.log('🔍 Using AI response:', foodName);\n        }\n        // Fallback: Try to get product name or other analysis\n        else if (unifiedResult.data.product_name) {\n          foodName = unifiedResult.data.product_name;\n          console.log('🔍 Using product name:', foodName);\n        } else if (unifiedResult.data.analysis) {\n          foodName = unifiedResult.data.analysis;\n          console.log('🔍 Using analysis:', foodName);\n        } else {\n          foodName = 'Food item scanned';\n          console.log('🔍 Using fallback name');\n        }\n      } else {\n        console.log('❌ No valid response data found');\n        foodName = 'Food analysis unavailable';\n      }\n      console.log('🔍 STEP 5: Extracted food name:', foodName);\n      console.log('🔍 STEP 6: Triggering analysis completion for:', foodName);\n      onAnalysisComplete(foodName);\n    } catch (error) {\n      console.error('❌ Error in processFile:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Handle modal close\n  const handleClose = () => {\n    if (!isProcessing) {\n      onClose();\n      setImageUrl('');\n      setIsDragging(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modern-modal-overlay ${isOpen ? 'open' : ''}`,\n    onClick: handleClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modern-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modern-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-title-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"modal-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal-subtitle\",\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modern-close-btn\",\n          onClick: handleClose,\n          \"aria-label\": \"Close\",\n          disabled: isProcessing,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M18 6L6 18M6 6L18 18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modern-upload-area ${isDragging ? 'dragging' : ''} ${isProcessing ? 'processing' : ''}`,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon-modern\",\n            children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modern-spinner\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"spinner-svg\",\n                width: \"48\",\n                height: \"48\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  fill: \"none\",\n                  strokeDasharray: \"32\",\n                  strokeDashoffset: \"32\",\n                  children: /*#__PURE__*/_jsxDEV(\"animate\", {\n                    attributeName: \"stroke-dashoffset\",\n                    values: \"32;0;32\",\n                    dur: \"1.5s\",\n                    repeatCount: \"indefinite\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"64\",\n              height: \"64\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.5\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"7,10 12,15 17,10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"12\",\n                y1: \"15\",\n                x2: \"12\",\n                y2: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-text-modern\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Analyzing image...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"AI is processing your food photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-text-modern\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: isDragging ? 'Drop image here' : 'Upload food photo'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Drag and drop or\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"upload-link-modern\",\n                onClick: () => {\n                  var _document$getElementB;\n                  return (_document$getElementB = document.getElementById('modal-file-input')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n                },\n                disabled: isProcessing,\n                children: \"browse files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"modal-file-input\",\n          type: \"file\",\n          accept: \"image/*\",\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileInput,\n          disabled: isProcessing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modern-divider\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"divider-text\",\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modern-url-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"url-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"url-icon\",\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            placeholder: \"Paste image URL...\",\n            className: \"modern-url-input\",\n            value: imageUrl,\n            onChange: e => setImageUrl(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                handleUrlUpload();\n              }\n            },\n            disabled: isProcessing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `modern-search-btn ${isProcessing ? 'processing' : ''}`,\n            onClick: handleUrlUpload,\n            disabled: isProcessing || !imageUrl.trim(),\n            children: isProcessing ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"btn-spinner\",\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"12\",\n                cy: \"12\",\n                r: \"10\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                fill: \"none\",\n                strokeDasharray: \"32\",\n                strokeDashoffset: \"32\",\n                children: /*#__PURE__*/_jsxDEV(\"animate\", {\n                  attributeName: \"stroke-dashoffset\",\n                  values: \"32;0;32\",\n                  dur: \"1.5s\",\n                  repeatCount: \"indefinite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"11\",\n                cy: \"11\",\n                r: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M21 21l-4.35-4.35\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modern-upload-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 16v-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 8h.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Supports JPG, PNG, GIF, WebP up to 10MB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploadModal, \"elozZ1ZMZ6BcFXNIvNZkc2TlW1E=\");\n_c = ImageUploadModal;\nexport default ImageUploadModal;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUploadModal","isOpen","onClose","onAnalysisComplete","title","subtitle","_s","isDragging","setIsDragging","imageUrl","setImageUrl","isProcessing","setIsProcessing","handleDrop","e","preventDefault","files","Array","from","dataTransfer","imageFile","find","file","type","startsWith","processFile","alert","handleDragOver","handleDragLeave","handleFileInput","_e$target$files","console","log","target","handleUrlUpload","trim","response","fetch","blob","Error","File","error","name","size","wihyAPI","result","scanFood","foodName","success","data","_unifiedResult$data$a","unifiedResult","ai_response","product_name","analysis","handleClose","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","disabled","width","height","viewBox","fill","stroke","strokeWidth","d","onDrop","onDragOver","onDragLeave","cx","cy","r","strokeDasharray","strokeDashoffset","attributeName","values","dur","repeatCount","points","x1","y1","x2","y2","_document$getElementB","document","getElementById","click","id","accept","style","display","onChange","placeholder","value","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/ImageUploadModal.tsx"],"sourcesContent":["// src/components/ImageUploadModal.tsx\r\nimport React, { useState, useRef } from 'react';\r\nimport './Spinner.css';\r\nimport '../styles/VHealthSearch.css';\r\nimport './ModernImageUpload.css';\r\n\r\ninterface ImageUploadModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onAnalysisComplete: (foodName: string) => void; // Changed from onFileSelect\r\n  title?: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst ImageUploadModal: React.FC<ImageUploadModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onAnalysisComplete, // Updated prop name\r\n  title = \"Upload Image\",\r\n  subtitle = \"Upload images for analysis\"\r\n}) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Handle file drop\r\n  const handleDrop = async (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    \r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    \r\n    if (imageFile) {\r\n      await processFile(imageFile);\r\n    } else {\r\n      alert('Please upload an image file (JPG, PNG, GIF, etc.)');\r\n    }\r\n  };\r\n\r\n  // Handle drag events\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  // Handle file input\r\n  const handleFileInput = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log('📁 File input triggered');\r\n    const file = e.target.files?.[0];\r\n    console.log('📁 Selected file:', file);\r\n    if (file) {\r\n      await processFile(file);\r\n    } else {\r\n      console.log('❌ No file selected');\r\n    }\r\n  };\r\n\r\n  // Handle URL upload\r\n  const handleUrlUpload = async () => {\r\n    if (!imageUrl.trim()) {\r\n      alert('Please enter a valid image URL');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    try {\r\n      const response = await fetch(imageUrl);\r\n      const blob = await response.blob();\r\n      \r\n      if (!blob.type.startsWith('image/')) {\r\n        throw new Error('URL does not point to an image');\r\n      }\r\n\r\n      const file = new File([blob], 'uploaded-image.jpg', { type: blob.type });\r\n      await processFile(file);\r\n    } catch (error) {\r\n      console.error('Error loading image from URL:', error);\r\n      alert('Failed to load image from URL. Please check the URL and try again.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Process file and analyze it\r\n  const processFile = async (file: File) => {\r\n    console.log('🔍 STEP 1: File received:', {\r\n      name: file.name,\r\n      type: file.type,\r\n      size: file.size\r\n    });\r\n    \r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      console.log('🔍 STEP 2: Using WiHy Scan API...');\r\n      \r\n      // Import wihyAPI dynamically to avoid circular imports\r\n      const { wihyAPI } = await import('../services/wihyAPI');\r\n      \r\n      console.log('🔍 STEP 3: Making scan API call...');\r\n      const result = await wihyAPI.scanFood(file);\r\n\r\n      console.log('🔍 STEP 4: Scan API response received:', result);\r\n      \r\n      // Extract food name from the scan result using unified format\r\n      let foodName = 'unknown';\r\n      \r\n      // Type-safe check for unified response format\r\n      if (result.success && 'data' in result && result.data) {\r\n        const unifiedResult = result as any; // Use any to handle type checking\r\n        \r\n        // Primary: Get health advice from AI response\r\n        if (unifiedResult.data.ai_response?.response) {\r\n          foodName = unifiedResult.data.ai_response.response;\r\n          console.log('🔍 Using AI response:', foodName);\r\n        }\r\n        // Fallback: Try to get product name or other analysis\r\n        else if (unifiedResult.data.product_name) {\r\n          foodName = unifiedResult.data.product_name;\r\n          console.log('🔍 Using product name:', foodName);\r\n        }\r\n        else if (unifiedResult.data.analysis) {\r\n          foodName = unifiedResult.data.analysis;\r\n          console.log('🔍 Using analysis:', foodName);\r\n        }\r\n        else {\r\n          foodName = 'Food item scanned';\r\n          console.log('🔍 Using fallback name');\r\n        }\r\n      } else {\r\n        console.log('❌ No valid response data found');\r\n        foodName = 'Food analysis unavailable';\r\n      }\r\n      \r\n      console.log('🔍 STEP 5: Extracted food name:', foodName);\r\n      \r\n      console.log('🔍 STEP 6: Triggering analysis completion for:', foodName);\r\n      onAnalysisComplete(foodName);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error in processFile:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Handle modal close\r\n  const handleClose = () => {\r\n    if (!isProcessing) {\r\n      onClose();\r\n      setImageUrl('');\r\n      setIsDragging(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`modern-modal-overlay ${isOpen ? 'open' : ''}`} onClick={handleClose}>\r\n      <div className=\"modern-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modern-modal-header\">\r\n          <div className=\"modal-title-section\">\r\n            <h2 className=\"modal-title\">{title}</h2>\r\n            <p className=\"modal-subtitle\">{subtitle}</p>\r\n          </div>\r\n          <button \r\n            className=\"modern-close-btn\"\r\n            onClick={handleClose}\r\n            aria-label=\"Close\"\r\n            disabled={isProcessing}\r\n          >\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path d=\"M18 6L6 18M6 6L18 18\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Modern Upload Area */}\r\n        <div \r\n          className={`modern-upload-area ${isDragging ? 'dragging' : ''} ${isProcessing ? 'processing' : ''}`}\r\n          onDrop={handleDrop}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n        >\r\n          <div className=\"upload-content\">\r\n            <div className=\"upload-icon-modern\">\r\n              {isProcessing ? (\r\n                <div className=\"modern-spinner\">\r\n                  <svg className=\"spinner-svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\">\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" strokeDasharray=\"32\" strokeDashoffset=\"32\">\r\n                      <animate attributeName=\"stroke-dashoffset\" values=\"32;0;32\" dur=\"1.5s\" repeatCount=\"indefinite\"/>\r\n                    </circle>\r\n                  </svg>\r\n                </div>\r\n              ) : (\r\n                <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\r\n                  <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\r\n                  <polyline points=\"7,10 12,15 17,10\"/>\r\n                  <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"/>\r\n                </svg>\r\n              )}\r\n            </div>\r\n            \r\n            {isProcessing ? (\r\n              <div className=\"upload-text-modern\">\r\n                <h3>Analyzing image...</h3>\r\n                <p>AI is processing your food photo</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"upload-text-modern\">\r\n                <h3>{isDragging ? 'Drop image here' : 'Upload food photo'}</h3>\r\n                <p>Drag and drop or{' '}\r\n                  <button \r\n                    className=\"upload-link-modern\"\r\n                    onClick={() => document.getElementById('modal-file-input')?.click()}\r\n                    disabled={isProcessing}\r\n                  >\r\n                    browse files\r\n                  </button>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <input\r\n            id=\"modal-file-input\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            style={{ display: 'none' }}\r\n            onChange={handleFileInput}\r\n            disabled={isProcessing}\r\n          />\r\n        </div>\r\n        \r\n        {/* Modern Divider */}\r\n        <div className=\"modern-divider\">\r\n          <span className=\"divider-text\">or</span>\r\n        </div>\r\n        \r\n        {/* Modern URL Input */}\r\n        <div className=\"modern-url-section\">\r\n          <div className=\"url-input-container\">\r\n            <svg className=\"url-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"/>\r\n              <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"/>\r\n            </svg>\r\n            <input\r\n              type=\"url\"\r\n              placeholder=\"Paste image URL...\"\r\n              className=\"modern-url-input\"\r\n              value={imageUrl}\r\n              onChange={(e) => setImageUrl(e.target.value)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  handleUrlUpload();\r\n                }\r\n              }}\r\n              disabled={isProcessing}\r\n            />\r\n            <button \r\n              className={`modern-search-btn ${isProcessing ? 'processing' : ''}`}\r\n              onClick={handleUrlUpload}\r\n              disabled={isProcessing || !imageUrl.trim()}\r\n            >\r\n              {isProcessing ? (\r\n                <svg className=\"btn-spinner\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\r\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" strokeDasharray=\"32\" strokeDashoffset=\"32\">\r\n                    <animate attributeName=\"stroke-dashoffset\" values=\"32;0;32\" dur=\"1.5s\" repeatCount=\"indefinite\"/>\r\n                  </circle>\r\n                </svg>\r\n              ) : (\r\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                  <circle cx=\"11\" cy=\"11\" r=\"8\"/>\r\n                  <path d=\"M21 21l-4.35-4.35\"/>\r\n                </svg>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Modern Info */}\r\n        <div className=\"modern-upload-info\">\r\n          <div className=\"info-content\">\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n              <path d=\"M12 16v-4\"/>\r\n              <path d=\"M12 8h.01\"/>\r\n            </svg>\r\n            <span>Supports JPG, PNG, GIF, WebP up to 10MB</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}