{"ast":null,"code":"import _objectSpread from\"C:/repo/wihy_ui/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// vHealth News API Client Integration\n// Swagger UI Documentation: https://services.wihy.ai/api/docs\n// API Configuration\nconst API_BASE_URL={production:'https://services.wihy.ai',development:'http://localhost:5001'};class VHealthNewsClient{constructor(baseUrl){this.baseUrl=void 0;// Use production by default\nthis.baseUrl=baseUrl||API_BASE_URL.production;}async getArticles(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryParams=new URLSearchParams();if(params.limit)queryParams.append('limit',params.limit.toString());if(params.category)queryParams.append('category',params.category);if(params.source)queryParams.append('source',params.source);if(params.useAI!==undefined)queryParams.append('useAI',params.useAI.toString());const fullUrl=\"\".concat(this.baseUrl,\"/api/news/articles?\").concat(queryParams);console.log('Making API request to:',fullUrl);console.log('Request params:',params);const response=await fetch(fullUrl,{method:'GET',headers:{'Content-Type':'application/json'}});if(!response.ok){throw new Error(\"vHealth News API error! status: \".concat(response.status));}const data=await response.json();console.log('Raw API response:',data);// Ensure we have the correct structure and add legacy compatibility fields to articles\nconst articles=data.articles||[];data.articles=articles.map(article=>_objectSpread(_objectSpread({},article),{},{// Legacy compatibility fields\npublishedDate:article.published_at,pubDate:article.published_at,category:article.ai_category,summary:article.description,tags:[article.ai_category,article.source],media_url:article.image_url,media_thumb_url:article.image_url,relevanceScore:article.quality_score/10,// Convert 1-10 scale to 0-1 scale\nlink:article.url}));console.log('Processed articles:',data.articles.length,'articles');console.log('First processed article:',data.articles[0]);// Ensure we always return a valid response structure\nreturn{success:data.success!==false,articles:data.articles,count:data.count||data.articles.length,sources_used:data.sources_used||[],pagination:data.pagination||{total_items:data.articles.length,current_page:1,per_page:data.articles.length,has_next_page:false},filters_applied:data.filters_applied||{category:params.category||null,source:params.source||'all',limit:params.limit||20,ai_categorization:params.useAI!==false},timestamp:data.timestamp||new Date().toISOString()};}async getCategories(){const response=await fetch(\"\".concat(this.baseUrl,\"/api/news/categories\"));if(!response.ok){throw new Error(\"vHealth News API error! status: \".concat(response.status));}return response.json();}async getStats(){const response=await fetch(\"\".concat(this.baseUrl,\"/api/news/stats\"));if(!response.ok){throw new Error(\"vHealth News API error! status: \".concat(response.status));}return response.json();}async healthCheck(){const response=await fetch(\"\".concat(this.baseUrl,\"/api/health\"));if(!response.ok){throw new Error(\"vHealth News API error! status: \".concat(response.status));}return response.json();}async testSource(source){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:5;const response=await fetch(\"\".concat(this.baseUrl,\"/api/news/test/\").concat(source,\"?limit=\").concat(limit));if(!response.ok){throw new Error(\"vHealth News API error! status: \".concat(response.status));}return response.json();}}// Initialize the client\nconst newsClient=new VHealthNewsClient();// Main functions for legacy compatibility\nexport const fetchNewsFeed=async(categories,limit)=>{try{const category=categories&&categories.length>0?categories[0]:undefined;const response=await newsClient.getArticles({category,limit:limit||20,source:'all',useAI:true});return{success:response.success,articles:response.articles};}catch(error){console.error('vHealth News API error:',error);// Fallback to sample data if API fails\nreturn{success:false,articles:[{id:'error-1',title:'vHealth News Service Temporarily Unavailable',description:'We are currently experiencing technical difficulties with our news service. Please try again later.',content:'Technical difficulties encountered',url:'#',image_url:null,source:'vHealth System',author:null,published_at:new Date().toISOString(),publishedDate:new Date().toISOString(),api_source:'NewsAPI',ai_category:'System Notice',category:'system',time_ago:'Just now',is_recent:true,has_image:false,has_author:false,reading_time:1,quality_score:0,tags:['system','notice']}]};}};export const getArticlesByCategory=async(category,limit)=>{try{var _response$articles,_response$articles2,_response$articles2$,_response$articles3,_response$articles3$;console.log('getArticlesByCategory called with:',{category,limit});const response=await newsClient.getArticles({category,limit:limit||20,source:'all',useAI:true});console.log('getArticlesByCategory API response:',response);console.log('Articles received:',(_response$articles=response.articles)===null||_response$articles===void 0?void 0:_response$articles.length,'articles');console.log('First article category:',((_response$articles2=response.articles)===null||_response$articles2===void 0?void 0:(_response$articles2$=_response$articles2[0])===null||_response$articles2$===void 0?void 0:_response$articles2$.ai_category)||((_response$articles3=response.articles)===null||_response$articles3===void 0?void 0:(_response$articles3$=_response$articles3[0])===null||_response$articles3$===void 0?void 0:_response$articles3$.category));return{success:response.success,articles:response.articles};}catch(error){console.error('vHealth News API error (category):',error);return await fetchNewsFeed([category],limit);}};export const refreshNewsFeed=async()=>{// Refresh news feed with latest articles\nreturn await fetchNewsFeed(undefined,50);};export const searchNewsArticles=async(query,limit)=>{try{// Search by using the query as a category filter for now\n// In future versions, the API might support full-text search\nconst response=await newsClient.getArticles({category:query,limit:limit||20,source:'all',useAI:true});return{success:response.success,articles:response.articles};}catch(error){console.error('vHealth News API error (search):',error);return await fetchNewsFeed(undefined,limit);}};// Additional utility functions for enhanced functionality\nexport const getNewsCategories=async()=>{try{const response=await newsClient.getCategories();return response.success?response.categories:[];}catch(error){console.error('Error fetching categories:',error);// Return default categories matching HealthNewsFeed component\nreturn[{category:'Nutrition',description:'Diet, supplements, and nutritional research'},{category:'Medical Research',description:'Latest medical studies and breakthroughs'},{category:'Public Health',description:'Community health and disease prevention'},{category:'Clinical Studies',description:'Clinical trials and medical research'},{category:'Prevention',description:'Preventive medicine and wellness'},{category:'Mental Health',description:'Mental wellness and psychological health'},{category:'General Health',description:'General health news and information'},{category:'Environment',description:'Environmental health and safety'}];}};export const getNewsStats=async()=>{try{return await newsClient.getStats();}catch(error){console.error('Error fetching news stats:',error);return{error:'Stats unavailable'};}};export const checkNewsServiceHealth=async()=>{try{const health=await newsClient.healthCheck();return health.status==='healthy';}catch(error){console.error('News service health check failed:',error);return false;}};// Export the client for advanced usage\nexport{VHealthNewsClient,newsClient};","map":{"version":3,"names":["API_BASE_URL","production","development","VHealthNewsClient","constructor","baseUrl","getArticles","params","arguments","length","undefined","queryParams","URLSearchParams","limit","append","toString","category","source","useAI","fullUrl","concat","console","log","response","fetch","method","headers","ok","Error","status","data","json","articles","map","article","_objectSpread","publishedDate","published_at","pubDate","ai_category","summary","description","tags","media_url","image_url","media_thumb_url","relevanceScore","quality_score","link","url","success","count","sources_used","pagination","total_items","current_page","per_page","has_next_page","filters_applied","ai_categorization","timestamp","Date","toISOString","getCategories","getStats","healthCheck","testSource","newsClient","fetchNewsFeed","categories","error","id","title","content","author","api_source","time_ago","is_recent","has_image","has_author","reading_time","getArticlesByCategory","_response$articles","_response$articles2","_response$articles2$","_response$articles3","_response$articles3$","refreshNewsFeed","searchNewsArticles","query","getNewsCategories","getNewsStats","checkNewsServiceHealth","health"],"sources":["C:/repo/wihy_ui/client/src/services/newsService.ts"],"sourcesContent":["// vHealth News API Client Integration\r\n// Swagger UI Documentation: https://services.wihy.ai/api/docs\r\n\r\nexport interface NewsArticle {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  content: string;\r\n  url: string;\r\n  link?: string; // Alternative URL field for legacy compatibility\r\n  image_url: string | null;\r\n  source: string;\r\n  author: string | null;\r\n  published_at: string;\r\n  publishedDate?: string; // Alternative date field for legacy compatibility\r\n  pubDate?: string; // Alternative date field for legacy compatibility\r\n  api_source: 'NewsAPI' | 'GNews' | 'NewsData' | 'MediaStack';\r\n  ai_category: string;\r\n  category?: string; // Legacy compatibility\r\n  time_ago: string;\r\n  is_recent: boolean;\r\n  has_image: boolean;\r\n  has_author: boolean;\r\n  reading_time: number;\r\n  quality_score: number;\r\n  tags: string[]; // Legacy compatibility\r\n  summary?: string; // Legacy compatibility\r\n  media_url?: string; // Legacy compatibility\r\n  media_thumb_url?: string; // Legacy compatibility\r\n  relevanceScore?: number; // Legacy compatibility\r\n}\r\n\r\nexport interface ArticlesResponse {\r\n  success: boolean;\r\n  articles: NewsArticle[];\r\n  count: number;\r\n  sources_used: string[];\r\n  pagination: {\r\n    total_items: number;\r\n    current_page: number;\r\n    per_page: number;\r\n    has_next_page: boolean;\r\n  };\r\n  filters_applied: {\r\n    category: string | null;\r\n    source: string;\r\n    limit: number;\r\n    ai_categorization: boolean;\r\n  };\r\n  timestamp: string;\r\n}\r\n\r\nexport interface Category {\r\n  category: string;\r\n  description: string;\r\n}\r\n\r\n// API Configuration\r\nconst API_BASE_URL = {\r\n  production: 'https://services.wihy.ai',\r\n  development: 'http://localhost:5001'\r\n};\r\n\r\nclass VHealthNewsClient {\r\n  private baseUrl: string;\r\n\r\n  constructor(baseUrl?: string) {\r\n    // Use production by default\r\n    this.baseUrl = baseUrl || API_BASE_URL.production;\r\n  }\r\n\r\n  async getArticles(params: {\r\n    limit?: number;\r\n    category?: string;\r\n    source?: 'all' | 'newsapi' | 'gnews' | 'newsdata' | 'mediastack';\r\n    useAI?: boolean;\r\n  } = {}): Promise<ArticlesResponse> {\r\n    const queryParams = new URLSearchParams();\r\n    \r\n    if (params.limit) queryParams.append('limit', params.limit.toString());\r\n    if (params.category) queryParams.append('category', params.category);\r\n    if (params.source) queryParams.append('source', params.source);\r\n    if (params.useAI !== undefined) queryParams.append('useAI', params.useAI.toString());\r\n\r\n    const fullUrl = `${this.baseUrl}/api/news/articles?${queryParams}`;\r\n    console.log('Making API request to:', fullUrl);\r\n    console.log('Request params:', params);\r\n\r\n    const response = await fetch(fullUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`vHealth News API error! status: ${response.status}`);\r\n    }\r\n    \r\n    const data: ArticlesResponse = await response.json();\r\n    console.log('Raw API response:', data);\r\n    \r\n    // Ensure we have the correct structure and add legacy compatibility fields to articles\r\n    const articles = data.articles || [];\r\n    data.articles = articles.map(article => ({\r\n      ...article,\r\n      // Legacy compatibility fields\r\n      publishedDate: article.published_at,\r\n      pubDate: article.published_at,\r\n      category: article.ai_category,\r\n      summary: article.description,\r\n      tags: [article.ai_category, article.source],\r\n      media_url: article.image_url,\r\n      media_thumb_url: article.image_url,\r\n      relevanceScore: article.quality_score / 10, // Convert 1-10 scale to 0-1 scale\r\n      link: article.url\r\n    }));\r\n    \r\n    console.log('Processed articles:', data.articles.length, 'articles');\r\n    console.log('First processed article:', data.articles[0]);\r\n    \r\n    // Ensure we always return a valid response structure\r\n    return {\r\n      success: data.success !== false,\r\n      articles: data.articles,\r\n      count: data.count || data.articles.length,\r\n      sources_used: data.sources_used || [],\r\n      pagination: data.pagination || {\r\n        total_items: data.articles.length,\r\n        current_page: 1,\r\n        per_page: data.articles.length,\r\n        has_next_page: false\r\n      },\r\n      filters_applied: data.filters_applied || {\r\n        category: params.category || null,\r\n        source: params.source || 'all',\r\n        limit: params.limit || 20,\r\n        ai_categorization: params.useAI !== false\r\n      },\r\n      timestamp: data.timestamp || new Date().toISOString()\r\n    };\r\n  }\r\n\r\n  async getCategories(): Promise<{ success: boolean; categories: Category[] }> {\r\n    const response = await fetch(`${this.baseUrl}/api/news/categories`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`vHealth News API error! status: ${response.status}`);\r\n    }\r\n    \r\n    return response.json();\r\n  }\r\n\r\n  async getStats(): Promise<any> {\r\n    const response = await fetch(`${this.baseUrl}/api/news/stats`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`vHealth News API error! status: ${response.status}`);\r\n    }\r\n    \r\n    return response.json();\r\n  }\r\n\r\n  async healthCheck(): Promise<{ status: string; timestamp: string }> {\r\n    const response = await fetch(`${this.baseUrl}/api/health`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`vHealth News API error! status: ${response.status}`);\r\n    }\r\n    \r\n    return response.json();\r\n  }\r\n\r\n  async testSource(source: 'newsapi' | 'gnews' | 'newsdata' | 'mediastack', limit: number = 5): Promise<any> {\r\n    const response = await fetch(`${this.baseUrl}/api/news/test/${source}?limit=${limit}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`vHealth News API error! status: ${response.status}`);\r\n    }\r\n    \r\n    return response.json();\r\n  }\r\n}\r\n\r\n// Initialize the client\r\nconst newsClient = new VHealthNewsClient();\r\n\r\n// Main functions for legacy compatibility\r\nexport const fetchNewsFeed = async (categories?: string[], limit?: number): Promise<{ success: boolean; articles: NewsArticle[] }> => {\r\n  try {\r\n    const category = categories && categories.length > 0 ? categories[0] : undefined;\r\n    const response = await newsClient.getArticles({\r\n      category,\r\n      limit: limit || 20,\r\n      source: 'all',\r\n      useAI: true\r\n    });\r\n    \r\n    return {\r\n      success: response.success,\r\n      articles: response.articles\r\n    };\r\n  } catch (error) {\r\n    console.error('vHealth News API error:', error);\r\n    \r\n    // Fallback to sample data if API fails\r\n    return {\r\n      success: false,\r\n      articles: [{\r\n        id: 'error-1',\r\n        title: 'vHealth News Service Temporarily Unavailable',\r\n        description: 'We are currently experiencing technical difficulties with our news service. Please try again later.',\r\n        content: 'Technical difficulties encountered',\r\n        url: '#',\r\n        image_url: null,\r\n        source: 'vHealth System',\r\n        author: null,\r\n        published_at: new Date().toISOString(),\r\n        publishedDate: new Date().toISOString(),\r\n        api_source: 'NewsAPI',\r\n        ai_category: 'System Notice',\r\n        category: 'system',\r\n        time_ago: 'Just now',\r\n        is_recent: true,\r\n        has_image: false,\r\n        has_author: false,\r\n        reading_time: 1,\r\n        quality_score: 0,\r\n        tags: ['system', 'notice']\r\n      }]\r\n    };\r\n  }\r\n};\r\n\r\nexport const getArticlesByCategory = async (category: string, limit?: number): Promise<{ success: boolean; articles: NewsArticle[] }> => {\r\n  try {\r\n    console.log('getArticlesByCategory called with:', { category, limit });\r\n    \r\n    const response = await newsClient.getArticles({\r\n      category,\r\n      limit: limit || 20,\r\n      source: 'all',\r\n      useAI: true\r\n    });\r\n    \r\n    console.log('getArticlesByCategory API response:', response);\r\n    console.log('Articles received:', response.articles?.length, 'articles');\r\n    console.log('First article category:', response.articles?.[0]?.ai_category || response.articles?.[0]?.category);\r\n    \r\n    return {\r\n      success: response.success,\r\n      articles: response.articles\r\n    };\r\n  } catch (error) {\r\n    console.error('vHealth News API error (category):', error);\r\n    return await fetchNewsFeed([category], limit);\r\n  }\r\n};\r\n\r\nexport const refreshNewsFeed = async (): Promise<{ success: boolean; articles: NewsArticle[] }> => {\r\n  // Refresh news feed with latest articles\r\n  return await fetchNewsFeed(undefined, 50);\r\n};\r\n\r\nexport const searchNewsArticles = async (query: string, limit?: number): Promise<{ success: boolean; articles: NewsArticle[] }> => {\r\n  try {\r\n    // Search by using the query as a category filter for now\r\n    // In future versions, the API might support full-text search\r\n    const response = await newsClient.getArticles({\r\n      category: query,\r\n      limit: limit || 20,\r\n      source: 'all',\r\n      useAI: true\r\n    });\r\n    \r\n    return {\r\n      success: response.success,\r\n      articles: response.articles\r\n    };\r\n  } catch (error) {\r\n    console.error('vHealth News API error (search):', error);\r\n    return await fetchNewsFeed(undefined, limit);\r\n  }\r\n};\r\n\r\n// Additional utility functions for enhanced functionality\r\nexport const getNewsCategories = async (): Promise<Category[]> => {\r\n  try {\r\n    const response = await newsClient.getCategories();\r\n    return response.success ? response.categories : [];\r\n  } catch (error) {\r\n    console.error('Error fetching categories:', error);\r\n    // Return default categories matching HealthNewsFeed component\r\n    return [\r\n      { category: 'Nutrition', description: 'Diet, supplements, and nutritional research' },\r\n      { category: 'Medical Research', description: 'Latest medical studies and breakthroughs' },\r\n      { category: 'Public Health', description: 'Community health and disease prevention' },\r\n      { category: 'Clinical Studies', description: 'Clinical trials and medical research' },\r\n      { category: 'Prevention', description: 'Preventive medicine and wellness' },\r\n      { category: 'Mental Health', description: 'Mental wellness and psychological health' },\r\n      { category: 'General Health', description: 'General health news and information' },\r\n      { category: 'Environment', description: 'Environmental health and safety' }\r\n    ];\r\n  }\r\n};\r\n\r\nexport const getNewsStats = async (): Promise<any> => {\r\n  try {\r\n    return await newsClient.getStats();\r\n  } catch (error) {\r\n    console.error('Error fetching news stats:', error);\r\n    return { error: 'Stats unavailable' };\r\n  }\r\n};\r\n\r\nexport const checkNewsServiceHealth = async (): Promise<boolean> => {\r\n  try {\r\n    const health = await newsClient.healthCheck();\r\n    return health.status === 'healthy';\r\n  } catch (error) {\r\n    console.error('News service health check failed:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Export the client for advanced usage\r\nexport { VHealthNewsClient, newsClient };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}