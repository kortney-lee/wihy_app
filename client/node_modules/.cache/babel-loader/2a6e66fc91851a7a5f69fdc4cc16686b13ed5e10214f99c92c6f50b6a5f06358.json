{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nvar agentNotSupportedInBrowser = new Error(\"AgentPolicy is not supported in browser environment\");\nexport function agentPolicy(_agentSettings) {\n  return {\n    create: function (_nextPolicy, _options) {\n      throw agentNotSupportedInBrowser;\n    }\n  };\n}\nvar AgentPolicy = /** @class */function (_super) {\n  __extends(AgentPolicy, _super);\n  function AgentPolicy(nextPolicy, options) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n    throw agentNotSupportedInBrowser;\n    return _this;\n  }\n  AgentPolicy.prototype.sendRequest = function (_request) {\n    throw agentNotSupportedInBrowser;\n  };\n  return AgentPolicy;\n}(BaseRequestPolicy);\nexport { AgentPolicy };","map":{"version":3,"names":["BaseRequestPolicy","agentNotSupportedInBrowser","Error","agentPolicy","_agentSettings","create","_nextPolicy","_options","AgentPolicy","_super","__extends","nextPolicy","options","_this","call","prototype","sendRequest","_request"],"sources":["C:\\repo\\wihy_ui\\client\\node_modules\\@azure\\ms-rest-js\\lib\\policies\\agentPolicy.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { AgentSettings } from \"../serviceClient\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\nconst agentNotSupportedInBrowser = new Error(\"AgentPolicy is not supported in browser environment\");\n\nexport function agentPolicy(_agentSettings?: AgentSettings): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptionsLike) => {\n      throw agentNotSupportedInBrowser;\n    },\n  };\n}\n\nexport class AgentPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike) {\n    super(nextPolicy, options);\n    throw agentNotSupportedInBrowser;\n  }\n\n  public sendRequest(_request: WebResourceLike): Promise<HttpOperationResponse> {\n    throw agentNotSupportedInBrowser;\n  }\n}\n"],"mappings":"AAAA;AACA;;AAGA,SACEA,iBAAiB,QAIZ,iBAAiB;AAIxB,IAAMC,0BAA0B,GAAG,IAAIC,KAAK,CAAC,qDAAqD,CAAC;AAEnG,OAAM,SAAUC,WAAWA,CAACC,cAA8B;EACxD,OAAO;IACLC,MAAM,EAAE,SAAAA,CAACC,WAA0B,EAAEC,QAAkC;MACrE,MAAMN,0BAA0B;IAClC;GACD;AACH;AAEA,IAAAO,WAAA,0BAAAC,MAAA;EAAiCC,SAAA,CAAAF,WAAA,EAAAC,MAAA;EAC/B,SAAAD,YAAYG,UAAyB,EAAEC,OAAiC;IAAxE,IAAAC,KAAA,GACEJ,MAAA,CAAAK,IAAA,OAAMH,UAAU,EAAEC,OAAO,CAAC;IAC1B,MAAMX,0BAA0B;;EAClC;EAEOO,WAAA,CAAAO,SAAA,CAAAC,WAAW,GAAlB,UAAmBC,QAAyB;IAC1C,MAAMhB,0BAA0B;EAClC,CAAC;EACH,OAAAO,WAAC;AAAD,CAAC,CATgCR,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}