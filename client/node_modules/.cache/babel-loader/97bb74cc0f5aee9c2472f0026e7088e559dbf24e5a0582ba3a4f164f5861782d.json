{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useSearchParams, useNavigate } from 'react-router-dom';\nimport VHealthSearch from './VHealthSearch';\nimport SearchResults from './SearchResults';\nimport './VHealthSearch.css';\n\n// Define a type for the allowed data sources that matches SearchResults requirements\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Results page wrapper to handle URL parameters\nconst ResultsPage = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const query = searchParams.get('q') || '';\n  const handleBackToSearch = () => {\n    navigate('/');\n  };\n  const handleNewSearch = newQuery => {\n    navigate(`/results?q=${encodeURIComponent(newQuery)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(SearchResults, {\n    query: query,\n    results: \"\",\n    onBackToSearch: handleBackToSearch,\n    onNewSearch: handleNewSearch,\n    isLoading: false,\n    dataSource: \"openai\",\n    citations: [],\n    recommendations: [],\n    disclaimer: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App with routing\n_s(ResultsPage, \"4Ej3WJsIE3wmZONCXCgcikfvxmM=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResultsPage;\nconst App = () => {\n  console.log(\"App component rendered\");\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(VHealthSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/results\",\n        element: /*#__PURE__*/_jsxDEV(ResultsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResultsPage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","useSearchParams","useNavigate","VHealthSearch","SearchResults","jsxDEV","_jsxDEV","ResultsPage","_s","searchParams","navigate","query","get","handleBackToSearch","handleNewSearch","newQuery","encodeURIComponent","results","onBackToSearch","onNewSearch","isLoading","dataSource","citations","recommendations","disclaimer","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","console","log","children","path","element","_c2","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport VHealthSearch from './VHealthSearch';\r\nimport SearchResults from './SearchResults';\r\nimport './VHealthSearch.css';\r\n\r\n// Define a type for the allowed data sources that matches SearchResults requirements\r\ntype AllowedDataSource = \"error\" | \"openai\" | \"local\" | \"vnutrition\";\r\n\r\n// Results page wrapper to handle URL parameters\r\nconst ResultsPage: React.FC = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const query = searchParams.get('q') || '';\r\n\r\n  const handleBackToSearch = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleNewSearch = (newQuery: string) => {\r\n    navigate(`/results?q=${encodeURIComponent(newQuery)}`);\r\n  };\r\n\r\n  return (\r\n    <SearchResults\r\n      query={query}\r\n      results=\"\"\r\n      onBackToSearch={handleBackToSearch}\r\n      onNewSearch={handleNewSearch}\r\n      isLoading={false}\r\n      dataSource=\"openai\"\r\n      citations={[]}\r\n      recommendations={[]}\r\n      disclaimer=\"\"\r\n    />\r\n  );\r\n};\r\n\r\n// Main App with routing\r\nconst App: React.FC = () => {\r\n  console.log(\"App component rendered\");\r\n  \r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<VHealthSearch />} />\r\n        <Route path=\"/results\" element={<ResultsPage />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,eAAe,EAAEC,WAAW,QAAQ,kBAAkB;AACvG,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,qBAAqB;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA;AACA,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EACxC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGF,YAAY,CAACG,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;EAEzC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BH,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMI,eAAe,GAAIC,QAAgB,IAAK;IAC5CL,QAAQ,CAAC,cAAcM,kBAAkB,CAACD,QAAQ,CAAC,EAAE,CAAC;EACxD,CAAC;EAED,oBACET,OAAA,CAACF,aAAa;IACZO,KAAK,EAAEA,KAAM;IACbM,OAAO,EAAC,EAAE;IACVC,cAAc,EAAEL,kBAAmB;IACnCM,WAAW,EAAEL,eAAgB;IAC7BM,SAAS,EAAE,KAAM;IACjBC,UAAU,EAAC,QAAQ;IACnBC,SAAS,EAAE,EAAG;IACdC,eAAe,EAAE,EAAG;IACpBC,UAAU,EAAC;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEN,CAAC;;AAED;AAAApB,EAAA,CA5BMD,WAAqB;EAAA,QACFN,eAAe,EACrBC,WAAW;AAAA;AAAA2B,EAAA,GAFxBtB,WAAqB;AA6B3B,MAAMuB,GAAa,GAAGA,CAAA,KAAM;EAC1BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EAErC,oBACE1B,OAAA,CAACR,MAAM;IAAAmC,QAAA,eACL3B,OAAA,CAACP,MAAM;MAAAkC,QAAA,gBACL3B,OAAA,CAACN,KAAK;QAACkC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAE7B,OAAA,CAACH,aAAa;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9CtB,OAAA,CAACN,KAAK;QAACkC,IAAI,EAAC,UAAU;QAACC,OAAO,eAAE7B,OAAA,CAACC,WAAW;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACQ,GAAA,GAXIN,GAAa;AAanB,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}