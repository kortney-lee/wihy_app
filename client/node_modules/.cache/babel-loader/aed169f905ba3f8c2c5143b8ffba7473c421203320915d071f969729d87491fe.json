{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { searchCache } from './services/searchCache';\nimport ImageUploadModal from './components/ImageUploadModal';\nimport LoginButton from './components/LoginButton/LoginButton';\nimport ResultQualityPie from './components/ResultQualityPie';\nimport { processUploadedFoodImage } from './services/apiService';\nimport './VHealthSearch.css';\n\n// Define default topics and resources\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRelatedTopics = [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"];\nconst defaultResources = [{\n  text: \"🩺 mHealth - Mobile Health Solutions\",\n  url: \"https://mhealth.com\"\n}, {\n  text: \"🏥 CDC - Health Guidelines\",\n  url: \"https://cdc.gov/healthliving\"\n}, {\n  text: \"🌍 WHO - Global Health Information\",\n  url: \"https://who.int/health-topics\"\n}];\n\n// Define the dummy data for \"test\" queries\nconst dummyTestData = {\n  query: \"test\",\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\n\n**Recommendations:**\n• Consult healthcare professionals for personalized medical advice\n• Verify information with your doctor or medical provider\n• Follow evidence-based medical guidelines\n• Seek regular medical check-ups and screenings\n\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\n\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\n  relatedTopics: [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"],\n  resources: [{\n    text: \"🩺 mHealth - Mobile Health Solutions\",\n    url: \"#\"\n  }, {\n    text: \"🏥 CDC - Health Guidelines\",\n    url: \"#\"\n  }, {\n    text: \"🌍 WHO - Global Health Information\",\n    url: \"#\"\n  }]\n};\n// Add this function before the SearchResults component\nconst convertLinksToClickable = text => {\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  const parts = text.split(urlRegex);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: parts.map((part, index) => {\n      if (part.match(urlRegex)) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: part,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"inline-link\",\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      }\n      return part;\n    })\n  }, void 0, false);\n};\nconst SearchResults = ({\n  query,\n  results,\n  onBackToSearch,\n  onNewSearch,\n  isLoading = false,\n  dataSource = 'local'\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [newQuery, setNewQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [isUploadLoading, setUploadLoading] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Cache results when they change\n  useEffect(() => {\n    if (query && results && !isLoading) {\n      searchCache.setCachedResult(query, results, window.location.href);\n    }\n  }, [query, results, isLoading]);\n\n  // Add effect to manage body class when modal opens/closes\n  useEffect(() => {\n    if (isUploadModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [isUploadModalOpen]);\n\n  // Add cleanup effect\n  useEffect(() => {\n    return () => {\n      if (typeof image === 'string' && image.startsWith('blob:')) {\n        URL.revokeObjectURL(image);\n      }\n    };\n  }, [image]);\n\n  // Add this effect\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Handle new search submission\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const trimmedQuery = input.trim();\n\n    // Check for test query - return fake data without API call\n    if (trimmedQuery.toLowerCase() === 'test') {\n      console.log('🧪 Test query detected in SearchResults - avoiding API call');\n      onNewSearch(trimmedQuery); // This will trigger the test logic in parent\n      return;\n    }\n    onNewSearch(trimmedQuery);\n  };\n\n  // Handle voice input\n  const handleVoiceInput = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser');\n      return;\n    }\n    if (!recognitionRef.current) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setNewQuery(transcript); // Update the input field\n        setIsListening(false);\n      };\n      recognition.onerror = () => {\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n    }\n    if (!isListening) {\n      recognitionRef.current.start();\n    } else {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      setImage(file);\n      console.log(`Image uploaded: ${file.name}`);\n    }\n  };\n\n  // Clear all search items\n  const handleClearAll = () => {\n    setInput('');\n    setNewQuery(''); // <-- Add this line\n    setImage(null);\n    setCurrentPhotoId(null);\n    setIsListening(false);\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n\n    // Remove CSS class\n    const searchInput = document.querySelector('.results-search-input');\n    if (searchInput) {\n      searchInput.classList.remove('with-image');\n    }\n  };\n\n  // Handle Enter key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleTextSubmit(e);\n    }\n  };\n\n  // Photo modal handlers\n  const handleCameraClick = () => {\n    setIsUploadModalOpen(true);\n  };\n  const handleFileSelect = async file => {\n    setUploadLoading(true); // Use the new state instead\n    setImage(URL.createObjectURL(file));\n    try {\n      const result = await processUploadedFoodImage(file);\n      if (result.success) {\n        // Use the food name and nutrition data\n        setNewQuery(result.foodName);\n\n        // If we have nutrition data\n        if (result.nutrition) {\n          onNewSearch(result.foodName); // Only call search here\n        } else {\n          onNewSearch(result.foodName);\n        }\n      } else {\n        // Handle error\n        setNotification({\n          message: 'Could not identify food in image',\n          type: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error processing image:', error);\n    } finally {\n      setUploadLoading(false); // Reset the loading state\n      setIsUploadModalOpen(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      handleFileSelect(imageFile);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleNewSearchSubmit = e => {\n    e.preventDefault();\n    if (!newQuery.trim()) return;\n    onNewSearch(newQuery);\n    setNewQuery(''); // Reset after search\n  };\n\n  // Check if current query is \"test\" to show dummy data styles\n  const isTestQuery = query.toLowerCase().trim() === 'test';\n\n  // Replace your existing calculateQualityScore function with this one:\n  const calculateQualityScore = () => {\n    // Start with a baseline score\n    let score = 0.5;\n\n    // Special case: Invalid query responses should score ZERO\n    if (/not appear to be a recognized medical term/.test(results) || /not a recognized|unrecognized|isn't recognized/.test(results) || /could not find information|no information found/.test(results) || /does not seem to be|doesn't seem to be/.test(results) || /please provide more|please clarify/.test(results)) {\n      return 0; // Zero score (not 0.25) for nonsensical queries\n    }\n\n    // Check if the query itself looks like gibberish\n    // This catches strings like \"yiiiy\", \"wqerq2\", \"qaoijna\", etc.\n    if (/^[a-z0-9]{1,7}$/i.test(query) && !/^(hiv|flu|cold|covid|bp|bmi|gerd|ibs|std|uti)$/i.test(query)) {\n      return 0; // Zero for short, random character sequences (unless common medical abbreviations)\n    }\n\n    // If error, return low score immediately\n    if (dataSource === 'error') return 0.2;\n\n    // For nutrition data, base score on completeness\n    if (dataSource === 'vnutrition') {\n      try {\n        var _nutrition$macros, _nutrition$macros2;\n        const nutrition = typeof results === 'string' ? JSON.parse(results) : results;\n        if (!nutrition || nutrition === 'null' || nutrition.found === false) {\n          return 0.4; // Incomplete data\n        }\n        // Higher score if detailed nutrition data is available\n        const detailsAvailable = nutrition.calories_per_serving && ((_nutrition$macros = nutrition.macros) === null || _nutrition$macros === void 0 ? void 0 : _nutrition$macros.protein) && ((_nutrition$macros2 = nutrition.macros) === null || _nutrition$macros2 === void 0 ? void 0 : _nutrition$macros2.carbs);\n        return detailsAvailable ? 0.9 : 0.75;\n      } catch {\n        return 0.5; // Default for nutrition if parsing fails\n      }\n    }\n\n    // For text-based search results, analyze content quality\n    const resultsText = results.toLowerCase();\n\n    // Check for academic citations and journal references\n    const hasCitations = /\\b(?:doi|pmid|pubmed|journal|citation)\\b/i.test(resultsText);\n    const hasJournalNames = /\\b(?:jama|nejm|lancet|bmj|nih|nature|science|cell|journal)\\b/i.test(resultsText);\n    const hasAcademicSources = /\\b(?:study|research|clinical trial|meta-analysis|systematic review)\\b/i.test(resultsText);\n\n    // Check for actionable content\n    const hasActionableContent = /\\b(?:recommend|should|can|treatment option|therapy|steps|guidelines|advice)\\b/i.test(resultsText);\n    const hasNumericData = /\\b\\d+(?:\\.\\d+)?%?\\s*(?:mg|g|mcg|iu|percent|patients|cases|risk)\\b/i.test(resultsText);\n\n    // Add points for quality indicators\n    if (hasCitations) score += 0.15;\n    if (hasJournalNames) score += 0.15;\n    if (hasAcademicSources) score += 0.1;\n    if (hasActionableContent) score += 0.1;\n    if (hasNumericData) score += 0.1;\n\n    // Check for lack of specificity\n    const hasVagueLanguage = /\\b(?:may|might|possibly|perhaps|unclear|not certain)\\b/i.test(resultsText);\n\n    // Reduce score for vague content\n    if (hasVagueLanguage && !hasAcademicSources) score -= 0.1;\n\n    // Cap the score between 0.1 and 0.95\n    return Math.min(0.95, Math.max(0.1, score));\n  };\n\n  // Then in your JSX, add the chart above Related Health Topics\n  const resultQualityScore = calculateQualityScore();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(LoginButton, {\n      position: \"top-right\",\n      className: \"results-login-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-search-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNewSearchSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Ask anything about health...\",\n            value: newQuery,\n            onChange: e => setNewQuery(e.target.value),\n            className: \"search-input results-search-input\",\n            \"data-query\": isTestQuery ? 'test' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"image-name\",\n            children: typeof image === 'object' && image !== null ? image.name : 'Uploaded image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setImage(null);\n              setCurrentPhotoId(null);\n              const searchInput = document.querySelector('.results-search-input');\n              if (searchInput) {\n                searchInput.classList.remove('with-image');\n              }\n            },\n            className: \"remove-image\",\n            \"aria-label\": \"Remove image\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-icons\",\n          children: [(newQuery || image) && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleClearAll,\n            className: \"icon-button clear-button\",\n            \"aria-label\": \"Clear all\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCameraClick,\n            className: \"icon-button\",\n            \"aria-label\": \"Upload image\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVoiceInput,\n            className: `icon-button ${isListening ? 'listening' : ''}`,\n            \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"results-header\",\n        children: [\"Search Results for: \\\"\", query, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health-info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-info-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"markdown-content\",\n              children: dataSource === 'vnutrition' ? ((_nutrition$calories_p, _nutrition$macros$pro, _nutrition$macros3, _nutrition$macros$car, _nutrition$macros4, _nutrition$macros$fat, _nutrition$macros5, _nutrition$processed_, _nutrition$verdict) => {\n                let nutrition;\n                try {\n                  nutrition = typeof results === 'string' ? JSON.parse(results) : results;\n                } catch {\n                  nutrition = results;\n                }\n                if (!nutrition || nutrition === 'null') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"No nutrition data found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 30\n                  }, this);\n                }\n                if (nutrition.found === false) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: nutrition.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 30\n                  }, this);\n                }\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: nutrition.item || 'Unknown Product'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Calories per serving: \", (_nutrition$calories_p = nutrition.calories_per_serving) !== null && _nutrition$calories_p !== void 0 ? _nutrition$calories_p : 'N/A']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Protein: \", (_nutrition$macros$pro = (_nutrition$macros3 = nutrition.macros) === null || _nutrition$macros3 === void 0 ? void 0 : _nutrition$macros3.protein) !== null && _nutrition$macros$pro !== void 0 ? _nutrition$macros$pro : 'N/A']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Carbs: \", (_nutrition$macros$car = (_nutrition$macros4 = nutrition.macros) === null || _nutrition$macros4 === void 0 ? void 0 : _nutrition$macros4.carbs) !== null && _nutrition$macros$car !== void 0 ? _nutrition$macros$car : 'N/A']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Fat: \", (_nutrition$macros$fat = (_nutrition$macros5 = nutrition.macros) === null || _nutrition$macros5 === void 0 ? void 0 : _nutrition$macros5.fat) !== null && _nutrition$macros$fat !== void 0 ? _nutrition$macros$fat : 'N/A']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Processed Level: \", (_nutrition$processed_ = nutrition.processed_level) !== null && _nutrition$processed_ !== void 0 ? _nutrition$processed_ : 'N/A']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Ingredients: \", (_nutrition$verdict = nutrition.verdict) !== null && _nutrition$verdict !== void 0 ? _nutrition$verdict : 'N/A']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 23\n                }, this);\n              })() : convertLinksToClickable(results)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-source-indicator\",\n            children: dataSource === 'openai' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Powered by AI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this) : dataSource === 'error' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-source\",\n              children: \"Error retrieving data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"From health database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-chart-container\",\n            style: {\n              marginBottom: \"2rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ResultQualityPie, {\n              qualityScore: resultQualityScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"related-topics-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Related Health Topics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"related-topics-list\",\n              children: isTestQuery ? dummyTestData.relatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onNewSearch(topic),\n                  className: \"topic-button\",\n                  children: topic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 21\n              }, this)) : defaultRelatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onNewSearch(topic),\n                  className: \"topic-button\",\n                  children: topic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resources-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Useful Resources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"resources-list\",\n              children: isTestQuery ? dummyTestData.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: resource.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: resource.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }, this)) : defaultResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: resource.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: resource.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-loading-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clean-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Searching for health information...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n        isOpen: isUploadModalOpen,\n        onClose: () => setIsUploadModalOpen(false),\n        onFileSelect: handleFileSelect,\n        title: \"Upload Health Image\",\n        subtitle: \"Upload food, medical, or health-related images for AI analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"AanjdCSQDekMdS6+gTWhT5m9iRM=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","searchCache","ImageUploadModal","LoginButton","ResultQualityPie","processUploadedFoodImage","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRelatedTopics","defaultResources","text","url","dummyTestData","query","healthInfo","relatedTopics","resources","convertLinksToClickable","urlRegex","parts","split","children","map","part","index","match","href","target","rel","className","fileName","_jsxFileName","lineNumber","columnNumber","SearchResults","results","onBackToSearch","onNewSearch","isLoading","dataSource","_s","input","setInput","image","setImage","currentPhotoId","setCurrentPhotoId","newQuery","setNewQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","notification","setNotification","isUploadLoading","setUploadLoading","recognitionRef","setCachedResult","window","location","document","body","classList","add","remove","startsWith","URL","revokeObjectURL","timer","setTimeout","clearTimeout","handleTextSubmit","e","preventDefault","trim","trimmedQuery","toLowerCase","console","log","handleVoiceInput","alert","current","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","transcript","onerror","onend","start","stop","handleImageUpload","_e$target$files","file","files","name","handleClearAll","searchInput","querySelector","handleKeyPress","key","handleCameraClick","handleFileSelect","createObjectURL","result","success","foodName","nutrition","message","type","error","handleDrop","Array","from","dataTransfer","imageFile","find","handleDragOver","handleNewSearchSubmit","isTestQuery","calculateQualityScore","score","test","_nutrition$macros","_nutrition$macros2","JSON","parse","found","detailsAvailable","calories_per_serving","macros","protein","carbs","resultsText","hasCitations","hasJournalNames","hasAcademicSources","hasActionableContent","hasNumericData","hasVagueLanguage","Math","min","max","resultQualityScore","position","onSubmit","placeholder","value","onChange","onClick","viewBox","fill","d","_nutrition$calories_p","_nutrition$macros$pro","_nutrition$macros3","_nutrition$macros$car","_nutrition$macros4","_nutrition$macros$fat","_nutrition$macros5","_nutrition$processed_","_nutrition$verdict","item","fat","processed_level","verdict","style","marginBottom","qualityScore","topic","resource","isOpen","onClose","onFileSelect","title","subtitle","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/SearchResults.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { searchCache } from './services/searchCache';\r\nimport { photoStorageService } from './services/photoStorageService';\r\nimport { foodAnalysisService } from './components/foodAnalysisService';\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport LoginButton from './components/LoginButton/LoginButton';\r\nimport ResultQualityPie from './components/ResultQualityPie';\r\nimport { \r\n  analyzeFoodImage, \r\n  processUploadedFoodImage, \r\n  fetchNutritionData \r\n} from './services/apiService';\r\nimport './VHealthSearch.css';\r\n\r\n// Define default topics and resources\r\nconst defaultRelatedTopics = [\r\n  \"Nutrition and Diet Guidelines\",\r\n  \"Exercise and Physical Activity\", \r\n  \"Mental Health and Wellness\",\r\n  \"Preventive Care and Screenings\",\r\n  \"Chronic Disease Management\",\r\n  \"Healthy Lifestyle Choices\"\r\n];\r\n\r\nconst defaultResources = [\r\n  { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"https://mhealth.com\" },\r\n  { text: \"🏥 CDC - Health Guidelines\", url: \"https://cdc.gov/healthliving\" },\r\n  { text: \"🌍 WHO - Global Health Information\", url: \"https://who.int/health-topics\" }\r\n];\r\n\r\n// Define the dummy data for \"test\" queries\r\nconst dummyTestData = {\r\n  query: \"test\",\r\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\r\n\r\n**Recommendations:**\r\n• Consult healthcare professionals for personalized medical advice\r\n• Verify information with your doctor or medical provider\r\n• Follow evidence-based medical guidelines\r\n• Seek regular medical check-ups and screenings\r\n\r\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\r\n\r\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\r\n  relatedTopics: [\r\n    \"Nutrition and Diet Guidelines\",\r\n    \"Exercise and Physical Activity\", \r\n    \"Mental Health and Wellness\",\r\n    \"Preventive Care and Screenings\",\r\n    \"Chronic Disease Management\",\r\n    \"Healthy Lifestyle Choices\"\r\n  ],\r\n  resources: [\r\n    { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"#\" },\r\n    { text: \"🏥 CDC - Health Guidelines\", url: \"#\" },\r\n    { text: \"🌍 WHO - Global Health Information\", url: \"#\" }\r\n  ]\r\n};\r\n\r\ninterface SearchResultsProps {\r\n  query: string;\r\n  results: string;\r\n  onBackToSearch: () => void;\r\n  onNewSearch: (query: string, results?: string, dataSource?: string) => void;\r\n  isLoading: boolean;\r\n  dataSource: \"openai\" | \"local\" | \"error\" | \"vnutrition\"; // <-- Add \"vnutrition\"\r\n}\r\n\r\n// Add this function before the SearchResults component\r\nconst convertLinksToClickable = (text: string): JSX.Element => {\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  const parts = text.split(urlRegex);\r\n  \r\n  return (\r\n    <>\r\n      {parts.map((part, index) => {\r\n        if (part.match(urlRegex)) {\r\n          return (\r\n            <a \r\n              key={index} \r\n              href={part} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"inline-link\"\r\n            >\r\n              {part}\r\n            </a>\r\n          );\r\n        }\r\n        return part;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SearchResults: React.FC<SearchResultsProps> = ({ \r\n  query, \r\n  results, \r\n  onBackToSearch,\r\n  onNewSearch,\r\n  isLoading = false,\r\n  dataSource = 'local'\r\n}) => {\r\n  const [input, setInput] = useState('');\r\n  const [image, setImage] = useState<File | string | null>(null);\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [newQuery, setNewQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [notification, setNotification] = useState<{message: string, type: string} | null>(null);\r\n  const [isUploadLoading, setUploadLoading] = useState(false);\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // Cache results when they change\r\n  useEffect(() => {\r\n    if (query && results && !isLoading) {\r\n      searchCache.setCachedResult(query, results, window.location.href);\r\n    }\r\n  }, [query, results, isLoading]);\r\n\r\n  // Add effect to manage body class when modal opens/closes\r\n  useEffect(() => {\r\n    if (isUploadModalOpen) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      document.body.classList.remove('modal-open');\r\n    };\r\n  }, [isUploadModalOpen]);\r\n\r\n  // Add cleanup effect\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typeof image === 'string' && image.startsWith('blob:')) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [image]);\r\n\r\n  // Add this effect\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Handle new search submission\r\n  const handleTextSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    \r\n    const trimmedQuery = input.trim();\r\n    \r\n    // Check for test query - return fake data without API call\r\n    if (trimmedQuery.toLowerCase() === 'test') {\r\n      console.log('🧪 Test query detected in SearchResults - avoiding API call');\r\n      onNewSearch(trimmedQuery); // This will trigger the test logic in parent\r\n      return;\r\n    }\r\n    \r\n    onNewSearch(trimmedQuery);\r\n  };\r\n\r\n  // Handle voice input\r\n  const handleVoiceInput = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (!recognitionRef.current) {\r\n      const recognition = new (window as any).webkitSpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      recognition.lang = 'en-US';\r\n\r\n      recognition.onstart = () => {\r\n        setIsListening(true);\r\n      };\r\n\r\n      recognition.onresult = (event: any) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setNewQuery(transcript); // Update the input field\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onerror = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    }\r\n\r\n    if (!isListening) {\r\n      recognitionRef.current.start();\r\n    } else {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setImage(file);\r\n      console.log(`Image uploaded: ${file.name}`);\r\n    }\r\n  };\r\n\r\n  // Clear all search items\r\n  const handleClearAll = () => {\r\n    setInput('');\r\n    setNewQuery(''); // <-- Add this line\r\n    setImage(null);\r\n    setCurrentPhotoId(null);\r\n    setIsListening(false);\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n    }\r\n    \r\n    // Remove CSS class\r\n    const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n    if (searchInput) {\r\n      searchInput.classList.remove('with-image');\r\n    }\r\n  };\r\n\r\n  // Handle Enter key press\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleTextSubmit(e as any);\r\n    }\r\n  };\r\n\r\n  // Photo modal handlers\r\n  const handleCameraClick = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  const handleFileSelect = async (file: File) => {\r\n    setUploadLoading(true); // Use the new state instead\r\n    setImage(URL.createObjectURL(file));\r\n    \r\n    try {\r\n      const result = await processUploadedFoodImage(file);\r\n      \r\n      if (result.success) {\r\n        // Use the food name and nutrition data\r\n        setNewQuery(result.foodName);\r\n        \r\n        // If we have nutrition data\r\n        if (result.nutrition) {\r\n          onNewSearch(result.foodName); // Only call search here\r\n        } else {\r\n          onNewSearch(result.foodName);\r\n        }\r\n      } else {\r\n        // Handle error\r\n        setNotification({\r\n          message: 'Could not identify food in image',\r\n          type: 'error'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing image:', error);\r\n    } finally {\r\n      setUploadLoading(false); // Reset the loading state\r\n      setIsUploadModalOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    if (imageFile) {\r\n      handleFileSelect(imageFile);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewSearchSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newQuery.trim()) return;\r\n    onNewSearch(newQuery);\r\n    setNewQuery(''); // Reset after search\r\n  };\r\n\r\n  // Check if current query is \"test\" to show dummy data styles\r\n  const isTestQuery = query.toLowerCase().trim() === 'test';\r\n\r\n  // Replace your existing calculateQualityScore function with this one:\r\n  const calculateQualityScore = (): number => {\r\n    // Start with a baseline score\r\n    let score = 0.5;\r\n    \r\n    // Special case: Invalid query responses should score ZERO\r\n    if (/not appear to be a recognized medical term/.test(results) || \r\n        /not a recognized|unrecognized|isn't recognized/.test(results) ||\r\n        /could not find information|no information found/.test(results) ||\r\n        /does not seem to be|doesn't seem to be/.test(results) ||\r\n        /please provide more|please clarify/.test(results)) {\r\n      return 0; // Zero score (not 0.25) for nonsensical queries\r\n    }\r\n    \r\n    // Check if the query itself looks like gibberish\r\n    // This catches strings like \"yiiiy\", \"wqerq2\", \"qaoijna\", etc.\r\n    if (/^[a-z0-9]{1,7}$/i.test(query) && !/^(hiv|flu|cold|covid|bp|bmi|gerd|ibs|std|uti)$/i.test(query)) {\r\n      return 0; // Zero for short, random character sequences (unless common medical abbreviations)\r\n    }\r\n    \r\n    // If error, return low score immediately\r\n    if (dataSource === 'error') return 0.2;\r\n    \r\n    // For nutrition data, base score on completeness\r\n    if (dataSource === 'vnutrition') {\r\n      try {\r\n        const nutrition = typeof results === 'string' ? JSON.parse(results) : results;\r\n        if (!nutrition || nutrition === 'null' || nutrition.found === false) {\r\n          return 0.4; // Incomplete data\r\n        }\r\n        // Higher score if detailed nutrition data is available\r\n        const detailsAvailable = nutrition.calories_per_serving && \r\n                                nutrition.macros?.protein && \r\n                                nutrition.macros?.carbs;\r\n        return detailsAvailable ? 0.9 : 0.75;\r\n      } catch {\r\n        return 0.5; // Default for nutrition if parsing fails\r\n      }\r\n    }\r\n    \r\n    // For text-based search results, analyze content quality\r\n    const resultsText = results.toLowerCase();\r\n    \r\n    // Check for academic citations and journal references\r\n    const hasCitations = /\\b(?:doi|pmid|pubmed|journal|citation)\\b/i.test(resultsText);\r\n    const hasJournalNames = /\\b(?:jama|nejm|lancet|bmj|nih|nature|science|cell|journal)\\b/i.test(resultsText);\r\n    const hasAcademicSources = /\\b(?:study|research|clinical trial|meta-analysis|systematic review)\\b/i.test(resultsText);\r\n    \r\n    // Check for actionable content\r\n    const hasActionableContent = /\\b(?:recommend|should|can|treatment option|therapy|steps|guidelines|advice)\\b/i.test(resultsText);\r\n    const hasNumericData = /\\b\\d+(?:\\.\\d+)?%?\\s*(?:mg|g|mcg|iu|percent|patients|cases|risk)\\b/i.test(resultsText);\r\n    \r\n    // Add points for quality indicators\r\n    if (hasCitations) score += 0.15;\r\n    if (hasJournalNames) score += 0.15;\r\n    if (hasAcademicSources) score += 0.1;\r\n    if (hasActionableContent) score += 0.1;\r\n    if (hasNumericData) score += 0.1;\r\n    \r\n    // Check for lack of specificity\r\n    const hasVagueLanguage = /\\b(?:may|might|possibly|perhaps|unclear|not certain)\\b/i.test(resultsText);\r\n    \r\n    // Reduce score for vague content\r\n    if (hasVagueLanguage && !hasAcademicSources) score -= 0.1;\r\n    \r\n    // Cap the score between 0.1 and 0.95\r\n    return Math.min(0.95, Math.max(0.1, score));\r\n  };\r\n\r\n  // Then in your JSX, add the chart above Related Health Topics\r\n  const resultQualityScore = calculateQualityScore();\r\n\r\n  return (\r\n    <div className={`results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`}>\r\n      <LoginButton \r\n        position=\"top-right\"\r\n        className=\"results-login-button\"\r\n      />\r\n\r\n      {/* Always show header */}\r\n      <div className=\"results-search-header\">\r\n        <div className=\"search-input-container\">\r\n          <form onSubmit={handleNewSearchSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ask anything about health...\"\r\n              value={newQuery}\r\n              onChange={(e) => setNewQuery(e.target.value)}\r\n              className=\"search-input results-search-input\"\r\n              data-query={isTestQuery ? 'test' : ''}\r\n            />\r\n          </form>\r\n          \r\n          {/* Show image chip when image is uploaded */}\r\n          {image && (\r\n            <div className=\"image-preview\">\r\n              <div className=\"image-icon\">📷</div>\r\n              <span className=\"image-name\">\r\n                {typeof image === 'object' && image !== null ? image.name : 'Uploaded image'}\r\n              </span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setImage(null);\r\n                  setCurrentPhotoId(null);\r\n                  const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n                  if (searchInput) {\r\n                    searchInput.classList.remove('with-image');\r\n                  }\r\n                }}\r\n                className=\"remove-image\"\r\n                aria-label=\"Remove image\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"search-icons\">\r\n            {(newQuery || image) && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleClearAll}\r\n                className=\"icon-button clear-button\"\r\n                aria-label=\"Clear all\"\r\n              >\r\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n                </svg>\r\n              </button>\r\n            )}\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCameraClick}\r\n              className=\"icon-button\"\r\n              aria-label=\"Upload image\"\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n              </svg>\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleVoiceInput}\r\n              className={`icon-button ${isListening ? 'listening' : ''}`}\r\n              aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n                <path d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Always show Results Content */}\r\n      <div className=\"results-container\">\r\n        <h1 className=\"results-header\">Search Results for: \"{query}\"</h1>\r\n        \r\n        <div className=\"results-content\">\r\n          <div className=\"health-info-card\">\r\n            <div className=\"health-info-content\">\r\n              {/* Use the link conversion function */}\r\n              <div className=\"markdown-content\">\r\n                {dataSource === 'vnutrition' ? (\r\n                  (() => {\r\n                    let nutrition;\r\n                    try {\r\n                      nutrition = typeof results === 'string' ? JSON.parse(results) : results;\r\n                    } catch {\r\n                      nutrition = results;\r\n                    }\r\n                    if (!nutrition || nutrition === 'null') {\r\n                      return <div>No nutrition data found.</div>;\r\n                    }\r\n                    if (nutrition.found === false) {\r\n                      return <div>{nutrition.message}</div>;\r\n                    }\r\n                    return (\r\n                      <div>\r\n                        <h3>{nutrition.item || 'Unknown Product'}</h3>\r\n                        <ul>\r\n                          <li>Calories per serving: {nutrition.calories_per_serving ?? 'N/A'}</li>\r\n                          <li>Protein: {nutrition.macros?.protein ?? 'N/A'}</li>\r\n                          <li>Carbs: {nutrition.macros?.carbs ?? 'N/A'}</li>\r\n                          <li>Fat: {nutrition.macros?.fat ?? 'N/A'}</li>\r\n                          <li>Processed Level: {nutrition.processed_level ?? 'N/A'}</li>\r\n                          <li>Ingredients: {nutrition.verdict ?? 'N/A'}</li>\r\n                        </ul>\r\n                      </div>\r\n                    );\r\n                  })()\r\n                ) : (\r\n                  convertLinksToClickable(results)\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"data-source-indicator\">\r\n              {dataSource === 'openai' ? (\r\n                <span>Powered by AI</span>\r\n              ) : dataSource === 'error' ? (\r\n                <span className=\"error-source\">Error retrieving data</span>\r\n              ) : (\r\n                <span>From health database</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"sidebar\">\r\n            {/* Add the quality chart here */}\r\n            <div className=\"quality-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n              <ResultQualityPie qualityScore={resultQualityScore} />\r\n            </div>\r\n            \r\n            <div className=\"related-topics-card\">\r\n              <h3>Related Health Topics</h3>\r\n              <ul className=\"related-topics-list\">\r\n                {isTestQuery ? (\r\n                  dummyTestData.relatedTopics.map((topic, index) => (\r\n                    <li key={index}>\r\n                      <button \r\n                        onClick={() => onNewSearch(topic)}\r\n                        className=\"topic-button\"\r\n                      >\r\n                        {topic}\r\n                      </button>\r\n                    </li>\r\n                  ))\r\n                ) : (\r\n                  defaultRelatedTopics.map((topic, index) => (\r\n                    <li key={index}>\r\n                      <button \r\n                        onClick={() => onNewSearch(topic)}\r\n                        className=\"topic-button\"\r\n                      >\r\n                        {topic}\r\n                      </button>\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"resources-card\">\r\n              <h3>Useful Resources</h3>\r\n              <ul className=\"resources-list\">\r\n                {isTestQuery ? (\r\n                  dummyTestData.resources.map((resource, index) => (\r\n                    <li key={index}>\r\n                      <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {resource.text}\r\n                      </a>\r\n                    </li>\r\n                  ))\r\n                ) : (\r\n                  defaultResources.map((resource, index) => (\r\n                    <li key={index}>\r\n                      <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {resource.text}\r\n                      </a>\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Loading State Overlay - Only shows when loading */}\r\n        {isLoading && (\r\n          <div className=\"results-loading-overlay\">\r\n            <div className=\"results-loading-content\">\r\n              <div className=\"clean-spinner\"></div>\r\n              <p>Searching for health information...</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* ImageUploadModal - always available */}\r\n        <ImageUploadModal\r\n          isOpen={isUploadModalOpen}\r\n          onClose={() => setIsUploadModalOpen(false)}\r\n          onFileSelect={handleFileSelect}\r\n          title=\"Upload Health Image\"\r\n          subtitle=\"Upload food, medical, or health-related images for AI analysis\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}