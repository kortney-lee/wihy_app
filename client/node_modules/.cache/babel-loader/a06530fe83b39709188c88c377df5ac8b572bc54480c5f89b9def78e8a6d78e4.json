{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\components\\\\HealthNewsFeed.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { fetchNewsFeed, getArticlesByCategory } from '../services/newsService';\nimport { useNavigate } from 'react-router-dom';\nimport './HealthNewsFeed.css';\n\n// Just update the props interface to receive the functions from the parent\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Define placeholder images by category\nconst PLACEHOLDER_IMAGES = {\n  'Nutrition & Diet': ['https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&q=80', 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&q=80', 'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80', 'https://images.unsplash.com/photo-1547592180-85f173990554?w=800&q=80'],\n  'Medical Research': ['https://images.unsplash.com/photo-1582719508461-905c673771fd?w=800&q=80', 'https://images.unsplash.com/photo-1579154204601-01588f351e67?w=800&q=80', 'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80', 'https://images.unsplash.com/photo-1581093588401-fbb62a02f120?w=800&q=80'],\n  'Public Health': ['https://images.unsplash.com/photo-1585435557343-3b092031a831?w=800&q=80', 'https://images.unsplash.com/photo-1530497610245-94d3c16cda28?w=800&q=80', 'https://images.unsplash.com/photo-1584017911766-d451b3d0e843?w=800&q=80', 'https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80'],\n  'Clinical Studies': ['https://images.unsplash.com/photo-1579684385127-1ef15d508118?w=800&q=80', 'https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?w=800&q=80', 'https://images.unsplash.com/photo-1624727828489-a1e03b79bba8?w=800&q=80', 'https://images.unsplash.com/photo-1516069677022-53fe679c7ccb?w=800&q=80'],\n  'Disease Prevention': ['https://images.unsplash.com/photo-1584982751601-97dcc096659c?w=800&q=80', 'https://images.unsplash.com/photo-1598256989800-fe5f95da9787?w=800&q=80', 'https://images.unsplash.com/photo-1576091160550-2173dba999ef?w=800&q=80', 'https://images.unsplash.com/photo-1603398938378-e54eab446dde?w=800&q=80'],\n  'Mental Health': ['https://images.unsplash.com/photo-1493836512294-502baa1986e2?w=800&q=80', 'https://images.unsplash.com/photo-1527736947477-2790e28f3443?w=800&q=80', 'https://images.unsplash.com/photo-1546290581-22fe67c7bd0e?w=800&q=80', 'https://images.unsplash.com/photo-1569893033503-9204c3ab911c?w=800&q=80'],\n  'General Health': ['https://images.unsplash.com/photo-1498837167922-ddd27525d352?w=800&q=80', 'https://images.unsplash.com/photo-1511688878353-3a2f5be94cd7?w=800&q=80', 'https://images.unsplash.com/photo-1571019613576-2b22c76fd955?w=800&q=80', 'https://images.unsplash.com/photo-1579126038374-6064e9370f0f?w=800&q=80'],\n  'default': ['https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80', 'https://images.unsplash.com/photo-1538108149393-fbbd81895907?w=800&q=80', 'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80', 'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80']\n};\n\n// Helper function to get a random placeholder image for a category\nconst getRandomPlaceholderImage = category => {\n  // Default to 'default' category if the category doesn't exist or is not provided\n  const categoryImages = PLACEHOLDER_IMAGES[category || ''] || PLACEHOLDER_IMAGES['default'];\n\n  // Get a random image from the array\n  const randomIndex = Math.floor(Math.random() * categoryImages.length);\n  return categoryImages[randomIndex];\n};\n\n// Helper function to get a color based on category\nconst getCategoryColor = category => {\n  if (!category) return '#94a3b8';\n  const colors = {\n    'Nutrition & Diet': '#4caf50',\n    'Medical Research': '#2196f3',\n    'Public Health': '#ff9800',\n    'Clinical Studies': '#9c27b0',\n    'Disease Prevention': '#f44336',\n    'Mental Health': '#03a9f4',\n    'General Health': '#ffeb3b'\n  };\n  return colors[category] || '#94a3b8';\n};\nconst formatTimeAgo = dateString => {\n  if (!dateString) return 'Recently';\n  const now = new Date();\n  const date = new Date(dateString);\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n  if (diffInSeconds < 60) return 'Just now';\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} days ago`;\n  return date.toLocaleDateString();\n};\nconst HealthNewsFeed = ({\n  maxArticles = 6,\n  onAnalyzeArticle = query => {\n    // Default implementation that will ensure the button always appears\n    console.log('Article analysis requested:', query);\n    // You could show a toast notification here or redirect to the analysis page\n    window.open(`/analyze?query=${encodeURIComponent(query)}`, '_blank');\n  },\n  setSearchQuery,\n  triggerSearch\n}) => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [analyzingArticle, setAnalyzingArticle] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMorePages, setHasMorePages] = useState(true);\n  const navigate = useNavigate();\n  const prevFetchParamsRef = useRef({\n    category: '',\n    max: 0\n  });\n  const observerTarget = useRef(null);\n  const categories = [{\n    id: 'all',\n    label: 'All Health News'\n  }, {\n    id: 'Nutrition & Diet',\n    label: 'Nutrition'\n  }, {\n    id: 'Medical Research',\n    label: 'Medical Research'\n  }, {\n    id: 'Public Health',\n    label: 'Public Health'\n  }, {\n    id: 'Clinical Studies',\n    label: 'Clinical Studies'\n  }, {\n    id: 'Disease Prevention',\n    label: 'Prevention'\n  }, {\n    id: 'Mental Health',\n    label: 'Mental Health'\n  }, {\n    id: 'General Health',\n    label: 'General Health'\n  }];\n\n  // Fetch initial articles when category changes\n  useEffect(() => {\n    // Only fetch if category or maxArticles actually changed\n    const prevParams = prevFetchParamsRef.current;\n    if (prevParams.category !== selectedCategory || prevParams.max !== maxArticles) {\n      prevFetchParamsRef.current = {\n        category: selectedCategory,\n        max: maxArticles\n      };\n      setCurrentPage(1); // Reset to first page when changing categories\n      setHasMorePages(true); // Reset pagination state\n      fetchHealthNews(true); // true means reset (first page)\n    }\n  }, [selectedCategory, maxArticles]);\n\n  // Set up intersection observer for infinite scroll\n  const handleObserver = useCallback(entries => {\n    const [target] = entries;\n    if (target.isIntersecting && !loading && !loadingMore && hasMorePages) {\n      fetchHealthNews(false); // false means don't reset, load more\n    }\n  }, [loading, loadingMore, hasMorePages]);\n  useEffect(() => {\n    const element = observerTarget.current;\n    const option = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.1\n    };\n    const observer = new IntersectionObserver(handleObserver, option);\n    if (element) observer.observe(element);\n    return () => {\n      if (element) observer.unobserve(element);\n    };\n  }, [handleObserver, observerTarget]);\n\n  // Update the fetchHealthNews function with priority handling\n\n  const fetchHealthNews = async (resetPage = true) => {\n    if (resetPage) {\n      setLoading(true);\n      setCurrentPage(1);\n    } else {\n      setLoadingMore(true);\n      setCurrentPage(prev => prev + 1);\n    }\n    try {\n      const page = resetPage ? 1 : currentPage + 1;\n      console.log('Fetching health news for category:', selectedCategory, 'page:', page);\n      let response;\n\n      // Define all health categories and their priority order\n      const healthCategories = ['Nutrition & Diet', 'Medical Research', 'Public Health', 'Clinical Studies', 'Disease Prevention', 'Mental Health', 'General Health'];\n      if (selectedCategory === 'all') {\n        // Explicitly pass an empty array to ensure NO category filters are applied\n        response = await fetchNewsFeed([], maxArticles * 2);\n        console.log('Fetching ALL news with no category filters');\n      } else {\n        response = await getArticlesByCategory(selectedCategory, maxArticles);\n      }\n      if (response.success && response.articles && response.articles.length > 0) {\n        let processedArticles = response.articles;\n\n        // For \"all\" category, apply our smart sorting to prioritize health\n        if (selectedCategory === 'all') {\n          console.log('Prioritizing health content in all news');\n          processedArticles = sortArticlesByPriority(processedArticles, healthCategories);\n\n          // Optional: limit the number of tech articles\n          const techCount = processedArticles.filter(article => (article.category || '').includes('Tech')).length;\n          console.log(`Found ${techCount} tech articles out of ${processedArticles.length} total`);\n        }\n        if (resetPage) {\n          setArticles(processedArticles);\n        } else {\n          // Append new articles to existing ones\n          setArticles(prev => [...prev, ...processedArticles]);\n        }\n\n        // If API doesn't provide pagination info, infer it from response length\n        if (response.pagination) {\n          setHasMorePages(response.pagination.has_next_page);\n        } else {\n          // If we received at least as many articles as we requested, assume there are more\n          setHasMorePages(response.articles.length >= maxArticles);\n        }\n      } else {\n        console.log('No articles found for the selected category on page', page);\n        // If no articles found and it's \"all\" category, try one more time with really no filters\n        if (selectedCategory === 'all') {\n          console.log('Trying again with absolutely no filters');\n          // Last resort - force no filtering at all\n          try {\n            const fallbackResponse = await fetch('/api/news/articles?limit=' + maxArticles);\n            const fallbackData = await fallbackResponse.json();\n            if (fallbackData.success && fallbackData.articles && fallbackData.articles.length > 0) {\n              console.log('Fallback succeeded, got articles');\n              if (resetPage) {\n                setArticles(fallbackData.articles);\n              } else {\n                setArticles(prev => [...prev, ...fallbackData.articles]);\n              }\n              setHasMorePages(fallbackData.articles.length >= maxArticles);\n            } else {\n              if (resetPage) {\n                setArticles([]);\n              }\n              setHasMorePages(false);\n            }\n          } catch (fallbackError) {\n            console.error('Even fallback failed:', fallbackError);\n            if (resetPage) {\n              setArticles([]);\n            }\n            setHasMorePages(false);\n          }\n        } else {\n          if (resetPage) {\n            setArticles([]);\n          }\n          setHasMorePages(false);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching health news:', error);\n      if (resetPage) {\n        setArticles([]);\n      }\n      setHasMorePages(false);\n    } finally {\n      setLoading(false);\n      setLoadingMore(false);\n    }\n  };\n\n  // Update the sortArticlesByPriority function to properly prioritize health categories\n\n  const sortArticlesByPriority = (articles, priorityCategories) => {\n    // Create a copy of the articles array\n    const sortedArticles = [...articles];\n\n    // Health-related keywords to identify health content\n    const healthKeywords = ['health', 'medical', 'medicine', 'doctor', 'patient', 'hospital', 'disease', 'treatment', 'cure', 'wellness', 'fitness', 'diet', 'nutrition', 'mental', 'therapy', 'clinical', 'drug', 'vaccine', 'symptom', 'diagnosis', 'cancer', 'heart', 'diabetes', 'covid'];\n\n    // Define categories that should be deprioritized\n    const deprioritizedCategories = ['Tech', 'Technology'];\n\n    // Define a function to get priority score (lower is higher priority)\n    const getPriorityScore = article => {\n      const category = article.category || '';\n      const title = article.title || '';\n      const description = article.description || '';\n\n      // 1. First priority: Exact match with health categories\n      const priorityIndex = priorityCategories.findIndex(cat => category.includes(cat));\n      if (priorityIndex >= 0) {\n        return priorityIndex; // Health category (0-6 range)\n      }\n\n      // 2. Second priority: Contains health keywords in title or description\n      const hasHealthKeyword = healthKeywords.some(keyword => title.toLowerCase().includes(keyword) || description.toLowerCase().includes(keyword));\n      if (hasHealthKeyword) {\n        return 50; // Health content but not in priority categories\n      }\n\n      // 3. Third priority: Not tech\n      const isTechCategory = deprioritizedCategories.some(tech => category.includes(tech));\n      if (isTechCategory) {\n        return 1000; // Tech should be shown last\n      }\n\n      // 4. Default priority for other content\n      return 100; // Other content (middle priority)\n    };\n\n    // Sort articles by priority score\n    sortedArticles.sort((a, b) => {\n      const priorityA = getPriorityScore(a);\n      const priorityB = getPriorityScore(b);\n\n      // First sort by priority category\n      if (priorityA !== priorityB) {\n        return priorityA - priorityB;\n      }\n\n      // If same priority category, sort by date (newest first)\n      const dateA = a.publishedDate || a.published_date || '';\n      const dateB = b.publishedDate || b.published_date || '';\n      if (dateA && dateB) {\n        return new Date(dateB).getTime() - new Date(dateA).getTime();\n      }\n      return 0;\n    });\n    return sortedArticles;\n  };\n\n  // Complete the diversifySources function that was cut off\n\n  // Function to ensure diversity of sources\n  const diversifySources = articles => {\n    if (!articles || articles.length <= 4) return articles;\n\n    // Group articles by source\n    const sourceMap = {};\n    articles.forEach(article => {\n      const source = article.source || 'unknown';\n      if (!sourceMap[source]) {\n        sourceMap[source] = [];\n      }\n      sourceMap[source].push(article);\n    });\n\n    // Get all unique sources\n    const sources = Object.keys(sourceMap);\n    console.log('Available sources:', sources);\n\n    // If we only have one source, return original articles\n    if (sources.length <= 1) return articles;\n\n    // Build a diversified list by alternating between sources\n    const diversified = [];\n    let remainingArticles = [...articles];\n\n    // Limit articles per source based on how many sources we have\n    const maxPerSource = Math.max(2, Math.ceil(articles.length / sources.length));\n\n    // First pass: Take up to the limit from each source\n    sources.forEach(source => {\n      const sourceArticles = sourceMap[source].slice(0, maxPerSource);\n      diversified.push(...sourceArticles);\n\n      // Remove the ones we've taken\n      remainingArticles = remainingArticles.filter(article => !sourceArticles.includes(article));\n    });\n\n    // Add any remaining articles up to the original length\n    if (remainingArticles.length > 0) {\n      const neededCount = articles.length - diversified.length;\n      diversified.push(...remainingArticles.slice(0, neededCount));\n    }\n    console.log(`Source diversity: from ${articles.length} articles with ${sources.length} sources, created ${diversified.length} diversified articles`);\n    return diversified;\n  };\n  const handleCategoryChange = categoryId => {\n    setSelectedCategory(categoryId);\n\n    // Reset search query and trigger a new search if category is not 'all'\n    if (categoryId !== 'all' && setSearchQuery && triggerSearch) {\n      setSearchQuery(''); // Reset search query\n      triggerSearch(); // Trigger search\n    }\n  };\n  const handleAnalyzeWithWihy = async (article, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const query = article.title;\n    setAnalyzingArticle(article.id || null);\n    try {\n      await onAnalyzeArticle(query);\n    } catch (error) {\n      console.error('Error analyzing article:', error);\n    } finally {\n      setAnalyzingArticle(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health-news-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-selector\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `category-button ${selectedCategory === category.id ? 'active' : ''}`,\n        onClick: () => setSelectedCategory(category.id),\n        children: category.label\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading health news...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [articles.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-articles\",\n        children: \"No articles found for the selected category. Try selecting a different category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-grid\",\n        children: articles.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-card\",\n          onClick: () => {\n            if (article.link || article.url) {\n              window.open(article.link || article.url, '_blank');\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-image\",\n            children: article.image_url || article.thumbnail || article.imageUrl || article.thumbnailUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: article.image_url || article.thumbnail || article.imageUrl || article.thumbnailUrl,\n              alt: article.title,\n              onError: e => {\n                console.log('Image failed to load:', article.image_url || article.thumbnail);\n                e.target.src = getRandomPlaceholderImage(article.category);\n                e.target.classList.add('placeholder-image');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getRandomPlaceholderImage(article.category),\n              alt: article.title || 'Health article',\n              className: \"placeholder-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-meta\",\n            children: [article.category ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category-tag\",\n              style: {\n                backgroundColor: getCategoryColor(article.category)\n              },\n              children: article.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category-tag tech\",\n              children: \"TECH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"published-date\",\n              children: formatTimeAgo(article.publishedDate || article.published_date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"article-title\",\n            children: article.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"article-summary\",\n            children: article.description || article.summary || 'No description available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"article-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relevance-score\",\n              children: [\"Relevance: \", Math.round((article.relevanceScore || 0) * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: article.url || article.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"read-more\",\n              onClick: e => e.stopPropagation(),\n              children: \"Read Full Article \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 19\n          }, this), onAnalyzeArticle && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"analyze-wihy-btn\",\n            onClick: e => handleAnalyzeWithWihy(article, e),\n            disabled: analyzingArticle === article.id,\n            children: analyzingArticle === article.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analyze-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 27\n              }, this), \"Analyzing...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"Analyze with WIHY\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 21\n          }, this)]\n        }, article.id || article.url, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: observerTarget,\n        style: {\n          height: '20px',\n          margin: '20px 0'\n        },\n        children: loadingMore && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-more\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading more articles...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n};\n\n// Make sure to export the component as default\n_s(HealthNewsFeed, \"33OUgWGfZhSnV2lW9V04H264DRQ=\", false, function () {\n  return [useNavigate];\n});\n_c = HealthNewsFeed;\nexport default HealthNewsFeed;\nvar _c;\n$RefreshReg$(_c, \"HealthNewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","fetchNewsFeed","getArticlesByCategory","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PLACEHOLDER_IMAGES","getRandomPlaceholderImage","category","categoryImages","randomIndex","Math","floor","random","length","getCategoryColor","colors","formatTimeAgo","dateString","now","Date","date","diffInSeconds","getTime","toLocaleDateString","HealthNewsFeed","maxArticles","onAnalyzeArticle","query","console","log","window","open","encodeURIComponent","setSearchQuery","triggerSearch","_s","articles","setArticles","loading","setLoading","loadingMore","setLoadingMore","selectedCategory","setSelectedCategory","analyzingArticle","setAnalyzingArticle","currentPage","setCurrentPage","hasMorePages","setHasMorePages","navigate","prevFetchParamsRef","max","observerTarget","categories","id","label","prevParams","current","fetchHealthNews","handleObserver","entries","target","isIntersecting","element","option","root","rootMargin","threshold","observer","IntersectionObserver","observe","unobserve","resetPage","prev","page","response","healthCategories","success","processedArticles","sortArticlesByPriority","techCount","filter","article","includes","pagination","has_next_page","fallbackResponse","fetch","fallbackData","json","fallbackError","error","priorityCategories","sortedArticles","healthKeywords","deprioritizedCategories","getPriorityScore","title","description","priorityIndex","findIndex","cat","hasHealthKeyword","some","keyword","toLowerCase","isTechCategory","tech","sort","a","b","priorityA","priorityB","dateA","publishedDate","published_date","dateB","diversifySources","sourceMap","forEach","source","push","sources","Object","keys","diversified","remainingArticles","maxPerSource","ceil","sourceArticles","slice","neededCount","handleCategoryChange","categoryId","handleAnalyzeWithWihy","e","preventDefault","stopPropagation","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","link","url","image_url","thumbnail","imageUrl","thumbnailUrl","src","alt","onError","classList","add","style","backgroundColor","summary","round","relevanceScore","href","rel","disabled","ref","height","margin","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/components/HealthNewsFeed.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { fetchNewsFeed, getArticlesByCategory, NewsArticle } from '../services/newsService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './HealthNewsFeed.css';\r\n\r\n// Just update the props interface to receive the functions from the parent\r\ninterface NewsFeedProps {\r\n  maxArticles?: number;\r\n  onAnalyzeArticle?: (query: string) => void;\r\n  setSearchQuery?: (query: string) => void;\r\n  triggerSearch?: () => void;\r\n}\r\n\r\n// Define placeholder images by category\r\nconst PLACEHOLDER_IMAGES: Record<string, string[]> = {\r\n  'Nutrition & Diet': [\r\n    'https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1547592180-85f173990554?w=800&q=80'\r\n  ],\r\n  'Medical Research': [\r\n    'https://images.unsplash.com/photo-1582719508461-905c673771fd?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1579154204601-01588f351e67?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1581093588401-fbb62a02f120?w=800&q=80'\r\n  ],\r\n  'Public Health': [\r\n    'https://images.unsplash.com/photo-1585435557343-3b092031a831?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1530497610245-94d3c16cda28?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1584017911766-d451b3d0e843?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80'\r\n  ],\r\n  'Clinical Studies': [\r\n    'https://images.unsplash.com/photo-1579684385127-1ef15d508118?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1624727828489-a1e03b79bba8?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1516069677022-53fe679c7ccb?w=800&q=80'\r\n  ],\r\n  'Disease Prevention': [\r\n    'https://images.unsplash.com/photo-1584982751601-97dcc096659c?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1598256989800-fe5f95da9787?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1576091160550-2173dba999ef?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1603398938378-e54eab446dde?w=800&q=80'\r\n  ],\r\n  'Mental Health': [\r\n    'https://images.unsplash.com/photo-1493836512294-502baa1986e2?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1527736947477-2790e28f3443?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1546290581-22fe67c7bd0e?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1569893033503-9204c3ab911c?w=800&q=80'\r\n  ],\r\n  'General Health': [\r\n    'https://images.unsplash.com/photo-1498837167922-ddd27525d352?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1511688878353-3a2f5be94cd7?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1571019613576-2b22c76fd955?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1579126038374-6064e9370f0f?w=800&q=80'\r\n  ],\r\n  'default': [\r\n    'https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1538108149393-fbbd81895907?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80'\r\n  ]\r\n};\r\n\r\n// Helper function to get a random placeholder image for a category\r\nconst getRandomPlaceholderImage = (category?: string): string => {\r\n  // Default to 'default' category if the category doesn't exist or is not provided\r\n  const categoryImages = PLACEHOLDER_IMAGES[category || ''] || PLACEHOLDER_IMAGES['default'];\r\n  \r\n  // Get a random image from the array\r\n  const randomIndex = Math.floor(Math.random() * categoryImages.length);\r\n  return categoryImages[randomIndex];\r\n};\r\n\r\n// Helper function to get a color based on category\r\nconst getCategoryColor = (category?: string) => {\r\n  if (!category) return '#94a3b8';\r\n  \r\n  const colors: {[key: string]: string} = {\r\n    'Nutrition & Diet': '#4caf50',\r\n    'Medical Research': '#2196f3',\r\n    'Public Health': '#ff9800',\r\n    'Clinical Studies': '#9c27b0',\r\n    'Disease Prevention': '#f44336',\r\n    'Mental Health': '#03a9f4',\r\n    'General Health': '#ffeb3b'\r\n  };\r\n  \r\n  return colors[category] || '#94a3b8';\r\n};\r\n\r\nconst formatTimeAgo = (dateString?: string) => {\r\n  if (!dateString) return 'Recently';\r\n  \r\n  const now = new Date();\r\n  const date = new Date(dateString);\r\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\r\n  \r\n  if (diffInSeconds < 60) return 'Just now';\r\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;\r\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\r\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} days ago`;\r\n  \r\n  return date.toLocaleDateString();\r\n};\r\n\r\nconst HealthNewsFeed: React.FC<NewsFeedProps> = ({ \r\n  maxArticles = 6, \r\n  onAnalyzeArticle = (query: string) => {\r\n    // Default implementation that will ensure the button always appears\r\n    console.log('Article analysis requested:', query);\r\n    // You could show a toast notification here or redirect to the analysis page\r\n    window.open(`/analyze?query=${encodeURIComponent(query)}`, '_blank');\r\n  },\r\n  setSearchQuery,\r\n  triggerSearch\r\n}) => {\r\n  const [articles, setArticles] = useState<NewsArticle[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [analyzingArticle, setAnalyzingArticle] = useState<string | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [hasMorePages, setHasMorePages] = useState(true);\r\n  const navigate = useNavigate();\r\n  \r\n  const prevFetchParamsRef = useRef<{category: string, max: number}>({category: '', max: 0});\r\n  const observerTarget = useRef<HTMLDivElement>(null);\r\n\r\n  const categories = [\r\n    { id: 'all', label: 'All Health News' },\r\n    { id: 'Nutrition & Diet', label: 'Nutrition' },\r\n    { id: 'Medical Research', label: 'Medical Research' },\r\n    { id: 'Public Health', label: 'Public Health' },\r\n    { id: 'Clinical Studies', label: 'Clinical Studies' },\r\n    { id: 'Disease Prevention', label: 'Prevention' },\r\n    { id: 'Mental Health', label: 'Mental Health' },\r\n    { id: 'General Health', label: 'General Health' }\r\n  ];\r\n\r\n  // Fetch initial articles when category changes\r\n  useEffect(() => {\r\n    // Only fetch if category or maxArticles actually changed\r\n    const prevParams = prevFetchParamsRef.current;\r\n    if (prevParams.category !== selectedCategory || prevParams.max !== maxArticles) {\r\n      prevFetchParamsRef.current = {category: selectedCategory, max: maxArticles};\r\n      setCurrentPage(1); // Reset to first page when changing categories\r\n      setHasMorePages(true); // Reset pagination state\r\n      fetchHealthNews(true); // true means reset (first page)\r\n    }\r\n  }, [selectedCategory, maxArticles]);\r\n\r\n  // Set up intersection observer for infinite scroll\r\n  const handleObserver = useCallback((entries: IntersectionObserverEntry[]) => {\r\n    const [target] = entries;\r\n    if (target.isIntersecting && !loading && !loadingMore && hasMorePages) {\r\n      fetchHealthNews(false); // false means don't reset, load more\r\n    }\r\n  }, [loading, loadingMore, hasMorePages]);\r\n\r\n  useEffect(() => {\r\n    const element = observerTarget.current;\r\n    const option = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.1,\r\n    };\r\n    \r\n    const observer = new IntersectionObserver(handleObserver, option);\r\n    \r\n    if (element) observer.observe(element);\r\n    \r\n    return () => {\r\n      if (element) observer.unobserve(element);\r\n    };\r\n  }, [handleObserver, observerTarget]);\r\n\r\n  // Update the fetchHealthNews function with priority handling\r\n\r\n  const fetchHealthNews = async (resetPage: boolean = true) => {\r\n    if (resetPage) {\r\n      setLoading(true);\r\n      setCurrentPage(1);\r\n    } else {\r\n      setLoadingMore(true);\r\n      setCurrentPage(prev => prev + 1);\r\n    }\r\n\r\n    try {\r\n      const page = resetPage ? 1 : currentPage + 1;\r\n      console.log('Fetching health news for category:', selectedCategory, 'page:', page);\r\n      \r\n      let response;\r\n      \r\n      // Define all health categories and their priority order\r\n      const healthCategories = [\r\n        'Nutrition & Diet', \r\n        'Medical Research', \r\n        'Public Health', \r\n        'Clinical Studies', \r\n        'Disease Prevention', \r\n        'Mental Health', \r\n        'General Health'\r\n      ];\r\n      \r\n      if (selectedCategory === 'all') {\r\n        // Explicitly pass an empty array to ensure NO category filters are applied\r\n        response = await fetchNewsFeed([], maxArticles * 2);\r\n        console.log('Fetching ALL news with no category filters');\r\n      } else {\r\n        response = await getArticlesByCategory(selectedCategory, maxArticles);\r\n      }\r\n      \r\n      if (response.success && response.articles && response.articles.length > 0) {\r\n        let processedArticles = response.articles;\r\n        \r\n        // For \"all\" category, apply our smart sorting to prioritize health\r\n        if (selectedCategory === 'all') {\r\n          console.log('Prioritizing health content in all news');\r\n          processedArticles = sortArticlesByPriority(processedArticles, healthCategories);\r\n          \r\n          // Optional: limit the number of tech articles\r\n          const techCount = processedArticles.filter(article => \r\n            (article.category || '').includes('Tech')\r\n          ).length;\r\n          \r\n          console.log(`Found ${techCount} tech articles out of ${processedArticles.length} total`);\r\n        }\r\n        \r\n        if (resetPage) {\r\n          setArticles(processedArticles);\r\n        } else {\r\n          // Append new articles to existing ones\r\n          setArticles(prev => [...prev, ...processedArticles]);\r\n        }\r\n        \r\n        // If API doesn't provide pagination info, infer it from response length\r\n        if (response.pagination) {\r\n          setHasMorePages(response.pagination.has_next_page);\r\n        } else {\r\n          // If we received at least as many articles as we requested, assume there are more\r\n          setHasMorePages(response.articles.length >= maxArticles);\r\n        }\r\n      } else {\r\n        console.log('No articles found for the selected category on page', page);\r\n        // If no articles found and it's \"all\" category, try one more time with really no filters\r\n        if (selectedCategory === 'all') {\r\n          console.log('Trying again with absolutely no filters');\r\n          // Last resort - force no filtering at all\r\n          try {\r\n            const fallbackResponse = await fetch('/api/news/articles?limit=' + maxArticles);\r\n            const fallbackData = await fallbackResponse.json();\r\n            \r\n            if (fallbackData.success && fallbackData.articles && fallbackData.articles.length > 0) {\r\n              console.log('Fallback succeeded, got articles');\r\n              if (resetPage) {\r\n                setArticles(fallbackData.articles);\r\n              } else {\r\n                setArticles(prev => [...prev, ...fallbackData.articles]);\r\n              }\r\n              setHasMorePages(fallbackData.articles.length >= maxArticles);\r\n            } else {\r\n              if (resetPage) {\r\n                setArticles([]);\r\n              }\r\n              setHasMorePages(false);\r\n            }\r\n          } catch (fallbackError) {\r\n            console.error('Even fallback failed:', fallbackError);\r\n            if (resetPage) {\r\n              setArticles([]);\r\n            }\r\n            setHasMorePages(false);\r\n          }\r\n        } else {\r\n          if (resetPage) {\r\n            setArticles([]);\r\n          }\r\n          setHasMorePages(false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching health news:', error);\r\n      if (resetPage) {\r\n        setArticles([]);\r\n      }\r\n      setHasMorePages(false);\r\n    } finally {\r\n      setLoading(false);\r\n      setLoadingMore(false);\r\n    }\r\n  };\r\n  \r\n  // Update the sortArticlesByPriority function to properly prioritize health categories\r\n\r\n  const sortArticlesByPriority = (articles: NewsArticle[], priorityCategories: string[]): NewsArticle[] => {\r\n    // Create a copy of the articles array\r\n    const sortedArticles = [...articles];\r\n    \r\n    // Health-related keywords to identify health content\r\n    const healthKeywords = [\r\n      'health', 'medical', 'medicine', 'doctor', 'patient', 'hospital',\r\n      'disease', 'treatment', 'cure', 'wellness', 'fitness', 'diet',\r\n      'nutrition', 'mental', 'therapy', 'clinical', 'drug', 'vaccine',\r\n      'symptom', 'diagnosis', 'cancer', 'heart', 'diabetes', 'covid'\r\n    ];\r\n    \r\n    // Define categories that should be deprioritized\r\n    const deprioritizedCategories = ['Tech', 'Technology'];\r\n    \r\n    // Define a function to get priority score (lower is higher priority)\r\n    const getPriorityScore = (article: NewsArticle): number => {\r\n      const category = article.category || '';\r\n      const title = article.title || '';\r\n      const description = article.description || '';\r\n      \r\n      // 1. First priority: Exact match with health categories\r\n      const priorityIndex = priorityCategories.findIndex(\r\n        cat => category.includes(cat)\r\n      );\r\n      \r\n      if (priorityIndex >= 0) {\r\n        return priorityIndex; // Health category (0-6 range)\r\n      }\r\n      \r\n      // 2. Second priority: Contains health keywords in title or description\r\n      const hasHealthKeyword = healthKeywords.some(keyword => \r\n        title.toLowerCase().includes(keyword) || \r\n        description.toLowerCase().includes(keyword)\r\n      );\r\n      \r\n      if (hasHealthKeyword) {\r\n        return 50; // Health content but not in priority categories\r\n      }\r\n      \r\n      // 3. Third priority: Not tech\r\n      const isTechCategory = deprioritizedCategories.some(tech => \r\n        category.includes(tech)\r\n      );\r\n      \r\n      if (isTechCategory) {\r\n        return 1000; // Tech should be shown last\r\n      }\r\n      \r\n      // 4. Default priority for other content\r\n      return 100; // Other content (middle priority)\r\n    };\r\n    \r\n    // Sort articles by priority score\r\n    sortedArticles.sort((a, b) => {\r\n      const priorityA = getPriorityScore(a);\r\n      const priorityB = getPriorityScore(b);\r\n      \r\n      // First sort by priority category\r\n      if (priorityA !== priorityB) {\r\n        return priorityA - priorityB;\r\n      }\r\n      \r\n      // If same priority category, sort by date (newest first)\r\n      const dateA = a.publishedDate || a.published_date || '';\r\n      const dateB = b.publishedDate || b.published_date || '';\r\n      \r\n      if (dateA && dateB) {\r\n        return new Date(dateB).getTime() - new Date(dateA).getTime();\r\n      }\r\n      \r\n      return 0;\r\n    });\r\n    \r\n    return sortedArticles;\r\n  };\r\n  \r\n  // Complete the diversifySources function that was cut off\r\n\r\n  // Function to ensure diversity of sources\r\n  const diversifySources = (articles: NewsArticle[]): NewsArticle[] => {\r\n    if (!articles || articles.length <= 4) return articles;\r\n    \r\n    // Group articles by source\r\n    const sourceMap: Record<string, NewsArticle[]> = {};\r\n    articles.forEach(article => {\r\n      const source = article.source || 'unknown';\r\n      if (!sourceMap[source]) {\r\n        sourceMap[source] = [];\r\n      }\r\n      sourceMap[source].push(article);\r\n    });\r\n    \r\n    // Get all unique sources\r\n    const sources = Object.keys(sourceMap);\r\n    console.log('Available sources:', sources);\r\n    \r\n    // If we only have one source, return original articles\r\n    if (sources.length <= 1) return articles;\r\n    \r\n    // Build a diversified list by alternating between sources\r\n    const diversified: NewsArticle[] = [];\r\n    let remainingArticles = [...articles];\r\n    \r\n    // Limit articles per source based on how many sources we have\r\n    const maxPerSource = Math.max(2, Math.ceil(articles.length / sources.length));\r\n    \r\n    // First pass: Take up to the limit from each source\r\n    sources.forEach(source => {\r\n      const sourceArticles = sourceMap[source].slice(0, maxPerSource);\r\n      diversified.push(...sourceArticles);\r\n      \r\n      // Remove the ones we've taken\r\n      remainingArticles = remainingArticles.filter(\r\n        article => !sourceArticles.includes(article)\r\n      );\r\n    });\r\n    \r\n    // Add any remaining articles up to the original length\r\n    if (remainingArticles.length > 0) {\r\n      const neededCount = articles.length - diversified.length;\r\n      diversified.push(...remainingArticles.slice(0, neededCount));\r\n    }\r\n    \r\n    console.log(`Source diversity: from ${articles.length} articles with ${sources.length} sources, created ${diversified.length} diversified articles`);\r\n    \r\n    return diversified;\r\n  };\r\n\r\n  const handleCategoryChange = (categoryId: string) => {\r\n    setSelectedCategory(categoryId);\r\n    \r\n    // Reset search query and trigger a new search if category is not 'all'\r\n    if (categoryId !== 'all' && setSearchQuery && triggerSearch) {\r\n      setSearchQuery(''); // Reset search query\r\n      triggerSearch(); // Trigger search\r\n    }\r\n  };\r\n\r\n  const handleAnalyzeWithWihy = async (article: NewsArticle, e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const query = article.title;\r\n    setAnalyzingArticle(article.id || null);\r\n    \r\n    try {\r\n      await onAnalyzeArticle(query);\r\n    } catch (error) {\r\n      console.error('Error analyzing article:', error);\r\n    } finally {\r\n      setAnalyzingArticle(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"health-news-feed\">\r\n      {/* Category selector */}\r\n      <div className=\"category-selector\">\r\n        {categories.map(category => (\r\n          <button\r\n            key={category.id}\r\n            className={`category-button ${selectedCategory === category.id ? 'active' : ''}`}\r\n            onClick={() => setSelectedCategory(category.id)}\r\n          >\r\n            {category.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* News grid */}\r\n      {loading ? (\r\n        <div className=\"loading-spinner\">Loading health news...</div>\r\n      ) : (\r\n        <>\r\n          {articles.length === 0 ? (\r\n            <div className=\"no-articles\">\r\n              No articles found for the selected category. Try selecting a different category.\r\n            </div>\r\n          ) : (\r\n            <div className=\"news-grid\">\r\n              {articles.map((article) => (\r\n                <div className=\"news-card\" key={article.id || article.url} onClick={() => {\r\n                  if (article.link || article.url) {\r\n                    window.open(article.link || article.url, '_blank');\r\n                  }\r\n                }}>\r\n                  {/* Image Section */}\r\n                  <div className=\"news-image\">\r\n                    {(article.image_url || article.thumbnail || article.imageUrl || article.thumbnailUrl) ? (\r\n                      <img \r\n                        src={article.image_url || article.thumbnail || article.imageUrl || article.thumbnailUrl} \r\n                        alt={article.title}\r\n                        onError={(e) => {\r\n                          console.log('Image failed to load:', article.image_url || article.thumbnail);\r\n                          (e.target as HTMLImageElement).src = getRandomPlaceholderImage(article.category);\r\n                          (e.target as HTMLImageElement).classList.add('placeholder-image');\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <img \r\n                        src={getRandomPlaceholderImage(article.category)}\r\n                        alt={article.title || 'Health article'}\r\n                        className=\"placeholder-image\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {/* Category tag */}\r\n                  <div className=\"news-meta\">\r\n                    {article.category ? (\r\n                      <span \r\n                        className=\"category-tag\"\r\n                        style={{backgroundColor: getCategoryColor(article.category)}}\r\n                      >\r\n                        {article.category}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"category-tag tech\">TECH</span>\r\n                    )}\r\n                    <span className=\"published-date\">\r\n                      {formatTimeAgo(article.publishedDate || article.published_date)}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {/* Content */}\r\n                  <h3 className=\"article-title\">{article.title}</h3>\r\n                  <p className=\"article-summary\">\r\n                    {article.description || article.summary || 'No description available'}\r\n                  </p>\r\n                  \r\n                  <div className=\"article-footer\">\r\n                    {/* Relevance score */}\r\n                    <div className=\"relevance-score\">\r\n                      Relevance: {Math.round((article.relevanceScore || 0) * 100)}%\r\n                    </div>\r\n                    \r\n                    {/* Read full article button */}\r\n                    <a \r\n                      href={article.url || article.link} \r\n                      target=\"_blank\" \r\n                      rel=\"noopener noreferrer\" \r\n                      className=\"read-more\"\r\n                      onClick={(e) => e.stopPropagation()}\r\n                    >\r\n                      Read Full Article →\r\n                    </a>\r\n                  </div>\r\n                  \r\n                  {/* Analyze with WIHY Button */}\r\n                  {onAnalyzeArticle && (\r\n                    <button \r\n                      className=\"analyze-wihy-btn\"\r\n                      onClick={(e) => handleAnalyzeWithWihy(article, e)}\r\n                      disabled={analyzingArticle === article.id}\r\n                    >\r\n                      {analyzingArticle === article.id ? (\r\n                        <>\r\n                          <div className=\"analyze-spinner\"></div>\r\n                          Analyzing...\r\n                        </>\r\n                      ) : (\r\n                        <>Analyze with WIHY</>\r\n                      )}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Infinite scroll indicator */}\r\n          <div ref={observerTarget} style={{ height: '20px', margin: '20px 0' }}>\r\n            {loadingMore && (\r\n              <div className=\"loading-more\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <p>Loading more articles...</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Make sure to export the component as default\r\nexport default HealthNewsFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}