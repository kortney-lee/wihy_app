{"ast":null,"code":"import{WIHY_API_ENDPOINT}from'../config/apiConfig';// Types for the WiHy Unified API (updated to match documentation)\n// Legacy types for backward compatibility\nclass WihyAPIService{constructor(){this.baseURL=void 0;this.baseURL=WIHY_API_ENDPOINT;}/**\r\n   * Ask WiHy a health-related question using the unified API\r\n   */async askAnything(request){try{console.log('Making WiHy Unified API request:',request);// Convert legacy WihyRequest to UnifiedRequest format if needed\nlet unifiedRequest;if('user_context'in request){// Legacy format - convert to unified format\nunifiedRequest={query:request.query,request_type:'auto',context:request.user_context||{}};}else{// Already in unified format\nunifiedRequest=request;}// Use fetch API to match the working example exactly\nconst response=await fetch(this.baseURL,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(unifiedRequest)});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();console.log('WiHy Unified API response:',data);return data;}catch(error){console.error('WiHy API error:',error);if(error instanceof Error){throw new Error(error.message||'WiHy API request failed');}throw new Error('Unknown error occurred while contacting WiHy API');}}/**\r\n   * Convert UnifiedResponse to legacy WihyResponse format for backward compatibility\r\n   */convertToLegacyFormat(unifiedResponse,originalQuery){var _unifiedResponse$data,_unifiedResponse$data2;return{success:unifiedResponse.success,timestamp:new Date().toISOString(),response_type:unifiedResponse.request_type,query:originalQuery,wihy_response:{query_type:unifiedResponse.request_type,query:originalQuery,core_principle:unifiedResponse.data.analysis||unifiedResponse.data.response||'Health Information',personalized_analysis:{identified_risk_factors:[],priority_health_goals:[],action_items:((_unifiedResponse$data=unifiedResponse.data.recommendations)===null||_unifiedResponse$data===void 0?void 0:_unifiedResponse$data.map((rec,index)=>({action:rec,priority:'medium',target_illness:'general_health',evidence_level:'moderate',mechanism:'lifestyle_modification',timeline:'ongoing'})))||[],timeline:'ongoing'},research_foundation:((_unifiedResponse$data2=unifiedResponse.data.sources)===null||_unifiedResponse$data2===void 0?void 0:_unifiedResponse$data2.map(source=>({citation_text:source,study_type:'research',key_finding:source})))||[],progress_tracking:{key_metrics:['general_health'],reassessment_period:'1 month'},biblical_wisdom:[]},message:unifiedResponse.data.response||unifiedResponse.data.analysis||'Health information provided'};}/**\r\n   * Get health news articles using the unified API\r\n   */async getHealthNews(categories,limit){const query=categories&&categories.length>0?\"Latest health news about \".concat(categories.join(', ')):'Latest health news';const request={query:query,request_type:'health',context:{categories:categories,limit:limit}};const response=await this.askAnything(request);if('data'in response){// It's a UnifiedResponse, convert to legacy format\nreturn this.convertToLegacyFormat(response,query);}return response;}/**\r\n   * Search for nutrition information using the unified API\r\n   */async searchNutrition(foodQuery,userContext){const request={query:\"Nutrition information for \".concat(foodQuery),request_type:'nutrition',context:userContext||{}};const response=await this.askAnything(request);if('data'in response){// It's a UnifiedResponse, convert to legacy format\nreturn this.convertToLegacyFormat(response,request.query);}return response;}/**\r\n   * General health search using the unified API\r\n   */async searchHealth(query,userContext){const request={query:query,request_type:'auto',context:userContext||{}};const response=await this.askAnything(request);if('data'in response){// It's a UnifiedResponse, convert to legacy format\nreturn this.convertToLegacyFormat(response,query);}return response;}/**\r\n   * Format the WiHy response for display in the existing UI\r\n   * This formats it to be compatible with the existing search results format\r\n   */formatWihyResponse(response){var _wihy_response$resear,_wihy_response$biblic;const{wihy_response}=response;let formatted=\"# \".concat(wihy_response.core_principle,\"\\n\\n\");// Personalized Analysis\nif(wihy_response.personalized_analysis){var _wihy_response$person,_wihy_response$person2,_wihy_response$person3;formatted+=\"## \\uD83C\\uDFAF Personalized Health Analysis\\n\\n\";// Risk Factors\nif(((_wihy_response$person=wihy_response.personalized_analysis.identified_risk_factors)===null||_wihy_response$person===void 0?void 0:_wihy_response$person.length)>0){formatted+=\"### Identified Risk Factors:\\n\";wihy_response.personalized_analysis.identified_risk_factors.forEach(risk=>{formatted+=\"- **\".concat(risk.risk_factor.replace(/_/g,' ').toUpperCase(),\"**\\n\");formatted+=\"  - Associated with: \".concat(risk.associated_illnesses.replace(/_/g,' '),\"\\n\");formatted+=\"  - Prevalence: \".concat(risk.prevalence_rate,\"%\\n\");formatted+=\"  - Preventability: \".concat(risk.preventability_score,\"%\\n\\n\");});}// Priority Goals\nif(((_wihy_response$person2=wihy_response.personalized_analysis.priority_health_goals)===null||_wihy_response$person2===void 0?void 0:_wihy_response$person2.length)>0){formatted+=\"### \\uD83C\\uDFAF Priority Health Goals:\\n\";wihy_response.personalized_analysis.priority_health_goals.forEach(goal=>{formatted+=\"- \".concat(goal,\"\\n\");});formatted+='\\n';}// Action Items\nif(((_wihy_response$person3=wihy_response.personalized_analysis.action_items)===null||_wihy_response$person3===void 0?void 0:_wihy_response$person3.length)>0){formatted+=\"### \\uD83D\\uDCCB Action Items:\\n\";wihy_response.personalized_analysis.action_items.forEach((action,index)=>{formatted+=\"#### \".concat(index+1,\". \").concat(action.action,\"\\n\");formatted+=\"- **Priority:** \".concat(action.priority,\"\\n\");formatted+=\"- **Target:** \".concat(action.target_illness.replace(/_/g,' '),\"\\n\");formatted+=\"- **Evidence Level:** \".concat(action.evidence_level,\"\\n\");formatted+=\"- **How it works:** \".concat(action.mechanism,\"\\n\");formatted+=\"- **Timeline:** \".concat(action.timeline,\"\\n\\n\");});}// Timeline\nif(wihy_response.personalized_analysis.timeline){formatted+=\"**Implementation Timeline:** \".concat(wihy_response.personalized_analysis.timeline,\"\\n\\n\");}}// Research Foundation\nif(((_wihy_response$resear=wihy_response.research_foundation)===null||_wihy_response$resear===void 0?void 0:_wihy_response$resear.length)>0){formatted+=\"## \\uD83D\\uDCDA Research Foundation\\n\\n\";wihy_response.research_foundation.forEach(research=>{formatted+=\"- **\".concat(research.citation_text,\"** (\").concat(research.study_type,\")\\n\");formatted+=\"  \".concat(research.key_finding,\"\\n\\n\");});}// Progress Tracking\nif(wihy_response.progress_tracking){formatted+=\"## \\uD83D\\uDCCA Progress Tracking\\n\\n\";formatted+=\"**Key Metrics to Track:**\\n\";wihy_response.progress_tracking.key_metrics.forEach(metric=>{formatted+=\"- \".concat(metric,\"\\n\");});formatted+=\"\\n**Reassessment:** \".concat(wihy_response.progress_tracking.reassessment_period,\"\\n\\n\");}// Biblical Wisdom\nif(((_wihy_response$biblic=wihy_response.biblical_wisdom)===null||_wihy_response$biblic===void 0?void 0:_wihy_response$biblic.length)>0){formatted+=\"## \\u271D\\uFE0F Biblical Wisdom\\n\\n\";wihy_response.biblical_wisdom.forEach(wisdom=>{formatted+=\"> \".concat(wisdom,\"\\n\\n\");});}formatted+=\"---\\n\\n*WiHy health truth analysis generated at: \".concat(new Date(response.timestamp).toLocaleString(),\"*\\n\");return formatted;}/**\r\n   * Extract recommendations from WiHy response for UI display\r\n   */extractRecommendations(response){var _response$wihy_respon;const recommendations=[];if((_response$wihy_respon=response.wihy_response.personalized_analysis)!==null&&_response$wihy_respon!==void 0&&_response$wihy_respon.action_items){response.wihy_response.personalized_analysis.action_items.forEach(action=>{recommendations.push(\"\".concat(action.action,\" (\").concat(action.priority,\" priority)\"));});}return recommendations;}/**\r\n   * Extract citations from WiHy response for UI display\r\n   */extractCitations(response){const citations=[];if(response.wihy_response.research_foundation){response.wihy_response.research_foundation.forEach(research=>{citations.push(\"\".concat(research.citation_text,\": \").concat(research.key_finding));});}return citations;}}// Export a singleton instance\nexport const wihyAPI=new WihyAPIService();export default wihyAPI;","map":{"version":3,"names":["WIHY_API_ENDPOINT","WihyAPIService","constructor","baseURL","askAnything","request","console","log","unifiedRequest","query","request_type","context","user_context","response","fetch","method","headers","body","JSON","stringify","ok","Error","concat","status","data","json","error","message","convertToLegacyFormat","unifiedResponse","originalQuery","_unifiedResponse$data","_unifiedResponse$data2","success","timestamp","Date","toISOString","response_type","wihy_response","query_type","core_principle","analysis","personalized_analysis","identified_risk_factors","priority_health_goals","action_items","recommendations","map","rec","index","action","priority","target_illness","evidence_level","mechanism","timeline","research_foundation","sources","source","citation_text","study_type","key_finding","progress_tracking","key_metrics","reassessment_period","biblical_wisdom","getHealthNews","categories","limit","length","join","searchNutrition","foodQuery","userContext","searchHealth","formatWihyResponse","_wihy_response$resear","_wihy_response$biblic","formatted","_wihy_response$person","_wihy_response$person2","_wihy_response$person3","forEach","risk","risk_factor","replace","toUpperCase","associated_illnesses","prevalence_rate","preventability_score","goal","research","metric","wisdom","toLocaleString","extractRecommendations","_response$wihy_respon","push","extractCitations","citations","wihyAPI"],"sources":["C:/repo/wihy_ui/client/src/services/wihyAPI.ts"],"sourcesContent":["import { API_CONFIG, WIHY_API_ENDPOINT } from '../config/apiConfig';\r\n\r\n// Types for the WiHy Unified API (updated to match documentation)\r\nexport interface UnifiedRequest {\r\n  query: string;                    // REQUIRED: Your health/nutrition question or request\r\n  request_type?: 'auto' | 'nutrition' | 'health' | 'chat' | 'auth' | 'predict' | 'train'; // OPTIONAL: defaults to \"auto\"\r\n  context?: Record<string, any>;    // OPTIONAL: Additional context object\r\n  user_id?: string;                 // OPTIONAL: User identifier for personalization\r\n  session_id?: string;              // OPTIONAL: Session identifier for conversation tracking\r\n}\r\n\r\nexport interface UnifiedResponse {\r\n  success: boolean;                 // Request processing success status\r\n  data: any;                        // Service-specific response data\r\n  service_used: string;             // Which service processed the request\r\n  request_type: string;             // The request type that was processed\r\n  processing_time: number;          // Processing time in seconds\r\n  suggestions: string[];            // Optional suggestions for improvement\r\n}\r\n\r\n// Legacy types for backward compatibility\r\nexport interface UserContext {\r\n  age?: number;\r\n  family_size?: number;\r\n  family_history?: string[];\r\n  health_concerns?: string[];\r\n  dietary_restrictions?: string[];\r\n  activity_level?: 'low' | 'moderate' | 'high';\r\n  current_health_concerns?: string[];\r\n}\r\n\r\nexport interface WihyRequest {\r\n  query: string;\r\n  user_context?: UserContext;\r\n}\r\n\r\nexport interface RiskFactor {\r\n  risk_factor: string;\r\n  associated_illnesses: string;\r\n  prevalence_rate: number;\r\n  preventability_score: number;\r\n}\r\n\r\nexport interface ActionItem {\r\n  action: string;\r\n  priority: string;\r\n  target_illness: string;\r\n  evidence_level: string;\r\n  mechanism: string;\r\n  timeline: string;\r\n}\r\n\r\nexport interface PersonalizedAnalysis {\r\n  identified_risk_factors: RiskFactor[];\r\n  priority_health_goals: string[];\r\n  action_items: ActionItem[];\r\n  timeline: string;\r\n}\r\n\r\nexport interface ResearchFoundation {\r\n  citation_text: string;\r\n  study_type: string;\r\n  key_finding: string;\r\n}\r\n\r\nexport interface ProgressTracking {\r\n  key_metrics: string[];\r\n  reassessment_period: string;\r\n}\r\n\r\nexport interface WihyResponseData {\r\n  query_type: string;\r\n  query: string;\r\n  core_principle: string;\r\n  personalized_analysis: PersonalizedAnalysis;\r\n  research_foundation: ResearchFoundation[];\r\n  progress_tracking: ProgressTracking;\r\n  biblical_wisdom: string[];\r\n}\r\n\r\nexport interface WihyResponse {\r\n  success: boolean;\r\n  timestamp: string;\r\n  response_type: string;\r\n  query: string;\r\n  user_context?: UserContext;\r\n  wihy_response: WihyResponseData;\r\n  message: string;\r\n}\r\n\r\nexport interface WihyError {\r\n  detail: string;\r\n}\r\n\r\nclass WihyAPIService {\r\n  private baseURL: string;\r\n\r\n  constructor() {\r\n    this.baseURL = WIHY_API_ENDPOINT;\r\n  }\r\n\r\n  /**\r\n   * Ask WiHy a health-related question using the unified API\r\n   */\r\n  async askAnything(request: WihyRequest | UnifiedRequest): Promise<WihyResponse | UnifiedResponse> {\r\n    try {\r\n      console.log('Making WiHy Unified API request:', request);\r\n      \r\n      // Convert legacy WihyRequest to UnifiedRequest format if needed\r\n      let unifiedRequest: UnifiedRequest;\r\n      if ('user_context' in request) {\r\n        // Legacy format - convert to unified format\r\n        unifiedRequest = {\r\n          query: request.query,\r\n          request_type: 'auto',\r\n          context: request.user_context || {},\r\n        };\r\n      } else {\r\n        // Already in unified format\r\n        unifiedRequest = request as UnifiedRequest;\r\n      }\r\n      \r\n      // Use fetch API to match the working example exactly\r\n      const response = await fetch(this.baseURL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(unifiedRequest)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('WiHy Unified API response:', data);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('WiHy API error:', error);\r\n      \r\n      if (error instanceof Error) {\r\n        throw new Error(error.message || 'WiHy API request failed');\r\n      }\r\n      \r\n      throw new Error('Unknown error occurred while contacting WiHy API');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert UnifiedResponse to legacy WihyResponse format for backward compatibility\r\n   */\r\n  private convertToLegacyFormat(unifiedResponse: UnifiedResponse, originalQuery: string): WihyResponse {\r\n    return {\r\n      success: unifiedResponse.success,\r\n      timestamp: new Date().toISOString(),\r\n      response_type: unifiedResponse.request_type,\r\n      query: originalQuery,\r\n      wihy_response: {\r\n        query_type: unifiedResponse.request_type,\r\n        query: originalQuery,\r\n        core_principle: unifiedResponse.data.analysis || unifiedResponse.data.response || 'Health Information',\r\n        personalized_analysis: {\r\n          identified_risk_factors: [],\r\n          priority_health_goals: [],\r\n          action_items: unifiedResponse.data.recommendations?.map((rec: string, index: number) => ({\r\n            action: rec,\r\n            priority: 'medium',\r\n            target_illness: 'general_health',\r\n            evidence_level: 'moderate',\r\n            mechanism: 'lifestyle_modification',\r\n            timeline: 'ongoing'\r\n          })) || [],\r\n          timeline: 'ongoing'\r\n        },\r\n        research_foundation: unifiedResponse.data.sources?.map((source: string) => ({\r\n          citation_text: source,\r\n          study_type: 'research',\r\n          key_finding: source\r\n        })) || [],\r\n        progress_tracking: {\r\n          key_metrics: ['general_health'],\r\n          reassessment_period: '1 month'\r\n        },\r\n        biblical_wisdom: []\r\n      },\r\n      message: unifiedResponse.data.response || unifiedResponse.data.analysis || 'Health information provided'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get health news articles using the unified API\r\n   */\r\n  async getHealthNews(categories?: string[], limit?: number): Promise<WihyResponse> {\r\n    const query = categories && categories.length > 0 \r\n      ? `Latest health news about ${categories.join(', ')}`\r\n      : 'Latest health news';\r\n    \r\n    const request: UnifiedRequest = {\r\n      query: query,\r\n      request_type: 'health',\r\n      context: {\r\n        categories: categories,\r\n        limit: limit\r\n      }\r\n    };\r\n\r\n    const response = await this.askAnything(request);\r\n    if ('data' in response) {\r\n      // It's a UnifiedResponse, convert to legacy format\r\n      return this.convertToLegacyFormat(response as UnifiedResponse, query);\r\n    }\r\n    return response as WihyResponse;\r\n  }\r\n\r\n  /**\r\n   * Search for nutrition information using the unified API\r\n   */\r\n  async searchNutrition(foodQuery: string, userContext?: UserContext): Promise<WihyResponse> {\r\n    const request: UnifiedRequest = {\r\n      query: `Nutrition information for ${foodQuery}`,\r\n      request_type: 'nutrition',\r\n      context: userContext || {}\r\n    };\r\n\r\n    const response = await this.askAnything(request);\r\n    if ('data' in response) {\r\n      // It's a UnifiedResponse, convert to legacy format\r\n      return this.convertToLegacyFormat(response as UnifiedResponse, request.query);\r\n    }\r\n    return response as WihyResponse;\r\n  }\r\n\r\n  /**\r\n   * General health search using the unified API\r\n   */\r\n  async searchHealth(query: string, userContext?: UserContext): Promise<WihyResponse> {\r\n    const request: UnifiedRequest = {\r\n      query: query,\r\n      request_type: 'auto',\r\n      context: userContext || {}\r\n    };\r\n\r\n    const response = await this.askAnything(request);\r\n    if ('data' in response) {\r\n      // It's a UnifiedResponse, convert to legacy format\r\n      return this.convertToLegacyFormat(response as UnifiedResponse, query);\r\n    }\r\n    return response as WihyResponse;\r\n  }\r\n\r\n  /**\r\n   * Format the WiHy response for display in the existing UI\r\n   * This formats it to be compatible with the existing search results format\r\n   */\r\n  formatWihyResponse(response: WihyResponse): string {\r\n    const { wihy_response } = response;\r\n    \r\n    let formatted = `# ${wihy_response.core_principle}\\n\\n`;\r\n    \r\n    // Personalized Analysis\r\n    if (wihy_response.personalized_analysis) {\r\n      formatted += `## 🎯 Personalized Health Analysis\\n\\n`;\r\n      \r\n      // Risk Factors\r\n      if (wihy_response.personalized_analysis.identified_risk_factors?.length > 0) {\r\n        formatted += `### Identified Risk Factors:\\n`;\r\n        wihy_response.personalized_analysis.identified_risk_factors.forEach(risk => {\r\n          formatted += `- **${risk.risk_factor.replace(/_/g, ' ').toUpperCase()}**\\n`;\r\n          formatted += `  - Associated with: ${risk.associated_illnesses.replace(/_/g, ' ')}\\n`;\r\n          formatted += `  - Prevalence: ${risk.prevalence_rate}%\\n`;\r\n          formatted += `  - Preventability: ${risk.preventability_score}%\\n\\n`;\r\n        });\r\n      }\r\n      \r\n      // Priority Goals\r\n      if (wihy_response.personalized_analysis.priority_health_goals?.length > 0) {\r\n        formatted += `### 🎯 Priority Health Goals:\\n`;\r\n        wihy_response.personalized_analysis.priority_health_goals.forEach(goal => {\r\n          formatted += `- ${goal}\\n`;\r\n        });\r\n        formatted += '\\n';\r\n      }\r\n      \r\n      // Action Items\r\n      if (wihy_response.personalized_analysis.action_items?.length > 0) {\r\n        formatted += `### 📋 Action Items:\\n`;\r\n        wihy_response.personalized_analysis.action_items.forEach((action, index) => {\r\n          formatted += `#### ${index + 1}. ${action.action}\\n`;\r\n          formatted += `- **Priority:** ${action.priority}\\n`;\r\n          formatted += `- **Target:** ${action.target_illness.replace(/_/g, ' ')}\\n`;\r\n          formatted += `- **Evidence Level:** ${action.evidence_level}\\n`;\r\n          formatted += `- **How it works:** ${action.mechanism}\\n`;\r\n          formatted += `- **Timeline:** ${action.timeline}\\n\\n`;\r\n        });\r\n      }\r\n      \r\n      // Timeline\r\n      if (wihy_response.personalized_analysis.timeline) {\r\n        formatted += `**Implementation Timeline:** ${wihy_response.personalized_analysis.timeline}\\n\\n`;\r\n      }\r\n    }\r\n    \r\n    // Research Foundation\r\n    if (wihy_response.research_foundation?.length > 0) {\r\n      formatted += `## 📚 Research Foundation\\n\\n`;\r\n      wihy_response.research_foundation.forEach(research => {\r\n        formatted += `- **${research.citation_text}** (${research.study_type})\\n`;\r\n        formatted += `  ${research.key_finding}\\n\\n`;\r\n      });\r\n    }\r\n    \r\n    // Progress Tracking\r\n    if (wihy_response.progress_tracking) {\r\n      formatted += `## 📊 Progress Tracking\\n\\n`;\r\n      formatted += `**Key Metrics to Track:**\\n`;\r\n      wihy_response.progress_tracking.key_metrics.forEach(metric => {\r\n        formatted += `- ${metric}\\n`;\r\n      });\r\n      formatted += `\\n**Reassessment:** ${wihy_response.progress_tracking.reassessment_period}\\n\\n`;\r\n    }\r\n    \r\n    // Biblical Wisdom\r\n    if (wihy_response.biblical_wisdom?.length > 0) {\r\n      formatted += `## ✝️ Biblical Wisdom\\n\\n`;\r\n      wihy_response.biblical_wisdom.forEach(wisdom => {\r\n        formatted += `> ${wisdom}\\n\\n`;\r\n      });\r\n    }\r\n    \r\n    formatted += `---\\n\\n*WiHy health truth analysis generated at: ${new Date(response.timestamp).toLocaleString()}*\\n`;\r\n    \r\n    return formatted;\r\n  }\r\n\r\n  /**\r\n   * Extract recommendations from WiHy response for UI display\r\n   */\r\n  extractRecommendations(response: WihyResponse): string[] {\r\n    const recommendations: string[] = [];\r\n    \r\n    if (response.wihy_response.personalized_analysis?.action_items) {\r\n      response.wihy_response.personalized_analysis.action_items.forEach(action => {\r\n        recommendations.push(`${action.action} (${action.priority} priority)`);\r\n      });\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Extract citations from WiHy response for UI display\r\n   */\r\n  extractCitations(response: WihyResponse): string[] {\r\n    const citations: string[] = [];\r\n    \r\n    if (response.wihy_response.research_foundation) {\r\n      response.wihy_response.research_foundation.forEach(research => {\r\n        citations.push(`${research.citation_text}: ${research.key_finding}`);\r\n      });\r\n    }\r\n    \r\n    return citations;\r\n  }\r\n}\r\n\r\n// Export a singleton instance\r\nexport const wihyAPI = new WihyAPIService();\r\nexport default wihyAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}