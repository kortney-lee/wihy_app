{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\VHealthSearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchResults from '../SearchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VHealthSearch = ({\n  apiStatus\n}) => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) return;\n    setIsLoading(true);\n    try {\n      if (apiStatus.connected) {\n        // Use real API\n        const response = await fetch(`http://localhost:5000/api/nutrition/${encodeURIComponent(searchQuery)}`);\n        const data = await response.json();\n        setSearchResults(data);\n      } else {\n        // Use mock data when API is offline\n        const mockData = {\n          success: true,\n          item: searchQuery,\n          calories_per_serving: 150,\n          macros: {\n            protein: '5g',\n            carbs: '20g',\n            fat: '3g'\n          },\n          processed_level: 'unknown',\n          verdict: 'Nutrition information not available (offline mode)',\n          snap_eligible: false,\n          offline: true\n        };\n\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        setSearchResults(mockData);\n      }\n    } catch (error) {\n      console.error('Search error:', error);\n      // Fallback to mock data on error\n      setSearchResults({\n        success: false,\n        message: 'Search temporarily unavailable',\n        offline: true\n      });\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vhealth-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"vHealth App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your AI-powered nutrition assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !apiStatus.connected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offline-banner\",\n        style: {\n          backgroundColor: '#ff9800',\n          color: 'white',\n          padding: '8px',\n          borderRadius: '4px',\n          margin: '10px 0'\n        },\n        children: \"\\uD83D\\uDD0C Offline Mode - Limited functionality available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          placeholder: \"Search for food items, scan barcodes, or upload images...\",\n          onKeyPress: e => e.key === 'Enter' && handleSearch(),\n          style: {\n            width: '100%',\n            padding: '12px',\n            fontSize: '16px',\n            border: '2px solid #ddd',\n            borderRadius: '8px',\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          disabled: isLoading || !searchQuery.trim(),\n          style: {\n            width: '100%',\n            padding: '12px',\n            fontSize: '16px',\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            cursor: isLoading ? 'not-allowed' : 'pointer',\n            opacity: isLoading ? 0.6 : 1\n          },\n          children: isLoading ? 'Searching...' : 'Search Nutrition Info'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), searchResults && /*#__PURE__*/_jsxDEV(SearchResults, {\n        results: searchResults,\n        offline: !apiStatus.connected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(VHealthSearch, \"UP7A+h7D1cUmeOIuw2h6G3jc/1c=\");\n_c = VHealthSearch;\nexport default VHealthSearch;\nvar _c;\n$RefreshReg$(_c, \"VHealthSearch\");","map":{"version":3,"names":["React","useState","SearchResults","jsxDEV","_jsxDEV","VHealthSearch","apiStatus","_s","searchQuery","setSearchQuery","searchResults","setSearchResults","isLoading","setIsLoading","handleSearch","trim","connected","response","fetch","encodeURIComponent","data","json","mockData","success","item","calories_per_serving","macros","protein","carbs","fat","processed_level","verdict","snap_eligible","offline","Promise","resolve","setTimeout","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","color","padding","borderRadius","margin","type","value","onChange","e","target","placeholder","onKeyPress","key","width","fontSize","border","marginBottom","onClick","disabled","cursor","opacity","results","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/VHealthSearch.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SearchResults from '../SearchResults';\r\n\r\ninterface ApiStatus {\r\n  connected: boolean;\r\n  message: string;\r\n}\r\n\r\ninterface VHealthSearchProps {\r\n  apiStatus: ApiStatus;\r\n}\r\n\r\nconst VHealthSearch: React.FC<VHealthSearchProps> = ({ apiStatus }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchQuery.trim()) return;\r\n\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      if (apiStatus.connected) {\r\n        // Use real API\r\n        const response = await fetch(`http://localhost:5000/api/nutrition/${encodeURIComponent(searchQuery)}`);\r\n        const data = await response.json();\r\n        setSearchResults(data);\r\n      } else {\r\n        // Use mock data when API is offline\r\n        const mockData = {\r\n          success: true,\r\n          item: searchQuery,\r\n          calories_per_serving: 150,\r\n          macros: {\r\n            protein: '5g',\r\n            carbs: '20g',\r\n            fat: '3g'\r\n          },\r\n          processed_level: 'unknown',\r\n          verdict: 'Nutrition information not available (offline mode)',\r\n          snap_eligible: false,\r\n          offline: true\r\n        };\r\n        \r\n        // Simulate API delay\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        setSearchResults(mockData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Search error:', error);\r\n      // Fallback to mock data on error\r\n      setSearchResults({\r\n        success: false,\r\n        message: 'Search temporarily unavailable',\r\n        offline: true\r\n      });\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"vhealth-app\">\r\n      <header className=\"app-header\">\r\n        <h1>vHealth App</h1>\r\n        <p>Your AI-powered nutrition assistant</p>\r\n        \r\n        {!apiStatus.connected && (\r\n          <div className=\"offline-banner\" style={{\r\n            backgroundColor: '#ff9800',\r\n            color: 'white',\r\n            padding: '8px',\r\n            borderRadius: '4px',\r\n            margin: '10px 0'\r\n          }}>\r\n            ðŸ”Œ Offline Mode - Limited functionality available\r\n          </div>\r\n        )}\r\n      </header>\r\n\r\n      <main className=\"search-container\">\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            placeholder=\"Search for food items, scan barcodes, or upload images...\"\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ddd',\r\n              borderRadius: '8px',\r\n              marginBottom: '10px'\r\n            }}\r\n          />\r\n          \r\n          <button\r\n            onClick={handleSearch}\r\n            disabled={isLoading || !searchQuery.trim()}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              backgroundColor: '#4CAF50',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '8px',\r\n              cursor: isLoading ? 'not-allowed' : 'pointer',\r\n              opacity: isLoading ? 0.6 : 1\r\n            }}\r\n          >\r\n            {isLoading ? 'Searching...' : 'Search Nutrition Info'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Always show search results area */}\r\n        {searchResults && (\r\n          <SearchResults \r\n            results={searchResults} \r\n            offline={!apiStatus.connected}\r\n          />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VHealthSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}