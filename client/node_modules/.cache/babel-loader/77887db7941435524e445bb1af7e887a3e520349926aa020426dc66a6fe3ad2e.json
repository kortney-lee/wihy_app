{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\components\\\\ImageUploadModal.tsx\",\n  _s = $RefreshSig$();\n// src/components/ImageUploadModal.tsx\nimport React, { useState } from 'react';\nimport '../VHealthSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploadModal = ({\n  isOpen,\n  onClose,\n  onAnalysisComplete,\n  // Updated prop name\n  title = \"Upload Health Image\",\n  subtitle = \"Upload food, medical, or health-related images for AI analysis\"\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  if (!isOpen) return null;\n\n  // Handle file drop\n  const handleDrop = async e => {\n    e.preventDefault();\n    setIsDragging(false);\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      await processFile(imageFile);\n    } else {\n      alert('Please upload an image file (JPG, PNG, GIF, etc.)');\n    }\n  };\n\n  // Handle drag events\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n\n  // Handle file input\n  const handleFileInput = async e => {\n    var _e$target$files;\n    console.log('📁 File input triggered');\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    console.log('📁 Selected file:', file);\n    if (file) {\n      await processFile(file);\n    } else {\n      console.log('❌ No file selected');\n    }\n  };\n\n  // Handle URL upload\n  const handleUrlUpload = async () => {\n    if (!imageUrl.trim()) {\n      alert('Please enter a valid image URL');\n      return;\n    }\n    setIsProcessing(true);\n    try {\n      const response = await fetch(imageUrl);\n      const blob = await response.blob();\n      if (!blob.type.startsWith('image/')) {\n        throw new Error('URL does not point to an image');\n      }\n      const file = new File([blob], 'uploaded-image.jpg', {\n        type: blob.type\n      });\n      await processFile(file);\n    } catch (error) {\n      console.error('Error loading image from URL:', error);\n      alert('Failed to load image from URL. Please check the URL and try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Process file and analyze it\n  const processFile = async file => {\n    console.log('🔍 STEP 1: File received:', {\n      name: file.name,\n      type: file.type,\n      size: file.size\n    });\n    setIsProcessing(true);\n    try {\n      console.log('🔍 STEP 2: Creating FormData...');\n      const formData = new FormData();\n      formData.append('image', file);\n      console.log('🔍 STEP 3: Making API call...');\n      const response = await fetch('http://localhost:5000/api/analyze-image', {\n        method: 'POST',\n        body: formData\n      });\n      console.log('🔍 STEP 4: Response received:', {\n        status: response.status,\n        statusText: response.statusText,\n        ok: response.ok\n      });\n      const result = await response.json();\n      console.log('🔍 STEP 5: Raw backend result:', result);\n\n      // Let's see exactly what the backend is returning\n      console.log('🔍 STEP 6: Result analysis:', {\n        type: typeof result,\n        keys: Object.keys(result || {}),\n        foodName: result === null || result === void 0 ? void 0 : result.foodName,\n        success: result === null || result === void 0 ? void 0 : result.success,\n        fullResult: JSON.stringify(result, null, 2)\n      });\n      let foodName = (result === null || result === void 0 ? void 0 : result.foodName) || (result === null || result === void 0 ? void 0 : result.name) || (result === null || result === void 0 ? void 0 : result.food) || 'unknown';\n      console.log('🔍 STEP 7: Extracted food name:', foodName);\n      console.log('🔍 STEP 8: Triggering search for:', foodName);\n      onAnalysisComplete(foodName);\n    } catch (error) {\n      console.error('❌ Error in processFile:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Handle modal close\n  const handleClose = () => {\n    if (!isProcessing) {\n      onClose();\n      setImageUrl('');\n      setIsDragging(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `photo-modal-overlay ${isOpen ? 'open' : ''}`,\n    onClick: handleClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-subtitle\",\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-close\",\n          onClick: handleClose,\n          \"aria-label\": \"Close\",\n          disabled: isProcessing,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `upload-area ${isDragging ? 'dragging' : ''} ${isProcessing ? 'processing' : ''}`,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-spinner\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), isProcessing ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"upload-text\",\n            children: \"Analyzing image...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"upload-text\",\n            children: [isDragging ? 'Drop image here' : 'Drag an image here or', ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"upload-link\",\n              onClick: () => {\n                var _document$getElementB;\n                return (_document$getElementB = document.getElementById('modal-file-input')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n              },\n              disabled: isProcessing,\n              children: \"upload a file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"modal-file-input\",\n          type: \"file\",\n          accept: \"image/*\",\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileInput,\n          disabled: isProcessing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"url-input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          placeholder: \"Paste image URL\",\n          className: \"url-input\",\n          value: imageUrl,\n          onChange: e => setImageUrl(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              handleUrlUpload();\n            }\n          },\n          disabled: isProcessing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `search-button-modal ${isProcessing ? 'processing' : ''}`,\n          onClick: handleUrlUpload,\n          disabled: isProcessing || !imageUrl.trim(),\n          children: isProcessing ? 'Analyzing...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-info\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Supported formats: JPG, PNG, GIF, WebP (max 10MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploadModal, \"elozZ1ZMZ6BcFXNIvNZkc2TlW1E=\");\n_c = ImageUploadModal;\nexport default ImageUploadModal;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUploadModal","isOpen","onClose","onAnalysisComplete","title","subtitle","_s","isDragging","setIsDragging","imageUrl","setImageUrl","isProcessing","setIsProcessing","handleDrop","e","preventDefault","files","Array","from","dataTransfer","imageFile","find","file","type","startsWith","processFile","alert","handleDragOver","handleDragLeave","handleFileInput","_e$target$files","console","log","target","handleUrlUpload","trim","response","fetch","blob","Error","File","error","name","size","formData","FormData","append","method","body","status","statusText","ok","result","json","keys","Object","foodName","success","fullResult","JSON","stringify","food","handleClose","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onDrop","onDragOver","onDragLeave","viewBox","fill","d","_document$getElementB","document","getElementById","click","id","accept","style","display","onChange","placeholder","value","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/components/ImageUploadModal.tsx"],"sourcesContent":["// src/components/ImageUploadModal.tsx\r\nimport React, { useState } from 'react';\r\nimport '../VHealthSearch.css';\r\n\r\ninterface ImageUploadModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onAnalysisComplete: (foodName: string) => void; // Changed from onFileSelect\r\n  title?: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst ImageUploadModal: React.FC<ImageUploadModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onAnalysisComplete, // Updated prop name\r\n  title = \"Upload Health Image\",\r\n  subtitle = \"Upload food, medical, or health-related images for AI analysis\"\r\n}) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Handle file drop\r\n  const handleDrop = async (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    \r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    \r\n    if (imageFile) {\r\n      await processFile(imageFile);\r\n    } else {\r\n      alert('Please upload an image file (JPG, PNG, GIF, etc.)');\r\n    }\r\n  };\r\n\r\n  // Handle drag events\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  // Handle file input\r\n  const handleFileInput = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log('📁 File input triggered');\r\n    const file = e.target.files?.[0];\r\n    console.log('📁 Selected file:', file);\r\n    if (file) {\r\n      await processFile(file);\r\n    } else {\r\n      console.log('❌ No file selected');\r\n    }\r\n  };\r\n\r\n  // Handle URL upload\r\n  const handleUrlUpload = async () => {\r\n    if (!imageUrl.trim()) {\r\n      alert('Please enter a valid image URL');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    try {\r\n      const response = await fetch(imageUrl);\r\n      const blob = await response.blob();\r\n      \r\n      if (!blob.type.startsWith('image/')) {\r\n        throw new Error('URL does not point to an image');\r\n      }\r\n\r\n      const file = new File([blob], 'uploaded-image.jpg', { type: blob.type });\r\n      await processFile(file);\r\n    } catch (error) {\r\n      console.error('Error loading image from URL:', error);\r\n      alert('Failed to load image from URL. Please check the URL and try again.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Process file and analyze it\r\n  const processFile = async (file: File) => {\r\n    console.log('🔍 STEP 1: File received:', {\r\n      name: file.name,\r\n      type: file.type,\r\n      size: file.size\r\n    });\r\n    \r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      console.log('🔍 STEP 2: Creating FormData...');\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n      \r\n      console.log('🔍 STEP 3: Making API call...');\r\n      const response = await fetch('http://localhost:5000/api/analyze-image', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      console.log('🔍 STEP 4: Response received:', {\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        ok: response.ok\r\n      });\r\n\r\n      const result = await response.json();\r\n      console.log('🔍 STEP 5: Raw backend result:', result);\r\n      \r\n      // Let's see exactly what the backend is returning\r\n      console.log('🔍 STEP 6: Result analysis:', {\r\n        type: typeof result,\r\n        keys: Object.keys(result || {}),\r\n        foodName: result?.foodName,\r\n        success: result?.success,\r\n        fullResult: JSON.stringify(result, null, 2)\r\n      });\r\n      \r\n      let foodName = result?.foodName || result?.name || result?.food || 'unknown';\r\n      console.log('🔍 STEP 7: Extracted food name:', foodName);\r\n      \r\n      console.log('🔍 STEP 8: Triggering search for:', foodName);\r\n      onAnalysisComplete(foodName);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error in processFile:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Handle modal close\r\n  const handleClose = () => {\r\n    if (!isProcessing) {\r\n      onClose();\r\n      setImageUrl('');\r\n      setIsDragging(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`photo-modal-overlay ${isOpen ? 'open' : ''}`} onClick={handleClose}>\r\n      <div className=\"photo-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>{title}</h2>\r\n          <p className=\"modal-subtitle\">{subtitle}</p>\r\n          <button \r\n            className=\"modal-close\"\r\n            onClick={handleClose}\r\n            aria-label=\"Close\"\r\n            disabled={isProcessing}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Upload Area */}\r\n        <div \r\n          className={`upload-area ${isDragging ? 'dragging' : ''} ${isProcessing ? 'processing' : ''}`}\r\n          onDrop={handleDrop}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n        >\r\n          <div className=\"upload-content\">\r\n            <div className=\"upload-icon\">\r\n              {isProcessing ? (\r\n                <div className=\"upload-spinner\">\r\n                  <div className=\"spinner\"></div>\r\n                </div>\r\n              ) : (\r\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\r\n                </svg>\r\n              )}\r\n            </div>\r\n            \r\n            {isProcessing ? (\r\n              <p className=\"upload-text\">Analyzing image...</p>\r\n            ) : (\r\n              <p className=\"upload-text\">\r\n                {isDragging ? 'Drop image here' : 'Drag an image here or'}{' '}\r\n                <button \r\n                  className=\"upload-link\"\r\n                  onClick={() => document.getElementById('modal-file-input')?.click()}\r\n                  disabled={isProcessing}\r\n                >\r\n                  upload a file\r\n                </button>\r\n              </p>\r\n            )}\r\n          </div>\r\n          \r\n          <input\r\n            id=\"modal-file-input\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            style={{ display: 'none' }}\r\n            onChange={handleFileInput}\r\n            disabled={isProcessing}\r\n          />\r\n        </div>\r\n        \r\n        {/* URL Input */}\r\n        <div className=\"url-input-section\">\r\n          <input\r\n            type=\"url\"\r\n            placeholder=\"Paste image URL\"\r\n            className=\"url-input\"\r\n            value={imageUrl}\r\n            onChange={(e) => setImageUrl(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                handleUrlUpload();\r\n              }\r\n            }}\r\n            disabled={isProcessing}\r\n          />\r\n          <button \r\n            className={`search-button-modal ${isProcessing ? 'processing' : ''}`}\r\n            onClick={handleUrlUpload}\r\n            disabled={isProcessing || !imageUrl.trim()}\r\n          >\r\n            {isProcessing ? 'Analyzing...' : 'Search'}\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Supported formats */}\r\n        <div className=\"upload-info\">\r\n          <small>Supported formats: JPG, PNG, GIF, WebP (max 10MB)</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}