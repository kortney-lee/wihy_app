{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\components\\\\NutritionChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst NutritionChart = ({\n  nutritionData\n}) => {\n  // Calculate total macros for percentage\n  const totalMacros = nutritionData.protein + nutritionData.carbs + nutritionData.fat;\n  const proteinPercent = totalMacros > 0 ? Math.round(nutritionData.protein / totalMacros * 100) : 0;\n  const carbsPercent = totalMacros > 0 ? Math.round(nutritionData.carbs / totalMacros * 100) : 0;\n  const fatPercent = totalMacros > 0 ? Math.round(nutritionData.fat / totalMacros * 100) : 0;\n\n  // Determine quality rating based on nutrition balance\n  const getQualityRating = () => {\n    if (proteinPercent >= 20 && carbsPercent <= 45 && fatPercent <= 35) return \"Excellent\";\n    if (proteinPercent >= 15 && carbsPercent <= 60 && fatPercent <= 40) return \"Good\";\n    if (proteinPercent >= 10) return \"Fair\";\n    return \"Needs Review\";\n  };\n  const qualityRating = getQualityRating();\n  const chartData = {\n    datasets: [{\n      data: [nutritionData.protein, nutritionData.carbs, nutritionData.fat],\n      backgroundColor: ['#4ade80', '#f59e0b', '#ef4444'],\n      // Green, Yellow, Red\n      borderWidth: 0,\n      cutout: '70%'\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        height: '200px',\n        width: '200px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '2rem',\n            fontWeight: 'bold',\n            color: '#374151'\n          },\n          children: Math.round(nutritionData.calories)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '0.9rem',\n            color: '#6b7280'\n          },\n          children: \"Calories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginBottom: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1.25rem',\n            marginRight: '0.5rem'\n          },\n          children: \"\\u2696\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: qualityRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: '1rem',\n          fontSize: '0.9rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#4ade80'\n            },\n            children: \"\\u25A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), \" Protein: \", proteinPercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#f59e0b'\n            },\n            children: \"\\u25A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), \" Carbs: \", carbsPercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ef4444'\n            },\n            children: \"\\u25A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), \" Fat: \", fatPercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c = NutritionChart;\nexport default NutritionChart;\nvar _c;\n$RefreshReg$(_c, \"NutritionChart\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsxDEV","_jsxDEV","register","NutritionChart","nutritionData","totalMacros","protein","carbs","fat","proteinPercent","Math","round","carbsPercent","fatPercent","getQualityRating","qualityRating","chartData","datasets","data","backgroundColor","borderWidth","cutout","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","style","textAlign","children","position","height","width","margin","options","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","fontSize","fontWeight","color","calories","marginTop","alignItems","justifyContent","marginBottom","marginRight","gap","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/components/NutritionChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\ninterface NutritionChartProps {\r\n  nutritionData: {\r\n    calories: number;\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n    fiber: number;\r\n    sugar: number;\r\n    sodium: number;\r\n    novaScore?: number;\r\n    processedLevel?: string;\r\n  };\r\n}\r\n\r\nconst NutritionChart: React.FC<NutritionChartProps> = ({ nutritionData }) => {\r\n  // Calculate total macros for percentage\r\n  const totalMacros = nutritionData.protein + nutritionData.carbs + nutritionData.fat;\r\n  const proteinPercent = totalMacros > 0 ? Math.round((nutritionData.protein / totalMacros) * 100) : 0;\r\n  const carbsPercent = totalMacros > 0 ? Math.round((nutritionData.carbs / totalMacros) * 100) : 0;\r\n  const fatPercent = totalMacros > 0 ? Math.round((nutritionData.fat / totalMacros) * 100) : 0;\r\n\r\n  // Determine quality rating based on nutrition balance\r\n  const getQualityRating = () => {\r\n    if (proteinPercent >= 20 && carbsPercent <= 45 && fatPercent <= 35) return \"Excellent\";\r\n    if (proteinPercent >= 15 && carbsPercent <= 60 && fatPercent <= 40) return \"Good\";\r\n    if (proteinPercent >= 10) return \"Fair\";\r\n    return \"Needs Review\";\r\n  };\r\n\r\n  const qualityRating = getQualityRating();\r\n\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: [nutritionData.protein, nutritionData.carbs, nutritionData.fat],\r\n        backgroundColor: ['#4ade80', '#f59e0b', '#ef4444'], // Green, Yellow, Red\r\n        borderWidth: 0,\r\n        cutout: '70%',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        enabled: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div style={{ position: 'relative', height: '200px', width: '200px', margin: '0 auto' }}>\r\n        <Doughnut data={chartData} options={chartOptions} />\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          textAlign: 'center'\r\n        }}>\r\n          <div style={{ fontSize: '2rem', fontWeight: 'bold', color: '#374151' }}>\r\n            {Math.round(nutritionData.calories)}\r\n          </div>\r\n          <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\r\n            Calories\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '1rem' }}>\r\n        <div style={{ \r\n          display: 'flex', \r\n          alignItems: 'center', \r\n          justifyContent: 'center',\r\n          marginBottom: '0.5rem'\r\n        }}>\r\n          <span style={{ fontSize: '1.25rem', marginRight: '0.5rem' }}>⚖️</span>\r\n          <span style={{ fontWeight: '600', color: '#374151' }}>{qualityRating}</span>\r\n        </div>\r\n        \r\n        <div style={{ display: 'flex', justifyContent: 'center', gap: '1rem', fontSize: '0.9rem' }}>\r\n          <span>\r\n            <span style={{ color: '#4ade80' }}>■</span> Protein: {proteinPercent}%\r\n          </span>\r\n          <span>\r\n            <span style={{ color: '#f59e0b' }}>■</span> Carbs: {carbsPercent}%\r\n          </span>\r\n          <span>\r\n            <span style={{ color: '#ef4444' }}>■</span> Fat: {fatPercent}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NutritionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}