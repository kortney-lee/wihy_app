{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { MultiFormatOneDReader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\n/**\n * Reader to be used for any One Dimension type barcode.\n */\nvar BrowserMultiFormatOneDReader = /** @class */function (_super) {\n  __extends(BrowserMultiFormatOneDReader, _super);\n  /**\n   * Creates an instance of BrowserBarcodeReader.\n   * @param {Map<DecodeHintType, any>} hints?\n   * @param options\n   */\n  function BrowserMultiFormatOneDReader(hints, options) {\n    return _super.call(this, new MultiFormatOneDReader(hints), hints, options) || this;\n  }\n  return BrowserMultiFormatOneDReader;\n}(BrowserCodeReader);\nexport { BrowserMultiFormatOneDReader };","map":{"version":3,"names":["MultiFormatOneDReader","BrowserCodeReader","BrowserMultiFormatOneDReader","_super","__extends","hints","options","call"],"sources":["../../../src/readers/BrowserMultiFormatOneDReader.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAyBA,qBAAqB,QAAQ,gBAAgB;AACtE,SAASC,iBAAiB,QAAQ,qBAAqB;AAGvD;;;AAGA,IAAAC,4BAAA,0BAAAC,MAAA;EAAkDC,SAAA,CAAAF,4BAAA,EAAAC,MAAA;EAChD;;;;;EAKA,SAAAD,6BAAmBG,KAAgC,EAAEC,OAAmC;WACtFH,MAAA,CAAAI,IAAA,OAAM,IAAIP,qBAAqB,CAACK,KAAK,CAAC,EAAEA,KAAK,EAAEC,OAAO,CAAC;EACzD;EACF,OAAAJ,4BAAC;AAAD,CAAC,CATiDD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}