{"ast":null,"code":"import axios from 'axios';\n\n// Update the API_URL to match your new service structure:\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// UPDATED: Backend API response types with all new fields\n\nexport const TRUSTED_DOMAINS = {\n  'nih.gov': 1,\n  'ncbi.nlm.nih.gov': 1,\n  'who.int': 1,\n  'cdc.gov': 1,\n  'fda.gov': 1,\n  'usda.gov': 1,\n  'jamanetwork.com': 1,\n  'nejm.org': 1,\n  'thelancet.com': 1,\n  'bmj.com': 1,\n  'nature.com': 1,\n  'science.org': 1,\n  'mayoclinic.org': 1,\n  'harvard.edu': 1,\n  'stanford.edu': 1,\n  'clevelandclinic.org': 1,\n  'uptodate.com': 1,\n  'cochranelibrary.com': 1,\n  'pubmed.ncbi.nlm.nih.gov': 1,\n  'medlineplus.gov': 1,\n  'livemint.com': 0.8,\n  // ADDED: LiveMint as trusted source\n  'npr.org': 0.9,\n  'reuters.com': 0.9,\n  'cnn.com': 0.8,\n  'cbsnews.com': 0.8,\n  'abcnews.com': 0.8,\n  'washingtonpost.com': 0.8,\n  'nytimes.com': 0.8\n};\nexport const NEWS_CATEGORIES = {\n  NUTRITION: 'nutrition',\n  MEDICAL: 'medical',\n  PUBLIC_HEALTH: 'health',\n  CLINICAL: 'clinical',\n  PREVENTION: 'prevention',\n  MENTAL_HEALTH: 'mental',\n  GENERAL: 'general',\n  SCIENCE: 'science',\n  TECH: 'tech',\n  POLITICAL: 'political',\n  SPORTS: 'sports',\n  ENTERTAINMENT: 'entertainment',\n  BUSINESS: 'business',\n  NATURE: 'nature'\n};\n\n// UPDATED: Enhanced article conversion with better image field mapping\nexport const fetchNewsFeed = async (categories, limit) => {\n  try {\n    var _data$articles;\n    console.log('üîç Fetching health news from backend API...', {\n      categories,\n      limit\n    });\n    const params = {\n      limit: limit || 50,\n      flat: 'true'\n    };\n    if (categories && categories.length > 0 && categories[0] !== 'all') {\n      params.category = categories[0];\n    }\n\n    // Updated endpoint path to match your RSS service\n    console.log('üì° Making request to:', `${API_URL}/news/articles`, 'with params:', params);\n    const response = await axios.get(`${API_URL}/news/articles`, {\n      params,\n      timeout: 10000,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = response.data;\n    console.log('‚úÖ Backend API response:', {\n      success: data.success,\n      articleCount: ((_data$articles = data.articles) === null || _data$articles === void 0 ? void 0 : _data$articles.length) || 0,\n      count: data.count,\n      message: data.message,\n      debug: data.debug\n    });\n\n    // DEBUG: Log first few articles to see the actual structure\n    if (data.articles && data.articles.length > 0) {\n      console.log('üîç Sample backend article structure:', {\n        first_article_keys: Object.keys(data.articles[0]),\n        sample_article: data.articles[0],\n        media_fields: {\n          media_thumb_url: data.articles[0].media_thumb_url,\n          media_url: data.articles[0].media_url,\n          feed_image_url: data.articles[0].feed_image_url,\n          feed_thumbnail_url: data.articles[0].feed_thumbnail_url,\n          has_media: data.articles[0].has_media\n        }\n      });\n    }\n    if (!data.success) {\n      console.warn('‚ö†Ô∏è Backend returned success=false:', data.message);\n    }\n\n    // ENHANCED: Convert backend article format with better image handling\n    const articles = (data.articles || []).filter(article => article.title && article.title.trim() !== '').map((article, index) => {\n      // DEBUG: Log image fields for first few articles\n      if (index < 3) {\n        var _article$title;\n        console.log(`üñºÔ∏è Article ${index + 1} image analysis:`, {\n          title: ((_article$title = article.title) === null || _article$title === void 0 ? void 0 : _article$title.substring(0, 50)) + '...',\n          media_thumb_url: article.media_thumb_url,\n          media_url: article.media_url,\n          feed_image_url: article.feed_image_url,\n          feed_thumbnail_url: article.feed_thumbnail_url,\n          has_media: article.has_media,\n          raw_fields: Object.keys(article).filter(key => key.includes('media') || key.includes('image') || key.includes('thumb'))\n        });\n      }\n\n      // IMPROVED: Better image URL extraction with validation\n      const extractValidImageUrl = url => {\n        if (!url) return '';\n        const trimmed = url.trim();\n        if (trimmed === 'null' || trimmed === 'undefined' || trimmed === '') return '';\n        if (trimmed.startsWith('http') || trimmed.startsWith('//')) return trimmed;\n        return '';\n      };\n\n      // Extract all possible image URLs\n      const mediaThumbUrl = extractValidImageUrl(article.media_thumb_url);\n      const mediaUrl = extractValidImageUrl(article.media_url);\n      const feedImageUrl = extractValidImageUrl(article.feed_image_url);\n      const feedThumbnailUrl = extractValidImageUrl(article.feed_thumbnail_url);\n\n      // Choose best available images (prefer article-specific over feed-level)\n      const thumbnailUrl = mediaThumbUrl || mediaUrl || feedThumbnailUrl || feedImageUrl;\n      const imageUrl = mediaUrl || mediaThumbUrl || feedImageUrl || feedThumbnailUrl;\n\n      // Parse boolean fields more robustly\n      const parseBoolean = value => {\n        if (typeof value === 'boolean') return value;\n        if (typeof value === 'string') {\n          const lower = value.toLowerCase();\n          return lower === 'true' || lower === '1' || lower === 'yes';\n        }\n        if (typeof value === 'number') return value === 1;\n        return false;\n      };\n      const hasMedia = parseBoolean(article.has_media) || !!(thumbnailUrl || imageUrl);\n      const hasAuthor = parseBoolean(article.has_author) || !!(article.author && article.author.trim());\n      const hasContent = parseBoolean(article.has_content) || !!(article.content_encoded && article.content_encoded.trim());\n\n      // DEBUG: Log final image decisions for first few articles\n      if (index < 3) {\n        console.log(`‚úÖ Article ${index + 1} final image decision:`, {\n          thumbnailUrl,\n          imageUrl,\n          hasMedia,\n          mediaFound: !!(mediaThumbUrl || mediaUrl),\n          feedImageFound: !!(feedImageUrl || feedThumbnailUrl)\n        });\n      }\n      return {\n        id: article.guid || `${article.feed_id}_${index}` || `article_${Date.now()}_${index}`,\n        title: article.title || 'No title',\n        summary: article.description || article.summary || 'No summary available',\n        url: article.link || '#',\n        source: article.feed_title || article.source || article.author || 'Unknown Source',\n        domain: extractDomain(article.link || ''),\n        category: article.category || article.article_category || 'general',\n        publishedDate: article.pubDate || article.extracted_at || new Date().toISOString(),\n        relevanceScore: calculateRelevanceScore(article.title, article.description || article.summary),\n        tags: extractTags(article.title, article.description || article.summary, article.tags),\n        // FIXED: Image and media fields with proper extraction\n        thumbnailUrl,\n        imageUrl,\n        mediaType: article.media_type || (hasMedia ? 'image' : ''),\n        mediaDescription: article.media_description || '',\n        // Enhanced content fields\n        author: article.author || '',\n        fullContent: article.content_encoded || '',\n        wordCount: parseInt(article.word_count || '0') || 0,\n        readingTime: parseInt(article.reading_time || '0') || 0,\n        // Quality indicators\n        hasMedia,\n        hasAuthor,\n        contentLength: parseInt(article.content_length || '0') || 0,\n        // Source metadata\n        feedTitle: article.feed_title || '',\n        feedImageUrl: feedImageUrl,\n        feedThumbnailUrl: feedThumbnailUrl,\n        // Additional metadata\n        guid: article.guid || '',\n        commentsUrl: article.comments_url || '',\n        language: article.language || '',\n        rights: article.rights || '',\n        extractedAt: article.extracted_at || '',\n        lastModified: article.last_modified || ''\n      };\n    });\n    console.log('üì∞ Processed articles:', articles.length);\n    console.log('üì∏ Articles with images:', articles.filter(a => a.hasMedia).length);\n    console.log('üì∏ Articles with thumbnail URLs:', articles.filter(a => a.thumbnailUrl).length);\n    console.log('üì∏ Articles with image URLs:', articles.filter(a => a.imageUrl).length);\n    console.log('‚úçÔ∏è Articles with authors:', articles.filter(a => a.hasAuthor).length);\n\n    // Log some sample image URLs for debugging\n    const articlesWithImages = articles.filter(a => a.thumbnailUrl || a.imageUrl);\n    if (articlesWithImages.length > 0) {\n      console.log('üñºÔ∏è Sample image URLs found:', articlesWithImages.slice(0, 3).map(a => ({\n        title: a.title.substring(0, 30) + '...',\n        thumbnailUrl: a.thumbnailUrl,\n        imageUrl: a.imageUrl\n      })));\n    } else {\n      console.log('‚ùå No image URLs found in any articles');\n    }\n\n    // If no articles from flat endpoint, try the regular endpoint\n    if (articles.length === 0) {\n      var _regularData$articles;\n      console.log('üîÑ No articles from flat endpoint, trying regular endpoint...');\n      const regularResponse = await axios.get(`${API_URL}/news/articles`, {\n        params: {\n          limit: limit || 50,\n          category: (categories === null || categories === void 0 ? void 0 : categories[0]) !== 'all' ? categories === null || categories === void 0 ? void 0 : categories[0] : undefined\n        },\n        timeout: 10000\n      });\n      const regularData = regularResponse.data;\n      console.log('üì∞ Regular endpoint response:', {\n        success: regularData.success,\n        articleCount: ((_regularData$articles = regularData.articles) === null || _regularData$articles === void 0 ? void 0 : _regularData$articles.length) || 0,\n        count: regularData.count\n      });\n\n      // Process regular endpoint articles with enhanced fields\n      const regularArticles = (regularData.articles || []).filter(article => article.title && article.title.trim() !== '').map((article, index) => {\n        var _article$id, _article$feed, _article$feed2, _article$feed3, _article$feed4, _article$feed5, _article$id2;\n        return {\n          id: ((_article$id = article.id) === null || _article$id === void 0 ? void 0 : _article$id.toString()) || article.guid || `article_${Date.now()}_${index}`,\n          title: article.title || 'No title',\n          summary: article.description || article.summary || 'No summary available',\n          url: article.link || article.url || '#',\n          source: ((_article$feed = article.feed) === null || _article$feed === void 0 ? void 0 : _article$feed.title) || article.source || article.author || 'Unknown Source',\n          domain: extractDomain(article.link || article.url || ''),\n          category: ((_article$feed2 = article.feed) === null || _article$feed2 === void 0 ? void 0 : _article$feed2.category) || article.category || 'general',\n          publishedDate: article.pub_date || article.pubDate || article.created_at || new Date().toISOString(),\n          relevanceScore: calculateRelevanceScore(article.title, article.description || article.summary),\n          tags: extractTags(article.title, article.description || article.summary),\n          // Enhanced fields with fallbacks\n          thumbnailUrl: article.thumbnail_url || article.media_thumb_url || '',\n          imageUrl: article.image_url || article.media_url || '',\n          mediaType: article.media_type || 'image',\n          mediaDescription: article.media_description || '',\n          author: article.author || '',\n          fullContent: article.content || article.content_encoded || '',\n          wordCount: parseInt(article.word_count || '0') || 0,\n          readingTime: parseInt(article.reading_time || '0') || 0,\n          hasMedia: !!(article.thumbnail_url || article.image_url || article.media_thumb_url || article.media_url),\n          hasAuthor: !!(article.author && article.author.trim()),\n          contentLength: parseInt(article.content_length || '0') || 0,\n          feedTitle: ((_article$feed3 = article.feed) === null || _article$feed3 === void 0 ? void 0 : _article$feed3.title) || '',\n          feedImageUrl: ((_article$feed4 = article.feed) === null || _article$feed4 === void 0 ? void 0 : _article$feed4.image_url) || '',\n          feedThumbnailUrl: ((_article$feed5 = article.feed) === null || _article$feed5 === void 0 ? void 0 : _article$feed5.thumbnail_url) || '',\n          guid: article.guid || ((_article$id2 = article.id) === null || _article$id2 === void 0 ? void 0 : _article$id2.toString()) || '',\n          commentsUrl: article.comments_url || '',\n          language: article.language || '',\n          rights: article.rights || '',\n          extractedAt: article.extracted_at || article.created_at || '',\n          lastModified: article.last_modified || article.updated_at || ''\n        };\n      });\n      articles.push(...regularArticles);\n    }\n\n    // Categorize articles\n    const categorizedArticles = {};\n    articles.forEach(article => {\n      const category = mapBackendCategory(article.category);\n      if (!categorizedArticles[category]) {\n        categorizedArticles[category] = [];\n      }\n      categorizedArticles[category].push(article);\n    });\n    console.log('‚úÖ News feed processed successfully:', {\n      totalArticles: articles.length,\n      articlesWithImages: articles.filter(a => a.hasMedia).length,\n      articlesWithAuthors: articles.filter(a => a.hasAuthor).length,\n      categories: Object.keys(categorizedArticles),\n      categoryCount: Object.entries(categorizedArticles).map(([cat, arts]) => `${cat}: ${arts.length}`).join(', ')\n    });\n\n    // If still no articles, use fallback\n    if (articles.length === 0) {\n      console.log('üì± No articles found, using fallback...');\n      return await getFallbackNews();\n    }\n    return {\n      success: true,\n      articles: articles,\n      categories: categorizedArticles,\n      lastUpdated: new Date().toISOString(),\n      count: articles.length,\n      message: data.message || 'Health news fetched successfully from database'\n    };\n  } catch (error) {\n    var _error$response;\n    console.error('‚ùå Error fetching news feed from backend:', error);\n\n    // Check specific error types\n    if (error.code === 'ECONNREFUSED') {\n      console.log('üì± Backend connection refused, using fallback news...');\n    } else if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 500) {\n      console.log('üì± Backend server error, using fallback news...');\n    } else if (error.code === 'ENOTFOUND') {\n      console.log('üì± Backend not found, using fallback news...');\n    } else {\n      console.log('üì± Unknown error, using fallback news...', error.message);\n    }\n    const fallback = await getFallbackNews();\n    return {\n      ...fallback,\n      message: `Backend error (${error.message}). Showing sample news.`\n    };\n  }\n};\n\n// Helper function to map backend categories to frontend categories\nconst mapBackendCategory = backendCategory => {\n  if (!backendCategory) return 'General Health';\n  const categoryMap = {\n    'nutrition': 'Nutrition & Diet',\n    'diet': 'Nutrition & Diet',\n    'medical': 'Medical Research',\n    'health': 'Public Health',\n    'mental': 'Mental Health',\n    'prevention': 'Disease Prevention',\n    'clinical': 'Clinical Studies',\n    'science': 'Medical Research',\n    'tech': 'Medical Technology',\n    'political': 'Health Policy',\n    'sports': 'Fitness & Sports',\n    'entertainment': 'Wellness',\n    'business': 'Health Business',\n    'nature': 'Environmental Health'\n  };\n  const lowerCategory = backendCategory.toLowerCase();\n  for (const [key, value] of Object.entries(categoryMap)) {\n    if (lowerCategory.includes(key)) {\n      return value;\n    }\n  }\n  return 'General Health';\n};\n\n// ENHANCED: Updated fallback news with image URLs\nconst getFallbackNews = async () => {\n  const fallbackArticles = [{\n    id: 'fallback_1',\n    title: \"New Study Reveals Benefits of Mediterranean Diet for Heart Health\",\n    summary: \"Researchers found that following a Mediterranean diet can reduce cardiovascular disease risk by up to 30%. The study tracked over 7,000 participants for 5 years.\",\n    url: \"https://www.nih.gov/news-events/news-releases/mediterranean-diet-heart-health\",\n    source: \"NIH Health News\",\n    domain: \"nih.gov\",\n    category: \"Nutrition & Diet\",\n    publishedDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.95,\n    tags: ['nutrition', 'heart-health', 'mediterranean-diet', 'cardiovascular'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Sarah Johnson\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 150,\n    readingTime: 1,\n    contentLength: 750\n  }, {\n    id: 'fallback_2',\n    title: \"Exercise and Mental Health: The Connection You Need to Know\",\n    summary: \"New research shows that just 30 minutes of exercise daily can significantly improve mental well-being and reduce symptoms of depression and anxiety.\",\n    url: \"https://www.cdc.gov/mental-health/exercise-connection\",\n    source: \"CDC Health Updates\",\n    domain: \"cdc.gov\",\n    category: \"Mental Health\",\n    publishedDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.90,\n    tags: ['mental-health', 'exercise', 'wellness', 'depression'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Michael Chen\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 180,\n    readingTime: 1,\n    contentLength: 900\n  }, {\n    id: 'fallback_3',\n    title: \"The Importance of Sleep for Immune System Function\",\n    summary: \"Studies demonstrate that quality sleep is crucial for maintaining a strong immune system. Adults need 7-9 hours of sleep per night for optimal health.\",\n    url: \"https://www.nih.gov/news-events/sleep-immune-system\",\n    source: \"Sleep Health Research\",\n    domain: \"nih.gov\",\n    category: \"General Health\",\n    publishedDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.85,\n    tags: ['sleep', 'immune-system', 'health', 'wellness'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1541781774459-bb2af2f05b55?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1541781774459-bb2af2f05b55?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Lisa Rodriguez\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 200,\n    readingTime: 1,\n    contentLength: 1000\n  }, {\n    id: 'fallback_4',\n    title: \"Breakthrough in Cancer Research: New Treatment Shows Promise\",\n    summary: \"Scientists have developed a new immunotherapy approach that shows remarkable results in clinical trials, offering hope for difficult-to-treat cancers.\",\n    url: \"https://www.nih.gov/news-events/cancer-breakthrough-2024\",\n    source: \"Medical Research Today\",\n    domain: \"nih.gov\",\n    category: \"Medical Research\",\n    publishedDate: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.98,\n    tags: ['cancer', 'research', 'immunotherapy', 'clinical-trials'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Robert Kim\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 250,\n    readingTime: 2,\n    contentLength: 1250\n  }, {\n    id: 'fallback_5',\n    title: \"Preventive Care: Early Detection Saves Lives\",\n    summary: \"Regular health screenings can detect potential health issues before they become serious problems. Learn what screenings you need by age.\",\n    url: \"https://www.cdc.gov/prevention/early-detection\",\n    source: \"CDC Prevention Guidelines\",\n    domain: \"cdc.gov\",\n    category: \"Disease Prevention\",\n    publishedDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.80,\n    tags: ['prevention', 'screening', 'early-detection', 'health-checkup'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Amanda White\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 160,\n    readingTime: 1,\n    contentLength: 800\n  }];\n\n  // Categorize fallback articles\n  const categorizedArticles = {};\n  fallbackArticles.forEach(article => {\n    if (!categorizedArticles[article.category]) {\n      categorizedArticles[article.category] = [];\n    }\n    categorizedArticles[article.category].push(article);\n  });\n  return {\n    success: true,\n    articles: fallbackArticles,\n    categories: categorizedArticles,\n    lastUpdated: new Date().toISOString(),\n    count: fallbackArticles.length,\n    message: 'Using sample health news (backend unavailable)'\n  };\n};\n\n// Rest of helper functions remain the same but with enhanced logging...\nconst extractDomain = url => {\n  try {\n    return new URL(url).hostname.toLowerCase();\n  } catch {\n    return 'unknown';\n  }\n};\nconst calculateRelevanceScore = (title = '', description = '') => {\n  const content = `${title} ${description}`.toLowerCase();\n  const healthKeywords = ['health', 'medical', 'wellness', 'fitness', 'nutrition', 'diet', 'exercise', 'mental health', 'disease', 'treatment', 'research', 'study'];\n  const matchingKeywords = healthKeywords.filter(keyword => content.includes(keyword));\n  let score = 0.5;\n  score += matchingKeywords.length * 0.08;\n  return Math.min(score, 1.0);\n};\nconst extractTags = (title = '', description = '', existingTags) => {\n  const content = `${title} ${description}`.toLowerCase();\n  const tags = [];\n  if (existingTags) {\n    try {\n      const parsedTags = existingTags.split(',').map(tag => tag.trim()).filter(tag => tag.length > 0);\n      tags.push(...parsedTags);\n    } catch (e) {\n      // Continue with keyword extraction\n    }\n  }\n  const tagKeywords = ['health', 'medical', 'nutrition', 'diet', 'fitness', 'exercise', 'mental-health', 'wellness', 'prevention', 'treatment', 'research', 'study', 'clinical', 'vaccine', 'medicine', 'hospital', 'doctor', 'heart', 'cancer', 'diabetes', 'sleep', 'immune', 'therapy'];\n  tagKeywords.forEach(keyword => {\n    if (content.includes(keyword.replace('-', ' ')) && !tags.includes(keyword)) {\n      tags.push(keyword);\n    }\n  });\n  return tags.slice(0, 5);\n};\n\n// ENHANCED: Updated utility functions with image support\nexport const formatArticleForDisplay = article => {\n  return {\n    ...article,\n    formattedDate: formatTimeAgo(article.publishedDate),\n    isTrusted: isTrustedDomain(article.url),\n    relevancePercentage: Math.round(article.relevanceScore * 100),\n    shortSummary: article.summary.length > 150 ? article.summary.substring(0, 150) + '...' : article.summary,\n    // ADDED: Image display helpers\n    displayImage: article.thumbnailUrl || article.imageUrl || article.feedThumbnailUrl || article.feedImageUrl || '',\n    hasValidImage: !!(article.thumbnailUrl || article.imageUrl),\n    // ADDED: Content quality indicators\n    qualityScore: calculateQualityScore(article),\n    readingTimeText: article.readingTime ? `${article.readingTime} min read` : 'Quick read'\n  };\n};\n\n// ADDED: Calculate article quality score\nconst calculateQualityScore = article => {\n  let score = 0;\n  if (article.hasAuthor) score += 0.2;\n  if (article.hasMedia) score += 0.2;\n  if (article.wordCount && article.wordCount > 100) score += 0.2;\n  if (article.contentLength && article.contentLength > 500) score += 0.2;\n  if (isTrustedDomain(article.url)) score += 0.2;\n  return Math.min(score, 1.0);\n};\n\n// Rest of the functions remain the same...\nexport const getArticlesByCategory = async (category, limit) => {\n  try {\n    console.log('üìÇ Fetching articles for category:', category);\n    return await fetchNewsFeed([category], limit);\n  } catch (error) {\n    console.error('‚ùå Error fetching articles by category:', error);\n    return {\n      success: false,\n      message: 'Error fetching articles by category'\n    };\n  }\n};\nexport const searchNewsArticles = async (query, category, limit) => {\n  try {\n    console.log('üîé Searching articles:', {\n      query,\n      category,\n      limit\n    });\n    if (!query.trim()) {\n      return {\n        success: false,\n        message: 'Search query cannot be empty'\n      };\n    }\n    const feedResponse = await fetchNewsFeed(category ? [category] : undefined, 100);\n    if (!feedResponse.success || !feedResponse.articles) {\n      return {\n        success: false,\n        message: 'No articles available to search'\n      };\n    }\n    const searchTerm = query.toLowerCase();\n    const matchingArticles = feedResponse.articles.filter(article => article.title.toLowerCase().includes(searchTerm) || article.summary.toLowerCase().includes(searchTerm) || article.tags.some(tag => tag.includes(searchTerm)) || article.author && article.author.toLowerCase().includes(searchTerm)).slice(0, limit || 10);\n    return {\n      success: true,\n      articles: matchingArticles,\n      lastUpdated: new Date().toISOString(),\n      count: matchingArticles.length,\n      message: `Search results for \"${query}\"`\n    };\n  } catch (error) {\n    console.error('‚ùå Error searching articles:', error);\n    return {\n      success: false,\n      message: 'Error searching articles'\n    };\n  }\n};\nexport const refreshNewsFeed = async () => {\n  try {\n    console.log('üîÑ Refreshing news feed...');\n    try {\n      await axios.post(`${API_URL}/news/fetch`, {}, {\n        timeout: 5000\n      });\n      console.log('‚úÖ Triggered backend refresh');\n    } catch (fetchError) {\n      console.log('‚ö†Ô∏è Could not trigger backend refresh, getting current data');\n    }\n    return await fetchNewsFeed();\n  } catch (error) {\n    console.error('‚ùå Error refreshing news feed:', error);\n    return {\n      success: false,\n      message: 'Error refreshing news feed'\n    };\n  }\n};\nexport const getNewsFeedStats = async () => {\n  try {\n    const feedResponse = await fetchNewsFeed();\n    if (!feedResponse.success || !feedResponse.articles) {\n      return {\n        success: false,\n        message: 'No articles available for stats'\n      };\n    }\n    const categoryCounts = {};\n    const sourcesCounts = {};\n    let totalWordCount = 0;\n    let totalReadingTime = 0;\n    let articlesWithImages = 0;\n    let articlesWithAuthors = 0;\n    let trustedSources = 0;\n    feedResponse.articles.forEach(article => {\n      categoryCounts[article.category] = (categoryCounts[article.category] || 0) + 1;\n      sourcesCounts[article.source] = (sourcesCounts[article.source] || 0) + 1;\n      if (article.hasMedia) articlesWithImages++;\n      if (article.hasAuthor) articlesWithAuthors++;\n      if (isTrustedDomain(article.url)) trustedSources++;\n      if (article.wordCount) totalWordCount += article.wordCount;\n      if (article.readingTime) totalReadingTime += article.readingTime;\n    });\n    return {\n      success: true,\n      stats: {\n        totalArticles: feedResponse.articles.length,\n        categoryCounts,\n        lastUpdated: feedResponse.lastUpdated || new Date().toISOString(),\n        sourcesCounts,\n        articlesWithImages,\n        articlesWithAuthors,\n        averageWordCount: Math.round(totalWordCount / feedResponse.articles.length) || 0,\n        averageReadingTime: Math.round(totalReadingTime / feedResponse.articles.length) || 0,\n        trustedSources\n      }\n    };\n  } catch (error) {\n    console.error('‚ùå Error fetching stats:', error);\n    return {\n      success: false,\n      message: 'Error fetching news feed statistics'\n    };\n  }\n};\n\n// Utility functions remain the same...\nexport const isTrustedDomain = url => {\n  try {\n    const domain = new URL(url).hostname.toLowerCase();\n    return Object.keys(TRUSTED_DOMAINS).some(trustedDomain => domain.includes(trustedDomain.toLowerCase()));\n  } catch {\n    return false;\n  }\n};\nexport const formatTimeAgo = dateString => {\n  try {\n    const now = new Date();\n    const publishedDate = new Date(dateString);\n    const diffInHours = Math.floor((now.getTime() - publishedDate.getTime()) / (1000 * 60 * 60));\n    if (diffInHours < 1) return 'Just now';\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays < 7) return `${diffInDays}d ago`;\n    const diffInWeeks = Math.floor(diffInDays / 7);\n    if (diffInWeeks < 4) return `${diffInWeeks}w ago`;\n    const diffInMonths = Math.floor(diffInDays / 30);\n    return `${diffInMonths}mo ago`;\n  } catch {\n    return 'Unknown';\n  }\n};\nexport const getAvailableCategories = () => {\n  return [{\n    id: 'all',\n    label: 'All Health News'\n  }, {\n    id: 'nutrition',\n    label: 'Nutrition & Diet'\n  }, {\n    id: 'medical',\n    label: 'Medical Research'\n  }, {\n    id: 'health',\n    label: 'Public Health'\n  }, {\n    id: 'clinical',\n    label: 'Clinical Studies'\n  }, {\n    id: 'prevention',\n    label: 'Disease Prevention'\n  }, {\n    id: 'mental',\n    label: 'Mental Health'\n  }, {\n    id: 'science',\n    label: 'Science Research'\n  }, {\n    id: 'general',\n    label: 'General Health'\n  }];\n};\n\n// Legacy compatibility\n\nexport class NewsService {\n  async fetchNews() {\n    var _response$articles;\n    const response = await fetchNewsFeed();\n    return ((_response$articles = response.articles) === null || _response$articles === void 0 ? void 0 : _response$articles.map(article => ({\n      title: article.title,\n      link: article.url,\n      description: article.summary,\n      pubDate: article.publishedDate,\n      source: article.source,\n      category: article.category,\n      thumbnailUrl: article.thumbnailUrl,\n      imageUrl: article.imageUrl,\n      author: article.author,\n      hasMedia: article.hasMedia\n    }))) || [];\n  }\n}\nexport const newsService = new NewsService();","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","TRUSTED_DOMAINS","NEWS_CATEGORIES","NUTRITION","MEDICAL","PUBLIC_HEALTH","CLINICAL","PREVENTION","MENTAL_HEALTH","GENERAL","SCIENCE","TECH","POLITICAL","SPORTS","ENTERTAINMENT","BUSINESS","NATURE","fetchNewsFeed","categories","limit","_data$articles","console","log","params","flat","length","category","response","get","timeout","headers","data","success","articleCount","articles","count","message","debug","first_article_keys","Object","keys","sample_article","media_fields","media_thumb_url","media_url","feed_image_url","feed_thumbnail_url","has_media","warn","filter","article","title","trim","map","index","_article$title","substring","raw_fields","key","includes","extractValidImageUrl","url","trimmed","startsWith","mediaThumbUrl","mediaUrl","feedImageUrl","feedThumbnailUrl","thumbnailUrl","imageUrl","parseBoolean","value","lower","toLowerCase","hasMedia","hasAuthor","has_author","author","hasContent","has_content","content_encoded","mediaFound","feedImageFound","id","guid","feed_id","Date","now","summary","description","link","source","feed_title","domain","extractDomain","article_category","publishedDate","pubDate","extracted_at","toISOString","relevanceScore","calculateRelevanceScore","tags","extractTags","mediaType","media_type","mediaDescription","media_description","fullContent","wordCount","parseInt","word_count","readingTime","reading_time","contentLength","content_length","feedTitle","commentsUrl","comments_url","language","rights","extractedAt","lastModified","last_modified","a","articlesWithImages","slice","_regularData$articles","regularResponse","undefined","regularData","regularArticles","_article$id","_article$feed","_article$feed2","_article$feed3","_article$feed4","_article$feed5","_article$id2","toString","feed","pub_date","created_at","thumbnail_url","image_url","content","updated_at","push","categorizedArticles","forEach","mapBackendCategory","totalArticles","articlesWithAuthors","categoryCount","entries","cat","arts","join","getFallbackNews","lastUpdated","error","_error$response","code","status","fallback","backendCategory","categoryMap","lowerCategory","fallbackArticles","URL","hostname","healthKeywords","matchingKeywords","keyword","score","Math","min","existingTags","parsedTags","split","tag","e","tagKeywords","replace","formatArticleForDisplay","formattedDate","formatTimeAgo","isTrusted","isTrustedDomain","relevancePercentage","round","shortSummary","displayImage","hasValidImage","qualityScore","calculateQualityScore","readingTimeText","getArticlesByCategory","searchNewsArticles","query","feedResponse","searchTerm","matchingArticles","some","refreshNewsFeed","post","fetchError","getNewsFeedStats","categoryCounts","sourcesCounts","totalWordCount","totalReadingTime","trustedSources","stats","averageWordCount","averageReadingTime","trustedDomain","dateString","diffInHours","floor","getTime","diffInDays","diffInWeeks","diffInMonths","getAvailableCategories","label","NewsService","fetchNews","_response$articles","newsService"],"sources":["C:/vHealth/vhealth/client/src/services/newsService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Update the API_URL to match your new service structure:\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nexport interface NewsArticle {\r\n  id: string;\r\n  title: string;\r\n  summary: string;\r\n  url: string;\r\n  source: string;\r\n  domain: string;\r\n  category: string;\r\n  publishedDate: string;\r\n  relevanceScore: number;\r\n  tags: string[];\r\n  // ADDED: New image and media fields\r\n  thumbnailUrl?: string;\r\n  imageUrl?: string;\r\n  mediaType?: string;\r\n  mediaDescription?: string;\r\n  // ADDED: Enhanced content fields\r\n  author?: string;\r\n  fullContent?: string;\r\n  wordCount?: number;\r\n  readingTime?: number;\r\n  // ADDED: Quality indicators\r\n  hasMedia: boolean;\r\n  hasAuthor: boolean;\r\n  contentLength?: number;\r\n  // ADDED: Source metadata\r\n  feedTitle?: string;\r\n  feedImageUrl?: string;\r\n  feedThumbnailUrl?: string;\r\n  // ADDED: Additional metadata\r\n  guid?: string;\r\n  commentsUrl?: string;\r\n  language?: string;\r\n  rights?: string;\r\n  extractedAt?: string;\r\n  lastModified?: string;\r\n}\r\n\r\nexport interface NewsFeedResponse {\r\n  success: boolean;\r\n  message?: string;\r\n  articles?: NewsArticle[];\r\n  categories?: Record<string, NewsArticle[]>;\r\n  lastUpdated?: string;\r\n  count?: number;\r\n}\r\n\r\n// UPDATED: Backend API response types with all new fields\r\ninterface BackendArticle {\r\n  // Core article fields (from your RSS service)\r\n  title?: string;\r\n  description?: string;\r\n  link?: string;\r\n  author?: string;\r\n  pubDate?: string;\r\n  guid?: string;\r\n  \r\n  // Feed metadata\r\n  feed_id?: number;\r\n  feed_title?: string;\r\n  feed_url?: string;\r\n  category?: string;\r\n  country_code?: string;\r\n  \r\n  // Image fields (exactly as your RSS service returns them)\r\n  media_url?: string;\r\n  media_thumb_url?: string;\r\n  media_type?: string;\r\n  has_media?: boolean | string;\r\n  \r\n  // Feed-level images\r\n  feed_image_url?: string;\r\n  feed_thumbnail_url?: string;\r\n  \r\n  // Enhanced fields from your RSS parser\r\n  content?: string;\r\n  content_encoded?: string;\r\n  word_count?: number | string;\r\n  reading_time?: number | string;\r\n  has_author?: boolean | string;\r\n  has_content?: boolean | string;\r\n  \r\n  // Metadata\r\n  extracted_at?: string;\r\n  time_ago?: string;\r\n  content_quality?: string;\r\n  completeness?: string;\r\n  domain?: string;\r\n  is_recent?: boolean;\r\n  images_found?: number;\r\n  image_sources?: string;\r\n  all_image_urls?: string[];\r\n}\r\n\r\ninterface BackendArticlesResponse {\r\n  success: boolean;\r\n  message?: string;\r\n  articles: BackendArticle[];\r\n  count: number;\r\n  debug?: any;\r\n}\r\n\r\nexport const TRUSTED_DOMAINS: Record<string, number> = {\r\n  'nih.gov': 1,\r\n  'ncbi.nlm.nih.gov': 1,\r\n  'who.int': 1,\r\n  'cdc.gov': 1,\r\n  'fda.gov': 1,\r\n  'usda.gov': 1,\r\n  'jamanetwork.com': 1,\r\n  'nejm.org': 1,\r\n  'thelancet.com': 1,\r\n  'bmj.com': 1,\r\n  'nature.com': 1,\r\n  'science.org': 1,\r\n  'mayoclinic.org': 1,\r\n  'harvard.edu': 1,\r\n  'stanford.edu': 1,\r\n  'clevelandclinic.org': 1,\r\n  'uptodate.com': 1,\r\n  'cochranelibrary.com': 1,\r\n  'pubmed.ncbi.nlm.nih.gov': 1,\r\n  'medlineplus.gov': 1,\r\n  'livemint.com': 0.8, // ADDED: LiveMint as trusted source\r\n  'npr.org': 0.9,\r\n  'reuters.com': 0.9,\r\n  'cnn.com': 0.8,\r\n  'cbsnews.com': 0.8,\r\n  'abcnews.com': 0.8,\r\n  'washingtonpost.com': 0.8,\r\n  'nytimes.com': 0.8\r\n};\r\n\r\nexport const NEWS_CATEGORIES = {\r\n  NUTRITION: 'nutrition',\r\n  MEDICAL: 'medical',\r\n  PUBLIC_HEALTH: 'health',\r\n  CLINICAL: 'clinical',\r\n  PREVENTION: 'prevention',\r\n  MENTAL_HEALTH: 'mental',\r\n  GENERAL: 'general',\r\n  SCIENCE: 'science',\r\n  TECH: 'tech',\r\n  POLITICAL: 'political',\r\n  SPORTS: 'sports',\r\n  ENTERTAINMENT: 'entertainment',\r\n  BUSINESS: 'business',\r\n  NATURE: 'nature'\r\n};\r\n\r\n// UPDATED: Enhanced article conversion with better image field mapping\r\nexport const fetchNewsFeed = async (categories?: string[], limit?: number): Promise<NewsFeedResponse> => {\r\n  try {\r\n    console.log('üîç Fetching health news from backend API...', { categories, limit });\r\n    \r\n    const params: any = {\r\n      limit: limit || 50,\r\n      flat: 'true'\r\n    };\r\n    \r\n    if (categories && categories.length > 0 && categories[0] !== 'all') {\r\n      params.category = categories[0];\r\n    }\r\n    \r\n    // Updated endpoint path to match your RSS service\r\n    console.log('üì° Making request to:', `${API_URL}/news/articles`, 'with params:', params);\r\n    \r\n    const response = await axios.get<BackendArticlesResponse>(`${API_URL}/news/articles`, {\r\n      params,\r\n      timeout: 10000,\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    const data = response.data;\r\n    \r\n    console.log('‚úÖ Backend API response:', {\r\n      success: data.success,\r\n      articleCount: data.articles?.length || 0,\r\n      count: data.count,\r\n      message: data.message,\r\n      debug: data.debug\r\n    });\r\n\r\n    // DEBUG: Log first few articles to see the actual structure\r\n    if (data.articles && data.articles.length > 0) {\r\n      console.log('üîç Sample backend article structure:', {\r\n        first_article_keys: Object.keys(data.articles[0]),\r\n        sample_article: data.articles[0],\r\n        media_fields: {\r\n          media_thumb_url: data.articles[0].media_thumb_url,\r\n          media_url: data.articles[0].media_url,\r\n          feed_image_url: data.articles[0].feed_image_url,\r\n          feed_thumbnail_url: data.articles[0].feed_thumbnail_url,\r\n          has_media: data.articles[0].has_media\r\n        }\r\n      });\r\n    }\r\n    \r\n    if (!data.success) {\r\n      console.warn('‚ö†Ô∏è Backend returned success=false:', data.message);\r\n    }\r\n    \r\n    // ENHANCED: Convert backend article format with better image handling\r\n    const articles: NewsArticle[] = (data.articles || [])\r\n      .filter(article => article.title && article.title.trim() !== '')\r\n      .map((article: BackendArticle, index: number) => {\r\n        \r\n        // DEBUG: Log image fields for first few articles\r\n        if (index < 3) {\r\n          console.log(`üñºÔ∏è Article ${index + 1} image analysis:`, {\r\n            title: article.title?.substring(0, 50) + '...',\r\n            media_thumb_url: article.media_thumb_url,\r\n            media_url: article.media_url,\r\n            feed_image_url: article.feed_image_url,\r\n            feed_thumbnail_url: article.feed_thumbnail_url,\r\n            has_media: article.has_media,\r\n            raw_fields: Object.keys(article).filter(key => \r\n              key.includes('media') || key.includes('image') || key.includes('thumb')\r\n            )\r\n          });\r\n        }\r\n        \r\n        // IMPROVED: Better image URL extraction with validation\r\n        const extractValidImageUrl = (url: string | undefined): string => {\r\n          if (!url) return '';\r\n          const trimmed = url.trim();\r\n          if (trimmed === 'null' || trimmed === 'undefined' || trimmed === '') return '';\r\n          if (trimmed.startsWith('http') || trimmed.startsWith('//')) return trimmed;\r\n          return '';\r\n        };\r\n        \r\n        // Extract all possible image URLs\r\n        const mediaThumbUrl = extractValidImageUrl(article.media_thumb_url);\r\n        const mediaUrl = extractValidImageUrl(article.media_url);\r\n        const feedImageUrl = extractValidImageUrl(article.feed_image_url);\r\n        const feedThumbnailUrl = extractValidImageUrl(article.feed_thumbnail_url);\r\n        \r\n        // Choose best available images (prefer article-specific over feed-level)\r\n        const thumbnailUrl = mediaThumbUrl || mediaUrl || feedThumbnailUrl || feedImageUrl;\r\n        const imageUrl = mediaUrl || mediaThumbUrl || feedImageUrl || feedThumbnailUrl;\r\n        \r\n        // Parse boolean fields more robustly\r\n        const parseBoolean = (value: any): boolean => {\r\n          if (typeof value === 'boolean') return value;\r\n          if (typeof value === 'string') {\r\n            const lower = value.toLowerCase();\r\n            return lower === 'true' || lower === '1' || lower === 'yes';\r\n          }\r\n          if (typeof value === 'number') return value === 1;\r\n          return false;\r\n        };\r\n        \r\n        const hasMedia = parseBoolean(article.has_media) || !!(thumbnailUrl || imageUrl);\r\n        const hasAuthor = parseBoolean(article.has_author) || !!(article.author && article.author.trim());\r\n        const hasContent = parseBoolean(article.has_content) || !!(article.content_encoded && article.content_encoded.trim());\r\n        \r\n        // DEBUG: Log final image decisions for first few articles\r\n        if (index < 3) {\r\n          console.log(`‚úÖ Article ${index + 1} final image decision:`, {\r\n            thumbnailUrl,\r\n            imageUrl,\r\n            hasMedia,\r\n            mediaFound: !!(mediaThumbUrl || mediaUrl),\r\n            feedImageFound: !!(feedImageUrl || feedThumbnailUrl)\r\n          });\r\n        }\r\n        \r\n        return {\r\n          id: article.guid || `${article.feed_id}_${index}` || `article_${Date.now()}_${index}`,\r\n          title: article.title || 'No title',\r\n          summary: article.description || article.summary || 'No summary available',\r\n          url: article.link || '#',\r\n          source: article.feed_title || article.source || article.author || 'Unknown Source',\r\n          domain: extractDomain(article.link || ''),\r\n          category: article.category || article.article_category || 'general',\r\n          publishedDate: article.pubDate || article.extracted_at || new Date().toISOString(),\r\n          relevanceScore: calculateRelevanceScore(article.title, article.description || article.summary),\r\n          tags: extractTags(article.title, article.description || article.summary, article.tags),\r\n          \r\n          // FIXED: Image and media fields with proper extraction\r\n          thumbnailUrl,\r\n          imageUrl,\r\n          mediaType: article.media_type || (hasMedia ? 'image' : ''),\r\n          mediaDescription: article.media_description || '',\r\n          \r\n          // Enhanced content fields\r\n          author: article.author || '',\r\n          fullContent: article.content_encoded || '',\r\n          wordCount: parseInt(article.word_count || '0') || 0,\r\n          readingTime: parseInt(article.reading_time || '0') || 0,\r\n          \r\n          // Quality indicators\r\n          hasMedia,\r\n          hasAuthor,\r\n          contentLength: parseInt(article.content_length || '0') || 0,\r\n          \r\n          // Source metadata\r\n          feedTitle: article.feed_title || '',\r\n          feedImageUrl: feedImageUrl,\r\n          feedThumbnailUrl: feedThumbnailUrl,\r\n          \r\n          // Additional metadata\r\n          guid: article.guid || '',\r\n          commentsUrl: article.comments_url || '',\r\n          language: article.language || '',\r\n          rights: article.rights || '',\r\n          extractedAt: article.extracted_at || '',\r\n          lastModified: article.last_modified || ''\r\n        };\r\n      });\r\n    \r\n    console.log('üì∞ Processed articles:', articles.length);\r\n    console.log('üì∏ Articles with images:', articles.filter(a => a.hasMedia).length);\r\n    console.log('üì∏ Articles with thumbnail URLs:', articles.filter(a => a.thumbnailUrl).length);\r\n    console.log('üì∏ Articles with image URLs:', articles.filter(a => a.imageUrl).length);\r\n    console.log('‚úçÔ∏è Articles with authors:', articles.filter(a => a.hasAuthor).length);\r\n    \r\n    // Log some sample image URLs for debugging\r\n    const articlesWithImages = articles.filter(a => a.thumbnailUrl || a.imageUrl);\r\n    if (articlesWithImages.length > 0) {\r\n      console.log('üñºÔ∏è Sample image URLs found:', articlesWithImages.slice(0, 3).map(a => ({\r\n        title: a.title.substring(0, 30) + '...',\r\n        thumbnailUrl: a.thumbnailUrl,\r\n        imageUrl: a.imageUrl\r\n      })));\r\n    } else {\r\n      console.log('‚ùå No image URLs found in any articles');\r\n    }\r\n\r\n    // If no articles from flat endpoint, try the regular endpoint\r\n    if (articles.length === 0) {\r\n      console.log('üîÑ No articles from flat endpoint, trying regular endpoint...');\r\n      \r\n      const regularResponse = await axios.get<BackendArticlesResponse>(`${API_URL}/news/articles`, {\r\n        params: {\r\n          limit: limit || 50,\r\n          category: categories?.[0] !== 'all' ? categories?.[0] : undefined\r\n        },\r\n        timeout: 10000\r\n      });\r\n      \r\n      const regularData = regularResponse.data;\r\n      console.log('üì∞ Regular endpoint response:', {\r\n        success: regularData.success,\r\n        articleCount: regularData.articles?.length || 0,\r\n        count: regularData.count\r\n      });\r\n      \r\n      // Process regular endpoint articles with enhanced fields\r\n      const regularArticles: NewsArticle[] = (regularData.articles || [])\r\n        .filter(article => article.title && article.title.trim() !== '')\r\n        .map((article: any, index: number) => ({\r\n          id: article.id?.toString() || article.guid || `article_${Date.now()}_${index}`,\r\n          title: article.title || 'No title',\r\n          summary: article.description || article.summary || 'No summary available',\r\n          url: article.link || article.url || '#',\r\n          source: article.feed?.title || article.source || article.author || 'Unknown Source',\r\n          domain: extractDomain(article.link || article.url || ''),\r\n          category: article.feed?.category || article.category || 'general',\r\n          publishedDate: article.pub_date || article.pubDate || article.created_at || new Date().toISOString(),\r\n          relevanceScore: calculateRelevanceScore(article.title, article.description || article.summary),\r\n          tags: extractTags(article.title, article.description || article.summary),\r\n          \r\n          // Enhanced fields with fallbacks\r\n          thumbnailUrl: article.thumbnail_url || article.media_thumb_url || '',\r\n          imageUrl: article.image_url || article.media_url || '',\r\n          mediaType: article.media_type || 'image',\r\n          mediaDescription: article.media_description || '',\r\n          author: article.author || '',\r\n          fullContent: article.content || article.content_encoded || '',\r\n          wordCount: parseInt(article.word_count || '0') || 0,\r\n          readingTime: parseInt(article.reading_time || '0') || 0,\r\n          hasMedia: !!(article.thumbnail_url || article.image_url || article.media_thumb_url || article.media_url),\r\n          hasAuthor: !!(article.author && article.author.trim()),\r\n          contentLength: parseInt(article.content_length || '0') || 0,\r\n          feedTitle: article.feed?.title || '',\r\n          feedImageUrl: article.feed?.image_url || '',\r\n          feedThumbnailUrl: article.feed?.thumbnail_url || '',\r\n          guid: article.guid || article.id?.toString() || '',\r\n          commentsUrl: article.comments_url || '',\r\n          language: article.language || '',\r\n          rights: article.rights || '',\r\n          extractedAt: article.extracted_at || article.created_at || '',\r\n          lastModified: article.last_modified || article.updated_at || ''\r\n        }));\r\n      \r\n      articles.push(...regularArticles);\r\n    }\r\n    \r\n    // Categorize articles\r\n    const categorizedArticles: Record<string, NewsArticle[]> = {};\r\n    articles.forEach(article => {\r\n      const category = mapBackendCategory(article.category);\r\n      if (!categorizedArticles[category]) {\r\n        categorizedArticles[category] = [];\r\n      }\r\n      categorizedArticles[category].push(article);\r\n    });\r\n    \r\n    console.log('‚úÖ News feed processed successfully:', {\r\n      totalArticles: articles.length,\r\n      articlesWithImages: articles.filter(a => a.hasMedia).length,\r\n      articlesWithAuthors: articles.filter(a => a.hasAuthor).length,\r\n      categories: Object.keys(categorizedArticles),\r\n      categoryCount: Object.entries(categorizedArticles).map(([cat, arts]) => `${cat}: ${arts.length}`).join(', ')\r\n    });\r\n    \r\n    // If still no articles, use fallback\r\n    if (articles.length === 0) {\r\n      console.log('üì± No articles found, using fallback...');\r\n      return await getFallbackNews();\r\n    }\r\n    \r\n    return {\r\n      success: true,\r\n      articles: articles,\r\n      categories: categorizedArticles,\r\n      lastUpdated: new Date().toISOString(),\r\n      count: articles.length,\r\n      message: data.message || 'Health news fetched successfully from database'\r\n    };\r\n    \r\n  } catch (error: any) {\r\n    console.error('‚ùå Error fetching news feed from backend:', error);\r\n    \r\n    // Check specific error types\r\n    if (error.code === 'ECONNREFUSED') {\r\n      console.log('üì± Backend connection refused, using fallback news...');\r\n    } else if (error.response?.status === 500) {\r\n      console.log('üì± Backend server error, using fallback news...');\r\n    } else if (error.code === 'ENOTFOUND') {\r\n      console.log('üì± Backend not found, using fallback news...');\r\n    } else {\r\n      console.log('üì± Unknown error, using fallback news...', error.message);\r\n    }\r\n    \r\n    const fallback = await getFallbackNews();\r\n    return {\r\n      ...fallback,\r\n      message: `Backend error (${error.message}). Showing sample news.`\r\n    };\r\n  }\r\n};\r\n\r\n// Helper function to map backend categories to frontend categories\r\nconst mapBackendCategory = (backendCategory: string | undefined): string => {\r\n  if (!backendCategory) return 'General Health';\r\n  \r\n  const categoryMap: Record<string, string> = {\r\n    'nutrition': 'Nutrition & Diet',\r\n    'diet': 'Nutrition & Diet',\r\n    'medical': 'Medical Research',\r\n    'health': 'Public Health',\r\n    'mental': 'Mental Health',\r\n    'prevention': 'Disease Prevention',\r\n    'clinical': 'Clinical Studies',\r\n    'science': 'Medical Research',\r\n    'tech': 'Medical Technology',\r\n    'political': 'Health Policy',\r\n    'sports': 'Fitness & Sports',\r\n    'entertainment': 'Wellness',\r\n    'business': 'Health Business',\r\n    'nature': 'Environmental Health'\r\n  };\r\n  \r\n  const lowerCategory = backendCategory.toLowerCase();\r\n  for (const [key, value] of Object.entries(categoryMap)) {\r\n    if (lowerCategory.includes(key)) {\r\n      return value;\r\n    }\r\n  }\r\n  \r\n  return 'General Health';\r\n};\r\n\r\n// ENHANCED: Updated fallback news with image URLs\r\nconst getFallbackNews = async (): Promise<NewsFeedResponse> => {\r\n  const fallbackArticles: NewsArticle[] = [\r\n    {\r\n      id: 'fallback_1',\r\n      title: \"New Study Reveals Benefits of Mediterranean Diet for Heart Health\",\r\n      summary: \"Researchers found that following a Mediterranean diet can reduce cardiovascular disease risk by up to 30%. The study tracked over 7,000 participants for 5 years.\",\r\n      url: \"https://www.nih.gov/news-events/news-releases/mediterranean-diet-heart-health\",\r\n      source: \"NIH Health News\",\r\n      domain: \"nih.gov\",\r\n      category: \"Nutrition & Diet\",\r\n      publishedDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.95,\r\n      tags: ['nutrition', 'heart-health', 'mediterranean-diet', 'cardiovascular'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Sarah Johnson\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 150,\r\n      readingTime: 1,\r\n      contentLength: 750\r\n    },\r\n    {\r\n      id: 'fallback_2',\r\n      title: \"Exercise and Mental Health: The Connection You Need to Know\",\r\n      summary: \"New research shows that just 30 minutes of exercise daily can significantly improve mental well-being and reduce symptoms of depression and anxiety.\",\r\n      url: \"https://www.cdc.gov/mental-health/exercise-connection\",\r\n      source: \"CDC Health Updates\",\r\n      domain: \"cdc.gov\",\r\n      category: \"Mental Health\",\r\n      publishedDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.90,\r\n      tags: ['mental-health', 'exercise', 'wellness', 'depression'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Michael Chen\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 180,\r\n      readingTime: 1,\r\n      contentLength: 900\r\n    },\r\n    {\r\n      id: 'fallback_3',\r\n      title: \"The Importance of Sleep for Immune System Function\",\r\n      summary: \"Studies demonstrate that quality sleep is crucial for maintaining a strong immune system. Adults need 7-9 hours of sleep per night for optimal health.\",\r\n      url: \"https://www.nih.gov/news-events/sleep-immune-system\",\r\n      source: \"Sleep Health Research\",\r\n      domain: \"nih.gov\",\r\n      category: \"General Health\",\r\n      publishedDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.85,\r\n      tags: ['sleep', 'immune-system', 'health', 'wellness'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1541781774459-bb2af2f05b55?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1541781774459-bb2af2f05b55?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Lisa Rodriguez\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 200,\r\n      readingTime: 1,\r\n      contentLength: 1000\r\n    },\r\n    {\r\n      id: 'fallback_4',\r\n      title: \"Breakthrough in Cancer Research: New Treatment Shows Promise\",\r\n      summary: \"Scientists have developed a new immunotherapy approach that shows remarkable results in clinical trials, offering hope for difficult-to-treat cancers.\",\r\n      url: \"https://www.nih.gov/news-events/cancer-breakthrough-2024\",\r\n      source: \"Medical Research Today\",\r\n      domain: \"nih.gov\",\r\n      category: \"Medical Research\",\r\n      publishedDate: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.98,\r\n      tags: ['cancer', 'research', 'immunotherapy', 'clinical-trials'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Robert Kim\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 250,\r\n      readingTime: 2,\r\n      contentLength: 1250\r\n    },\r\n    {\r\n      id: 'fallback_5',\r\n      title: \"Preventive Care: Early Detection Saves Lives\",\r\n      summary: \"Regular health screenings can detect potential health issues before they become serious problems. Learn what screenings you need by age.\",\r\n      url: \"https://www.cdc.gov/prevention/early-detection\",\r\n      source: \"CDC Prevention Guidelines\",\r\n      domain: \"cdc.gov\",\r\n      category: \"Disease Prevention\",\r\n      publishedDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.80,\r\n      tags: ['prevention', 'screening', 'early-detection', 'health-checkup'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Amanda White\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 160,\r\n      readingTime: 1,\r\n      contentLength: 800\r\n    }\r\n  ];\r\n\r\n  // Categorize fallback articles\r\n  const categorizedArticles: Record<string, NewsArticle[]> = {};\r\n  fallbackArticles.forEach(article => {\r\n    if (!categorizedArticles[article.category]) {\r\n      categorizedArticles[article.category] = [];\r\n    }\r\n    categorizedArticles[article.category].push(article);\r\n  });\r\n\r\n  return {\r\n    success: true,\r\n    articles: fallbackArticles,\r\n    categories: categorizedArticles,\r\n    lastUpdated: new Date().toISOString(),\r\n    count: fallbackArticles.length,\r\n    message: 'Using sample health news (backend unavailable)'\r\n  };\r\n};\r\n\r\n// Rest of helper functions remain the same but with enhanced logging...\r\nconst extractDomain = (url: string): string => {\r\n  try {\r\n    return new URL(url).hostname.toLowerCase();\r\n  } catch {\r\n    return 'unknown';\r\n  }\r\n};\r\n\r\nconst calculateRelevanceScore = (title: string = '', description: string = ''): number => {\r\n  const content = `${title} ${description}`.toLowerCase();\r\n  \r\n  const healthKeywords = ['health', 'medical', 'wellness', 'fitness', 'nutrition', 'diet', 'exercise', 'mental health', 'disease', 'treatment', 'research', 'study'];\r\n  const matchingKeywords = healthKeywords.filter(keyword => content.includes(keyword));\r\n  \r\n  let score = 0.5;\r\n  score += (matchingKeywords.length * 0.08);\r\n  \r\n  return Math.min(score, 1.0);\r\n};\r\n\r\nconst extractTags = (title: string = '', description: string = '', existingTags?: string): string[] => {\r\n  const content = `${title} ${description}`.toLowerCase();\r\n  const tags: string[] = [];\r\n  \r\n  if (existingTags) {\r\n    try {\r\n      const parsedTags = existingTags.split(',').map(tag => tag.trim()).filter(tag => tag.length > 0);\r\n      tags.push(...parsedTags);\r\n    } catch (e) {\r\n      // Continue with keyword extraction\r\n    }\r\n  }\r\n  \r\n  const tagKeywords = [\r\n    'health', 'medical', 'nutrition', 'diet', 'fitness', 'exercise',\r\n    'mental-health', 'wellness', 'prevention', 'treatment', 'research',\r\n    'study', 'clinical', 'vaccine', 'medicine', 'hospital', 'doctor',\r\n    'heart', 'cancer', 'diabetes', 'sleep', 'immune', 'therapy'\r\n  ];\r\n  \r\n  tagKeywords.forEach(keyword => {\r\n    if (content.includes(keyword.replace('-', ' ')) && !tags.includes(keyword)) {\r\n      tags.push(keyword);\r\n    }\r\n  });\r\n  \r\n  return tags.slice(0, 5);\r\n};\r\n\r\n// ENHANCED: Updated utility functions with image support\r\nexport const formatArticleForDisplay = (article: NewsArticle) => {\r\n  return {\r\n    ...article,\r\n    formattedDate: formatTimeAgo(article.publishedDate),\r\n    isTrusted: isTrustedDomain(article.url),\r\n    relevancePercentage: Math.round(article.relevanceScore * 100),\r\n    shortSummary: article.summary.length > 150 \r\n      ? article.summary.substring(0, 150) + '...'\r\n      : article.summary,\r\n    // ADDED: Image display helpers\r\n    displayImage: article.thumbnailUrl || article.imageUrl || article.feedThumbnailUrl || article.feedImageUrl || '',\r\n    hasValidImage: !!(article.thumbnailUrl || article.imageUrl),\r\n    // ADDED: Content quality indicators\r\n    qualityScore: calculateQualityScore(article),\r\n    readingTimeText: article.readingTime ? `${article.readingTime} min read` : 'Quick read'\r\n  };\r\n};\r\n\r\n// ADDED: Calculate article quality score\r\nconst calculateQualityScore = (article: NewsArticle): number => {\r\n  let score = 0;\r\n  \r\n  if (article.hasAuthor) score += 0.2;\r\n  if (article.hasMedia) score += 0.2;\r\n  if (article.wordCount && article.wordCount > 100) score += 0.2;\r\n  if (article.contentLength && article.contentLength > 500) score += 0.2;\r\n  if (isTrustedDomain(article.url)) score += 0.2;\r\n  \r\n  return Math.min(score, 1.0);\r\n};\r\n\r\n// Rest of the functions remain the same...\r\nexport const getArticlesByCategory = async (category: string, limit?: number): Promise<NewsFeedResponse> => {\r\n  try {\r\n    console.log('üìÇ Fetching articles for category:', category);\r\n    return await fetchNewsFeed([category], limit);\r\n  } catch (error: any) {\r\n    console.error('‚ùå Error fetching articles by category:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Error fetching articles by category'\r\n    };\r\n  }\r\n};\r\n\r\nexport const searchNewsArticles = async (query: string, category?: string, limit?: number): Promise<NewsFeedResponse> => {\r\n  try {\r\n    console.log('üîé Searching articles:', { query, category, limit });\r\n    \r\n    if (!query.trim()) {\r\n      return {\r\n        success: false,\r\n        message: 'Search query cannot be empty'\r\n      };\r\n    }\r\n    \r\n    const feedResponse = await fetchNewsFeed(category ? [category] : undefined, 100);\r\n    \r\n    if (!feedResponse.success || !feedResponse.articles) {\r\n      return {\r\n        success: false,\r\n        message: 'No articles available to search'\r\n      };\r\n    }\r\n    \r\n    const searchTerm = query.toLowerCase();\r\n    \r\n    const matchingArticles = feedResponse.articles\r\n      .filter(article => \r\n        article.title.toLowerCase().includes(searchTerm) ||\r\n        article.summary.toLowerCase().includes(searchTerm) ||\r\n        article.tags.some(tag => tag.includes(searchTerm)) ||\r\n        (article.author && article.author.toLowerCase().includes(searchTerm))\r\n      )\r\n      .slice(0, limit || 10);\r\n    \r\n    return {\r\n      success: true,\r\n      articles: matchingArticles,\r\n      lastUpdated: new Date().toISOString(),\r\n      count: matchingArticles.length,\r\n      message: `Search results for \"${query}\"`\r\n    };\r\n    \r\n  } catch (error: any) {\r\n    console.error('‚ùå Error searching articles:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Error searching articles'\r\n    };\r\n  }\r\n};\r\n\r\nexport const refreshNewsFeed = async (): Promise<NewsFeedResponse> => {\r\n  try {\r\n    console.log('üîÑ Refreshing news feed...');\r\n    try {\r\n      await axios.post(`${API_URL}/news/fetch`, {}, { timeout: 5000 });\r\n      console.log('‚úÖ Triggered backend refresh');\r\n    } catch (fetchError) {\r\n      console.log('‚ö†Ô∏è Could not trigger backend refresh, getting current data');\r\n    }\r\n    \r\n    return await fetchNewsFeed();\r\n  } catch (error: any) {\r\n    console.error('‚ùå Error refreshing news feed:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Error refreshing news feed'\r\n    };\r\n  }\r\n};\r\n\r\nexport const getNewsFeedStats = async (): Promise<{\r\n  success: boolean;\r\n  message?: string;\r\n  stats?: {\r\n    totalArticles: number;\r\n    categoryCounts: Record<string, number>;\r\n    lastUpdated: string;\r\n    sourcesCounts: Record<string, number>;\r\n    // ADDED: Enhanced stats\r\n    articlesWithImages: number;\r\n    articlesWithAuthors: number;\r\n    averageWordCount: number;\r\n    averageReadingTime: number;\r\n    trustedSources: number;\r\n  };\r\n}> => {\r\n  try {\r\n    const feedResponse = await fetchNewsFeed();\r\n    \r\n    if (!feedResponse.success || !feedResponse.articles) {\r\n      return {\r\n        success: false,\r\n        message: 'No articles available for stats'\r\n      };\r\n    }\r\n    \r\n    const categoryCounts: Record<string, number> = {};\r\n    const sourcesCounts: Record<string, number> = {};\r\n    \r\n    let totalWordCount = 0;\r\n    let totalReadingTime = 0;\r\n    let articlesWithImages = 0;\r\n    let articlesWithAuthors = 0;\r\n    let trustedSources = 0;\r\n    \r\n    feedResponse.articles.forEach(article => {\r\n      categoryCounts[article.category] = (categoryCounts[article.category] || 0) + 1;\r\n      sourcesCounts[article.source] = (sourcesCounts[article.source] || 0) + 1;\r\n      \r\n      if (article.hasMedia) articlesWithImages++;\r\n      if (article.hasAuthor) articlesWithAuthors++;\r\n      if (isTrustedDomain(article.url)) trustedSources++;\r\n      if (article.wordCount) totalWordCount += article.wordCount;\r\n      if (article.readingTime) totalReadingTime += article.readingTime;\r\n    });\r\n\r\n    return {\r\n      success: true,\r\n      stats: {\r\n        totalArticles: feedResponse.articles.length,\r\n        categoryCounts,\r\n        lastUpdated: feedResponse.lastUpdated || new Date().toISOString(),\r\n        sourcesCounts,\r\n        articlesWithImages,\r\n        articlesWithAuthors,\r\n        averageWordCount: Math.round(totalWordCount / feedResponse.articles.length) || 0,\r\n        averageReadingTime: Math.round(totalReadingTime / feedResponse.articles.length) || 0,\r\n        trustedSources\r\n      }\r\n    };\r\n  } catch (error: any) {\r\n    console.error('‚ùå Error fetching stats:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Error fetching news feed statistics'\r\n    };\r\n  }\r\n};\r\n\r\n// Utility functions remain the same...\r\nexport const isTrustedDomain = (url: string): boolean => {\r\n  try {\r\n    const domain = new URL(url).hostname.toLowerCase();\r\n    return Object.keys(TRUSTED_DOMAINS).some(trustedDomain => \r\n      domain.includes(trustedDomain.toLowerCase())\r\n    );\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const formatTimeAgo = (dateString: string): string => {\r\n  try {\r\n    const now = new Date();\r\n    const publishedDate = new Date(dateString);\r\n    const diffInHours = Math.floor((now.getTime() - publishedDate.getTime()) / (1000 * 60 * 60));\r\n    \r\n    if (diffInHours < 1) return 'Just now';\r\n    if (diffInHours < 24) return `${diffInHours}h ago`;\r\n    \r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    if (diffInDays < 7) return `${diffInDays}d ago`;\r\n    \r\n    const diffInWeeks = Math.floor(diffInDays / 7);\r\n    if (diffInWeeks < 4) return `${diffInWeeks}w ago`;\r\n    \r\n    const diffInMonths = Math.floor(diffInDays / 30);\r\n    return `${diffInMonths}mo ago`;\r\n  } catch {\r\n    return 'Unknown';\r\n  }\r\n};\r\n\r\nexport const getAvailableCategories = (): Array<{id: string, label: string}> => {\r\n  return [\r\n    { id: 'all', label: 'All Health News' },\r\n    { id: 'nutrition', label: 'Nutrition & Diet' },\r\n    { id: 'medical', label: 'Medical Research' },\r\n    { id: 'health', label: 'Public Health' },\r\n    { id: 'clinical', label: 'Clinical Studies' },\r\n    { id: 'prevention', label: 'Disease Prevention' },\r\n    { id: 'mental', label: 'Mental Health' },\r\n    { id: 'science', label: 'Science Research' },\r\n    { id: 'general', label: 'General Health' }\r\n  ];\r\n};\r\n\r\n// Legacy compatibility\r\nexport interface NewsItem {\r\n  title: string;\r\n  link: string;\r\n  description: string;\r\n  pubDate: string;\r\n  source: string;\r\n  category: string;\r\n  // ADDED: Legacy support for new fields\r\n  thumbnailUrl?: string;\r\n  imageUrl?: string;\r\n  author?: string;\r\n  hasMedia?: boolean;\r\n}\r\n\r\nexport class NewsService {\r\n  async fetchNews(): Promise<NewsItem[]> {\r\n    const response = await fetchNewsFeed();\r\n    \r\n    return response.articles?.map(article => ({\r\n      title: article.title,\r\n      link: article.url,\r\n      description: article.summary,\r\n      pubDate: article.publishedDate,\r\n      source: article.source,\r\n      category: article.category,\r\n      thumbnailUrl: article.thumbnailUrl,\r\n      imageUrl: article.imageUrl,\r\n      author: article.author,\r\n      hasMedia: article.hasMedia\r\n    })) || [];\r\n  }\r\n}\r\n\r\nexport const newsService = new NewsService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}