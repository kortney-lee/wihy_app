{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { searchCache } from './services/searchCache';\nimport ImageUploadModal from './components/ImageUploadModal';\nimport Header from './components/shared/components/Header';\nimport Spinner from './components/Spinner';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchResults = ({\n  query,\n  results,\n  onBackToSearch,\n  onNewSearch,\n  isLoading = false,\n  dataSource,\n  citations\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [newQuery, setNewQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [isUploadLoading, setUploadLoading] = useState(false);\n  const [lastProcessedQuery, setLastProcessedQuery] = useState('');\n  const [imageError, setImageError] = useState(false); // Add this state\n  const [isSearching, setIsSearching] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Check if we have valid results to display\n  const hasValidResults = results && results.trim() !== '' && !isLoading;\n\n  // Cache results when they change\n  useEffect(() => {\n    if (query && results && !isLoading) {\n      searchCache.setCachedResult(query, results, window.location.href);\n    }\n  }, [query, results, isLoading]);\n\n  // Add effect to manage body class when modal opens/closes\n  useEffect(() => {\n    if (isUploadModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [isUploadModalOpen]);\n\n  // Add cleanup effect\n  useEffect(() => {\n    return () => {\n      if (typeof image === 'string' && image.startsWith('blob:')) {\n        URL.revokeObjectURL(image);\n      }\n    };\n  }, [image]);\n\n  // Add this effect\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Handle new search submission - only allow if user explicitly searches from results page\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const trimmedQuery = input.trim();\n\n    // Prevent duplicate searches\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\n      console.log('Preventing duplicate search for:', trimmedQuery);\n      return;\n    }\n    setLastProcessedQuery(trimmedQuery);\n    onNewSearch(trimmedQuery);\n    setInput(''); // Clear input after search\n  };\n\n  // Handle voice input\n  const handleVoiceInput = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser');\n      return;\n    }\n    if (!recognitionRef.current) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setNewQuery(transcript); // Update the input field\n        setIsListening(false);\n      };\n      recognition.onerror = () => {\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n    }\n    if (!isListening) {\n      recognitionRef.current.start();\n    } else {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      setImage(file);\n      console.log(`Image uploaded: ${file.name}`);\n    }\n  };\n\n  // Clear all search items\n  const handleClearAll = () => {\n    setInput('');\n    setNewQuery(''); // <-- Add this line\n    setImage(null);\n    setCurrentPhotoId(null);\n    setIsListening(false);\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n\n    // Remove CSS class\n    const searchInput = document.querySelector('.results-search-input');\n    if (searchInput) {\n      searchInput.classList.remove('with-image');\n    }\n  };\n\n  // Handle Enter key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleTextSubmit(e);\n    }\n  };\n\n  // Photo modal handlers\n  const handleCameraClick = () => {\n    setIsUploadModalOpen(true);\n  };\n\n  // Simple handler that just triggers a new search - only when user explicitly requests it\n  const handleAnalysisComplete = foodName => {\n    if (foodName && foodName !== lastProcessedQuery && foodName !== query) {\n      console.log('User explicit search from image analysis:', foodName);\n      setNewQuery(foodName);\n      setLastProcessedQuery(foodName);\n      onNewSearch(foodName);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      // Instead of calling handleFileSelect, open the modal and let it handle the file\n      setIsUploadModalOpen(true);\n      // You could also trigger the analysis directly if you want immediate processing\n      // But it's cleaner to let the user see the modal and confirm\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleNewSearchSubmit = e => {\n    e.preventDefault();\n    if (!newQuery.trim() || isLoading) return;\n    const trimmedQuery = newQuery.trim();\n\n    // Prevent duplicate searches\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\n      console.log('Preventing duplicate search for:', trimmedQuery);\n      return;\n    }\n    console.log('User explicit search from new query:', trimmedQuery);\n    setLastProcessedQuery(trimmedQuery);\n    onNewSearch(trimmedQuery);\n    setNewQuery(''); // Reset after search\n  };\n\n  // Update last processed query when props change\n  useEffect(() => {\n    if (query && query !== lastProcessedQuery) {\n      setLastProcessedQuery(query);\n    }\n  }, [query]);\n\n  // Check if current query is \"test\" to show dummy data styles\n  const isTestQuery = query.toLowerCase().trim() === 'test';\n\n  // Header search handler\n  const handleHeaderSearch = async newQuery => {\n    if (newQuery.trim() && newQuery !== query) {\n      setIsSearching(true);\n      try {\n        // Call the parent's onNewSearch which should handle the API call\n        await onNewSearch(newQuery);\n      } catch (error) {\n        console.error('Header search error:', error);\n      } finally {\n        setIsSearching(false);\n      }\n    }\n  };\n  const handleLogoClick = () => {\n    onBackToSearch();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      searchQuery: query,\n      onSearchSubmit: handleHeaderSearch,\n      onVoiceInput: () => {/* voice logic */},\n      onImageUpload: () => setIsUploadModalOpen(true),\n      onLogoClick: handleLogoClick,\n      isListening: false,\n      variant: \"results\",\n      showLogin: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), (isLoading || isSearching) && /*#__PURE__*/_jsxDEV(Spinner, {\n      overlay: true,\n      title: \"Analyzing with AI...\",\n      subtitle: \"Processing your health query...\",\n      disableEsc: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: hasValidResults ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-info-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-info-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"markdown-content\",\n                children: dataSource === 'vnutrition' ? (() => {\n                  let nutrition;\n                  try {\n                    nutrition = typeof results === 'string' ? JSON.parse(results) : results;\n                    console.log('Raw nutrition object for debugging:', nutrition);\n                    if (nutrition && nutrition.found !== false) {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Nutrition Information\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 299,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Calories per serving: \", nutrition.calories_per_serving || 0]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 301,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Protein: \", nutrition.protein_g || 0, \"g\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 302,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Carbs: \", nutrition.carbs_g || 0, \"g\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 303,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Fat: \", nutrition.fat_g || 0, \"g\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 304,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"NOVA Score: \", nutrition.nova_classification || 1]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 305,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Processing Level: \", nutrition.nova_description || nutrition.processed_level || 'Unknown']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 306,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 31\n                      }, this);\n                    } else {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Raw Database Data (Debug)\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 313,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                          style: {\n                            fontSize: '12px',\n                            background: '#f5f5f5',\n                            padding: '10px'\n                          },\n                          children: JSON.stringify(nutrition, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  } catch {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Error parsing nutrition data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 34\n                    }, this);\n                  }\n                })() : convertLinksToClickable(results)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-source-indicator\",\n              children: dataSource === 'openai' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Powered by AI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this) : dataSource === 'error' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-source\",\n                children: \"Error retrieving data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"What Is Healthy?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quality-chart-container\",\n              style: {\n                marginBottom: \"2rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ResultQualityPie, {\n                query: query || '',\n                results: results || '',\n                dataSource: dataSource || 'openai',\n                citations: citations || []\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), dataSource === 'vnutrition' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nutrition-chart-container\",\n                style: {\n                  marginBottom: \"2rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    fontSize: \"1.1rem\",\n                    marginBottom: \"1rem\",\n                    color: \"#374151\"\n                  },\n                  children: \"Nutrition Breakdown\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(NutritionChart, {\n                  query: query,\n                  results: results,\n                  dataSource: dataSource\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nova-chart-container\",\n                style: {\n                  marginBottom: \"2rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    fontSize: \"1.1rem\",\n                    marginBottom: \"1rem\",\n                    color: \"#374151\"\n                  },\n                  children: \"Processing Level (NOVA Score)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(NovaChart, {\n                  query: query,\n                  results: results,\n                  dataSource: dataSource\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"related-topics-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Related Health Topics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"related-topics-list\",\n                children: isTestQuery ? dummyTestData.relatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      if (topic !== lastProcessedQuery && topic !== query && !isLoading) {\n                        console.log('User explicit search from related topic:', topic);\n                        setLastProcessedQuery(topic);\n                        onNewSearch(topic);\n                      }\n                    },\n                    className: \"topic-button\",\n                    disabled: isLoading,\n                    children: topic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 25\n                }, this)) : defaultRelatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      if (topic !== lastProcessedQuery && topic !== query && !isLoading) {\n                        console.log('User explicit search from related topic:', topic);\n                        setLastProcessedQuery(topic);\n                        onNewSearch(topic);\n                      }\n                    },\n                    className: \"topic-button\",\n                    disabled: isLoading,\n                    children: topic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resources-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Useful Resources\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"resources-list\",\n                children: isTestQuery ? dummyTestData.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: resource.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: resource.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 25\n                }, this)) : defaultResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: resource.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: resource.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : !isLoading && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No results to display. Try searching for something else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n      isOpen: isUploadModalOpen,\n      onClose: () => setIsUploadModalOpen(false),\n      onAnalysisComplete: handleAnalysisComplete,\n      title: \"Upload Image\",\n      subtitle: \"Upload images for analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"WR+ujYKRsawz59pv9wumLTaSQwY=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","searchCache","ImageUploadModal","Header","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchResults","query","results","onBackToSearch","onNewSearch","isLoading","dataSource","citations","_s","input","setInput","image","setImage","currentPhotoId","setCurrentPhotoId","newQuery","setNewQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","notification","setNotification","isUploadLoading","setUploadLoading","lastProcessedQuery","setLastProcessedQuery","imageError","setImageError","isSearching","setIsSearching","recognitionRef","hasValidResults","trim","setCachedResult","window","location","href","document","body","classList","add","remove","startsWith","URL","revokeObjectURL","timer","setTimeout","clearTimeout","handleTextSubmit","e","preventDefault","trimmedQuery","console","log","handleVoiceInput","alert","current","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","transcript","onerror","onend","start","stop","handleImageUpload","_e$target$files","file","target","files","name","handleClearAll","searchInput","querySelector","handleKeyPress","key","handleCameraClick","handleAnalysisComplete","foodName","handleDrop","Array","from","dataTransfer","imageFile","find","type","handleDragOver","handleNewSearchSubmit","isTestQuery","toLowerCase","handleHeaderSearch","error","handleLogoClick","className","children","searchQuery","onSearchSubmit","onVoiceInput","onImageUpload","onLogoClick","variant","showLogin","fileName","_jsxFileName","lineNumber","columnNumber","overlay","title","subtitle","disableEsc","nutrition","JSON","parse","found","calories_per_serving","protein_g","carbs_g","fat_g","nova_classification","nova_description","processed_level","style","fontSize","background","padding","stringify","convertLinksToClickable","marginBottom","ResultQualityPie","color","NutritionChart","NovaChart","dummyTestData","relatedTopics","map","topic","index","onClick","disabled","defaultRelatedTopics","resources","resource","url","rel","text","defaultResources","isOpen","onClose","onAnalysisComplete","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/SearchResults.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { searchCache } from './services/searchCache';\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport Header from './components/shared/components/Header';\r\nimport Spinner from './components/Spinner';\r\nimport SearchResultsContent from './components/SearchResultsContent';\r\n\r\ninterface SearchResultsProps {\r\n  query: string;\r\n  results: string;\r\n  onBackToSearch: () => void;\r\n  onNewSearch: (query: string) => void;\r\n  isLoading: boolean;\r\n  dataSource: \"error\" | \"openai\" | \"local\" | \"vnutrition\" | \"wihy\";\r\n  citations?: string[];\r\n  recommendations?: string[];\r\n  disclaimer?: string;\r\n}\r\n\r\nconst SearchResults: React.FC<SearchResultsProps> = ({ \r\n  query, \r\n  results, \r\n  onBackToSearch,\r\n  onNewSearch,\r\n  isLoading = false,\r\n  dataSource,\r\n  citations\r\n}) => {\r\n  const [input, setInput] = useState('');\r\n  const [image, setImage] = useState<File | string | null>(null);\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [newQuery, setNewQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [notification, setNotification] = useState<{message: string, type: string} | null>(null);\r\n  const [isUploadLoading, setUploadLoading] = useState(false);\r\n  const [lastProcessedQuery, setLastProcessedQuery] = useState<string>('');\r\n  const [imageError, setImageError] = useState(false); // Add this state\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // Check if we have valid results to display\r\n  const hasValidResults = results && results.trim() !== '' && !isLoading;\r\n  \r\n  // Cache results when they change\r\n  useEffect(() => {\r\n    if (query && results && !isLoading) {\r\n      searchCache.setCachedResult(query, results, window.location.href);\r\n    }\r\n  }, [query, results, isLoading]);\r\n\r\n  // Add effect to manage body class when modal opens/closes\r\n  useEffect(() => {\r\n    if (isUploadModalOpen) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      document.body.classList.remove('modal-open');\r\n    };\r\n  }, [isUploadModalOpen]);\r\n\r\n  // Add cleanup effect\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typeof image === 'string' && image.startsWith('blob:')) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [image]);\r\n\r\n  // Add this effect\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Handle new search submission - only allow if user explicitly searches from results page\r\n  const handleTextSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim() || isLoading) return;\r\n    \r\n    const trimmedQuery = input.trim();\r\n    \r\n    // Prevent duplicate searches\r\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\r\n      console.log('Preventing duplicate search for:', trimmedQuery);\r\n      return;\r\n    }\r\n    \r\n    setLastProcessedQuery(trimmedQuery);\r\n    onNewSearch(trimmedQuery);\r\n    setInput(''); // Clear input after search\r\n  };\r\n\r\n  // Handle voice input\r\n  const handleVoiceInput = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (!recognitionRef.current) {\r\n      const recognition = new (window as any).webkitSpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      recognition.lang = 'en-US';\r\n\r\n      recognition.onstart = () => {\r\n        setIsListening(true);\r\n      };\r\n\r\n      recognition.onresult = (event: any) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setNewQuery(transcript); // Update the input field\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onerror = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    }\r\n\r\n    if (!isListening) {\r\n      recognitionRef.current.start();\r\n    } else {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setImage(file);\r\n      console.log(`Image uploaded: ${file.name}`);\r\n    }\r\n  };\r\n\r\n  // Clear all search items\r\n  const handleClearAll = () => {\r\n    setInput('');\r\n    setNewQuery(''); // <-- Add this line\r\n    setImage(null);\r\n    setCurrentPhotoId(null);\r\n    setIsListening(false);\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n    }\r\n    \r\n    // Remove CSS class\r\n    const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n    if (searchInput) {\r\n      searchInput.classList.remove('with-image');\r\n    }\r\n  };\r\n\r\n  // Handle Enter key press\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleTextSubmit(e as any);\r\n    }\r\n  };\r\n\r\n  // Photo modal handlers\r\n  const handleCameraClick = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  // Simple handler that just triggers a new search - only when user explicitly requests it\r\n  const handleAnalysisComplete = (foodName: string) => {\r\n    if (foodName && foodName !== lastProcessedQuery && foodName !== query) {\r\n      console.log('User explicit search from image analysis:', foodName);\r\n      setNewQuery(foodName);\r\n      setLastProcessedQuery(foodName);\r\n      onNewSearch(foodName);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    if (imageFile) {\r\n      // Instead of calling handleFileSelect, open the modal and let it handle the file\r\n      setIsUploadModalOpen(true);\r\n      // You could also trigger the analysis directly if you want immediate processing\r\n      // But it's cleaner to let the user see the modal and confirm\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewSearchSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newQuery.trim() || isLoading) return;\r\n    \r\n    const trimmedQuery = newQuery.trim();\r\n    \r\n    // Prevent duplicate searches\r\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\r\n      console.log('Preventing duplicate search for:', trimmedQuery);\r\n      return;\r\n    }\r\n    \r\n    console.log('User explicit search from new query:', trimmedQuery);\r\n    setLastProcessedQuery(trimmedQuery);\r\n    onNewSearch(trimmedQuery);\r\n    setNewQuery(''); // Reset after search\r\n  };\r\n\r\n  // Update last processed query when props change\r\n  useEffect(() => {\r\n    if (query && query !== lastProcessedQuery) {\r\n      setLastProcessedQuery(query);\r\n    }\r\n  }, [query]);\r\n\r\n  // Check if current query is \"test\" to show dummy data styles\r\n  const isTestQuery = query.toLowerCase().trim() === 'test';\r\n\r\n  // Header search handler\r\n  const handleHeaderSearch = async (newQuery: string) => {\r\n    if (newQuery.trim() && newQuery !== query) {\r\n      setIsSearching(true);\r\n      \r\n      try {\r\n        // Call the parent's onNewSearch which should handle the API call\r\n        await onNewSearch(newQuery);\r\n      } catch (error) {\r\n        console.error('Header search error:', error);\r\n      } finally {\r\n        setIsSearching(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogoClick = () => {\r\n    onBackToSearch();\r\n  };\r\n\r\n  return (\r\n    <div className=\"results-page\">\r\n      <Header\r\n        searchQuery={query}\r\n        onSearchSubmit={handleHeaderSearch}\r\n        onVoiceInput={() => {/* voice logic */}}\r\n        onImageUpload={() => setIsUploadModalOpen(true)}\r\n        onLogoClick={handleLogoClick}\r\n        isListening={false}\r\n        variant=\"results\"\r\n        showLogin={true}\r\n      />\r\n\r\n      {/* Show spinner when searching from header */}\r\n      {(isLoading || isSearching) && (\r\n        <Spinner\r\n          overlay={true}\r\n          title=\"Analyzing with AI...\"\r\n          subtitle=\"Processing your health query...\"\r\n          disableEsc={true}\r\n        />\r\n      )}\r\n      \r\n      <div className=\"results-container\">\r\n        {hasValidResults ? (\r\n          <>\r\n            <div className=\"results-content\">\r\n              {/* Main content */}\r\n              <div className=\"health-info-card\">\r\n                <div className=\"health-info-content\">\r\n                  <div className=\"markdown-content\">\r\n                    {dataSource === 'vnutrition' ? (\r\n                      (() => {\r\n                        let nutrition;\r\n                        try {\r\n                          nutrition = typeof results === 'string' ? JSON.parse(results) : results;\r\n                          console.log('Raw nutrition object for debugging:', nutrition);\r\n                          \r\n                          if (nutrition && nutrition.found !== false) {\r\n                            return (\r\n                              <div>\r\n                                <h3>Nutrition Information</h3>\r\n                                <ul>\r\n                                  <li>Calories per serving: {nutrition.calories_per_serving || 0}</li>\r\n                                  <li>Protein: {nutrition.protein_g || 0}g</li>\r\n                                  <li>Carbs: {nutrition.carbs_g || 0}g</li>\r\n                                  <li>Fat: {nutrition.fat_g || 0}g</li>\r\n                                  <li>NOVA Score: {nutrition.nova_classification || 1}</li>\r\n                                  <li>Processing Level: {nutrition.nova_description || nutrition.processed_level || 'Unknown'}</li>\r\n                                </ul>\r\n                              </div>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <div>\r\n                                <h3>Raw Database Data (Debug)</h3>\r\n                                <pre style={{ fontSize: '12px', background: '#f5f5f5', padding: '10px' }}>\r\n                                  {JSON.stringify(nutrition, null, 2)}\r\n                                </pre>\r\n                              </div>\r\n                            );\r\n                          }\r\n                        } catch {\r\n                          return <div>Error parsing nutrition data</div>;\r\n                        }\r\n                      })()\r\n                    ) : (\r\n                      convertLinksToClickable(results)\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"data-source-indicator\">\r\n                  {dataSource === 'openai' ? (\r\n                    <span>Powered by AI</span>\r\n                  ) : dataSource === 'error' ? (\r\n                    <span className=\"error-source\">Error retrieving data</span>\r\n                  ) : (\r\n                    <span>What Is Healthy?</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Sidebar - ONLY when NOT loading and we have results */}\r\n              <div className=\"sidebar\">\r\n                {/* Quality Chart */}\r\n                <div className=\"quality-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                  <ResultQualityPie \r\n                    query={query || ''} \r\n                    results={results || ''}\r\n                    dataSource={dataSource || 'openai'}\r\n                    citations={citations || []}\r\n                  />\r\n                </div>\r\n\r\n                {/* Nutrition Charts - Only show when we have nutrition data */}\r\n                {dataSource === 'vnutrition' && (\r\n                  <>\r\n                    <div className=\"nutrition-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                      <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                        Nutrition Breakdown\r\n                      </h3>\r\n                      <NutritionChart \r\n                        query={query}\r\n                        results={results}\r\n                        dataSource={dataSource}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"nova-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                      <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                        Processing Level (NOVA Score)\r\n                      </h3>\r\n                      <NovaChart \r\n                        query={query}\r\n                        results={results}\r\n                        dataSource={dataSource}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n                \r\n                {/* Related Topics */}\r\n                <div className=\"related-topics-card\">\r\n                  <h3>Related Health Topics</h3>\r\n                  <ul className=\"related-topics-list\">\r\n                    {isTestQuery ? (\r\n                      dummyTestData.relatedTopics.map((topic, index) => (\r\n                        <li key={index}>\r\n                          <button \r\n                            onClick={() => {\r\n                              if (topic !== lastProcessedQuery && topic !== query && !isLoading) {\r\n                                console.log('User explicit search from related topic:', topic);\r\n                                setLastProcessedQuery(topic);\r\n                                onNewSearch(topic);\r\n                              }\r\n                            }}\r\n                            className=\"topic-button\"\r\n                            disabled={isLoading}\r\n                          >\r\n                            {topic}\r\n                          </button>\r\n                        </li>\r\n                      ))\r\n                    ) : (\r\n                      defaultRelatedTopics.map((topic, index) => (\r\n                        <li key={index}>\r\n                          <button \r\n                            onClick={() => {\r\n                              if (topic !== lastProcessedQuery && topic !== query && !isLoading) {\r\n                                console.log('User explicit search from related topic:', topic);\r\n                                setLastProcessedQuery(topic);\r\n                                onNewSearch(topic);\r\n                              }\r\n                            }}\r\n                            className=\"topic-button\"\r\n                            disabled={isLoading}\r\n                          >\r\n                            {topic}\r\n                          </button>\r\n                        </li>\r\n                      ))\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n                \r\n                {/* Resources */}\r\n                <div className=\"resources-card\">\r\n                  <h3>Useful Resources</h3>\r\n                  <ul className=\"resources-list\">\r\n                    {isTestQuery ? (\r\n                      dummyTestData.resources.map((resource, index) => (\r\n                        <li key={index}>\r\n                          <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {resource.text}\r\n                          </a>\r\n                        </li>\r\n                      ))\r\n                    ) : (\r\n                      defaultResources.map((resource, index) => (\r\n                        <li key={index}>\r\n                          <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {resource.text}\r\n                          </a>\r\n                        </li>\r\n                      ))\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          !isLoading && !isSearching && (\r\n            <div className=\"no-results-message\">\r\n              <p>No results to display. Try searching for something else.</p>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n\r\n      {/* ImageUploadModal - always available */}\r\n      <ImageUploadModal\r\n        isOpen={isUploadModalOpen}\r\n        onClose={() => setIsUploadModalOpen(false)}\r\n        onAnalysisComplete={handleAnalysisComplete}\r\n        title=\"Upload Image\"\r\n        subtitle=\"Upload images for analysis\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}