{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { Constants } from \"../util/constants\";\nvar HeaderConstants = Constants.HeaderConstants;\nvar DEFAULT_AUTHORIZATION_SCHEME = \"Bearer\";\n/**\n * A credentials object that uses a token string and a authorzation scheme to authenticate.\n */\nvar TokenCredentials = /** @class */function () {\n  /**\n   * Creates a new TokenCredentials object.\n   *\n   * @constructor\n   * @param {string} token The token.\n   * @param {string} [authorizationScheme] The authorization scheme.\n   */\n  function TokenCredentials(token, authorizationScheme) {\n    if (authorizationScheme === void 0) {\n      authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME;\n    }\n    this.authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME;\n    if (!token) {\n      throw new Error(\"token cannot be null or undefined.\");\n    }\n    this.token = token;\n    this.authorizationScheme = authorizationScheme;\n  }\n  /**\n   * Signs a request with the Authentication header.\n   *\n   * @param {WebResourceLike} webResource The WebResourceLike to be signed.\n   * @return {Promise<WebResourceLike>} The signed request object.\n   */\n  TokenCredentials.prototype.signRequest = function (webResource) {\n    if (!webResource.headers) webResource.headers = new HttpHeaders();\n    webResource.headers.set(HeaderConstants.AUTHORIZATION, this.authorizationScheme + \" \" + this.token);\n    return Promise.resolve(webResource);\n  };\n  return TokenCredentials;\n}();\nexport { TokenCredentials };","map":{"version":3,"names":["HttpHeaders","Constants","HeaderConstants","DEFAULT_AUTHORIZATION_SCHEME","TokenCredentials","token","authorizationScheme","Error","prototype","signRequest","webResource","headers","set","AUTHORIZATION","Promise","resolve"],"sources":["C:\\repo\\wihy_ui\\client\\node_modules\\@azure\\ms-rest-js\\lib\\credentials\\tokenCredentials.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { Constants } from \"../util/constants\";\nimport { WebResourceLike } from \"../webResource\";\nimport { ServiceClientCredentials } from \"./serviceClientCredentials\";\n\nconst HeaderConstants = Constants.HeaderConstants;\nconst DEFAULT_AUTHORIZATION_SCHEME = \"Bearer\";\n\n/**\n * A credentials object that uses a token string and a authorzation scheme to authenticate.\n */\nexport class TokenCredentials implements ServiceClientCredentials {\n  token: string;\n  authorizationScheme: string = DEFAULT_AUTHORIZATION_SCHEME;\n\n  /**\n   * Creates a new TokenCredentials object.\n   *\n   * @constructor\n   * @param {string} token The token.\n   * @param {string} [authorizationScheme] The authorization scheme.\n   */\n  constructor(token: string, authorizationScheme: string = DEFAULT_AUTHORIZATION_SCHEME) {\n    if (!token) {\n      throw new Error(\"token cannot be null or undefined.\");\n    }\n    this.token = token;\n    this.authorizationScheme = authorizationScheme;\n  }\n\n  /**\n   * Signs a request with the Authentication header.\n   *\n   * @param {WebResourceLike} webResource The WebResourceLike to be signed.\n   * @return {Promise<WebResourceLike>} The signed request object.\n   */\n  signRequest(webResource: WebResourceLike) {\n    if (!webResource.headers) webResource.headers = new HttpHeaders();\n    webResource.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `${this.authorizationScheme} ${this.token}`\n    );\n    return Promise.resolve(webResource);\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,SAAS,QAAQ,mBAAmB;AAI7C,IAAMC,eAAe,GAAGD,SAAS,CAACC,eAAe;AACjD,IAAMC,4BAA4B,GAAG,QAAQ;AAE7C;;;AAGA,IAAAC,gBAAA;EAIE;;;;;;;EAOA,SAAAA,iBAAYC,KAAa,EAAEC,mBAA0D;IAA1D,IAAAA,mBAAA;MAAAA,mBAAA,GAAAH,4BAA0D;IAAA;IATrF,KAAAG,mBAAmB,GAAWH,4BAA4B;IAUxD,IAAI,CAACE,KAAK,EAAE;MACV,MAAM,IAAIE,KAAK,CAAC,oCAAoC,CAAC;;IAEvD,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;EAChD;EAEA;;;;;;EAMAF,gBAAA,CAAAI,SAAA,CAAAC,WAAW,GAAX,UAAYC,WAA4B;IACtC,IAAI,CAACA,WAAW,CAACC,OAAO,EAAED,WAAW,CAACC,OAAO,GAAG,IAAIX,WAAW,EAAE;IACjEU,WAAW,CAACC,OAAO,CAACC,GAAG,CACrBV,eAAe,CAACW,aAAa,EAC1B,IAAI,CAACP,mBAAmB,SAAI,IAAI,CAACD,KAAO,CAC5C;IACD,OAAOS,OAAO,CAACC,OAAO,CAACL,WAAW,CAAC;EACrC,CAAC;EACH,OAAAN,gBAAC;AAAD,CAAC,CAjCD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}