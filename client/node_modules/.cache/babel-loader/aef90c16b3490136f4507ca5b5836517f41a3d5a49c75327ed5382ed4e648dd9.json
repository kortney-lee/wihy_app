{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\components\\\\NovaChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale);\nconst NovaChart = ({\n  novaDistribution\n}) => {\n  if (!novaDistribution || novaDistribution.length === 0) {\n    return null;\n  }\n  const chartData = {\n    labels: novaDistribution.map(item => item.label.replace('Group ', '').replace(': ', ':\\n')),\n    datasets: [{\n      data: novaDistribution.map(item => item.percentage),\n      backgroundColor: novaDistribution.map(item => item.color),\n      borderWidth: 2,\n      borderColor: '#fff',\n      hoverBorderWidth: 3\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    cutout: '50%',\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          boxWidth: 12,\n          padding: 8,\n          font: {\n            size: 11\n          },\n          usePointStyle: true\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `${context.label}: ${context.parsed}%`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-card\",\n    style: {\n      marginBottom: '1.5rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: '1rem',\n        fontSize: '1.1rem',\n        fontWeight: '600'\n      },\n      children: \"NOVA Food Classification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '200px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '0.5rem',\n        fontSize: '0.85rem',\n        color: '#666'\n      },\n      children: novaDistribution.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: '2px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.label.replace('Group ', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.count, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c = NovaChart;\nexport default NovaChart;\nvar _c;\n$RefreshReg$(_c, \"NovaChart\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","Doughnut","jsxDEV","_jsxDEV","register","NovaChart","novaDistribution","length","chartData","labels","map","item","label","replace","datasets","data","percentage","backgroundColor","color","borderWidth","borderColor","hoverBorderWidth","options","responsive","maintainAspectRatio","cutout","plugins","legend","position","boxWidth","padding","font","size","usePointStyle","tooltip","callbacks","context","parsed","className","style","marginBottom","children","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","height","marginTop","index","display","justifyContent","count","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/components/NovaChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n  CategoryScale,\r\n  LinearScale\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n// Register Chart.js components\r\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale);\r\n\r\ninterface NovaChartProps {\r\n  novaDistribution: Array<{\r\n    label: string;\r\n    count: number;\r\n    color: string;\r\n    percentage: number;\r\n  }>;\r\n}\r\n\r\nconst NovaChart: React.FC<NovaChartProps> = ({ novaDistribution }) => {\r\n  if (!novaDistribution || novaDistribution.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const chartData = {\r\n    labels: novaDistribution.map(item => item.label.replace('Group ', '').replace(': ', ':\\n')),\r\n    datasets: [{\r\n      data: novaDistribution.map(item => item.percentage),\r\n      backgroundColor: novaDistribution.map(item => item.color),\r\n      borderWidth: 2,\r\n      borderColor: '#fff',\r\n      hoverBorderWidth: 3\r\n    }]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    cutout: '50%',\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom' as const,\r\n        labels: {\r\n          boxWidth: 12,\r\n          padding: 8,\r\n          font: { size: 11 },\r\n          usePointStyle: true\r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(context: any) {\r\n            return `${context.label}: ${context.parsed}%`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-card\" style={{ marginBottom: '1.5rem' }}>\r\n      <h3 style={{ marginBottom: '1rem', fontSize: '1.1rem', fontWeight: '600' }}>\r\n        NOVA Food Classification\r\n      </h3>\r\n      <div style={{ height: '200px' }}>\r\n        <Doughnut data={chartData} options={options} />\r\n      </div>\r\n      <div style={{ marginTop: '0.5rem', fontSize: '0.85rem', color: '#666' }}>\r\n        {novaDistribution.map((item, index) => (\r\n          <div key={index} style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '2px' }}>\r\n            <span>{item.label.replace('Group ', '')}</span>\r\n            <span>{item.count} items</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}