{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\search\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { searchCache } from '../../services/searchCache';\nimport ImageUploadModal from '../ui/ImageUploadModal';\nimport ChatWidget from '../ui/ChatWidget';\nimport FullScreenChat from '../ui/FullScreenChat';\nimport Dashboard from '../dashboard/Dashboard';\nimport SearchResultsDashboard from '../dashboard/SearchResultsDashboard';\nimport '../../styles/VHealthSearch.css';\nimport Header from '../shared/Header';\nimport Spinner from '../ui/Spinner';\nimport { wihyAPI } from '../../services/wihyAPI';\nimport { logger } from '../../utils/logger';\n\n/* Define default topics and resources */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRelatedTopics = [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"];\nconst defaultResources = [{\n  text: \"Nutrition ED - Learn More\",\n  url: \"https://vowels.com\"\n}, {\n  text: \"Nutrition 101\",\n  url: \"https://members.vowels.com\"\n}, {\n  text: \"The World Counts\",\n  url: \"https://www.theworldcounts.com/\"\n}];\n\n// Define the dummy data for \"test\" queries\nconst dummyTestData = {\n  query: \"test\",\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\n\n**Recommendations:**\n• Consult healthcare professionals for personalized medical advice\n• Verify information with your doctor or medical provider\n• Follow evidence-based medical guidelines\n• Seek regular medical check-ups and screenings\n\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\n\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\n  relatedTopics: [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"],\n  resources: [{\n    text: \"🩺 mHealth - Mobile Health Solutions\",\n    url: \"#\"\n  }, {\n    text: \"🏥 CDC - Health Guidelines\",\n    url: \"#\"\n  }, {\n    text: \"🌍 WHO - Global Health Information\",\n    url: \"#\"\n  }]\n};\n\n// Update the SearchResultsProps interface to include the new properties\n\n// Add this function before the SearchResults component\nconst convertLinksToClickable = text => {\n  // Handle non-string inputs\n  if (!text) return null;\n\n  // If text is not a string, convert it to string first\n  if (typeof text !== 'string') {\n    // If it's an object, try to stringify it or extract meaningful content\n    if (typeof text === 'object') {\n      // If it has specific properties we can use\n      if (text.content) {\n        text = text.content;\n      } else if (text.message) {\n        text = text.message;\n      } else if (text.details) {\n        text = text.details;\n      } else {\n        // Last resort - stringify the object\n        text = JSON.stringify(text);\n      }\n    } else {\n      // Convert other types to string\n      text = String(text);\n    }\n  }\n\n  // Now we're sure text is a string, proceed with original logic\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  const parts = text.split(urlRegex);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: parts.map((part, index) => urlRegex.test(part) ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: part,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        color: '#2563eb',\n        textDecoration: 'underline'\n      },\n      children: part\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this) : part)\n  }, void 0, false);\n};\nconst SearchResults = ({\n  query,\n  results,\n  onBackToSearch,\n  onNewSearch,\n  isLoading,\n  dataSource,\n  citations = [],\n  recommendations = [],\n  disclaimer = \"\",\n  apiResponse,\n  initialDemoMode = false\n}) => {\n  _s();\n  // Only log on significant changes, not every render\n  const prevQueryRef = useRef('');\n  useEffect(() => {\n    if (query !== prevQueryRef.current) {\n      console.log('🔍 SEARCH RESULTS: New query -', query);\n      prevQueryRef.current = query;\n    }\n  }, [query]);\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [newQuery, setNewQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [isUploadLoading, setUploadLoading] = useState(false);\n  const [lastProcessedQuery, setLastProcessedQuery] = useState('');\n  const [imageError, setImageError] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [currentContext, setCurrentContext] = useState('search results');\n  const [windowWidth, setWindowWidth] = useState(typeof window !== 'undefined' ? window.innerWidth : 1200);\n  const [isDemoMode, setIsDemoMode] = useState(initialDemoMode);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n\n  // Header search state - independent from main search\n  const [headerSearchResults, setHeaderSearchResults] = useState('');\n  const [headerSearchQuery, setHeaderSearchQuery] = useState('');\n  const [headerApiResponse, setHeaderApiResponse] = useState(null);\n  const [isHeaderSearchLoading, setIsHeaderSearchLoading] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Handle window resize for responsive layout\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Prevent body scroll when component mounts  \n  useEffect(() => {\n    // Remove any body scroll restrictions - let the CSS variable approach handle positioning\n    document.body.style.overflow = 'auto';\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, []);\n\n  // Check if we have valid results to display\n  const hasValidResults = results && results.trim() !== '' && !isLoading;\n\n  // Set context for ChatWidget based on search results\n  useEffect(() => {\n    if (results && typeof results === 'string' && results.trim()) {\n      // Extract a meaningful summary for chat context\n      const contextSummary = results.length > 300 ? results.substring(0, 300) + '...' : results;\n      setCurrentContext(`Search results for \"${query}\": ${contextSummary}`);\n      console.log('🔍 SEARCH RESULTS: Updated chat context');\n    } else {\n      setCurrentContext('search results');\n    }\n  }, [results, query]);\n\n  // 🔍 SEARCH RESULTS LOGGING: Track loading states\n  useEffect(() => {\n    if (isLoading) {\n      console.log('🔍 SEARCH RESULTS LOADING STATE:', {\n        query: query,\n        timestamp: new Date().toISOString(),\n        component: 'SearchResults',\n        action: 'loadingStarted',\n        isLoading: true,\n        hasValidResults: hasValidResults\n      });\n    } else {\n      console.log('🔍 SEARCH RESULTS LOADING COMPLETE:', {\n        query: query,\n        timestamp: new Date().toISOString(),\n        component: 'SearchResults',\n        action: 'loadingComplete',\n        isLoading: false,\n        hasValidResults: hasValidResults,\n        resultsLength: (results === null || results === void 0 ? void 0 : results.length) || 0\n      });\n    }\n  }, [isLoading, hasValidResults]);\n\n  // Cache results when they change\n  useEffect(() => {\n    if (query && results && !isLoading) {\n      searchCache.setCachedResult(query, results, window.location.href);\n    }\n  }, [query, results, isLoading]);\n\n  // Add effect to manage body class when modal opens/closes\n  useEffect(() => {\n    if (isUploadModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [isUploadModalOpen]);\n\n  // Add cleanup effect\n  useEffect(() => {\n    return () => {\n      if (typeof image === 'string' && image.startsWith('blob:')) {\n        URL.revokeObjectURL(image);\n      }\n    };\n  }, [image]);\n\n  // Add this effect\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Handle new search submission\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const trimmedQuery = input.trim();\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\n      console.log('Preventing duplicate search for:', trimmedQuery);\n      return;\n    }\n    console.log('User explicit search from results page:', trimmedQuery);\n    setLastProcessedQuery(trimmedQuery);\n    setIsSearching(true);\n    onNewSearch(trimmedQuery);\n  };\n\n  // Handle voice input (placeholder for now)\n  const handleVoiceInput = () => {\n    setIsListening(!isListening);\n  };\n\n  // Handle image upload\n  const handleImageUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      setImage(file);\n      setIsUploadModalOpen(true);\n    }\n  };\n\n  // Handle image upload completion\n  const handleAnalysisComplete = results => {\n    setIsUploadModalOpen(false);\n    if (results) {\n      onNewSearch(JSON.stringify(results));\n    }\n  };\n\n  // Check if this is a test query\n  const isTestQuery = query.toLowerCase() === 'test';\n\n  // Handle new search from header - makes its own API request\n  const handleHeaderSearch = async searchQuery => {\n    console.log('🔍 HEADER SEARCH initiated:', {\n      searchQuery\n    });\n    if (!searchQuery.trim()) return;\n    setIsHeaderSearchLoading(true);\n    try {\n      logger.debug('Header search: Making WiHy API call', {\n        query: searchQuery\n      });\n      const wihyResponse = await wihyAPI.searchHealth(searchQuery);\n      if (wihyResponse.success) {\n        // Extract response content\n        let summary = 'Health information provided';\n        if ('data' in wihyResponse) {\n          var _data, _data2, _data2$ai_response;\n          // New unified API response format\n          summary = ((_data = wihyResponse.data) === null || _data === void 0 ? void 0 : _data.response) || ((_data2 = wihyResponse.data) === null || _data2 === void 0 ? void 0 : (_data2$ai_response = _data2.ai_response) === null || _data2$ai_response === void 0 ? void 0 : _data2$ai_response.response) || summary;\n        } else {\n          var _wihy_response;\n          // Legacy WihyResponse format\n          summary = ((_wihy_response = wihyResponse.wihy_response) === null || _wihy_response === void 0 ? void 0 : _wihy_response.core_principle) || summary;\n        }\n\n        // Update our local state and add to chat conversation\n        setHeaderSearchResults(summary);\n        setHeaderSearchQuery(searchQuery);\n        setHeaderApiResponse(wihyResponse);\n\n        // Add the new search to the existing chat conversation\n        handleAddToChatConversation(searchQuery, summary);\n        console.log('🔍 HEADER SEARCH state updated:', {\n          query: searchQuery,\n          hasResults: !!summary,\n          timestamp: new Date().toISOString()\n        });\n        logger.info('Header search completed successfully', {\n          query: searchQuery\n        });\n        console.log('🔍 HEADER SEARCH completed:', {\n          query: searchQuery,\n          success: true,\n          hasResponse: !!summary,\n          timestamp: new Date().toISOString()\n        });\n      } else {\n        throw new Error('WiHy API request failed');\n      }\n    } catch (error) {\n      logger.error('Header search failed:', error);\n      setHeaderSearchResults('Sorry, there was an error processing your search. Please try again.');\n      setHeaderApiResponse(null);\n      console.log('🔍 HEADER SEARCH failed:', {\n        query: searchQuery,\n        error: error.message,\n        timestamp: new Date().toISOString()\n      });\n    } finally {\n      setIsHeaderSearchLoading(false);\n    }\n  };\n\n  // Handle new search from ChatWidget\n  const handleChatSearch = query => {\n    console.log('🔍 ChatWidget triggered new search:', {\n      query\n    });\n    // Clear any header search results when using ChatWidget\n    setHeaderSearchResults('');\n    setHeaderSearchQuery('');\n    setHeaderApiResponse(null);\n    // Use the main navigation flow for ChatWidget searches\n    onNewSearch(query);\n  };\n\n  // Handle header search - add messages to existing conversation\n  const handleAddToChatConversation = (userMessage, assistantMessage) => {\n    console.log('🔍 ATTEMPTING TO ADD TO CHAT:', {\n      userMessage,\n      assistantMessage: assistantMessage.substring(0, 100) + '...',\n      hasAddChatMessage: !!window.addChatMessage,\n      timestamp: new Date().toISOString()\n    });\n    if (window.addChatMessage) {\n      window.addChatMessage(userMessage, assistantMessage);\n    } else {\n      console.error('🔍 addChatMessage function not available on window');\n    }\n  };\n\n  // Debug logging for state changes\n  useEffect(() => {\n    console.log('🔍 SEARCHRESULTS STATE DEBUG:', {\n      headerSearchQuery,\n      originalQuery: query,\n      hasHeaderSearchResults: !!headerSearchResults,\n      isHeaderSearchLoading,\n      chatWidgetKey: `chatwidget-${headerSearchQuery || query}`,\n      timestamp: new Date().toISOString()\n    });\n  }, [headerSearchQuery, headerSearchResults, query, isHeaderSearchLoading]);\n\n  // Clear header search results when main query changes\n  useEffect(() => {\n    if (query && headerSearchQuery && query !== headerSearchQuery) {\n      console.log('🔍 Main query changed, clearing header search results');\n      setHeaderSearchResults('');\n      setHeaderSearchQuery('');\n      setHeaderApiResponse(null);\n    }\n  }, [query, headerSearchQuery]);\n\n  // 🔍 SEARCH RESULTS LOGGING: Track prop changes\n  useEffect(() => {\n    console.log('🔍 SEARCH RESULTS PROPS CHANGED:', {\n      query: query,\n      timestamp: new Date().toISOString(),\n      component: 'SearchResults',\n      action: 'propsChanged',\n      isLoading: isLoading,\n      dataSource: dataSource,\n      hasResults: !!results,\n      resultsLength: (results === null || results === void 0 ? void 0 : results.length) || 0,\n      hasApiResponse: !!apiResponse\n    });\n  }, [query, results, isLoading, dataSource, apiResponse]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-container\",\n    style: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      paddingTop: 'var(--vh-header-height)',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 1000,\n        backgroundColor: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        variant: \"results\",\n        showLogin: true,\n        showSearchInput: true,\n        onSearchSubmit: handleHeaderSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), (isLoading || isHeaderSearchLoading) && /*#__PURE__*/_jsxDEV(Spinner, {\n      overlay: true,\n      title: \"Analyzing with AI...\",\n      subtitle: \"Processing your health query...\",\n      disableEsc: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: 'calc(100vh - var(--vh-header-height))',\n        overflow: 'hidden',\n        padding: windowWidth <= 768 ? '12px' : '20px',\n        backgroundColor: '#f8fafc'\n      },\n      children: hasValidResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: windowWidth <= 768 ? '1fr' : isDemoMode ? '1fr' : '2fr 1fr',\n          gridTemplateRows: windowWidth <= 768 ? '1fr 300px' : '1fr',\n          gap: '20px',\n          maxWidth: isDemoMode ? '1600px' : '1200px',\n          margin: '0 auto',\n          minHeight: 'calc(100vh - var(--vh-header-height) - 40px)',\n          // Account for padding\n          overflow: 'hidden',\n          position: 'relative'\n        },\n        children: [!isDemoMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            borderRadius: '12px',\n            border: '1px solid #e5e7eb',\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n            padding: windowWidth <= 768 ? '16px' : '24px',\n            display: 'flex',\n            flexDirection: 'column',\n            overflow: 'hidden'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              overflow: 'hidden',\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(ChatWidget, {\n              // Stable key since we're adding to conversation instead of replacing\n              isOpen: true,\n              onClose: () => {},\n              currentContext: currentContext,\n              inline: true,\n              searchQuery: query // Always use original query for initialization\n              ,\n              onNewSearch: handleChatSearch,\n              onAddMessage: handleAddToChatConversation,\n              searchResponse: ((_apiResponse$data, _apiResponse$data$ai_, _apiResponse$data2, _extractedResponse) => {\n                // Use original results for initialization, header search will be added via onAddMessage\n                let extractedResponse = '';\n                if (apiResponse !== null && apiResponse !== void 0 && (_apiResponse$data = apiResponse.data) !== null && _apiResponse$data !== void 0 && (_apiResponse$data$ai_ = _apiResponse$data.ai_response) !== null && _apiResponse$data$ai_ !== void 0 && _apiResponse$data$ai_.response) {\n                  extractedResponse = apiResponse.data.ai_response.response;\n                } else if (apiResponse !== null && apiResponse !== void 0 && (_apiResponse$data2 = apiResponse.data) !== null && _apiResponse$data2 !== void 0 && _apiResponse$data2.response) {\n                  extractedResponse = apiResponse.data.response;\n                } else {\n                  extractedResponse = results;\n                }\n                console.log('🔍 SEARCHRESULTS DEBUG: Using original results for initialization:', {\n                  query,\n                  extractedResponse: ((_extractedResponse = extractedResponse) === null || _extractedResponse === void 0 ? void 0 : _extractedResponse.substring(0, 100)) + '...',\n                  apiResponse: !!apiResponse,\n                  results: !!results\n                });\n                return extractedResponse;\n              })()\n            }, `chatwidget-${query}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FullScreenChat, {\n          isOpen: isDemoMode && isChatOpen,\n          onClose: () => setIsChatOpen(false),\n          initialQuery: query,\n          initialResponse: ((_apiResponse$data3, _apiResponse$data3$ai, _apiResponse$data4) => {\n            let extractedResponse = '';\n            if (apiResponse !== null && apiResponse !== void 0 && (_apiResponse$data3 = apiResponse.data) !== null && _apiResponse$data3 !== void 0 && (_apiResponse$data3$ai = _apiResponse$data3.ai_response) !== null && _apiResponse$data3$ai !== void 0 && _apiResponse$data3$ai.response) {\n              extractedResponse = apiResponse.data.ai_response.response;\n            } else if (apiResponse !== null && apiResponse !== void 0 && (_apiResponse$data4 = apiResponse.data) !== null && _apiResponse$data4 !== void 0 && _apiResponse$data4.response) {\n              extractedResponse = apiResponse.data.response;\n            } else {\n              extractedResponse = results;\n            }\n            return extractedResponse;\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: isDemoMode ? '#f8fafc' : '#ffffff',\n            borderRadius: '12px',\n            boxShadow: isDemoMode ? 'none' : '0 1px 3px rgba(0, 0, 0, 0.1)',\n            border: isDemoMode ? 'none' : '1px solid #e5e7eb',\n            padding: isDemoMode ? '0' : windowWidth <= 768 ? '16px' : '20px',\n            display: 'flex',\n            flexDirection: 'column',\n            overflow: 'hidden',\n            position: 'relative'\n          },\n          children: [isDemoMode && !isChatOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsChatOpen(true),\n            style: {\n              position: 'fixed',\n              bottom: '20px',\n              right: '20px',\n              width: '60px',\n              height: '60px',\n              borderRadius: '50%',\n              backgroundColor: '#10b981',\n              border: 'none',\n              boxShadow: '0 4px 12px rgba(16, 185, 129, 0.3)',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontSize: '24px',\n              color: 'white',\n              zIndex: 100,\n              transition: 'all 0.2s ease'\n            },\n            onMouseEnter: e => {\n              e.currentTarget.style.transform = 'scale(1.1)';\n              e.currentTarget.style.boxShadow = '0 6px 16px rgba(16, 185, 129, 0.4)';\n            },\n            onMouseLeave: e => {\n              e.currentTarget.style.transform = 'scale(1)';\n              e.currentTarget.style.boxShadow = '0 4px 12px rgba(16, 185, 129, 0.3)';\n            },\n            children: \"\\uD83D\\uDCAC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 17\n          }, this), isDemoMode ? /*#__PURE__*/_jsxDEV(Dashboard, {\n            windowWidth: windowWidth,\n            variant: \"health\",\n            onAnalyzeSection: section => console.log(`Analyzing ${section}`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(SearchResultsDashboard, {\n            windowWidth: windowWidth,\n            query: headerSearchQuery || query,\n            results: headerSearchResults || results,\n            apiResponse: headerApiResponse || apiResponse,\n            dataSource: dataSource,\n            onAnalyzeSection: section => console.log(`Analyzing ${section} for search`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this) : !isLoading && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          textAlign: 'center',\n          padding: '40px',\n          color: '#6b7280'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No results to display. Try searching for something else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n      isOpen: isUploadModalOpen,\n      onClose: () => setIsUploadModalOpen(false),\n      onAnalysisComplete: handleAnalysisComplete,\n      title: \"Upload Image\",\n      subtitle: \"Upload images for analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n\n        @keyframes fadeIn {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        @keyframes wiH-border-sweep {\n          0% { background-position: 0% 0%; }\n          100% { background-position: 200% 0%; }\n        }\n\n        @keyframes slideInLeft {\n          from { \n            transform: translateX(-100%);\n            opacity: 0;\n          }\n          to { \n            transform: translateX(0);\n            opacity: 1;\n          }\n        }\n\n        @keyframes slideInUp {\n          from { \n            transform: translateY(100%);\n            opacity: 0;\n          }\n          to { \n            transform: translateY(0);\n            opacity: 1;\n          }\n        }\n\n        /* INDUSTRY-STANDARD SCROLLBAR HANDLING */\n        \n        /* Hide scrollbars for all chat-related elements */\n        .chat-overlay *::-webkit-scrollbar {\n          width: 0px !important;\n          height: 0px !important;\n          background: transparent !important;\n        }\n        \n        .chat-overlay * {\n          scrollbar-width: none !important; /* Firefox */\n          -ms-overflow-style: none !important; /* Internet Explorer 10+ */\n        }\n        \n        /* Ensure smooth scrolling for all chat elements */\n        .chat-overlay * {\n          scroll-behavior: smooth !important;\n        }\n        \n        /* Custom invisible scrollbar for WebKit browsers */\n        .chat-container::-webkit-scrollbar {\n          width: 0px;\n          background: transparent;\n        }\n        \n        .chat-container::-webkit-scrollbar-track {\n          background: transparent;\n        }\n        \n        .chat-container::-webkit-scrollbar-thumb {\n          background: transparent;\n          border-radius: 0px;\n        }\n        \n        /* Enhanced focus states for better UX - but preserve existing input styles */\n        .chat-overlay input:focus:not(.search-input),\n        .chat-overlay textarea:focus:not(.search-input) {\n          outline: 2px solid #10b981 !important;\n          outline-offset: 2px !important;\n          border-color: #10b981 !important;\n        }\n        \n        /* Preserve existing search input styling - remove double borders */\n        .chat-overlay .search-input {\n          border: 2px solid #fa5f06 !important;\n          border-radius: 28px !important;\n          background: #ffffff !important;\n          box-shadow: 0 2px 8px rgba(250, 95, 6, 0.1) !important;\n        }\n        \n        .chat-overlay .search-input:focus {\n          outline: none !important;\n          border-color: #fa5f06 !important;\n          box-shadow: 0 2px 8px rgba(250, 95, 6, 0.2) !important;\n        }\n        \n        /* Remove double border from chat input container */\n        .chat-overlay .chat-input-container {\n          background: transparent !important;\n          border: none !important;\n          border-radius: 0 !important;\n          box-shadow: none !important;\n          padding: 0 !important;\n        }\n        \n        /* Ensure chat input area has proper styling */\n        .chat-overlay .chat-input-area {\n          padding: 16px !important;\n          border-top: 1px solid #e5e7eb !important;\n          background-color: #ffffff !important;\n        }\n        \n        /* Ensure search input container doesn't add extra border */\n        .chat-overlay .search-input-container {\n          border: none !important;\n          background: transparent !important;\n          box-shadow: none !important;\n          padding: 0 !important;\n        }\n        \n        /* Ensure chat messages and history are visible */\n        .chat-overlay .chat-thread {\n          display: flex !important;\n          flex-direction: column !important;\n          gap: 10px !important;\n          padding: 12px 16px !important;\n          height: 100% !important;\n          overflow-y: auto !important;\n        }\n        \n        .chat-overlay .chat-message {\n          display: flex !important;\n          opacity: 1 !important;\n          visibility: visible !important;\n        }\n        \n        /* Ensure chat widget components are visible */\n        .chat-overlay .chat-widget > div {\n          display: flex !important;\n          flex-direction: column !important;\n          height: 100% !important;\n        }\n        \n        /* Make sure messages container is visible */\n        .chat-overlay [style*=\"height: calc(100vh - 240px)\"] {\n          display: flex !important;\n          flex-direction: column !important;\n        }\n        \n        @keyframes fadeInUp {\n          from {\n            opacity: 0;\n            transform: translateY(10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n        \n        /* Gradient fade effect at top and bottom of chat */\n        .chat-container::before {\n          content: '';\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          height: 20px;\n          background: linear-gradient(to bottom, rgba(255,255,255,1), rgba(255,255,255,0));\n          pointer-events: none;\n          z-index: 10;\n        }\n        \n        .chat-container::after {\n          content: '';\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          right: 0;\n          height: 20px;\n          background: linear-gradient(to top, rgba(255,255,255,1), rgba(255,255,255,0));\n          pointer-events: none;\n          z-index: 10;\n        }\n        \n        /* Improved button hover effects */\n        .chat-overlay button {\n          transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1) !important;\n        }\n        \n        .chat-overlay button:hover {\n          transform: translateY(-1px) !important;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;\n        }\n        \n        /* Professional loading states */\n        .chat-overlay .loading-indicator {\n          background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n          background-size: 200% 100%;\n          animation: shimmer 1.5s infinite;\n        }\n        \n        @keyframes shimmer {\n          0% { background-position: -200% 0; }\n          100% { background-position: 200% 0; }\n        }\n        \n        /* Custom selection colors */\n        .chat-overlay ::selection {\n          background-color: #10b981;\n          color: white;\n        }\n        \n        .chat-overlay ::-moz-selection {\n          background-color: #10b981;\n          color: white;\n        }\n        \n        /* Improved typography */\n        .chat-overlay {\n          font-feature-settings: \"kern\" 1, \"liga\" 1;\n          text-rendering: optimizeLegibility;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n        \n        /* Accessibility improvements */\n        .chat-overlay button:focus-visible {\n          outline: 2px solid #10b981;\n          outline-offset: 2px;\n        }\n        \n        /* Mobile-specific improvements */\n        @media (max-width: 768px) {\n          .chat-overlay {\n            font-size: 16px; /* Prevents zoom on iOS */\n          }\n          \n          .chat-overlay input,\n          .chat-overlay textarea {\n            font-size: 16px; /* Prevents zoom on iOS */\n          }\n          \n          /* Mobile chat panel takes full width */\n          .chat-panel {\n            width: 100vw !important;\n            border-radius: 0 !important;\n          }\n          \n          /* Ensure mobile starts at top */\n          .chat-container {\n            padding-top: 20px !important;\n          }\n          \n          /* Mobile-specific input styling fixes */\n          .chat-overlay .search-input {\n            border: 2px solid #fa5f06 !important;\n            border-radius: 28px !important;\n            background: #ffffff !important;\n            box-shadow: 0 2px 8px rgba(250, 95, 6, 0.1) !important;\n          }\n          \n          /* Remove double border on mobile */\n          .chat-overlay .chat-input-container {\n            background: transparent !important;\n            border: none !important;\n            border-radius: 0 !important;\n            box-shadow: none !important;\n            padding: 0 !important;\n          }\n          \n          .chat-overlay .search-input-container {\n            border: none !important;\n            background: transparent !important;\n            box-shadow: none !important;\n            padding: 0 !important;\n          }\n        }\n        \n        /* Subtle shadow for chat panel */\n        .chat-panel {\n          box-shadow: \n            0 25px 50px -12px rgba(0, 0, 0, 0.25),\n            0 0 0 1px rgba(255, 255, 255, 0.05);\n        }\n        \n        /* Professional backdrop blur effect */\n        .chat-backdrop {\n          backdrop-filter: blur(8px);\n          -webkit-backdrop-filter: blur(8px);\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"lqoT9+ZVeBLANXtd6j3XiPw9gT4=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","searchCache","ImageUploadModal","ChatWidget","FullScreenChat","Dashboard","SearchResultsDashboard","Header","Spinner","wihyAPI","logger","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRelatedTopics","defaultResources","text","url","dummyTestData","query","healthInfo","relatedTopics","resources","convertLinksToClickable","content","message","details","JSON","stringify","String","urlRegex","parts","split","children","map","part","index","test","href","target","rel","style","color","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","SearchResults","results","onBackToSearch","onNewSearch","isLoading","dataSource","citations","recommendations","disclaimer","apiResponse","initialDemoMode","_s","prevQueryRef","current","console","log","input","setInput","image","setImage","currentPhotoId","setCurrentPhotoId","newQuery","setNewQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","notification","setNotification","isUploadLoading","setUploadLoading","lastProcessedQuery","setLastProcessedQuery","imageError","setImageError","isSearching","setIsSearching","currentContext","setCurrentContext","windowWidth","setWindowWidth","window","innerWidth","isDemoMode","setIsDemoMode","isChatOpen","setIsChatOpen","headerSearchResults","setHeaderSearchResults","headerSearchQuery","setHeaderSearchQuery","headerApiResponse","setHeaderApiResponse","isHeaderSearchLoading","setIsHeaderSearchLoading","recognitionRef","handleResize","addEventListener","removeEventListener","document","body","overflow","hasValidResults","trim","contextSummary","length","substring","timestamp","Date","toISOString","component","action","resultsLength","setCachedResult","location","classList","add","remove","startsWith","URL","revokeObjectURL","timer","setTimeout","clearTimeout","handleTextSubmit","e","preventDefault","trimmedQuery","handleVoiceInput","handleImageUpload","event","_event$target$files","file","files","handleAnalysisComplete","isTestQuery","toLowerCase","handleHeaderSearch","searchQuery","debug","wihyResponse","searchHealth","success","summary","_data","_data2","_data2$ai_response","data","response","ai_response","_wihy_response","wihy_response","core_principle","handleAddToChatConversation","hasResults","info","hasResponse","Error","error","handleChatSearch","userMessage","assistantMessage","hasAddChatMessage","addChatMessage","originalQuery","hasHeaderSearchResults","chatWidgetKey","hasApiResponse","className","minHeight","display","flexDirection","paddingTop","position","top","left","right","zIndex","backgroundColor","variant","showLogin","showSearchInput","onSearchSubmit","overlay","title","subtitle","disableEsc","padding","gridTemplateColumns","gridTemplateRows","gap","maxWidth","margin","borderRadius","border","boxShadow","flex","height","isOpen","onClose","inline","onAddMessage","searchResponse","_apiResponse$data","_apiResponse$data$ai_","_apiResponse$data2","_extractedResponse","extractedResponse","initialQuery","initialResponse","_apiResponse$data3","_apiResponse$data3$ai","_apiResponse$data4","onClick","bottom","width","cursor","alignItems","justifyContent","fontSize","transition","onMouseEnter","currentTarget","transform","onMouseLeave","onAnalyzeSection","section","textAlign","onAnalysisComplete","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/search/SearchResults.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { searchCache } from '../../services/searchCache';\r\nimport { photoStorageService } from '../../services/photoStorageService';\r\nimport { foodAnalysisService } from '../../services/foodAnalysisService';\r\nimport ImageUploadModal from '../ui/ImageUploadModal';\r\nimport MultiAuthLogin from '../shared/MultiAuthLogin';\r\nimport ChatWidget from '../ui/ChatWidget';\r\nimport FullScreenChat from '../ui/FullScreenChat';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport SearchResultsDashboard from '../dashboard/SearchResultsDashboard';\r\nimport '../../styles/VHealthSearch.css';\r\nimport Header from '../shared/Header';\r\nimport Spinner from '../ui/Spinner';\r\nimport { wihyAPI } from '../../services/wihyAPI';\r\nimport { logger } from '../../utils/logger';\r\n\r\n/* Define default topics and resources */\r\nconst defaultRelatedTopics = [\r\n  \"Nutrition and Diet Guidelines\",\r\n  \"Exercise and Physical Activity\", \r\n  \"Mental Health and Wellness\",\r\n  \"Preventive Care and Screenings\",\r\n  \"Chronic Disease Management\",\r\n  \"Healthy Lifestyle Choices\"\r\n];\r\n\r\nconst defaultResources = [\r\n  { text: \"Nutrition ED - Learn More\", url: \"https://vowels.com\" },\r\n  { text: \"Nutrition 101\", url: \"https://members.vowels.com\" },\r\n  { text: \"The World Counts\", url: \"https://www.theworldcounts.com/\" }\r\n];\r\n\r\n// Define the dummy data for \"test\" queries\r\nconst dummyTestData = {\r\n  query: \"test\",\r\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\r\n\r\n**Recommendations:**\r\n• Consult healthcare professionals for personalized medical advice\r\n• Verify information with your doctor or medical provider\r\n• Follow evidence-based medical guidelines\r\n• Seek regular medical check-ups and screenings\r\n\r\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\r\n\r\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\r\n  relatedTopics: [\r\n    \"Nutrition and Diet Guidelines\",\r\n    \"Exercise and Physical Activity\", \r\n    \"Mental Health and Wellness\",\r\n    \"Preventive Care and Screenings\",\r\n    \"Chronic Disease Management\",\r\n    \"Healthy Lifestyle Choices\"\r\n  ],\r\n  resources: [\r\n    { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"#\" },\r\n    { text: \"🏥 CDC - Health Guidelines\", url: \"#\" },\r\n    { text: \"🌍 WHO - Global Health Information\", url: \"#\" }\r\n  ]\r\n};\r\n\r\n// Update the SearchResultsProps interface to include the new properties\r\ninterface SearchResultsProps {\r\n  query: string;\r\n  results: string;\r\n  onBackToSearch: () => void;\r\n  onNewSearch: (query: string) => void;\r\n  isLoading: boolean;\r\n  dataSource: \"error\" | \"openai\" | \"local\" | \"vnutrition\" | \"wihy\";\r\n  citations?: string[];\r\n  recommendations?: string[];\r\n  disclaimer?: string;\r\n  apiResponse?: any; // Add unified API response for chart components\r\n  initialDemoMode?: boolean; // Add prop to start in demo mode\r\n}\r\n\r\n// Add this function before the SearchResults component\r\nconst convertLinksToClickable = (text: any): React.ReactNode => {\r\n  // Handle non-string inputs\r\n  if (!text) return null;\r\n  \r\n  // If text is not a string, convert it to string first\r\n  if (typeof text !== 'string') {\r\n    // If it's an object, try to stringify it or extract meaningful content\r\n    if (typeof text === 'object') {\r\n      // If it has specific properties we can use\r\n      if (text.content) {\r\n        text = text.content;\r\n      } else if (text.message) {\r\n        text = text.message;\r\n      } else if (text.details) {\r\n        text = text.details;\r\n      } else {\r\n        // Last resort - stringify the object\r\n        text = JSON.stringify(text);\r\n      }\r\n    } else {\r\n      // Convert other types to string\r\n      text = String(text);\r\n    }\r\n  }\r\n\r\n  // Now we're sure text is a string, proceed with original logic\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  const parts = text.split(urlRegex);\r\n  \r\n  return (\r\n    <>\r\n      {parts.map((part, index) => (\r\n        urlRegex.test(part) ? (\r\n          <a \r\n            key={index} \r\n            href={part} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            style={{ color: '#2563eb', textDecoration: 'underline' }}\r\n          >\r\n            {part}\r\n          </a>\r\n        ) : (\r\n          part\r\n        )\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SearchResults: React.FC<SearchResultsProps> = ({\r\n  query,\r\n  results,\r\n  onBackToSearch,\r\n  onNewSearch,\r\n  isLoading,\r\n  dataSource,\r\n  citations = [],\r\n  recommendations = [],\r\n  disclaimer = \"\",\r\n  apiResponse,\r\n  initialDemoMode = false\r\n}) => {\r\n  // Only log on significant changes, not every render\r\n  const prevQueryRef = useRef<string>('');\r\n  \r\n  useEffect(() => {\r\n    if (query !== prevQueryRef.current) {\r\n      console.log('🔍 SEARCH RESULTS: New query -', query);\r\n      prevQueryRef.current = query;\r\n    }\r\n  }, [query]);\r\n  \r\n  const [input, setInput] = useState('');\r\n  const [image, setImage] = useState<File | string | null>(null);\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [newQuery, setNewQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [notification, setNotification] = useState<{message: string, type: string} | null>(null);\r\n  const [isUploadLoading, setUploadLoading] = useState(false);\r\n  const [lastProcessedQuery, setLastProcessedQuery] = useState<string>('');\r\n  const [imageError, setImageError] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [currentContext, setCurrentContext] = useState<string>('search results');\r\n  const [windowWidth, setWindowWidth] = useState(typeof window !== 'undefined' ? window.innerWidth : 1200);\r\n  const [isDemoMode, setIsDemoMode] = useState(initialDemoMode);\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  \r\n  // Header search state - independent from main search\r\n  const [headerSearchResults, setHeaderSearchResults] = useState<string>('');\r\n  const [headerSearchQuery, setHeaderSearchQuery] = useState<string>('');\r\n  const [headerApiResponse, setHeaderApiResponse] = useState<any>(null);\r\n  const [isHeaderSearchLoading, setIsHeaderSearchLoading] = useState(false);\r\n  \r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // Handle window resize for responsive layout\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Prevent body scroll when component mounts  \r\n  useEffect(() => {\r\n    // Remove any body scroll restrictions - let the CSS variable approach handle positioning\r\n    document.body.style.overflow = 'auto';\r\n    \r\n    return () => {\r\n      document.body.style.overflow = 'auto';\r\n    };\r\n  }, []);\r\n\r\n  // Check if we have valid results to display\r\n  const hasValidResults = results && results.trim() !== '' && !isLoading;\r\n  \r\n  // Set context for ChatWidget based on search results\r\n  useEffect(() => {\r\n    if (results && typeof results === 'string' && results.trim()) {\r\n      // Extract a meaningful summary for chat context\r\n      const contextSummary = results.length > 300 ? results.substring(0, 300) + '...' : results;\r\n      setCurrentContext(`Search results for \"${query}\": ${contextSummary}`);\r\n      console.log('🔍 SEARCH RESULTS: Updated chat context');\r\n    } else {\r\n      setCurrentContext('search results');\r\n    }\r\n  }, [results, query]);\r\n  \r\n  // 🔍 SEARCH RESULTS LOGGING: Track loading states\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      console.log('🔍 SEARCH RESULTS LOADING STATE:', {\r\n        query: query,\r\n        timestamp: new Date().toISOString(),\r\n        component: 'SearchResults',\r\n        action: 'loadingStarted',\r\n        isLoading: true,\r\n        hasValidResults: hasValidResults\r\n      });\r\n    } else {\r\n      console.log('🔍 SEARCH RESULTS LOADING COMPLETE:', {\r\n        query: query,\r\n        timestamp: new Date().toISOString(),\r\n        component: 'SearchResults',\r\n        action: 'loadingComplete',\r\n        isLoading: false,\r\n        hasValidResults: hasValidResults,\r\n        resultsLength: results?.length || 0\r\n      });\r\n    }\r\n  }, [isLoading, hasValidResults]);\r\n  \r\n  // Cache results when they change\r\n  useEffect(() => {\r\n    if (query && results && !isLoading) {\r\n      searchCache.setCachedResult(query, results, window.location.href);\r\n    }\r\n  }, [query, results, isLoading]);\r\n\r\n  // Add effect to manage body class when modal opens/closes\r\n  useEffect(() => {\r\n    if (isUploadModalOpen) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n    \r\n    return () => {\r\n      document.body.classList.remove('modal-open');\r\n    };\r\n  }, [isUploadModalOpen]);\r\n\r\n  // Add cleanup effect\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typeof image === 'string' && image.startsWith('blob:')) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [image]);\r\n\r\n  // Add this effect\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Handle new search submission\r\n  const handleTextSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim() || isLoading) return;\r\n    \r\n    const trimmedQuery = input.trim();\r\n    \r\n    if (trimmedQuery === lastProcessedQuery || trimmedQuery === query) {\r\n      console.log('Preventing duplicate search for:', trimmedQuery);\r\n      return;\r\n    }\r\n    \r\n    console.log('User explicit search from results page:', trimmedQuery);\r\n    setLastProcessedQuery(trimmedQuery);\r\n    setIsSearching(true);\r\n    onNewSearch(trimmedQuery);\r\n  };\r\n\r\n  // Handle voice input (placeholder for now)\r\n  const handleVoiceInput = () => {\r\n    setIsListening(!isListening);\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setIsUploadModalOpen(true);\r\n    }\r\n  };\r\n\r\n  // Handle image upload completion\r\n  const handleAnalysisComplete = (results: any) => {\r\n    setIsUploadModalOpen(false);\r\n    if (results) {\r\n      onNewSearch(JSON.stringify(results));\r\n    }\r\n  };\r\n\r\n  // Check if this is a test query\r\n  const isTestQuery = query.toLowerCase() === 'test';\r\n\r\n  // Handle new search from header - makes its own API request\r\n  const handleHeaderSearch = async (searchQuery: string) => {\r\n    console.log('🔍 HEADER SEARCH initiated:', { searchQuery });\r\n    \r\n    if (!searchQuery.trim()) return;\r\n    \r\n    setIsHeaderSearchLoading(true);\r\n    \r\n    try {\r\n      logger.debug('Header search: Making WiHy API call', { query: searchQuery });\r\n      \r\n      const wihyResponse = await wihyAPI.searchHealth(searchQuery);\r\n      \r\n      if (wihyResponse.success) {\r\n        // Extract response content\r\n        let summary = 'Health information provided';\r\n        if ('data' in wihyResponse) {\r\n          // New unified API response format\r\n          summary = (wihyResponse as any).data?.response || \r\n                   (wihyResponse as any).data?.ai_response?.response || \r\n                   summary;\r\n        } else {\r\n          // Legacy WihyResponse format\r\n          summary = (wihyResponse as any).wihy_response?.core_principle || summary;\r\n        }\r\n        \r\n        // Update our local state and add to chat conversation\r\n        setHeaderSearchResults(summary);\r\n        setHeaderSearchQuery(searchQuery);\r\n        setHeaderApiResponse(wihyResponse);\r\n        \r\n        // Add the new search to the existing chat conversation\r\n        handleAddToChatConversation(searchQuery, summary);\r\n        \r\n        console.log('🔍 HEADER SEARCH state updated:', {\r\n          query: searchQuery,\r\n          hasResults: !!summary,\r\n          timestamp: new Date().toISOString()\r\n        });\r\n        \r\n        logger.info('Header search completed successfully', { query: searchQuery });\r\n        \r\n        console.log('🔍 HEADER SEARCH completed:', {\r\n          query: searchQuery,\r\n          success: true,\r\n          hasResponse: !!summary,\r\n          timestamp: new Date().toISOString()\r\n        });\r\n        \r\n      } else {\r\n        throw new Error('WiHy API request failed');\r\n      }\r\n      \r\n    } catch (error) {\r\n      logger.error('Header search failed:', error);\r\n      setHeaderSearchResults('Sorry, there was an error processing your search. Please try again.');\r\n      setHeaderApiResponse(null);\r\n      \r\n      console.log('🔍 HEADER SEARCH failed:', {\r\n        query: searchQuery,\r\n        error: error.message,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    } finally {\r\n      setIsHeaderSearchLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle new search from ChatWidget\r\n  const handleChatSearch = (query: string) => {\r\n    console.log('🔍 ChatWidget triggered new search:', { query });\r\n    // Clear any header search results when using ChatWidget\r\n    setHeaderSearchResults('');\r\n    setHeaderSearchQuery('');\r\n    setHeaderApiResponse(null);\r\n    // Use the main navigation flow for ChatWidget searches\r\n    onNewSearch(query);\r\n  };\r\n\r\n  // Handle header search - add messages to existing conversation\r\n  const handleAddToChatConversation = (userMessage: string, assistantMessage: string) => {\r\n    console.log('🔍 ATTEMPTING TO ADD TO CHAT:', {\r\n      userMessage,\r\n      assistantMessage: assistantMessage.substring(0, 100) + '...',\r\n      hasAddChatMessage: !!(window as any).addChatMessage,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n    \r\n    if ((window as any).addChatMessage) {\r\n      (window as any).addChatMessage(userMessage, assistantMessage);\r\n    } else {\r\n      console.error('🔍 addChatMessage function not available on window');\r\n    }\r\n  };\r\n\r\n  // Debug logging for state changes\r\n  useEffect(() => {\r\n    console.log('🔍 SEARCHRESULTS STATE DEBUG:', {\r\n      headerSearchQuery,\r\n      originalQuery: query,\r\n      hasHeaderSearchResults: !!headerSearchResults,\r\n      isHeaderSearchLoading,\r\n      chatWidgetKey: `chatwidget-${headerSearchQuery || query}`,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  }, [headerSearchQuery, headerSearchResults, query, isHeaderSearchLoading]);\r\n\r\n  // Clear header search results when main query changes\r\n  useEffect(() => {\r\n    if (query && headerSearchQuery && query !== headerSearchQuery) {\r\n      console.log('🔍 Main query changed, clearing header search results');\r\n      setHeaderSearchResults('');\r\n      setHeaderSearchQuery('');\r\n      setHeaderApiResponse(null);\r\n    }\r\n  }, [query, headerSearchQuery]);\r\n\r\n  // 🔍 SEARCH RESULTS LOGGING: Track prop changes\r\n  useEffect(() => {\r\n    console.log('🔍 SEARCH RESULTS PROPS CHANGED:', {\r\n      query: query,\r\n      timestamp: new Date().toISOString(),\r\n      component: 'SearchResults',\r\n      action: 'propsChanged',\r\n      isLoading: isLoading,\r\n      dataSource: dataSource,\r\n      hasResults: !!results,\r\n      resultsLength: results?.length || 0,\r\n      hasApiResponse: !!apiResponse\r\n    });\r\n  }, [query, results, isLoading, dataSource, apiResponse]);\r\n\r\n  return (\r\n    <div className=\"search-results-container\" style={{ \r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      paddingTop: 'var(--vh-header-height)',\r\n      overflow: 'hidden'\r\n    }}>\r\n      <div style={{ \r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 1000, \r\n        backgroundColor: 'white'\r\n      }}>\r\n        <Header\r\n          variant=\"results\"\r\n          showLogin={true}\r\n          showSearchInput={true}\r\n          onSearchSubmit={handleHeaderSearch}\r\n        />\r\n      </div>\r\n\r\n      {/* Show spinner when loading from parent OR header search */}\r\n      {(isLoading || isHeaderSearchLoading) && (\r\n        <Spinner\r\n          overlay={true}\r\n          title=\"Analyzing with AI...\"\r\n          subtitle=\"Processing your health query...\"\r\n          disableEsc={true}\r\n        />\r\n      )}\r\n      \r\n      {/* Main Content Area with Dashboard Layout */}\r\n      <div style={{ \r\n        minHeight: 'calc(100vh - var(--vh-header-height))',\r\n        overflow: 'hidden',\r\n        padding: windowWidth <= 768 ? '12px' : '20px',\r\n        backgroundColor: '#f8fafc'\r\n      }}>\r\n        \r\n        {hasValidResults ? (\r\n          <div style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: windowWidth <= 768 ? '1fr' : (isDemoMode ? '1fr' : '2fr 1fr'),\r\n            gridTemplateRows: windowWidth <= 768 ? '1fr 300px' : '1fr',\r\n            gap: '20px',\r\n            maxWidth: isDemoMode ? '1600px' : '1200px',\r\n            margin: '0 auto',\r\n            minHeight: 'calc(100vh - var(--vh-header-height) - 40px)', // Account for padding\r\n            overflow: 'hidden',\r\n            position: 'relative'\r\n          }}>\r\n            \r\n            {/* Chat Widget - Only show when not in demo mode */}\r\n            {!isDemoMode && (\r\n              <div style={{\r\n                backgroundColor: 'white',\r\n                borderRadius: '12px',\r\n                border: '1px solid #e5e7eb',\r\n                boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n                padding: windowWidth <= 768 ? '16px' : '24px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                overflow: 'hidden'\r\n              }}>\r\n                \r\n                {/* Chat Widget - header now included inside */}\r\n                <div style={{ flex: 1, overflow: 'hidden', height: '100%' }}>\r\n                  <ChatWidget\r\n                    key={`chatwidget-${query}`} // Stable key since we're adding to conversation instead of replacing\r\n                    isOpen={true}\r\n                    onClose={() => {}}\r\n                    currentContext={currentContext}\r\n                    inline={true}\r\n                    searchQuery={query} // Always use original query for initialization\r\n                    onNewSearch={handleChatSearch}\r\n                    onAddMessage={handleAddToChatConversation}\r\n                    searchResponse={(() => {\r\n                      // Use original results for initialization, header search will be added via onAddMessage\r\n                      let extractedResponse = '';\r\n                      if (apiResponse?.data?.ai_response?.response) {\r\n                        extractedResponse = apiResponse.data.ai_response.response;\r\n                      } else if (apiResponse?.data?.response) {\r\n                        extractedResponse = apiResponse.data.response;\r\n                      } else {\r\n                        extractedResponse = results;\r\n                      }\r\n                      \r\n                      console.log('🔍 SEARCHRESULTS DEBUG: Using original results for initialization:', {\r\n                        query,\r\n                        extractedResponse: extractedResponse?.substring(0, 100) + '...',\r\n                        apiResponse: !!apiResponse,\r\n                        results: !!results\r\n                      });\r\n                      \r\n                      return extractedResponse;\r\n                    })()}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Full Screen Chat - Only in demo mode when chat is open */}\r\n            <FullScreenChat\r\n              isOpen={isDemoMode && isChatOpen}\r\n              onClose={() => setIsChatOpen(false)}\r\n              initialQuery={query}\r\n              initialResponse={(() => {\r\n                let extractedResponse = '';\r\n                if (apiResponse?.data?.ai_response?.response) {\r\n                  extractedResponse = apiResponse.data.ai_response.response;\r\n                } else if (apiResponse?.data?.response) {\r\n                  extractedResponse = apiResponse.data.response;\r\n                } else {\r\n                  extractedResponse = results;\r\n                }\r\n                return extractedResponse;\r\n              })()}\r\n            />\r\n\r\n            {/* Main Content Area - Dashboard in demo mode, charts sidebar in normal mode */}\r\n            <div style={{\r\n              backgroundColor: isDemoMode ? '#f8fafc' : '#ffffff',\r\n              borderRadius: '12px',\r\n              boxShadow: isDemoMode ? 'none' : '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n              border: isDemoMode ? 'none' : '1px solid #e5e7eb',\r\n              padding: isDemoMode ? '0' : (windowWidth <= 768 ? '16px' : '20px'),\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              overflow: 'hidden',\r\n              position: 'relative'\r\n            }}>\r\n              \r\n              {/* Floating Chat Button - Only in demo mode when chat is closed */}\r\n              {isDemoMode && !isChatOpen && (\r\n                <button\r\n                  onClick={() => setIsChatOpen(true)}\r\n                  style={{\r\n                    position: 'fixed',\r\n                    bottom: '20px',\r\n                    right: '20px',\r\n                    width: '60px',\r\n                    height: '60px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: '#10b981',\r\n                    border: 'none',\r\n                    boxShadow: '0 4px 12px rgba(16, 185, 129, 0.3)',\r\n                    cursor: 'pointer',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    fontSize: '24px',\r\n                    color: 'white',\r\n                    zIndex: 100,\r\n                    transition: 'all 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.transform = 'scale(1.1)';\r\n                    e.currentTarget.style.boxShadow = '0 6px 16px rgba(16, 185, 129, 0.4)';\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.transform = 'scale(1)';\r\n                    e.currentTarget.style.boxShadow = '0 4px 12px rgba(16, 185, 129, 0.3)';\r\n                  }}\r\n                >\r\n                  💬\r\n                </button>\r\n              )}\r\n\r\n              {isDemoMode ? (\r\n                <Dashboard\r\n                  windowWidth={windowWidth}\r\n                  variant=\"health\"\r\n                  onAnalyzeSection={(section) => console.log(`Analyzing ${section}`)}\r\n                />\r\n              ) : (\r\n                <SearchResultsDashboard\r\n                  windowWidth={windowWidth}\r\n                  query={headerSearchQuery || query}\r\n                  results={headerSearchResults || results}\r\n                  apiResponse={headerApiResponse || apiResponse}\r\n                  dataSource={dataSource}\r\n                  onAnalyzeSection={(section) => console.log(`Analyzing ${section} for search`)}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          !isLoading && !isSearching && (\r\n            <div style={{ \r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              height: '100%',\r\n              textAlign: 'center', \r\n              padding: '40px',\r\n              color: '#6b7280'\r\n            }}>\r\n              <p>No results to display. Try searching for something else.</p>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n\r\n      {/* ImageUploadModal - always available */}\r\n      <ImageUploadModal\r\n        isOpen={isUploadModalOpen}\r\n        onClose={() => setIsUploadModalOpen(false)}\r\n        onAnalysisComplete={handleAnalysisComplete}\r\n        title=\"Upload Image\"\r\n        subtitle=\"Upload images for analysis\"\r\n      />\r\n      \r\n      {/* Add CSS for header search loading animation */}\r\n      <style>{`\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n\r\n        @keyframes fadeIn {\r\n          from { opacity: 0; }\r\n          to { opacity: 1; }\r\n        }\r\n\r\n        @keyframes wiH-border-sweep {\r\n          0% { background-position: 0% 0%; }\r\n          100% { background-position: 200% 0%; }\r\n        }\r\n\r\n        @keyframes slideInLeft {\r\n          from { \r\n            transform: translateX(-100%);\r\n            opacity: 0;\r\n          }\r\n          to { \r\n            transform: translateX(0);\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        @keyframes slideInUp {\r\n          from { \r\n            transform: translateY(100%);\r\n            opacity: 0;\r\n          }\r\n          to { \r\n            transform: translateY(0);\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        /* INDUSTRY-STANDARD SCROLLBAR HANDLING */\r\n        \r\n        /* Hide scrollbars for all chat-related elements */\r\n        .chat-overlay *::-webkit-scrollbar {\r\n          width: 0px !important;\r\n          height: 0px !important;\r\n          background: transparent !important;\r\n        }\r\n        \r\n        .chat-overlay * {\r\n          scrollbar-width: none !important; /* Firefox */\r\n          -ms-overflow-style: none !important; /* Internet Explorer 10+ */\r\n        }\r\n        \r\n        /* Ensure smooth scrolling for all chat elements */\r\n        .chat-overlay * {\r\n          scroll-behavior: smooth !important;\r\n        }\r\n        \r\n        /* Custom invisible scrollbar for WebKit browsers */\r\n        .chat-container::-webkit-scrollbar {\r\n          width: 0px;\r\n          background: transparent;\r\n        }\r\n        \r\n        .chat-container::-webkit-scrollbar-track {\r\n          background: transparent;\r\n        }\r\n        \r\n        .chat-container::-webkit-scrollbar-thumb {\r\n          background: transparent;\r\n          border-radius: 0px;\r\n        }\r\n        \r\n        /* Enhanced focus states for better UX - but preserve existing input styles */\r\n        .chat-overlay input:focus:not(.search-input),\r\n        .chat-overlay textarea:focus:not(.search-input) {\r\n          outline: 2px solid #10b981 !important;\r\n          outline-offset: 2px !important;\r\n          border-color: #10b981 !important;\r\n        }\r\n        \r\n        /* Preserve existing search input styling - remove double borders */\r\n        .chat-overlay .search-input {\r\n          border: 2px solid #fa5f06 !important;\r\n          border-radius: 28px !important;\r\n          background: #ffffff !important;\r\n          box-shadow: 0 2px 8px rgba(250, 95, 6, 0.1) !important;\r\n        }\r\n        \r\n        .chat-overlay .search-input:focus {\r\n          outline: none !important;\r\n          border-color: #fa5f06 !important;\r\n          box-shadow: 0 2px 8px rgba(250, 95, 6, 0.2) !important;\r\n        }\r\n        \r\n        /* Remove double border from chat input container */\r\n        .chat-overlay .chat-input-container {\r\n          background: transparent !important;\r\n          border: none !important;\r\n          border-radius: 0 !important;\r\n          box-shadow: none !important;\r\n          padding: 0 !important;\r\n        }\r\n        \r\n        /* Ensure chat input area has proper styling */\r\n        .chat-overlay .chat-input-area {\r\n          padding: 16px !important;\r\n          border-top: 1px solid #e5e7eb !important;\r\n          background-color: #ffffff !important;\r\n        }\r\n        \r\n        /* Ensure search input container doesn't add extra border */\r\n        .chat-overlay .search-input-container {\r\n          border: none !important;\r\n          background: transparent !important;\r\n          box-shadow: none !important;\r\n          padding: 0 !important;\r\n        }\r\n        \r\n        /* Ensure chat messages and history are visible */\r\n        .chat-overlay .chat-thread {\r\n          display: flex !important;\r\n          flex-direction: column !important;\r\n          gap: 10px !important;\r\n          padding: 12px 16px !important;\r\n          height: 100% !important;\r\n          overflow-y: auto !important;\r\n        }\r\n        \r\n        .chat-overlay .chat-message {\r\n          display: flex !important;\r\n          opacity: 1 !important;\r\n          visibility: visible !important;\r\n        }\r\n        \r\n        /* Ensure chat widget components are visible */\r\n        .chat-overlay .chat-widget > div {\r\n          display: flex !important;\r\n          flex-direction: column !important;\r\n          height: 100% !important;\r\n        }\r\n        \r\n        /* Make sure messages container is visible */\r\n        .chat-overlay [style*=\"height: calc(100vh - 240px)\"] {\r\n          display: flex !important;\r\n          flex-direction: column !important;\r\n        }\r\n        \r\n        @keyframes fadeInUp {\r\n          from {\r\n            opacity: 0;\r\n            transform: translateY(10px);\r\n          }\r\n          to {\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n          }\r\n        }\r\n        \r\n        /* Gradient fade effect at top and bottom of chat */\r\n        .chat-container::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          height: 20px;\r\n          background: linear-gradient(to bottom, rgba(255,255,255,1), rgba(255,255,255,0));\r\n          pointer-events: none;\r\n          z-index: 10;\r\n        }\r\n        \r\n        .chat-container::after {\r\n          content: '';\r\n          position: absolute;\r\n          bottom: 0;\r\n          left: 0;\r\n          right: 0;\r\n          height: 20px;\r\n          background: linear-gradient(to top, rgba(255,255,255,1), rgba(255,255,255,0));\r\n          pointer-events: none;\r\n          z-index: 10;\r\n        }\r\n        \r\n        /* Improved button hover effects */\r\n        .chat-overlay button {\r\n          transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1) !important;\r\n        }\r\n        \r\n        .chat-overlay button:hover {\r\n          transform: translateY(-1px) !important;\r\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;\r\n        }\r\n        \r\n        /* Professional loading states */\r\n        .chat-overlay .loading-indicator {\r\n          background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n          background-size: 200% 100%;\r\n          animation: shimmer 1.5s infinite;\r\n        }\r\n        \r\n        @keyframes shimmer {\r\n          0% { background-position: -200% 0; }\r\n          100% { background-position: 200% 0; }\r\n        }\r\n        \r\n        /* Custom selection colors */\r\n        .chat-overlay ::selection {\r\n          background-color: #10b981;\r\n          color: white;\r\n        }\r\n        \r\n        .chat-overlay ::-moz-selection {\r\n          background-color: #10b981;\r\n          color: white;\r\n        }\r\n        \r\n        /* Improved typography */\r\n        .chat-overlay {\r\n          font-feature-settings: \"kern\" 1, \"liga\" 1;\r\n          text-rendering: optimizeLegibility;\r\n          -webkit-font-smoothing: antialiased;\r\n          -moz-osx-font-smoothing: grayscale;\r\n        }\r\n        \r\n        /* Accessibility improvements */\r\n        .chat-overlay button:focus-visible {\r\n          outline: 2px solid #10b981;\r\n          outline-offset: 2px;\r\n        }\r\n        \r\n        /* Mobile-specific improvements */\r\n        @media (max-width: 768px) {\r\n          .chat-overlay {\r\n            font-size: 16px; /* Prevents zoom on iOS */\r\n          }\r\n          \r\n          .chat-overlay input,\r\n          .chat-overlay textarea {\r\n            font-size: 16px; /* Prevents zoom on iOS */\r\n          }\r\n          \r\n          /* Mobile chat panel takes full width */\r\n          .chat-panel {\r\n            width: 100vw !important;\r\n            border-radius: 0 !important;\r\n          }\r\n          \r\n          /* Ensure mobile starts at top */\r\n          .chat-container {\r\n            padding-top: 20px !important;\r\n          }\r\n          \r\n          /* Mobile-specific input styling fixes */\r\n          .chat-overlay .search-input {\r\n            border: 2px solid #fa5f06 !important;\r\n            border-radius: 28px !important;\r\n            background: #ffffff !important;\r\n            box-shadow: 0 2px 8px rgba(250, 95, 6, 0.1) !important;\r\n          }\r\n          \r\n          /* Remove double border on mobile */\r\n          .chat-overlay .chat-input-container {\r\n            background: transparent !important;\r\n            border: none !important;\r\n            border-radius: 0 !important;\r\n            box-shadow: none !important;\r\n            padding: 0 !important;\r\n          }\r\n          \r\n          .chat-overlay .search-input-container {\r\n            border: none !important;\r\n            background: transparent !important;\r\n            box-shadow: none !important;\r\n            padding: 0 !important;\r\n          }\r\n        }\r\n        \r\n        /* Subtle shadow for chat panel */\r\n        .chat-panel {\r\n          box-shadow: \r\n            0 25px 50px -12px rgba(0, 0, 0, 0.25),\r\n            0 0 0 1px rgba(255, 255, 255, 0.05);\r\n        }\r\n        \r\n        /* Professional backdrop blur effect */\r\n        .chat-backdrop {\r\n          backdrop-filter: blur(8px);\r\n          -webkit-backdrop-filter: blur(8px);\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,4BAA4B;AAGxD,OAAOC,gBAAgB,MAAM,wBAAwB;AAErD,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,sBAAsB,MAAM,qCAAqC;AACxE,OAAO,gCAAgC;AACvC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,MAAM,QAAQ,oBAAoB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,oBAAoB,GAAG,CAC3B,+BAA+B,EAC/B,gCAAgC,EAChC,4BAA4B,EAC5B,gCAAgC,EAChC,4BAA4B,EAC5B,2BAA2B,CAC5B;AAED,MAAMC,gBAAgB,GAAG,CACvB;EAAEC,IAAI,EAAE,2BAA2B;EAAEC,GAAG,EAAE;AAAqB,CAAC,EAChE;EAAED,IAAI,EAAE,eAAe;EAAEC,GAAG,EAAE;AAA6B,CAAC,EAC5D;EAAED,IAAI,EAAE,kBAAkB;EAAEC,GAAG,EAAE;AAAkC,CAAC,CACrE;;AAED;AACA,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qWAAqW;EACnWC,aAAa,EAAE,CACb,+BAA+B,EAC/B,gCAAgC,EAChC,4BAA4B,EAC5B,gCAAgC,EAChC,4BAA4B,EAC5B,2BAA2B,CAC5B;EACDC,SAAS,EAAE,CACT;IAAEN,IAAI,EAAE,sCAAsC;IAAEC,GAAG,EAAE;EAAI,CAAC,EAC1D;IAAED,IAAI,EAAE,4BAA4B;IAAEC,GAAG,EAAE;EAAI,CAAC,EAChD;IAAED,IAAI,EAAE,oCAAoC;IAAEC,GAAG,EAAE;EAAI,CAAC;AAE5D,CAAC;;AAED;;AAeA;AACA,MAAMM,uBAAuB,GAAIP,IAAS,IAAsB;EAC9D;EACA,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;;EAEtB;EACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B;IACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC5B;MACA,IAAIA,IAAI,CAACQ,OAAO,EAAE;QAChBR,IAAI,GAAGA,IAAI,CAACQ,OAAO;MACrB,CAAC,MAAM,IAAIR,IAAI,CAACS,OAAO,EAAE;QACvBT,IAAI,GAAGA,IAAI,CAACS,OAAO;MACrB,CAAC,MAAM,IAAIT,IAAI,CAACU,OAAO,EAAE;QACvBV,IAAI,GAAGA,IAAI,CAACU,OAAO;MACrB,CAAC,MAAM;QACL;QACAV,IAAI,GAAGW,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC;MAC7B;IACF,CAAC,MAAM;MACL;MACAA,IAAI,GAAGa,MAAM,CAACb,IAAI,CAAC;IACrB;EACF;;EAEA;EACA,MAAMc,QAAQ,GAAG,sBAAsB;EACvC,MAAMC,KAAK,GAAGf,IAAI,CAACgB,KAAK,CAACF,QAAQ,CAAC;EAElC,oBACEnB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,EACGF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KACrBN,QAAQ,CAACO,IAAI,CAACF,IAAI,CAAC,gBACjBxB,OAAA;MAEE2B,IAAI,EAAEH,IAAK;MACXI,MAAM,EAAC,QAAQ;MACfC,GAAG,EAAC,qBAAqB;MACzBC,KAAK,EAAE;QAAEC,KAAK,EAAE,SAAS;QAAEC,cAAc,EAAE;MAAY,CAAE;MAAAV,QAAA,EAExDE;IAAI,GANAC,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOT,CAAC,GAEJZ,IAEH;EAAC,gBACF,CAAC;AAEP,CAAC;AAED,MAAMa,aAA2C,GAAGA,CAAC;EACnD7B,KAAK;EACL8B,OAAO;EACPC,cAAc;EACdC,WAAW;EACXC,SAAS;EACTC,UAAU;EACVC,SAAS,GAAG,EAAE;EACdC,eAAe,GAAG,EAAE;EACpBC,UAAU,GAAG,EAAE;EACfC,WAAW;EACXC,eAAe,GAAG;AACpB,CAAC,KAAK;EAAAC,EAAA;EACJ;EACA,MAAMC,YAAY,GAAG7D,MAAM,CAAS,EAAE,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,KAAKyC,YAAY,CAACC,OAAO,EAAE;MAClCC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE5C,KAAK,CAAC;MACpDyC,YAAY,CAACC,OAAO,GAAG1C,KAAK;IAC9B;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAM,CAAC6C,KAAK,EAAEC,QAAQ,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqE,KAAK,EAAEC,QAAQ,CAAC,GAAGtE,QAAQ,CAAuB,IAAI,CAAC;EAC9D,MAAM,CAACuE,cAAc,EAAEC,iBAAiB,CAAC,GAAGxE,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAACyE,QAAQ,EAAEC,WAAW,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2E,WAAW,EAAEC,cAAc,CAAC,GAAG5E,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC6E,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9E,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC+E,YAAY,EAAEC,eAAe,CAAC,GAAGhF,QAAQ,CAAyC,IAAI,CAAC;EAC9F,MAAM,CAACiF,eAAe,EAAEC,gBAAgB,CAAC,GAAGlF,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACmF,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpF,QAAQ,CAAS,EAAE,CAAC;EACxE,MAAM,CAACqF,UAAU,EAAEC,aAAa,CAAC,GAAGtF,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuF,WAAW,EAAEC,cAAc,CAAC,GAAGxF,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACyF,cAAc,EAAEC,iBAAiB,CAAC,GAAG1F,QAAQ,CAAS,gBAAgB,CAAC;EAC9E,MAAM,CAAC2F,WAAW,EAAEC,cAAc,CAAC,GAAG5F,QAAQ,CAAC,OAAO6F,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACC,UAAU,GAAG,IAAI,CAAC;EACxG,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhG,QAAQ,CAAC6D,eAAe,CAAC;EAC7D,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGlG,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAM,CAACmG,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpG,QAAQ,CAAS,EAAE,CAAC;EAC1E,MAAM,CAACqG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtG,QAAQ,CAAS,EAAE,CAAC;EACtE,MAAM,CAACuG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxG,QAAQ,CAAM,IAAI,CAAC;EACrE,MAAM,CAACyG,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG1G,QAAQ,CAAC,KAAK,CAAC;EAEzE,MAAM2G,cAAc,GAAGzG,MAAM,CAAM,IAAI,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACd,MAAM2G,YAAY,GAAGA,CAAA,KAAM;MACzBhB,cAAc,CAACC,MAAM,CAACC,UAAU,CAAC;IACnC,CAAC;IAEDD,MAAM,CAACgB,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAC/C,OAAO,MAAMf,MAAM,CAACiB,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA3G,SAAS,CAAC,MAAM;IACd;IACA8G,QAAQ,CAACC,IAAI,CAACpE,KAAK,CAACqE,QAAQ,GAAG,MAAM;IAErC,OAAO,MAAM;MACXF,QAAQ,CAACC,IAAI,CAACpE,KAAK,CAACqE,QAAQ,GAAG,MAAM;IACvC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,eAAe,GAAG9D,OAAO,IAAIA,OAAO,CAAC+D,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC5D,SAAS;;EAEtE;EACAtD,SAAS,CAAC,MAAM;IACd,IAAImD,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAAC+D,IAAI,CAAC,CAAC,EAAE;MAC5D;MACA,MAAMC,cAAc,GAAGhE,OAAO,CAACiE,MAAM,GAAG,GAAG,GAAGjE,OAAO,CAACkE,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,GAAGlE,OAAO;MACzFsC,iBAAiB,CAAC,uBAAuBpE,KAAK,MAAM8F,cAAc,EAAE,CAAC;MACrEnD,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACxD,CAAC,MAAM;MACLwB,iBAAiB,CAAC,gBAAgB,CAAC;IACrC;EACF,CAAC,EAAE,CAACtC,OAAO,EAAE9B,KAAK,CAAC,CAAC;;EAEpB;EACArB,SAAS,CAAC,MAAM;IACd,IAAIsD,SAAS,EAAE;MACbU,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE;QAC9C5C,KAAK,EAAEA,KAAK;QACZiG,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,SAAS,EAAE,eAAe;QAC1BC,MAAM,EAAE,gBAAgB;QACxBpE,SAAS,EAAE,IAAI;QACf2D,eAAe,EAAEA;MACnB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLjD,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE;QACjD5C,KAAK,EAAEA,KAAK;QACZiG,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,SAAS,EAAE,eAAe;QAC1BC,MAAM,EAAE,iBAAiB;QACzBpE,SAAS,EAAE,KAAK;QAChB2D,eAAe,EAAEA,eAAe;QAChCU,aAAa,EAAE,CAAAxE,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEiE,MAAM,KAAI;MACpC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC9D,SAAS,EAAE2D,eAAe,CAAC,CAAC;;EAEhC;EACAjH,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,IAAI8B,OAAO,IAAI,CAACG,SAAS,EAAE;MAClCpD,WAAW,CAAC0H,eAAe,CAACvG,KAAK,EAAE8B,OAAO,EAAEyC,MAAM,CAACiC,QAAQ,CAACrF,IAAI,CAAC;IACnE;EACF,CAAC,EAAE,CAACnB,KAAK,EAAE8B,OAAO,EAAEG,SAAS,CAAC,CAAC;;EAE/B;EACAtD,SAAS,CAAC,MAAM;IACd,IAAI4E,iBAAiB,EAAE;MACrBkC,QAAQ,CAACC,IAAI,CAACe,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3C,CAAC,MAAM;MACLjB,QAAQ,CAACC,IAAI,CAACe,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;IAC9C;IAEA,OAAO,MAAM;MACXlB,QAAQ,CAACC,IAAI,CAACe,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;IAC9C,CAAC;EACH,CAAC,EAAE,CAACpD,iBAAiB,CAAC,CAAC;;EAEvB;EACA5E,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAI,OAAOoE,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAAC6D,UAAU,CAAC,OAAO,CAAC,EAAE;QAC1DC,GAAG,CAACC,eAAe,CAAC/D,KAAK,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACApE,SAAS,CAAC,MAAM;IACd,IAAI8E,YAAY,EAAE;MAChB,MAAMsD,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BtD,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMuD,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACtD,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMyD,gBAAgB,GAAG,MAAOC,CAAkB,IAAK;IACrDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACvE,KAAK,CAACgD,IAAI,CAAC,CAAC,IAAI5D,SAAS,EAAE;IAEhC,MAAMoF,YAAY,GAAGxE,KAAK,CAACgD,IAAI,CAAC,CAAC;IAEjC,IAAIwB,YAAY,KAAKxD,kBAAkB,IAAIwD,YAAY,KAAKrH,KAAK,EAAE;MACjE2C,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEyE,YAAY,CAAC;MAC7D;IACF;IAEA1E,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEyE,YAAY,CAAC;IACpEvD,qBAAqB,CAACuD,YAAY,CAAC;IACnCnD,cAAc,CAAC,IAAI,CAAC;IACpBlC,WAAW,CAACqF,YAAY,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BhE,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMkE,iBAAiB,GAAIC,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IACxE,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACpG,MAAM,CAACuG,KAAK,cAAAF,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAIC,IAAI,EAAE;MACR1E,QAAQ,CAAC0E,IAAI,CAAC;MACdlE,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMoE,sBAAsB,GAAI9F,OAAY,IAAK;IAC/C0B,oBAAoB,CAAC,KAAK,CAAC;IAC3B,IAAI1B,OAAO,EAAE;MACXE,WAAW,CAACxB,IAAI,CAACC,SAAS,CAACqB,OAAO,CAAC,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAM+F,WAAW,GAAG7H,KAAK,CAAC8H,WAAW,CAAC,CAAC,KAAK,MAAM;;EAElD;EACA,MAAMC,kBAAkB,GAAG,MAAOC,WAAmB,IAAK;IACxDrF,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;MAAEoF;IAAY,CAAC,CAAC;IAE3D,IAAI,CAACA,WAAW,CAACnC,IAAI,CAAC,CAAC,EAAE;IAEzBT,wBAAwB,CAAC,IAAI,CAAC;IAE9B,IAAI;MACF9F,MAAM,CAAC2I,KAAK,CAAC,qCAAqC,EAAE;QAAEjI,KAAK,EAAEgI;MAAY,CAAC,CAAC;MAE3E,MAAME,YAAY,GAAG,MAAM7I,OAAO,CAAC8I,YAAY,CAACH,WAAW,CAAC;MAE5D,IAAIE,YAAY,CAACE,OAAO,EAAE;QACxB;QACA,IAAIC,OAAO,GAAG,6BAA6B;QAC3C,IAAI,MAAM,IAAIH,YAAY,EAAE;UAAA,IAAAI,KAAA,EAAAC,MAAA,EAAAC,kBAAA;UAC1B;UACAH,OAAO,GAAG,EAAAC,KAAA,GAACJ,YAAY,CAASO,IAAI,cAAAH,KAAA,uBAA1BA,KAAA,CAA4BI,QAAQ,OAAAH,MAAA,GACpCL,YAAY,CAASO,IAAI,cAAAF,MAAA,wBAAAC,kBAAA,GAA1BD,MAAA,CAA4BI,WAAW,cAAAH,kBAAA,uBAAvCA,kBAAA,CAAyCE,QAAQ,KACjDL,OAAO;QAClB,CAAC,MAAM;UAAA,IAAAO,cAAA;UACL;UACAP,OAAO,GAAG,EAAAO,cAAA,GAACV,YAAY,CAASW,aAAa,cAAAD,cAAA,uBAAnCA,cAAA,CAAqCE,cAAc,KAAIT,OAAO;QAC1E;;QAEA;QACAvD,sBAAsB,CAACuD,OAAO,CAAC;QAC/BrD,oBAAoB,CAACgD,WAAW,CAAC;QACjC9C,oBAAoB,CAACgD,YAAY,CAAC;;QAElC;QACAa,2BAA2B,CAACf,WAAW,EAAEK,OAAO,CAAC;QAEjD1F,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE;UAC7C5C,KAAK,EAAEgI,WAAW;UAClBgB,UAAU,EAAE,CAAC,CAACX,OAAO;UACrBpC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC;QAEF7G,MAAM,CAAC2J,IAAI,CAAC,sCAAsC,EAAE;UAAEjJ,KAAK,EAAEgI;QAAY,CAAC,CAAC;QAE3ErF,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;UACzC5C,KAAK,EAAEgI,WAAW;UAClBI,OAAO,EAAE,IAAI;UACbc,WAAW,EAAE,CAAC,CAACb,OAAO;UACtBpC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC;MAEJ,CAAC,MAAM;QACL,MAAM,IAAIgD,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd9J,MAAM,CAAC8J,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC5CtE,sBAAsB,CAAC,qEAAqE,CAAC;MAC7FI,oBAAoB,CAAC,IAAI,CAAC;MAE1BvC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE;QACtC5C,KAAK,EAAEgI,WAAW;QAClBoB,KAAK,EAAEA,KAAK,CAAC9I,OAAO;QACpB2F,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,SAAS;MACRf,wBAAwB,CAAC,KAAK,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAMiE,gBAAgB,GAAIrJ,KAAa,IAAK;IAC1C2C,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE;MAAE5C;IAAM,CAAC,CAAC;IAC7D;IACA8E,sBAAsB,CAAC,EAAE,CAAC;IAC1BE,oBAAoB,CAAC,EAAE,CAAC;IACxBE,oBAAoB,CAAC,IAAI,CAAC;IAC1B;IACAlD,WAAW,CAAChC,KAAK,CAAC;EACpB,CAAC;;EAED;EACA,MAAM+I,2BAA2B,GAAGA,CAACO,WAAmB,EAAEC,gBAAwB,KAAK;IACrF5G,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;MAC3C0G,WAAW;MACXC,gBAAgB,EAAEA,gBAAgB,CAACvD,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK;MAC5DwD,iBAAiB,EAAE,CAAC,CAAEjF,MAAM,CAASkF,cAAc;MACnDxD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC,CAAC;IAEF,IAAK5B,MAAM,CAASkF,cAAc,EAAE;MACjClF,MAAM,CAASkF,cAAc,CAACH,WAAW,EAAEC,gBAAgB,CAAC;IAC/D,CAAC,MAAM;MACL5G,OAAO,CAACyG,KAAK,CAAC,oDAAoD,CAAC;IACrE;EACF,CAAC;;EAED;EACAzK,SAAS,CAAC,MAAM;IACdgE,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;MAC3CmC,iBAAiB;MACjB2E,aAAa,EAAE1J,KAAK;MACpB2J,sBAAsB,EAAE,CAAC,CAAC9E,mBAAmB;MAC7CM,qBAAqB;MACrByE,aAAa,EAAE,cAAc7E,iBAAiB,IAAI/E,KAAK,EAAE;MACzDiG,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACpB,iBAAiB,EAAEF,mBAAmB,EAAE7E,KAAK,EAAEmF,qBAAqB,CAAC,CAAC;;EAE1E;EACAxG,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,IAAI+E,iBAAiB,IAAI/E,KAAK,KAAK+E,iBAAiB,EAAE;MAC7DpC,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;MACpEkC,sBAAsB,CAAC,EAAE,CAAC;MAC1BE,oBAAoB,CAAC,EAAE,CAAC;MACxBE,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC,EAAE,CAAClF,KAAK,EAAE+E,iBAAiB,CAAC,CAAC;;EAE9B;EACApG,SAAS,CAAC,MAAM;IACdgE,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE;MAC9C5C,KAAK,EAAEA,KAAK;MACZiG,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,SAAS,EAAE,eAAe;MAC1BC,MAAM,EAAE,cAAc;MACtBpE,SAAS,EAAEA,SAAS;MACpBC,UAAU,EAAEA,UAAU;MACtB8G,UAAU,EAAE,CAAC,CAAClH,OAAO;MACrBwE,aAAa,EAAE,CAAAxE,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEiE,MAAM,KAAI,CAAC;MACnC8D,cAAc,EAAE,CAAC,CAACvH;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACtC,KAAK,EAAE8B,OAAO,EAAEG,SAAS,EAAEC,UAAU,EAAEI,WAAW,CAAC,CAAC;EAExD,oBACE9C,OAAA;IAAKsK,SAAS,EAAC,0BAA0B;IAACxI,KAAK,EAAE;MAC/CyI,SAAS,EAAE,OAAO;MAClBC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,yBAAyB;MACrCvE,QAAQ,EAAE;IACZ,CAAE;IAAA7E,QAAA,gBACAtB,OAAA;MAAK8B,KAAK,EAAE;QACV6I,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,IAAI;QACZC,eAAe,EAAE;MACnB,CAAE;MAAA1J,QAAA,eACAtB,OAAA,CAACL,MAAM;QACLsL,OAAO,EAAC,SAAS;QACjBC,SAAS,EAAE,IAAK;QAChBC,eAAe,EAAE,IAAK;QACtBC,cAAc,EAAE7C;MAAmB;QAAAtG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGL,CAACK,SAAS,IAAIkD,qBAAqB,kBAClC3F,OAAA,CAACJ,OAAO;MACNyL,OAAO,EAAE,IAAK;MACdC,KAAK,EAAC,sBAAsB;MAC5BC,QAAQ,EAAC,iCAAiC;MAC1CC,UAAU,EAAE;IAAK;MAAAvJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACF,eAGDpC,OAAA;MAAK8B,KAAK,EAAE;QACVyI,SAAS,EAAE,uCAAuC;QAClDpE,QAAQ,EAAE,QAAQ;QAClBsF,OAAO,EAAE5G,WAAW,IAAI,GAAG,GAAG,MAAM,GAAG,MAAM;QAC7CmG,eAAe,EAAE;MACnB,CAAE;MAAA1J,QAAA,EAEC8E,eAAe,gBACdpG,OAAA;QAAK8B,KAAK,EAAE;UACV0I,OAAO,EAAE,MAAM;UACfkB,mBAAmB,EAAE7G,WAAW,IAAI,GAAG,GAAG,KAAK,GAAII,UAAU,GAAG,KAAK,GAAG,SAAU;UAClF0G,gBAAgB,EAAE9G,WAAW,IAAI,GAAG,GAAG,WAAW,GAAG,KAAK;UAC1D+G,GAAG,EAAE,MAAM;UACXC,QAAQ,EAAE5G,UAAU,GAAG,QAAQ,GAAG,QAAQ;UAC1C6G,MAAM,EAAE,QAAQ;UAChBvB,SAAS,EAAE,8CAA8C;UAAE;UAC3DpE,QAAQ,EAAE,QAAQ;UAClBwE,QAAQ,EAAE;QACZ,CAAE;QAAArJ,QAAA,GAGC,CAAC2D,UAAU,iBACVjF,OAAA;UAAK8B,KAAK,EAAE;YACVkJ,eAAe,EAAE,OAAO;YACxBe,YAAY,EAAE,MAAM;YACpBC,MAAM,EAAE,mBAAmB;YAC3BC,SAAS,EAAE,8BAA8B;YACzCR,OAAO,EAAE5G,WAAW,IAAI,GAAG,GAAG,MAAM,GAAG,MAAM;YAC7C2F,OAAO,EAAE,MAAM;YACfC,aAAa,EAAE,QAAQ;YACvBtE,QAAQ,EAAE;UACZ,CAAE;UAAA7E,QAAA,eAGAtB,OAAA;YAAK8B,KAAK,EAAE;cAAEoK,IAAI,EAAE,CAAC;cAAE/F,QAAQ,EAAE,QAAQ;cAAEgG,MAAM,EAAE;YAAO,CAAE;YAAA7K,QAAA,eAC1DtB,OAAA,CAACT,UAAU;cACmB;cAC5B6M,MAAM,EAAE,IAAK;cACbC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;cAClB1H,cAAc,EAAEA,cAAe;cAC/B2H,MAAM,EAAE,IAAK;cACb9D,WAAW,EAAEhI,KAAM,CAAC;cAAA;cACpBgC,WAAW,EAAEqH,gBAAiB;cAC9B0C,YAAY,EAAEhD,2BAA4B;cAC1CiD,cAAc,EAAE,CAAC,CAAAC,iBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,kBAAA,KAAM;gBACrB;gBACA,IAAIC,iBAAiB,GAAG,EAAE;gBAC1B,IAAI/J,WAAW,aAAXA,WAAW,gBAAA2J,iBAAA,GAAX3J,WAAW,CAAEmG,IAAI,cAAAwD,iBAAA,gBAAAC,qBAAA,GAAjBD,iBAAA,CAAmBtD,WAAW,cAAAuD,qBAAA,eAA9BA,qBAAA,CAAgCxD,QAAQ,EAAE;kBAC5C2D,iBAAiB,GAAG/J,WAAW,CAACmG,IAAI,CAACE,WAAW,CAACD,QAAQ;gBAC3D,CAAC,MAAM,IAAIpG,WAAW,aAAXA,WAAW,gBAAA6J,kBAAA,GAAX7J,WAAW,CAAEmG,IAAI,cAAA0D,kBAAA,eAAjBA,kBAAA,CAAmBzD,QAAQ,EAAE;kBACtC2D,iBAAiB,GAAG/J,WAAW,CAACmG,IAAI,CAACC,QAAQ;gBAC/C,CAAC,MAAM;kBACL2D,iBAAiB,GAAGvK,OAAO;gBAC7B;gBAEAa,OAAO,CAACC,GAAG,CAAC,oEAAoE,EAAE;kBAChF5C,KAAK;kBACLqM,iBAAiB,EAAE,EAAAD,kBAAA,GAAAC,iBAAiB,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBpG,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,IAAG,KAAK;kBAC/D1D,WAAW,EAAE,CAAC,CAACA,WAAW;kBAC1BR,OAAO,EAAE,CAAC,CAACA;gBACb,CAAC,CAAC;gBAEF,OAAOuK,iBAAiB;cAC1B,CAAC,EAAE;YAAE,GA3BA,cAAcrM,KAAK,EAAE;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA4B3B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAGDpC,OAAA,CAACR,cAAc;UACb4M,MAAM,EAAEnH,UAAU,IAAIE,UAAW;UACjCkH,OAAO,EAAEA,CAAA,KAAMjH,aAAa,CAAC,KAAK,CAAE;UACpC0H,YAAY,EAAEtM,KAAM;UACpBuM,eAAe,EAAE,CAAC,CAAAC,kBAAA,EAAAC,qBAAA,EAAAC,kBAAA,KAAM;YACtB,IAAIL,iBAAiB,GAAG,EAAE;YAC1B,IAAI/J,WAAW,aAAXA,WAAW,gBAAAkK,kBAAA,GAAXlK,WAAW,CAAEmG,IAAI,cAAA+D,kBAAA,gBAAAC,qBAAA,GAAjBD,kBAAA,CAAmB7D,WAAW,cAAA8D,qBAAA,eAA9BA,qBAAA,CAAgC/D,QAAQ,EAAE;cAC5C2D,iBAAiB,GAAG/J,WAAW,CAACmG,IAAI,CAACE,WAAW,CAACD,QAAQ;YAC3D,CAAC,MAAM,IAAIpG,WAAW,aAAXA,WAAW,gBAAAoK,kBAAA,GAAXpK,WAAW,CAAEmG,IAAI,cAAAiE,kBAAA,eAAjBA,kBAAA,CAAmBhE,QAAQ,EAAE;cACtC2D,iBAAiB,GAAG/J,WAAW,CAACmG,IAAI,CAACC,QAAQ;YAC/C,CAAC,MAAM;cACL2D,iBAAiB,GAAGvK,OAAO;YAC7B;YACA,OAAOuK,iBAAiB;UAC1B,CAAC,EAAE;QAAE;UAAA5K,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGFpC,OAAA;UAAK8B,KAAK,EAAE;YACVkJ,eAAe,EAAE/F,UAAU,GAAG,SAAS,GAAG,SAAS;YACnD8G,YAAY,EAAE,MAAM;YACpBE,SAAS,EAAEhH,UAAU,GAAG,MAAM,GAAG,8BAA8B;YAC/D+G,MAAM,EAAE/G,UAAU,GAAG,MAAM,GAAG,mBAAmB;YACjDwG,OAAO,EAAExG,UAAU,GAAG,GAAG,GAAIJ,WAAW,IAAI,GAAG,GAAG,MAAM,GAAG,MAAO;YAClE2F,OAAO,EAAE,MAAM;YACfC,aAAa,EAAE,QAAQ;YACvBtE,QAAQ,EAAE,QAAQ;YAClBwE,QAAQ,EAAE;UACZ,CAAE;UAAArJ,QAAA,GAGC2D,UAAU,IAAI,CAACE,UAAU,iBACxBnF,OAAA;YACEmN,OAAO,EAAEA,CAAA,KAAM/H,aAAa,CAAC,IAAI,CAAE;YACnCtD,KAAK,EAAE;cACL6I,QAAQ,EAAE,OAAO;cACjByC,MAAM,EAAE,MAAM;cACdtC,KAAK,EAAE,MAAM;cACbuC,KAAK,EAAE,MAAM;cACblB,MAAM,EAAE,MAAM;cACdJ,YAAY,EAAE,KAAK;cACnBf,eAAe,EAAE,SAAS;cAC1BgB,MAAM,EAAE,MAAM;cACdC,SAAS,EAAE,oCAAoC;cAC/CqB,MAAM,EAAE,SAAS;cACjB9C,OAAO,EAAE,MAAM;cACf+C,UAAU,EAAE,QAAQ;cACpBC,cAAc,EAAE,QAAQ;cACxBC,QAAQ,EAAE,MAAM;cAChB1L,KAAK,EAAE,OAAO;cACdgJ,MAAM,EAAE,GAAG;cACX2C,UAAU,EAAE;YACd,CAAE;YACFC,YAAY,EAAGhG,CAAC,IAAK;cACnBA,CAAC,CAACiG,aAAa,CAAC9L,KAAK,CAAC+L,SAAS,GAAG,YAAY;cAC9ClG,CAAC,CAACiG,aAAa,CAAC9L,KAAK,CAACmK,SAAS,GAAG,oCAAoC;YACxE,CAAE;YACF6B,YAAY,EAAGnG,CAAC,IAAK;cACnBA,CAAC,CAACiG,aAAa,CAAC9L,KAAK,CAAC+L,SAAS,GAAG,UAAU;cAC5ClG,CAAC,CAACiG,aAAa,CAAC9L,KAAK,CAACmK,SAAS,GAAG,oCAAoC;YACxE,CAAE;YAAA3K,QAAA,EACH;UAED;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,EAEA6C,UAAU,gBACTjF,OAAA,CAACP,SAAS;YACRoF,WAAW,EAAEA,WAAY;YACzBoG,OAAO,EAAC,QAAQ;YAChB8C,gBAAgB,EAAGC,OAAO,IAAK7K,OAAO,CAACC,GAAG,CAAC,aAAa4K,OAAO,EAAE;UAAE;YAAA/L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpE,CAAC,gBAEFpC,OAAA,CAACN,sBAAsB;YACrBmF,WAAW,EAAEA,WAAY;YACzBrE,KAAK,EAAE+E,iBAAiB,IAAI/E,KAAM;YAClC8B,OAAO,EAAE+C,mBAAmB,IAAI/C,OAAQ;YACxCQ,WAAW,EAAE2C,iBAAiB,IAAI3C,WAAY;YAC9CJ,UAAU,EAAEA,UAAW;YACvBqL,gBAAgB,EAAGC,OAAO,IAAK7K,OAAO,CAACC,GAAG,CAAC,aAAa4K,OAAO,aAAa;UAAE;YAAA/L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,GAEN,CAACK,SAAS,IAAI,CAACgC,WAAW,iBACxBzE,OAAA;QAAK8B,KAAK,EAAE;UACV0I,OAAO,EAAE,MAAM;UACf+C,UAAU,EAAE,QAAQ;UACpBC,cAAc,EAAE,QAAQ;UACxBrB,MAAM,EAAE,MAAM;UACd8B,SAAS,EAAE,QAAQ;UACnBxC,OAAO,EAAE,MAAM;UACf1J,KAAK,EAAE;QACT,CAAE;QAAAT,QAAA,eACAtB,OAAA;UAAAsB,QAAA,EAAG;QAAwD;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAER;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNpC,OAAA,CAACV,gBAAgB;MACf8M,MAAM,EAAErI,iBAAkB;MAC1BsI,OAAO,EAAEA,CAAA,KAAMrI,oBAAoB,CAAC,KAAK,CAAE;MAC3CkK,kBAAkB,EAAE9F,sBAAuB;MAC3CkD,KAAK,EAAC,cAAc;MACpBC,QAAQ,EAAC;IAA4B;MAAAtJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAGFpC,OAAA;MAAAsB,QAAA,EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACY,EAAA,CA5zBIX,aAA2C;AAAA8L,EAAA,GAA3C9L,aAA2C;AA8zBjD,eAAeA,aAAa;AAAC,IAAA8L,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}