{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\ui\\\\ChatWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { chatService } from '../../services/chatService';\nimport '../../styles/VHealthSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Global conversation state to persist across component instances\nlet globalConversation = [];\nconst ChatWidget = ({\n  isOpen,\n  onClose,\n  searchQuery,\n  searchResponse,\n  currentContext,\n  inline = false,\n  onNewSearch\n}) => {\n  _s();\n  // Use global conversation state for persistence across navigation\n  const [messages, setMessages] = useState(globalConversation);\n\n  // Update global state whenever local messages change\n  useEffect(() => {\n    globalConversation = messages;\n  }, [messages]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isRequestInProgress = useRef(false); // Additional guard for rapid clicks\n  const lastSubmissionTime = useRef(0); // Track last submission time to prevent rapid duplicates\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const chatThreadRef = useRef(null);\n  const inputRef = useRef(null);\n  const initializationRef = useRef(''); // Track what query was used for initialization\n\n  // Cache measured heights so items retain size during prepend\n  const heightMap = useRef({});\n  const ro = useRef();\n  useEffect(() => {\n    ro.current = new ResizeObserver(entries => {\n      for (const e of entries) {\n        const id = e.target.dataset.id;\n        heightMap.current[id] = e.contentRect.height;\n      }\n    });\n    return () => {\n      var _ro$current;\n      return (_ro$current = ro.current) === null || _ro$current === void 0 ? void 0 : _ro$current.disconnect();\n    };\n  }, []);\n\n  // Attach observer to each rendered message\n  const observe = el => {\n    if (!el || !ro.current) return;\n    ro.current.observe(el);\n  };\n\n  // Keep auto-scrolling to bottom ONLY if user is near bottom\n  const scrollToBottomIfPinned = () => {\n    const el = chatThreadRef.current;\n    if (!el) return;\n    const nearBottom = el.scrollHeight - el.scrollTop - el.clientHeight < 120;\n    if (nearBottom) el.scrollTop = el.scrollHeight;\n  };\n\n  // Force scroll to bottom (for new user messages and responses)\n  const forceScrollToBottom = () => {\n    const el = chatThreadRef.current;\n    if (!el) return;\n    el.scrollTop = el.scrollHeight;\n  };\n\n  // Call this when appending a new message\n  const appendMessage = newMessage => {\n    setMessages(prev => [...prev, newMessage]);\n    // Force scroll for user messages and assistant responses, gentle scroll for others\n    if (newMessage.type === 'user' || newMessage.type === 'assistant') {\n      requestAnimationFrame(forceScrollToBottom);\n    } else {\n      requestAnimationFrame(scrollToBottomIfPinned);\n    }\n  };\n\n  // Scroll handler for loading older messages\n  const onScroll = () => {\n    const el = chatThreadRef.current;\n    if (!el) return;\n    if (el.scrollTop < 120) loadOlder();\n  };\n\n  // Load older messages with viewport anchoring\n  const loadOlder = async () => {\n    var _children$find, _anchor$getBoundingCl;\n    if (loadingMore || !hasMore || messages.length === 0) return;\n    const el = chatThreadRef.current;\n    if (!el) return;\n    setLoadingMore(true);\n\n    // 1) Pick an anchor element (first fully visible)\n    const children = Array.from(el.children);\n    const anchor = (_children$find = children.find(c => c.getBoundingClientRect().top >= el.getBoundingClientRect().top)) !== null && _children$find !== void 0 ? _children$find : children[0];\n    const anchorId = anchor === null || anchor === void 0 ? void 0 : anchor.dataset.id;\n    const anchorTopBefore = (_anchor$getBoundingCl = anchor === null || anchor === void 0 ? void 0 : anchor.getBoundingClientRect().top) !== null && _anchor$getBoundingCl !== void 0 ? _anchor$getBoundingCl : 0;\n\n    // 2) Freeze current heights so items \"retain their size\"\n    children.forEach(c => {\n      const id = c.dataset.id;\n      const h = heightMap.current[id] || c.getBoundingClientRect().height;\n      c.style.height = `${h}px`;\n    });\n\n    // 3) Simulate prepending older items (for now, just mark no more)\n    // In a real app, you'd fetch older messages here\n    setHasMore(false);\n\n    // 4) After DOM updates, restore the anchor position\n    requestAnimationFrame(() => {\n      var _newAnchor$getBoundin;\n      const newAnchor = anchorId ? Array.from(el.children).find(c => c.dataset.id === anchorId) : null;\n      const anchorTopAfter = (_newAnchor$getBoundin = newAnchor === null || newAnchor === void 0 ? void 0 : newAnchor.getBoundingClientRect().top) !== null && _newAnchor$getBoundin !== void 0 ? _newAnchor$getBoundin : 0;\n      const delta = anchorTopAfter - anchorTopBefore;\n      el.scrollTop += delta; // shift viewport up by the added height\n\n      // 5) Unfreeze heights (let new messages measure/observe)\n      Array.from(el.children).forEach(c => c.style.height = \"\");\n      setLoadingMore(false);\n    });\n  };\n\n  // Jump to bottom on first load only\n  const hasScrolledToBottom = useRef(false);\n  useEffect(() => {\n    if (messages.length > 0 && !hasScrolledToBottom.current) {\n      requestAnimationFrame(() => {\n        const el = chatThreadRef.current;\n        if (el) {\n          el.scrollTop = el.scrollHeight;\n          hasScrolledToBottom.current = true;\n        }\n      });\n    }\n  }, [messages.length]);\n\n  // Global message addition capability\n  useEffect(() => {\n    const addChatMessage = (userMessage, assistantMessage) => {\n      console.log('🔍 CHATWIDGET: External message addition', {\n        userMessage,\n        assistantMessage\n      });\n      const userMsg = {\n        id: Date.now().toString() + '-user',\n        type: 'user',\n        message: userMessage,\n        timestamp: new Date()\n      };\n      const aiMsg = {\n        id: Date.now().toString() + '-assistant',\n        type: 'assistant',\n        message: assistantMessage,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, userMsg, aiMsg]);\n    };\n\n    // Expose global function for external message addition\n    window.addChatMessage = addChatMessage;\n    return () => {\n      delete window.addChatMessage;\n    };\n  }, []);\n\n  // Initialize conversation with search results if provided\n  useEffect(() => {\n    // Prevent duplicate initialization - check if we've already processed this exact search\n    if (!searchQuery || !searchResponse) {\n      return;\n    }\n\n    // Check if we've already initialized with this exact search query\n    if (initializationRef.current === searchQuery) {\n      console.log('🔍 CHATWIDGET: Skipping duplicate initialization for:', searchQuery);\n      return;\n    }\n\n    // If this is a new search query (different from what we've processed), clear the session\n    if (initializationRef.current && initializationRef.current !== searchQuery) {\n      console.log('🔍 CHATWIDGET: New search detected, clearing session:', {\n        previous: initializationRef.current,\n        new: searchQuery\n      });\n      chatService.clearSession();\n    }\n    console.log('🔍 CHATWIDGET: Adding new search to conversation:', searchQuery);\n    {\n      // Create a conversational summary instead of full response\n      let conversationalSummary = searchResponse;\n\n      // Extract key points and make it conversational\n      if (searchResponse.includes('WIHY Health')) {\n        const lines = searchResponse.split('\\n').filter(line => line.trim());\n        const keyPoints = lines.filter(line => line.includes('•') || line.includes('-')).slice(0, 2).map(line => line.replace(/[•-]/g, '').trim()).join('. ');\n        conversationalSummary = keyPoints || 'I found some helpful information for you!';\n        conversationalSummary += ' What specific aspect would you like to explore further?';\n      }\n      const newMessages = [{\n        id: Date.now().toString() + '-user',\n        type: 'user',\n        message: searchQuery,\n        timestamp: new Date()\n      }, {\n        id: Date.now().toString() + '-assistant',\n        type: 'assistant',\n        message: conversationalSummary,\n        timestamp: new Date()\n      }];\n\n      // Append to existing conversation instead of replacing\n      setMessages(prevMessages => [...prevMessages, ...newMessages]);\n      initializationRef.current = searchQuery; // Mark this query as processed\n\n      console.log('🔍 CHATWIDGET: Added', newMessages.length, 'messages to conversation');\n    }\n  }, [searchQuery, searchResponse]);\n\n  // Focus input when chat opens\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      setTimeout(() => {\n        var _inputRef$current;\n        return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 100);\n    }\n  }, [isOpen]);\n  const handleSendMessage = async () => {\n    const messageText = inputMessage.trim();\n    if (!messageText || isLoading || isRequestInProgress.current) {\n      console.log('🔍 SEND BLOCKED:', {\n        hasMessage: !!messageText,\n        isLoading,\n        inProgress: isRequestInProgress.current\n      });\n      return; // Prevent multiple simultaneous sends\n    }\n\n    // Additional check: prevent duplicate messages by checking if the same message was just sent\n    const lastMessage = messages[messages.length - 1];\n    if (lastMessage && lastMessage.type === 'user' && lastMessage.message === messageText) {\n      console.log('🔍 DUPLICATE MESSAGE BLOCKED:', messageText);\n      return;\n    }\n\n    // Prevent rapid successive submissions (within 1 second)\n    const now = Date.now();\n    if (now - lastSubmissionTime.current < 1000) {\n      console.log('🔍 RAPID SUBMISSION BLOCKED:', {\n        timeDiff: now - lastSubmissionTime.current\n      });\n      return;\n    }\n    lastSubmissionTime.current = now;\n    const submissionId = Math.random().toString(36).substring(7);\n    console.log('🔍 Sending message:', messageText, 'ID:', submissionId);\n    setIsLoading(true); // Set loading immediately to block further sends\n    isRequestInProgress.current = true; // Additional blocking mechanism\n\n    // Clear conversation ID for fresh responses (prevent backend caching)\n    chatService.clearSession();\n    console.log('🔍 CHAT WIDGET: Cleared session for fresh conversation (every message)');\n    const userMessage = {\n      id: Date.now().toString() + '-user',\n      type: 'user',\n      message: messageText,\n      timestamp: new Date(),\n      context: currentContext\n    };\n    appendMessage(userMessage);\n    setInputMessage(''); // Clear input immediately\n\n    // Add thinking indicator after a brief delay to ensure user message is rendered\n    setTimeout(() => {\n      const thinkingMessage = {\n        id: Date.now().toString() + '-thinking',\n        type: 'assistant',\n        message: '🤔 Thinking...',\n        timestamp: new Date(),\n        isThinking: true\n      };\n      appendMessage(thinkingMessage);\n    }, 50);\n    try {\n      // Build conversation context from previous messages (keep it simple)\n      const conversationHistory = messages.slice(-4).map(msg => `${msg.type === 'user' ? 'User' : 'Assistant'}: ${msg.message}`).join('\\n');\n\n      // Include search results context if available\n      let searchContext = '';\n      if (searchResponse && typeof searchResponse === 'string' && searchResponse.trim()) {\n        searchContext = `\\n\\nSearch Results Context: ${searchResponse.substring(0, 500)}...`;\n      }\n\n      // Create a focused query for conversational responses with better context\n      const requestId = Date.now() + Math.random(); // Unique request identifier\n      let contextualQuery = `You are a health assistant. Please provide a brief, conversational response (2-3 sentences max) to the user's question: \"${userMessage.message}\"`;\n\n      // Only add search context for the first message in conversation to avoid repetition\n      const isFirstMessage = messages.length === 0;\n      if (isFirstMessage && searchContext && searchContext.trim()) {\n        contextualQuery += `\\n\\nRelevant search context: ${searchContext.replace('Search Results Context:', '').trim()}`;\n      }\n\n      // Add recent conversation history (max 2 previous exchanges)\n      if (conversationHistory && conversationHistory.trim()) {\n        const recentHistory = conversationHistory.split('\\n').slice(-4).join('\\n'); // Only last 2 exchanges\n        contextualQuery += `\\n\\nRecent conversation: ${recentHistory}`;\n      }\n      contextualQuery += `\\n\\nPlease respond as a helpful health assistant with a unique, fresh response. Request ID: ${requestId}`;\n      console.log('🔍 CHAT WIDGET: Sending contextual query:', contextualQuery.substring(0, 200) + '...');\n      console.log('🔍 CHAT WIDGET: Full context debug:', {\n        requestId,\n        userMessage: userMessage.message,\n        isFirstMessage,\n        hasConversationHistory: !!conversationHistory,\n        hasSearchContext: !!searchContext && isFirstMessage,\n        searchContextPreview: searchContext.substring(0, 100) + '...',\n        fullQueryLength: contextualQuery.length\n      });\n\n      // Use the chat service with simplified options\n      const response = await chatService.sendDirectMessage(contextualQuery);\n\n      // Debug: Log the actual response structure\n      console.log('🔍 CHAT WIDGET: Raw response received:', response);\n      console.log('🔍 CHAT WIDGET: Response type:', typeof response);\n      if (response && typeof response === 'object') {\n        console.log('🔍 CHAT WIDGET: Response keys:', Object.keys(response));\n        if (response.analysis) {\n          console.log('🔍 CHAT WIDGET: Analysis object:', response.analysis);\n          console.log('🔍 CHAT WIDGET: Analysis keys:', Object.keys(response.analysis));\n        }\n      }\n\n      // DO NOT trigger new search for chat messages - this causes navigation away from chat\n      // if (onNewSearch) {\n      //   onNewSearch(userMessage.message);\n      // }\n\n      // Extract and clean the response - handle dummy data gracefully\n      let aiResponse = '';\n      if (response && typeof response === 'object') {\n        var _analysis, _analysis2, _analysis2$recommenda;\n        // For /chat endpoint, prioritize analysis.summary\n        if ((_analysis = response.analysis) !== null && _analysis !== void 0 && _analysis.summary) {\n          aiResponse = response.analysis.summary;\n        }\n        // Handle recommendations array as secondary option\n        else if (((_analysis2 = response.analysis) === null || _analysis2 === void 0 ? void 0 : (_analysis2$recommenda = _analysis2.recommendations) === null || _analysis2$recommenda === void 0 ? void 0 : _analysis2$recommenda.length) > 0) {\n          aiResponse = response.analysis.recommendations[0];\n        }\n        // Handle standard ChatResponse format (response field)\n        else if (response.response) {\n          aiResponse = response.response;\n        }\n        // Handle ChatMessageResponse format  \n        else if (response.message) {\n          aiResponse = response.message;\n        }\n        // Fallback to raw JSON (what was causing the issue)\n        else {\n          console.warn('Unexpected response format:', response);\n          aiResponse = 'I received your message but had trouble formatting the response. Could you try asking in a different way?';\n        }\n      } else if (typeof response === 'string') {\n        aiResponse = response;\n      } else {\n        aiResponse = 'I apologize, but I encountered an issue processing your request. Could you please try again?';\n      }\n\n      // Since backend is returning dummy data, provide a better user experience\n      // Check if response looks like dummy/placeholder data\n      const isDummyData = aiResponse.includes('There is no cure') || aiResponse.includes('What is healthy?') || aiResponse.includes('We all have our health problems') || aiResponse.includes('for our society is determined') || aiResponse.includes('This is a common sentiment') || aiResponse.includes('We are not This reflects') || aiResponse.includes('In this is a restaurant') || aiResponse.includes('Religious practices') || aiResponse.includes('This is an answer is not only') || aiResponse.includes('What is healthy diet and healthy, but is not') || aiResponse.length < 20;\n      if (isDummyData) {\n        console.log('🔍 DUMMY DATA DETECTED:', aiResponse.substring(0, 100) + '...');\n        // Provide a helpful response based on the user's question\n        const userQuery = userMessage.message.toLowerCase();\n        if (userQuery.includes('healthy') || userQuery.includes('health')) {\n          aiResponse = \"Great question about health! Being healthy generally involves maintaining a balanced diet, regular exercise, adequate sleep, and managing stress. What specific aspect of health would you like to explore?\";\n        } else if (userQuery.includes('diet') || userQuery.includes('nutrition') || userQuery.includes('eat')) {\n          aiResponse = \"Nutrition is key to good health! A balanced diet with plenty of fruits, vegetables, whole grains, and lean proteins is important. Would you like tips on any specific dietary concerns?\";\n        } else if (userQuery.includes('exercise') || userQuery.includes('fitness')) {\n          aiResponse = \"Regular physical activity is essential for health! Aim for at least 150 minutes of moderate exercise per week. What type of activities interest you?\";\n        } else if (userQuery.includes('food')) {\n          aiResponse = \"I understand you need food guidance! Focus on whole, unprocessed foods like fruits, vegetables, lean proteins, and whole grains. What specific nutritional goals do you have?\";\n        } else {\n          aiResponse = \"I'm here to help with your health questions! The backend is currently in demo mode, but I can provide general guidance on nutrition, exercise, and wellness. What would you like to know?\";\n        }\n        console.log('🔍 REPLACED WITH HELPFUL RESPONSE:', aiResponse);\n      } else {\n        console.log('🔍 USING BACKEND RESPONSE (not dummy):', aiResponse.substring(0, 100) + '...');\n        // Clean up the response to be more conversational\n        aiResponse = aiResponse.replace(/🥗.*?\\*\\*/g, '') // Remove emoji headers\n        .replace(/\\*\\*.*?\\*\\*/g, '') // Remove bold formatting\n        .replace(/📋.*?:/g, '') // Remove section headers\n        .replace(/•/g, '-') // Replace bullets\n        .split('\\n').filter(line => line.trim() && !line.includes('Biblical') && !line.includes('Corinthians')).slice(0, 3) // Take first 3 meaningful lines\n        .join(' ').trim();\n\n        // If response is too long, truncate and add follow-up prompt\n        if (aiResponse.length > 200) {\n          aiResponse = aiResponse.substring(0, 200).trim() + '... What would you like to know more about?';\n        }\n      }\n      const aiMessage = {\n        id: Date.now().toString() + '-assistant',\n        type: 'assistant',\n        message: aiResponse,\n        timestamp: new Date()\n      };\n\n      // Replace the thinking message with the actual response\n      setMessages(prev => {\n        const newMessages = [...prev];\n        // Find and replace the thinking message using isThinking flag\n        // Work backwards to find the last thinking message\n        for (let i = newMessages.length - 1; i >= 0; i--) {\n          if (newMessages[i].isThinking && newMessages[i].type === 'assistant') {\n            newMessages[i] = aiMessage;\n            break;\n          }\n        }\n        return newMessages;\n      });\n\n      // Force scroll to bottom after response is received\n      setTimeout(() => forceScrollToBottom(), 100);\n      console.log('✅ Message processed successfully');\n\n      // Restore focus to input for continuous conversation\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 100);\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage = {\n        id: Date.now().toString() + '-assistant',\n        type: 'assistant',\n        message: \"I'm having trouble connecting right now. Please try again in a moment.\",\n        timestamp: new Date()\n      };\n\n      // Replace the thinking message with the error message\n      setMessages(prev => {\n        const newMessages = [...prev];\n        // Find and replace the thinking message using isThinking flag\n        // Work backwards to find the last thinking message\n        for (let i = newMessages.length - 1; i >= 0; i--) {\n          if (newMessages[i].isThinking && newMessages[i].type === 'assistant') {\n            newMessages[i] = errorMessage;\n            break;\n          }\n        }\n        return newMessages;\n      });\n\n      // Force scroll to bottom after error message\n      setTimeout(() => forceScrollToBottom(), 100);\n    } finally {\n      setIsLoading(false);\n      isRequestInProgress.current = false; // Reset progress flag\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const formatTime = date => {\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      backgroundColor: 'white',\n      fontFamily: 'system-ui, -apple-system, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '20px 16px 16px 16px',\n        borderBottom: '1px solid #f3f4f6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 0,\n          fontSize: '20px',\n          fontWeight: '600',\n          color: '#1f2937'\n        },\n        children: \"WiHy Health Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '12px',\n          color: '#6b7280',\n          backgroundColor: '#f3f4f6',\n          padding: '4px 8px',\n          borderRadius: '4px'\n        },\n        children: \"AI-Powered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatThreadRef,\n      className: \"chat-thread\",\n      onScroll: onScroll,\n      style: {\n        height: 'calc(100vh - 240px)',\n        // Fixed height based on viewport\n        overflowY: 'auto',\n        overscrollBehavior: 'contain',\n        // Prevent body scroll chaining\n        scrollBehavior: 'smooth',\n        // Nice bottom scroll on new msg\n        padding: '12px 16px',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: [loadingMore && hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          padding: \"6px 0\"\n        },\n        children: \"Loading\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this), messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px 20px',\n          color: '#64748b'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '48px',\n            marginBottom: '16px',\n            opacity: 0.3\n          },\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            fontWeight: '500',\n            marginBottom: '8px'\n          },\n          children: \"Start a health conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#94a3b8'\n          },\n          children: \"Ask any health question to begin learning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-id\": message.id,\n        className: \"chat-message\",\n        ref: observe,\n        style: {\n          flex: '0 0 auto',\n          // Don't shrink or stretch\n          overflow: 'visible',\n          // Important: no nested scrollbars\n          maxHeight: 'none',\n          // Remove any fixed max-height\n          display: 'flex',\n          flexDirection: message.type === 'user' ? 'row-reverse' : 'row',\n          gap: '10px',\n          padding: '10px 0',\n          alignItems: 'flex-start',\n          contain: 'content' // Micro-optimization\n        },\n        children: [message.type === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '28px',\n            height: '28px',\n            borderRadius: '50%',\n            backgroundColor: '#10b981',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: 'white',\n            fontSize: '12px',\n            fontWeight: 'bold',\n            flexShrink: 0\n          },\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/wihyfavicon.png\",\n          alt: \"WiHy\",\n          style: {\n            width: '28px',\n            height: '28px',\n            borderRadius: '50%',\n            border: '1px solid #e5e7eb',\n            backgroundColor: 'white',\n            padding: '2px',\n            flexShrink: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: '75%',\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bubble\",\n            style: {\n              backgroundColor: message.type === 'user' ? '#10b981' : '#f3f4f6',\n              color: message.type === 'user' ? 'white' : '#1f2937',\n              padding: '12px 16px',\n              borderRadius: message.type === 'user' ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\n              fontSize: '14px',\n              lineHeight: '1.4',\n              overflow: 'visible',\n              // Clean pattern: no bubble scrolling\n              whiteSpace: 'pre-wrap',\n              overflowWrap: 'anywhere' // Handle super-long tokens/URLs\n            },\n            children: message.isThinking ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '2px',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83E\\uDD14 Thinking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"thinking-dots\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \".\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \".\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \".\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 21\n            }, this) : message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '11px',\n              color: '#9ca3af',\n              textAlign: message.type === 'user' ? 'right' : 'left',\n              paddingLeft: message.type === 'user' ? '0' : '16px',\n              paddingRight: message.type === 'user' ? '16px' : '0'\n            },\n            children: [formatTime(message.timestamp), message.context && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '8px',\n                fontStyle: 'italic'\n              },\n              children: [\"\\u2022 viewing \", message.context]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 13\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/wihyfavicon.png\",\n          alt: \"WiHy\",\n          style: {\n            width: '28px',\n            height: '28px',\n            borderRadius: '50%',\n            border: '1px solid #e5e7eb',\n            backgroundColor: 'white',\n            padding: '2px',\n            flexShrink: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f3f4f6',\n            padding: '12px 16px',\n            borderRadius: '18px 18px 18px 4px',\n            display: 'flex',\n            gap: '4px',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '6px',\n              height: '6px',\n              borderRadius: '50%',\n              backgroundColor: '#9ca3af',\n              animation: 'typing 1.5s ease-in-out infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '6px',\n              height: '6px',\n              borderRadius: '50%',\n              backgroundColor: '#9ca3af',\n              animation: 'typing 1.5s ease-in-out infinite 0.2s'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '6px',\n              height: '6px',\n              borderRadius: '50%',\n              backgroundColor: '#9ca3af',\n              animation: 'typing 1.5s ease-in-out infinite 0.4s'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-input-container chat-input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            className: \"search-input\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: isLoading ? \"Processing...\" : \"Ask about your health data...\",\n            rows: 1,\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputMessage.trim() || isLoading,\n          className: `send-button ${!inputMessage.trim() || isLoading ? 'disabled' : 'active'}`,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '16px',\n              height: '16px',\n              border: '2px solid #ffffff',\n              borderTop: '2px solid transparent',\n              borderRadius: '50%',\n              animation: 'spin 1s linear infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes typing {\n          0%, 60%, 100% {\n            transform: translateY(0);\n            opacity: 0.4;\n          }\n          30% {\n            transform: translateY(-10px);\n            opacity: 1;\n          }\n        }\n\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n\n        /* The ONLY scroller - Hide scrollbar but keep functionality */\n        .chat-thread {\n          height: calc(100vh - 240px);    /* adjust for your header/input */\n          overflow-y: auto;\n          overscroll-behavior: contain;\n          scrollbar-width: none; /* Firefox */\n          -ms-overflow-style: none; /* Internet Explorer 10+ */\n        }\n\n        /* Hide scrollbar for WebKit browsers */\n        .chat-thread::-webkit-scrollbar {\n          display: none;\n        }\n\n        /* Each message keeps its size and never creates its own scrollbar */\n        .chat-message {\n          flex: 0 0 auto;                 /* don't shrink or stretch */\n          overflow: visible;              /* prevent inner scrollbars */\n          max-height: none;\n          padding: 10px 0;\n        }\n\n        /* Long text wraps (no overflow) */\n        .chat-message .bubble {\n          white-space: pre-wrap;\n          overflow-wrap: anywhere;\n        }\n\n        /* Kill any legacy scrollbars on messages */\n        .chat-message::-webkit-scrollbar {\n          display: none;\n        }\n\n        .chat-message {\n          scrollbar-width: none;\n          -ms-overflow-style: none;\n        }\n\n        /* Chat-specific input area styling */\n        .chat-input-area {\n          padding: 16px;\n          border-top: 1px solid #ffffff;\n          background-color: #ffffff; /* Pure white background */\n        }\n\n        /* Wrapper for input and button positioning */\n        .chat-input-wrapper {\n          position: relative;\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        /* Chat input container - Simple solid styling for chat */\n        .chat-input-container {\n          width: 100% !important; /* Override the 80% width for chat context */\n          margin: 0 !important; /* Override auto margins for flexbox */\n          flex: 1; /* Allow it to grow in flexbox */\n          /* Override animated styles with solid styling */\n          background: #ffffff !important;\n          border: 2px solid #fa5f06 !important;\n          border-radius: 28px !important;\n          box-shadow: 0 2px 8px rgba(250, 95, 6, 0.1) !important;\n          animation: none !important;\n          padding: 4px;\n        }\n\n        /* Chat input overrides */\n        .chat-input-container .search-input {\n          resize: none;\n          min-height: 20px;\n          max-height: 80px;\n          padding-right: 16px;\n          background-color: #ffffff !important; /* Ensure pure white background */\n        }\n\n        /* Send button styling - now positioned outside animated container */\n        .send-button {\n          position: relative;\n          right: auto;\n          top: auto;\n          transform: none;\n          color: white;\n          border: none;\n          border-radius: 12px;\n          padding: 12px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: background-color 0.2s ease;\n          flex-shrink: 0;\n          min-width: 44px;\n          height: 44px;\n        }\n\n        .send-button.active {\n          background-color: #1a73e8;\n          cursor: pointer;\n        }\n\n        .send-button.disabled {\n          background-color: #d1d5db;\n          cursor: not-allowed;\n        }\n\n        /* Thinking dots animation */\n        .thinking-dots {\n          display: inline-flex;\n          gap: 1px;\n        }\n\n        .thinking-dots span {\n          animation: thinking 1.4s infinite ease-in-out;\n          opacity: 0.4;\n        }\n\n        .thinking-dots span:nth-child(1) {\n          animation-delay: 0s;\n        }\n\n        .thinking-dots span:nth-child(2) {\n          animation-delay: 0.2s;\n        }\n\n        .thinking-dots span:nth-child(3) {\n          animation-delay: 0.4s;\n        }\n\n        @keyframes thinking {\n          0%, 80%, 100% {\n            opacity: 0.4;\n          }\n          40% {\n            opacity: 1;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 537,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWidget, \"oDU7/GzZeyRAiDHWojuAyTZB6to=\");\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","useRef","useEffect","chatService","jsxDEV","_jsxDEV","globalConversation","ChatWidget","isOpen","onClose","searchQuery","searchResponse","currentContext","inline","onNewSearch","_s","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","isRequestInProgress","lastSubmissionTime","hasMore","setHasMore","loadingMore","setLoadingMore","chatThreadRef","inputRef","initializationRef","heightMap","ro","current","ResizeObserver","entries","e","id","target","dataset","contentRect","height","_ro$current","disconnect","observe","el","scrollToBottomIfPinned","nearBottom","scrollHeight","scrollTop","clientHeight","forceScrollToBottom","appendMessage","newMessage","prev","type","requestAnimationFrame","onScroll","loadOlder","_children$find","_anchor$getBoundingCl","length","children","Array","from","anchor","find","c","getBoundingClientRect","top","anchorId","anchorTopBefore","forEach","h","style","_newAnchor$getBoundin","newAnchor","anchorTopAfter","delta","hasScrolledToBottom","addChatMessage","userMessage","assistantMessage","console","log","userMsg","Date","now","toString","message","timestamp","aiMsg","window","previous","new","clearSession","conversationalSummary","includes","lines","split","filter","line","trim","keyPoints","slice","map","replace","join","newMessages","prevMessages","setTimeout","_inputRef$current","focus","handleSendMessage","messageText","hasMessage","inProgress","lastMessage","timeDiff","submissionId","Math","random","substring","context","thinkingMessage","isThinking","conversationHistory","msg","searchContext","requestId","contextualQuery","isFirstMessage","recentHistory","hasConversationHistory","hasSearchContext","searchContextPreview","fullQueryLength","response","sendDirectMessage","Object","keys","analysis","aiResponse","_analysis","_analysis2","_analysis2$recommenda","summary","recommendations","warn","isDummyData","userQuery","toLowerCase","aiMessage","i","error","errorMessage","handleKeyPress","key","shiftKey","preventDefault","formatTime","date","toLocaleTimeString","hour","minute","display","flexDirection","backgroundColor","fontFamily","alignItems","justifyContent","padding","borderBottom","margin","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","borderRadius","ref","className","overflowY","overscrollBehavior","scrollBehavior","gap","textAlign","marginBottom","opacity","flex","overflow","maxHeight","contain","width","flexShrink","src","alt","border","maxWidth","lineHeight","whiteSpace","overflowWrap","paddingLeft","paddingRight","marginLeft","fontStyle","animation","value","onChange","onKeyPress","placeholder","rows","disabled","onClick","borderTop","viewBox","fill","d","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/ui/ChatWidget.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { chatService } from '../../services/chatService';\r\nimport '../../styles/VHealthSearch.css';\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  type: 'user' | 'assistant';\r\n  message: string;\r\n  timestamp: Date;\r\n  context?: string;\r\n  isThinking?: boolean;\r\n}\r\n\r\ninterface ChatWidgetProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  searchQuery?: string;\r\n  searchResponse?: string;\r\n  currentContext?: string; // Current dashboard section being viewed\r\n  inline?: boolean; // Whether to render inline or as fixed overlay\r\n  onNewSearch?: (query: string) => void; // Callback to update main content\r\n  onAddMessage?: (userMessage: string, assistantMessage: string) => void; // Callback to add new messages externally\r\n}\r\n\r\n// Global conversation state to persist across component instances\r\nlet globalConversation: ChatMessage[] = [];\r\n\r\nconst ChatWidget: React.FC<ChatWidgetProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  searchQuery,\r\n  searchResponse,\r\n  currentContext,\r\n  inline = false,\r\n  onNewSearch\r\n}) => {\r\n  // Use global conversation state for persistence across navigation\r\n  const [messages, setMessages] = useState<ChatMessage[]>(globalConversation);\r\n  \r\n  // Update global state whenever local messages change\r\n  useEffect(() => {\r\n    globalConversation = messages;\r\n  }, [messages]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const isRequestInProgress = useRef(false); // Additional guard for rapid clicks\r\n  const lastSubmissionTime = useRef(0); // Track last submission time to prevent rapid duplicates\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const chatThreadRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLTextAreaElement>(null);\r\n  const initializationRef = useRef<string>(''); // Track what query was used for initialization\r\n\r\n  // Cache measured heights so items retain size during prepend\r\n  const heightMap = useRef<Record<string, number>>({});\r\n  const ro = useRef<ResizeObserver>();\r\n\r\n  useEffect(() => {\r\n    ro.current = new ResizeObserver(entries => {\r\n      for (const e of entries) {\r\n        const id = (e.target as HTMLElement).dataset.id!;\r\n        heightMap.current[id] = e.contentRect.height;\r\n      }\r\n    });\r\n    return () => ro.current?.disconnect();\r\n  }, []);\r\n\r\n  // Attach observer to each rendered message\r\n  const observe = (el: HTMLDivElement | null) => {\r\n    if (!el || !ro.current) return;\r\n    ro.current.observe(el);\r\n  };\r\n\r\n  // Keep auto-scrolling to bottom ONLY if user is near bottom\r\n  const scrollToBottomIfPinned = () => {\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n    const nearBottom = el.scrollHeight - el.scrollTop - el.clientHeight < 120;\r\n    if (nearBottom) el.scrollTop = el.scrollHeight;\r\n  };\r\n\r\n  // Force scroll to bottom (for new user messages and responses)\r\n  const forceScrollToBottom = () => {\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n    el.scrollTop = el.scrollHeight;\r\n  };\r\n\r\n  // Call this when appending a new message\r\n  const appendMessage = (newMessage: ChatMessage) => {\r\n    setMessages(prev => [...prev, newMessage]);\r\n    // Force scroll for user messages and assistant responses, gentle scroll for others\r\n    if (newMessage.type === 'user' || newMessage.type === 'assistant') {\r\n      requestAnimationFrame(forceScrollToBottom);\r\n    } else {\r\n      requestAnimationFrame(scrollToBottomIfPinned);\r\n    }\r\n  };\r\n\r\n  // Scroll handler for loading older messages\r\n  const onScroll = () => {\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n    if (el.scrollTop < 120) loadOlder();\r\n  };\r\n\r\n  // Load older messages with viewport anchoring\r\n  const loadOlder = async () => {\r\n    if (loadingMore || !hasMore || messages.length === 0) return;\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n\r\n    setLoadingMore(true);\r\n\r\n    // 1) Pick an anchor element (first fully visible)\r\n    const children = Array.from(el.children) as HTMLElement[];\r\n    const anchor =\r\n      children.find(c => c.getBoundingClientRect().top >= el.getBoundingClientRect().top) ??  \r\n      (children[0] as HTMLElement);\r\n\r\n    const anchorId = anchor?.dataset.id;\r\n    const anchorTopBefore = anchor?.getBoundingClientRect().top ?? 0;\r\n\r\n    // 2) Freeze current heights so items \"retain their size\"\r\n    children.forEach(c => {\r\n      const id = (c as HTMLElement).dataset.id!;\r\n      const h = heightMap.current[id] || c.getBoundingClientRect().height;\r\n      (c as HTMLElement).style.height = `${h}px`;\r\n    });\r\n\r\n    // 3) Simulate prepending older items (for now, just mark no more)\r\n    // In a real app, you'd fetch older messages here\r\n    setHasMore(false);\r\n\r\n    // 4) After DOM updates, restore the anchor position\r\n    requestAnimationFrame(() => {\r\n      const newAnchor = anchorId\r\n        ? (Array.from(el.children).find(c => (c as HTMLElement).dataset.id === anchorId) as HTMLElement)\r\n        : null;\r\n\r\n      const anchorTopAfter = newAnchor?.getBoundingClientRect().top ?? 0;\r\n      const delta = anchorTopAfter - anchorTopBefore;\r\n      el.scrollTop += delta; // shift viewport up by the added height\r\n\r\n      // 5) Unfreeze heights (let new messages measure/observe)\r\n      Array.from(el.children).forEach(c => ((c as HTMLElement).style.height = \"\"));\r\n      setLoadingMore(false);\r\n    });\r\n  };\r\n\r\n  // Jump to bottom on first load only\r\n  const hasScrolledToBottom = useRef(false);\r\n  useEffect(() => {\r\n    if (messages.length > 0 && !hasScrolledToBottom.current) {\r\n      requestAnimationFrame(() => {\r\n        const el = chatThreadRef.current;\r\n        if (el) {\r\n          el.scrollTop = el.scrollHeight;\r\n          hasScrolledToBottom.current = true;\r\n        }\r\n      });\r\n    }\r\n  }, [messages.length]);\r\n\r\n  // Global message addition capability\r\n  useEffect(() => {\r\n    const addChatMessage = (userMessage: string, assistantMessage: string) => {\r\n      console.log('🔍 CHATWIDGET: External message addition', { userMessage, assistantMessage });\r\n      \r\n      const userMsg: ChatMessage = {\r\n        id: Date.now().toString() + '-user',\r\n        type: 'user',\r\n        message: userMessage,\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const aiMsg: ChatMessage = {\r\n        id: Date.now().toString() + '-assistant',\r\n        type: 'assistant',\r\n        message: assistantMessage,\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, userMsg, aiMsg]);\r\n    };\r\n\r\n    // Expose global function for external message addition\r\n    (window as any).addChatMessage = addChatMessage;\r\n\r\n    return () => {\r\n      delete (window as any).addChatMessage;\r\n    };\r\n  }, []);\r\n\r\n  // Initialize conversation with search results if provided\r\n  useEffect(() => {\r\n    // Prevent duplicate initialization - check if we've already processed this exact search\r\n    if (!searchQuery || !searchResponse) {\r\n      return;\r\n    }\r\n\r\n    // Check if we've already initialized with this exact search query\r\n    if (initializationRef.current === searchQuery) {\r\n      console.log('🔍 CHATWIDGET: Skipping duplicate initialization for:', searchQuery);\r\n      return;\r\n    }\r\n\r\n    // If this is a new search query (different from what we've processed), clear the session\r\n    if (initializationRef.current && initializationRef.current !== searchQuery) {\r\n      console.log('🔍 CHATWIDGET: New search detected, clearing session:', { previous: initializationRef.current, new: searchQuery });\r\n      chatService.clearSession();\r\n    }\r\n\r\n    console.log('🔍 CHATWIDGET: Adding new search to conversation:', searchQuery);\r\n\r\n    {\r\n      // Create a conversational summary instead of full response\r\n      let conversationalSummary = searchResponse;\r\n\r\n      // Extract key points and make it conversational\r\n      if (searchResponse.includes('WIHY Health')) {\r\n        const lines = searchResponse.split('\\n').filter(line => line.trim());\r\n        const keyPoints = lines\r\n          .filter(line => line.includes('•') || line.includes('-'))\r\n          .slice(0, 2)\r\n          .map(line => line.replace(/[•-]/g, '').trim())\r\n          .join('. ');\r\n\r\n        conversationalSummary = keyPoints || 'I found some helpful information for you!';\r\n        conversationalSummary += ' What specific aspect would you like to explore further?';\r\n      }\r\n\r\n      const newMessages: ChatMessage[] = [\r\n        {\r\n          id: Date.now().toString() + '-user',\r\n          type: 'user',\r\n          message: searchQuery,\r\n          timestamp: new Date()\r\n        },\r\n        {\r\n          id: Date.now().toString() + '-assistant',\r\n          type: 'assistant',\r\n          message: conversationalSummary,\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n\r\n      // Append to existing conversation instead of replacing\r\n      setMessages(prevMessages => [...prevMessages, ...newMessages]);\r\n      initializationRef.current = searchQuery; // Mark this query as processed\r\n\r\n      console.log('🔍 CHATWIDGET: Added', newMessages.length, 'messages to conversation');\r\n    }\r\n  }, [searchQuery, searchResponse]);\r\n\r\n  // Focus input when chat opens\r\n  useEffect(() => {\r\n    if (isOpen && inputRef.current) {\r\n      setTimeout(() => inputRef.current?.focus(), 100);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSendMessage = async () => {\r\n    const messageText = inputMessage.trim();\r\n    if (!messageText || isLoading || isRequestInProgress.current) {\r\n      console.log('🔍 SEND BLOCKED:', { hasMessage: !!messageText, isLoading, inProgress: isRequestInProgress.current });\r\n      return; // Prevent multiple simultaneous sends\r\n    }\r\n\r\n    // Additional check: prevent duplicate messages by checking if the same message was just sent\r\n    const lastMessage = messages[messages.length - 1];\r\n    if (lastMessage && lastMessage.type === 'user' && lastMessage.message === messageText) {\r\n      console.log('🔍 DUPLICATE MESSAGE BLOCKED:', messageText);\r\n      return;\r\n    }\r\n\r\n    // Prevent rapid successive submissions (within 1 second)\r\n    const now = Date.now();\r\n    if (now - lastSubmissionTime.current < 1000) {\r\n      console.log('🔍 RAPID SUBMISSION BLOCKED:', { timeDiff: now - lastSubmissionTime.current });\r\n      return;\r\n    }\r\n    lastSubmissionTime.current = now;\r\n\r\n    const submissionId = Math.random().toString(36).substring(7);\r\n    console.log('🔍 Sending message:', messageText, 'ID:', submissionId);\r\n    setIsLoading(true); // Set loading immediately to block further sends\r\n    isRequestInProgress.current = true; // Additional blocking mechanism\r\n\r\n    // Clear conversation ID for fresh responses (prevent backend caching)\r\n    chatService.clearSession();\r\n    console.log('🔍 CHAT WIDGET: Cleared session for fresh conversation (every message)');\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString() + '-user',\r\n      type: 'user',\r\n      message: messageText,\r\n      timestamp: new Date(),\r\n      context: currentContext\r\n    };\r\n\r\n    appendMessage(userMessage);\r\n    setInputMessage(''); // Clear input immediately\r\n\r\n    // Add thinking indicator after a brief delay to ensure user message is rendered\r\n    setTimeout(() => {\r\n      const thinkingMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-thinking',\r\n        type: 'assistant',\r\n        message: '🤔 Thinking...',\r\n        timestamp: new Date(),\r\n        isThinking: true\r\n      };\r\n      appendMessage(thinkingMessage);\r\n    }, 50);\r\n\r\n    try {\r\n      // Build conversation context from previous messages (keep it simple)\r\n      const conversationHistory = messages.slice(-4)\r\n        .map(msg => `${msg.type === 'user' ? 'User' : 'Assistant'}: ${msg.message}`)\r\n        .join('\\n');\r\n\r\n      // Include search results context if available\r\n      let searchContext = '';\r\n      if (searchResponse && typeof searchResponse === 'string' && searchResponse.trim()) {\r\n        searchContext = `\\n\\nSearch Results Context: ${searchResponse.substring(0, 500)}...`;\r\n      }\r\n\r\n      // Create a focused query for conversational responses with better context\r\n      const requestId = Date.now() + Math.random(); // Unique request identifier\r\n      let contextualQuery = `You are a health assistant. Please provide a brief, conversational response (2-3 sentences max) to the user's question: \"${userMessage.message}\"`;\r\n      \r\n      // Only add search context for the first message in conversation to avoid repetition\r\n      const isFirstMessage = messages.length === 0;\r\n      if (isFirstMessage && searchContext && searchContext.trim()) {\r\n        contextualQuery += `\\n\\nRelevant search context: ${searchContext.replace('Search Results Context:', '').trim()}`;\r\n      }\r\n      \r\n      // Add recent conversation history (max 2 previous exchanges)\r\n      if (conversationHistory && conversationHistory.trim()) {\r\n        const recentHistory = conversationHistory.split('\\n').slice(-4).join('\\n'); // Only last 2 exchanges\r\n        contextualQuery += `\\n\\nRecent conversation: ${recentHistory}`;\r\n      }\r\n      \r\n      contextualQuery += `\\n\\nPlease respond as a helpful health assistant with a unique, fresh response. Request ID: ${requestId}`;\r\n\r\n      console.log('🔍 CHAT WIDGET: Sending contextual query:', contextualQuery.substring(0, 200) + '...');\r\n      console.log('🔍 CHAT WIDGET: Full context debug:', {\r\n        requestId,\r\n        userMessage: userMessage.message,\r\n        isFirstMessage,\r\n        hasConversationHistory: !!conversationHistory,\r\n        hasSearchContext: !!searchContext && isFirstMessage,\r\n        searchContextPreview: searchContext.substring(0, 100) + '...',\r\n        fullQueryLength: contextualQuery.length\r\n      });\r\n\r\n      // Use the chat service with simplified options\r\n      const response = await chatService.sendDirectMessage(contextualQuery);\r\n\r\n      // Debug: Log the actual response structure\r\n      console.log('🔍 CHAT WIDGET: Raw response received:', response);\r\n      console.log('🔍 CHAT WIDGET: Response type:', typeof response);\r\n      if (response && typeof response === 'object') {\r\n        console.log('🔍 CHAT WIDGET: Response keys:', Object.keys(response));\r\n        if ((response as any).analysis) {\r\n          console.log('🔍 CHAT WIDGET: Analysis object:', (response as any).analysis);\r\n          console.log('🔍 CHAT WIDGET: Analysis keys:', Object.keys((response as any).analysis));\r\n        }\r\n      }\r\n\r\n      // DO NOT trigger new search for chat messages - this causes navigation away from chat\r\n      // if (onNewSearch) {\r\n      //   onNewSearch(userMessage.message);\r\n      // }\r\n\r\n      // Extract and clean the response - handle dummy data gracefully\r\n      let aiResponse = '';\r\n      if (response && typeof response === 'object') {\r\n        // For /chat endpoint, prioritize analysis.summary\r\n        if ((response as any).analysis?.summary) {\r\n          aiResponse = (response as any).analysis.summary;\r\n        }\r\n        // Handle recommendations array as secondary option\r\n        else if ((response as any).analysis?.recommendations?.length > 0) {\r\n          aiResponse = (response as any).analysis.recommendations[0];\r\n        }\r\n        // Handle standard ChatResponse format (response field)\r\n        else if (response.response) {\r\n          aiResponse = response.response;\r\n        }\r\n        // Handle ChatMessageResponse format  \r\n        else if (response.message) {\r\n          aiResponse = response.message;\r\n        }\r\n        // Fallback to raw JSON (what was causing the issue)\r\n        else {\r\n          console.warn('Unexpected response format:', response);\r\n          aiResponse = 'I received your message but had trouble formatting the response. Could you try asking in a different way?';\r\n        }\r\n      } else if (typeof response === 'string') {\r\n        aiResponse = response;\r\n      } else {\r\n        aiResponse = 'I apologize, but I encountered an issue processing your request. Could you please try again?';\r\n      }\r\n\r\n      // Since backend is returning dummy data, provide a better user experience\r\n      // Check if response looks like dummy/placeholder data\r\n      const isDummyData = aiResponse.includes('There is no cure') || \r\n                         aiResponse.includes('What is healthy?') ||\r\n                         aiResponse.includes('We all have our health problems') ||\r\n                         aiResponse.includes('for our society is determined') ||\r\n                         aiResponse.includes('This is a common sentiment') ||\r\n                         aiResponse.includes('We are not This reflects') ||\r\n                         aiResponse.includes('In this is a restaurant') ||\r\n                         aiResponse.includes('Religious practices') ||\r\n                         aiResponse.includes('This is an answer is not only') ||\r\n                         aiResponse.includes('What is healthy diet and healthy, but is not') ||\r\n                         aiResponse.length < 20;\r\n\r\n      if (isDummyData) {\r\n        console.log('🔍 DUMMY DATA DETECTED:', aiResponse.substring(0, 100) + '...');\r\n        // Provide a helpful response based on the user's question\r\n        const userQuery = userMessage.message.toLowerCase();\r\n        if (userQuery.includes('healthy') || userQuery.includes('health')) {\r\n          aiResponse = \"Great question about health! Being healthy generally involves maintaining a balanced diet, regular exercise, adequate sleep, and managing stress. What specific aspect of health would you like to explore?\";\r\n        } else if (userQuery.includes('diet') || userQuery.includes('nutrition') || userQuery.includes('eat')) {\r\n          aiResponse = \"Nutrition is key to good health! A balanced diet with plenty of fruits, vegetables, whole grains, and lean proteins is important. Would you like tips on any specific dietary concerns?\";\r\n        } else if (userQuery.includes('exercise') || userQuery.includes('fitness')) {\r\n          aiResponse = \"Regular physical activity is essential for health! Aim for at least 150 minutes of moderate exercise per week. What type of activities interest you?\";\r\n        } else if (userQuery.includes('food')) {\r\n          aiResponse = \"I understand you need food guidance! Focus on whole, unprocessed foods like fruits, vegetables, lean proteins, and whole grains. What specific nutritional goals do you have?\";\r\n        } else {\r\n          aiResponse = \"I'm here to help with your health questions! The backend is currently in demo mode, but I can provide general guidance on nutrition, exercise, and wellness. What would you like to know?\";\r\n        }\r\n        console.log('🔍 REPLACED WITH HELPFUL RESPONSE:', aiResponse);\r\n      } else {\r\n        console.log('🔍 USING BACKEND RESPONSE (not dummy):', aiResponse.substring(0, 100) + '...');\r\n        // Clean up the response to be more conversational\r\n        aiResponse = aiResponse\r\n          .replace(/🥗.*?\\*\\*/g, '') // Remove emoji headers\r\n          .replace(/\\*\\*.*?\\*\\*/g, '') // Remove bold formatting\r\n          .replace(/📋.*?:/g, '') // Remove section headers\r\n          .replace(/•/g, '-') // Replace bullets\r\n          .split('\\n')\r\n          .filter(line => line.trim() && !line.includes('Biblical') && !line.includes('Corinthians'))\r\n          .slice(0, 3) // Take first 3 meaningful lines\r\n          .join(' ')\r\n          .trim();\r\n\r\n        // If response is too long, truncate and add follow-up prompt\r\n        if (aiResponse.length > 200) {\r\n          aiResponse = aiResponse.substring(0, 200).trim() + '... What would you like to know more about?';\r\n        }\r\n      }\r\n\r\n      const aiMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-assistant',\r\n        type: 'assistant',\r\n        message: aiResponse,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      // Replace the thinking message with the actual response\r\n      setMessages(prev => {\r\n        const newMessages = [...prev];\r\n        // Find and replace the thinking message using isThinking flag\r\n        // Work backwards to find the last thinking message\r\n        for (let i = newMessages.length - 1; i >= 0; i--) {\r\n          if (newMessages[i].isThinking && newMessages[i].type === 'assistant') {\r\n            newMessages[i] = aiMessage;\r\n            break;\r\n          }\r\n        }\r\n        return newMessages;\r\n      });\r\n\r\n      // Force scroll to bottom after response is received\r\n      setTimeout(() => forceScrollToBottom(), 100);\r\n      \r\n      console.log('✅ Message processed successfully');\r\n\r\n      // Restore focus to input for continuous conversation\r\n      setTimeout(() => {\r\n        if (inputRef.current) {\r\n          inputRef.current.focus();\r\n        }\r\n      }, 100);\r\n\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      const errorMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-assistant',\r\n        type: 'assistant',\r\n        message: \"I'm having trouble connecting right now. Please try again in a moment.\",\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      // Replace the thinking message with the error message\r\n      setMessages(prev => {\r\n        const newMessages = [...prev];\r\n        // Find and replace the thinking message using isThinking flag\r\n        // Work backwards to find the last thinking message\r\n        for (let i = newMessages.length - 1; i >= 0; i--) {\r\n          if (newMessages[i].isThinking && newMessages[i].type === 'assistant') {\r\n            newMessages[i] = errorMessage;\r\n            break;\r\n          }\r\n        }\r\n        return newMessages;\r\n      });\r\n\r\n      // Force scroll to bottom after error message\r\n      setTimeout(() => forceScrollToBottom(), 100);\r\n    } finally {\r\n      setIsLoading(false);\r\n      isRequestInProgress.current = false; // Reset progress flag\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const formatTime = (date: Date) => {\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%',\r\n      backgroundColor: 'white',\r\n      fontFamily: 'system-ui, -apple-system, sans-serif'\r\n    }}>\r\n      {/* Header - now inside the component */}\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '20px 16px 16px 16px',\r\n        borderBottom: '1px solid #f3f4f6'\r\n      }}>\r\n        <h2 style={{\r\n          margin: 0,\r\n          fontSize: '20px',\r\n          fontWeight: '600',\r\n          color: '#1f2937'\r\n        }}>\r\n          WiHy Health Response\r\n        </h2>\r\n        <span style={{\r\n          fontSize: '12px',\r\n          color: '#6b7280',\r\n          backgroundColor: '#f3f4f6',\r\n          padding: '4px 8px',\r\n          borderRadius: '4px'\r\n        }}>\r\n          AI-Powered\r\n        </span>\r\n      </div>\r\n\r\n      {/* Messages - Clean scroll pattern with viewport anchoring */}\r\n      <div\r\n        ref={chatThreadRef}\r\n        className=\"chat-thread\"\r\n        onScroll={onScroll}\r\n        style={{\r\n          height: 'calc(100vh - 240px)', // Fixed height based on viewport\r\n          overflowY: 'auto',\r\n          overscrollBehavior: 'contain', // Prevent body scroll chaining\r\n          scrollBehavior: 'smooth',      // Nice bottom scroll on new msg\r\n          padding: '12px 16px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: '10px'\r\n        }}>\r\n\r\n        {/* Loading indicator for older messages */}\r\n        {loadingMore && hasMore && (\r\n          <div style={{ textAlign: \"center\", padding: \"6px 0\" }}>Loading…</div>\r\n        )}\r\n\r\n        {messages.length === 0 ? (\r\n          <div style={{\r\n            textAlign: 'center',\r\n            padding: '40px 20px',\r\n            color: '#64748b'\r\n          }}>\r\n            <div style={{\r\n              fontSize: '48px',\r\n              marginBottom: '16px',\r\n              opacity: 0.3\r\n            }}>\r\n              💬\r\n            </div>\r\n            <div style={{\r\n              fontSize: '14px',\r\n              fontWeight: '500',\r\n              marginBottom: '8px'\r\n            }}>\r\n              Start a health conversation\r\n            </div>\r\n            <div style={{\r\n              fontSize: '12px',\r\n              color: '#94a3b8'\r\n            }}>\r\n              Ask any health question to begin learning\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              data-id={message.id}\r\n              className=\"chat-message\"\r\n              ref={observe}\r\n              style={{\r\n                flex: '0 0 auto',         // Don't shrink or stretch\r\n                overflow: 'visible',      // Important: no nested scrollbars\r\n                maxHeight: 'none',        // Remove any fixed max-height\r\n                display: 'flex',\r\n                flexDirection: message.type === 'user' ? 'row-reverse' : 'row',\r\n                gap: '10px',\r\n                padding: '10px 0',\r\n                alignItems: 'flex-start',\r\n                contain: 'content'        // Micro-optimization\r\n              }}\r\n            >\r\n              {message.type === 'user' ? (\r\n                <div style={{\r\n                  width: '28px',\r\n                  height: '28px',\r\n                  borderRadius: '50%',\r\n                  backgroundColor: '#10b981',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  color: 'white',\r\n                  fontSize: '12px',\r\n                  fontWeight: 'bold',\r\n                  flexShrink: 0\r\n                }}>\r\n                  U\r\n                </div>\r\n              ) : (\r\n                <img\r\n                  src=\"/assets/wihyfavicon.png\"\r\n                  alt=\"WiHy\"\r\n                  style={{\r\n                    width: '28px',\r\n                    height: '28px',\r\n                    borderRadius: '50%',\r\n                    border: '1px solid #e5e7eb',\r\n                    backgroundColor: 'white',\r\n                    padding: '2px',\r\n                    flexShrink: 0\r\n                  }}\r\n                />\r\n              )}\r\n              <div style={{\r\n                maxWidth: '75%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '4px'\r\n              }}>\r\n                <div\r\n                  className=\"bubble\"\r\n                  style={{\r\n                    backgroundColor: message.type === 'user' ? '#10b981' : '#f3f4f6',\r\n                    color: message.type === 'user' ? 'white' : '#1f2937',\r\n                    padding: '12px 16px',\r\n                    borderRadius: message.type === 'user' ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\r\n                    fontSize: '14px',\r\n                    lineHeight: '1.4',\r\n                    overflow: 'visible',        // Clean pattern: no bubble scrolling\r\n                    whiteSpace: 'pre-wrap',\r\n                    overflowWrap: 'anywhere'    // Handle super-long tokens/URLs\r\n                  }}>\r\n                  {message.isThinking ? (\r\n                    <div style={{ \r\n                      display: 'flex', \r\n                      gap: '2px', \r\n                      alignItems: 'center' \r\n                    }}>\r\n                      <span>🤔 Thinking</span>\r\n                      <span className=\"thinking-dots\">\r\n                        <span>.</span>\r\n                        <span>.</span>\r\n                        <span>.</span>\r\n                      </span>\r\n                    </div>\r\n                  ) : (\r\n                    message.message\r\n                  )}\r\n                </div>\r\n                <div style={{\r\n                  fontSize: '11px',\r\n                  color: '#9ca3af',\r\n                  textAlign: message.type === 'user' ? 'right' : 'left',\r\n                  paddingLeft: message.type === 'user' ? '0' : '16px',\r\n                  paddingRight: message.type === 'user' ? '16px' : '0'\r\n                }}>\r\n                  {formatTime(message.timestamp)}\r\n                  {message.context && (\r\n                    <span style={{ marginLeft: '8px', fontStyle: 'italic' }}>\r\n                      • viewing {message.context}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n\r\n        {isLoading && (\r\n          <div style={{\r\n            display: 'flex',\r\n            gap: '8px',\r\n            alignItems: 'flex-start'\r\n          }}>\r\n            <img\r\n              src=\"/assets/wihyfavicon.png\"\r\n              alt=\"WiHy\"\r\n              style={{\r\n                width: '28px',\r\n                height: '28px',\r\n                borderRadius: '50%',\r\n                border: '1px solid #e5e7eb',\r\n                backgroundColor: 'white',\r\n                padding: '2px',\r\n                flexShrink: 0\r\n              }}\r\n            />\r\n            <div style={{\r\n              backgroundColor: '#f3f4f6',\r\n              padding: '12px 16px',\r\n              borderRadius: '18px 18px 18px 4px',\r\n              display: 'flex',\r\n              gap: '4px',\r\n              alignItems: 'center'\r\n            }}>\r\n              <div style={{\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#9ca3af',\r\n                animation: 'typing 1.5s ease-in-out infinite'\r\n              }} />\r\n              <div style={{\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#9ca3af',\r\n                animation: 'typing 1.5s ease-in-out infinite 0.2s'\r\n              }} />\r\n              <div style={{\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#9ca3af',\r\n                animation: 'typing 1.5s ease-in-out infinite 0.4s'\r\n              }} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input */}\r\n      <div className=\"chat-input-area\">\r\n        <div className=\"chat-input-wrapper\">\r\n          <div className=\"search-input-container chat-input-container\">\r\n            <textarea\r\n              ref={inputRef}\r\n              className=\"search-input\"\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder={isLoading ? \"Processing...\" : \"Ask about your health data...\"}\r\n              rows={1}\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleSendMessage}\r\n            disabled={!inputMessage.trim() || isLoading}\r\n            className={`send-button ${(!inputMessage.trim() || isLoading) ? 'disabled' : 'active'}`}\r\n          >\r\n            {isLoading ? (\r\n              <div style={{\r\n                width: '16px',\r\n                height: '16px',\r\n                border: '2px solid #ffffff',\r\n                borderTop: '2px solid transparent',\r\n                borderRadius: '50%',\r\n                animation: 'spin 1s linear infinite'\r\n              }} />\r\n            ) : (\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <style>{`\r\n        @keyframes typing {\r\n          0%, 60%, 100% {\r\n            transform: translateY(0);\r\n            opacity: 0.4;\r\n          }\r\n          30% {\r\n            transform: translateY(-10px);\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n\r\n        /* The ONLY scroller - Hide scrollbar but keep functionality */\r\n        .chat-thread {\r\n          height: calc(100vh - 240px);    /* adjust for your header/input */\r\n          overflow-y: auto;\r\n          overscroll-behavior: contain;\r\n          scrollbar-width: none; /* Firefox */\r\n          -ms-overflow-style: none; /* Internet Explorer 10+ */\r\n        }\r\n\r\n        /* Hide scrollbar for WebKit browsers */\r\n        .chat-thread::-webkit-scrollbar {\r\n          display: none;\r\n        }\r\n\r\n        /* Each message keeps its size and never creates its own scrollbar */\r\n        .chat-message {\r\n          flex: 0 0 auto;                 /* don't shrink or stretch */\r\n          overflow: visible;              /* prevent inner scrollbars */\r\n          max-height: none;\r\n          padding: 10px 0;\r\n        }\r\n\r\n        /* Long text wraps (no overflow) */\r\n        .chat-message .bubble {\r\n          white-space: pre-wrap;\r\n          overflow-wrap: anywhere;\r\n        }\r\n\r\n        /* Kill any legacy scrollbars on messages */\r\n        .chat-message::-webkit-scrollbar {\r\n          display: none;\r\n        }\r\n\r\n        .chat-message {\r\n          scrollbar-width: none;\r\n          -ms-overflow-style: none;\r\n        }\r\n\r\n        /* Chat-specific input area styling */\r\n        .chat-input-area {\r\n          padding: 16px;\r\n          border-top: 1px solid #ffffff;\r\n          background-color: #ffffff; /* Pure white background */\r\n        }\r\n\r\n        /* Wrapper for input and button positioning */\r\n        .chat-input-wrapper {\r\n          position: relative;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n        }\r\n\r\n        /* Chat input container - Simple solid styling for chat */\r\n        .chat-input-container {\r\n          width: 100% !important; /* Override the 80% width for chat context */\r\n          margin: 0 !important; /* Override auto margins for flexbox */\r\n          flex: 1; /* Allow it to grow in flexbox */\r\n          /* Override animated styles with solid styling */\r\n          background: #ffffff !important;\r\n          border: 2px solid #fa5f06 !important;\r\n          border-radius: 28px !important;\r\n          box-shadow: 0 2px 8px rgba(250, 95, 6, 0.1) !important;\r\n          animation: none !important;\r\n          padding: 4px;\r\n        }\r\n\r\n        /* Chat input overrides */\r\n        .chat-input-container .search-input {\r\n          resize: none;\r\n          min-height: 20px;\r\n          max-height: 80px;\r\n          padding-right: 16px;\r\n          background-color: #ffffff !important; /* Ensure pure white background */\r\n        }\r\n\r\n        /* Send button styling - now positioned outside animated container */\r\n        .send-button {\r\n          position: relative;\r\n          right: auto;\r\n          top: auto;\r\n          transform: none;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 12px;\r\n          padding: 12px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          transition: background-color 0.2s ease;\r\n          flex-shrink: 0;\r\n          min-width: 44px;\r\n          height: 44px;\r\n        }\r\n\r\n        .send-button.active {\r\n          background-color: #1a73e8;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .send-button.disabled {\r\n          background-color: #d1d5db;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        /* Thinking dots animation */\r\n        .thinking-dots {\r\n          display: inline-flex;\r\n          gap: 1px;\r\n        }\r\n\r\n        .thinking-dots span {\r\n          animation: thinking 1.4s infinite ease-in-out;\r\n          opacity: 0.4;\r\n        }\r\n\r\n        .thinking-dots span:nth-child(1) {\r\n          animation-delay: 0s;\r\n        }\r\n\r\n        .thinking-dots span:nth-child(2) {\r\n          animation-delay: 0.2s;\r\n        }\r\n\r\n        .thinking-dots span:nth-child(3) {\r\n          animation-delay: 0.4s;\r\n        }\r\n\r\n        @keyframes thinking {\r\n          0%, 80%, 100% {\r\n            opacity: 0.4;\r\n          }\r\n          40% {\r\n            opacity: 1;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}