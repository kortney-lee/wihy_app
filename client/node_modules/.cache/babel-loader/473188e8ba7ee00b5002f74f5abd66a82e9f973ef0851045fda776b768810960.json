{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\ImageUploadModal.tsx\",\n  _s = $RefreshSig$();\n// src/components/ImageUploadModal.tsx\nimport React, { useState, useRef, useCallback } from 'react';\nimport './Spinner.css';\nimport '../styles/VHealthSearch.css';\nimport { azureVisionService } from '../services/azureVisionService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageUploadModal = ({\n  isOpen,\n  onClose,\n  onAnalysisComplete,\n  // Updated prop name\n  title = \"Analyze Image\",\n  subtitle = \"Upload or capture images for comprehensive analysis\"\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [mode, setMode] = useState('upload');\n  const [stream, setStream] = useState(null);\n  const [cameraError, setCameraError] = useState('');\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  if (!isOpen) return null;\n\n  // Camera functions\n  const startCamera = useCallback(async () => {\n    try {\n      setCameraError('');\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment',\n          // Use back camera on mobile\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          }\n        }\n      });\n      setStream(mediaStream);\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream;\n      }\n    } catch (error) {\n      console.error('Camera access error:', error);\n      setCameraError('Unable to access camera. Please check permissions.');\n    }\n  }, []);\n  const stopCamera = useCallback(() => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n    }\n  }, [stream]);\n  const capturePhoto = useCallback(async () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    if (!context) return;\n\n    // Set canvas dimensions to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw current video frame to canvas\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convert canvas to blob and then to File\n    canvas.toBlob(async blob => {\n      if (blob) {\n        const file = new File([blob], 'camera-capture.jpg', {\n          type: 'image/jpeg'\n        });\n        await processFile(file);\n        stopCamera();\n      }\n    }, 'image/jpeg', 0.9);\n  }, [stream]);\n\n  // Handle mode changes\n  const handleModeChange = newMode => {\n    if (newMode === mode) return;\n\n    // Stop camera when switching away from camera mode\n    if (mode === 'camera') {\n      stopCamera();\n    }\n    setMode(newMode);\n\n    // Start camera when switching to camera mode\n    if (newMode === 'camera') {\n      startCamera();\n    }\n  };\n\n  // Handle file drop\n  const handleDrop = async e => {\n    e.preventDefault();\n    setIsDragging(false);\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      await processFile(imageFile);\n    } else {\n      alert('Please upload an image file (JPG, PNG, GIF, etc.)');\n    }\n  };\n\n  // Handle drag events\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n\n  // Handle file input\n  const handleFileInput = async e => {\n    var _e$target$files;\n    console.log('📁 File input triggered');\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    console.log('📁 Selected file:', file);\n    if (file) {\n      await processFile(file);\n    } else {\n      console.log('❌ No file selected');\n    }\n  };\n\n  // Handle URL upload\n  const handleUrlUpload = async () => {\n    if (!imageUrl.trim()) {\n      alert('Please enter a valid image URL');\n      return;\n    }\n    setIsProcessing(true);\n    try {\n      const response = await fetch(imageUrl);\n      const blob = await response.blob();\n      if (!blob.type.startsWith('image/')) {\n        throw new Error('URL does not point to an image');\n      }\n      const file = new File([blob], 'uploaded-image.jpg', {\n        type: blob.type\n      });\n      await processFile(file);\n    } catch (error) {\n      console.error('Error loading image from URL:', error);\n      alert('Failed to load image from URL. Please check the URL and try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Process file and analyze it with Azure Computer Vision\n  const processFile = async file => {\n    console.log('🔍 STEP 1: File received:', {\n      name: file.name,\n      type: file.type,\n      size: file.size\n    });\n    setIsProcessing(true);\n    try {\n      console.log('🔍 STEP 2: Using Azure Computer Vision for comprehensive analysis...');\n\n      // Use Azure Computer Vision for multi-type detection\n      const visionResult = await azureVisionService.analyzeImage(file);\n      console.log('🔍 STEP 3: Azure Vision analysis result:', visionResult);\n      let analysisText = 'Image analyzed';\n      if (visionResult.success && visionResult.data) {\n        // Format comprehensive analysis results\n        analysisText = azureVisionService.formatForDisplay(visionResult);\n\n        // Also try the original WiHy API for additional context\n        try {\n          var _wihyResult$data, _wihyResult$data$ai_r;\n          console.log('🔍 STEP 4: Also checking WiHy API for additional context...');\n          const {\n            wihyAPI\n          } = await import('../services/wihyAPI');\n          const wihyResult = await wihyAPI.scanFood(file);\n          if (wihyResult.success && 'data' in wihyResult && (_wihyResult$data = wihyResult.data) !== null && _wihyResult$data !== void 0 && (_wihyResult$data$ai_r = _wihyResult$data.ai_response) !== null && _wihyResult$data$ai_r !== void 0 && _wihyResult$data$ai_r.response) {\n            analysisText = `${analysisText}\\n\\nAI Health Analysis: ${wihyResult.data.ai_response.response}`;\n          }\n        } catch (wihyError) {\n          console.log('ℹ️ WiHy API not available, using Azure Vision results only');\n        }\n      } else {\n        console.log('❌ Azure Vision analysis failed, falling back to basic analysis');\n        analysisText = visionResult.error || 'Image analysis unavailable';\n      }\n      console.log('🔍 STEP 5: Final analysis text:', analysisText);\n      console.log('🔍 STEP 6: Triggering analysis completion...');\n      onAnalysisComplete(analysisText);\n    } catch (error) {\n      console.error('❌ Error in processFile:', error);\n      onAnalysisComplete('Analysis failed. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Handle modal close\n  const handleClose = () => {\n    if (!isProcessing) {\n      stopCamera(); // Clean up camera resources\n      onClose();\n      setImageUrl('');\n      setIsDragging(false);\n      setMode('upload');\n      setCameraError('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `photo-modal-overlay ${isOpen ? 'open' : ''}`,\n    onClick: handleClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-subtitle\",\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-close\",\n          onClick: handleClose,\n          \"aria-label\": \"Close\",\n          disabled: isProcessing,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mode-tab ${mode === 'upload' ? 'active' : ''}`,\n          onClick: () => handleModeChange('upload'),\n          disabled: isProcessing,\n          children: \"\\uD83D\\uDCC1 Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mode-tab ${mode === 'camera' ? 'active' : ''}`,\n          onClick: () => handleModeChange('camera'),\n          disabled: isProcessing,\n          children: \"\\uD83D\\uDCF8 Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-content\",\n        children: [mode === 'upload' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `upload-area ${isDragging ? 'dragging' : ''} ${isProcessing ? 'processing' : ''}`,\n          onDrop: handleDrop,\n          onDragOver: handleDragOver,\n          onDragLeave: handleDragLeave,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-icon\",\n              children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-spinner\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), isProcessing ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-text\",\n              children: \"Analyzing image with Azure Computer Vision...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-text\",\n              children: [isDragging ? 'Drop image here' : 'Drag an image here or', ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"upload-link\",\n                onClick: () => {\n                  var _document$getElementB;\n                  return (_document$getElementB = document.getElementById('modal-file-input')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n                },\n                disabled: isProcessing,\n                children: \"upload a file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"modal-file-input\",\n            type: \"file\",\n            accept: \"image/*\",\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileInput,\n            disabled: isProcessing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), mode === 'camera' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-section\",\n          children: cameraError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera-error\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: cameraError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startCamera,\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"camera-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Camera Capture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Position your food item or package in the camera view\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"camera-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                ref: videoRef,\n                autoPlay: true,\n                playsInline: true,\n                className: \"camera-video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this), stream && !isProcessing && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"capture-button\",\n                onClick: capturePhoto,\n                disabled: isProcessing,\n                children: \"\\uD83D\\uDCF8 Capture & Analyze\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"camera-processing\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Analyzing image...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), mode === 'upload' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-divider\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"url-input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            placeholder: \"Paste image URL\",\n            className: \"url-input\",\n            value: imageUrl,\n            onChange: e => setImageUrl(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                handleUrlUpload();\n              }\n            },\n            disabled: isProcessing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `search-button-modal ${isProcessing ? 'processing' : ''}`,\n            onClick: handleUrlUpload,\n            disabled: isProcessing || !imageUrl.trim(),\n            children: isProcessing ? 'Analyzing...' : 'Analyze URL'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-info\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: mode === 'upload' ? 'Supported: JPG, PNG, GIF, WebP (max 10MB) • Detects: Barcodes, Text, Nutrition Labels, Brands' : 'Camera will detect: Barcodes, QR codes, Text, Nutrition info, Food items, Brand logos'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploadModal, \"KFyH/9uiMj7F66osmbRuUaPA4Y0=\");\n_c = ImageUploadModal;\nexport default ImageUploadModal;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadModal\");","map":{"version":3,"names":["React","useState","useRef","useCallback","azureVisionService","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUploadModal","isOpen","onClose","onAnalysisComplete","title","subtitle","_s","isDragging","setIsDragging","imageUrl","setImageUrl","isProcessing","setIsProcessing","mode","setMode","stream","setStream","cameraError","setCameraError","videoRef","canvasRef","startCamera","mediaStream","navigator","mediaDevices","getUserMedia","video","facingMode","width","ideal","height","current","srcObject","error","console","stopCamera","getTracks","forEach","track","stop","capturePhoto","canvas","context","getContext","videoWidth","videoHeight","drawImage","toBlob","blob","file","File","type","processFile","handleModeChange","newMode","handleDrop","e","preventDefault","files","Array","from","dataTransfer","imageFile","find","startsWith","alert","handleDragOver","handleDragLeave","handleFileInput","_e$target$files","log","target","handleUrlUpload","trim","response","fetch","Error","name","size","visionResult","analyzeImage","analysisText","success","data","formatForDisplay","_wihyResult$data","_wihyResult$data$ai_r","wihyAPI","wihyResult","scanFood","ai_response","wihyError","handleClose","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onDrop","onDragOver","onDragLeave","viewBox","fill","d","_document$getElementB","document","getElementById","click","id","accept","style","display","onChange","ref","autoPlay","playsInline","placeholder","value","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/ImageUploadModal.tsx"],"sourcesContent":["// src/components/ImageUploadModal.tsx\r\nimport React, { useState, useRef, useCallback } from 'react';\r\nimport './Spinner.css';\r\nimport '../styles/VHealthSearch.css';\r\nimport { azureVisionService } from '../services/azureVisionService';\r\n\r\ninterface ImageUploadModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onAnalysisComplete: (foodName: string) => void; // Changed from onFileSelect\r\n  title?: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst ImageUploadModal: React.FC<ImageUploadModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onAnalysisComplete, // Updated prop name\r\n  title = \"Analyze Image\",\r\n  subtitle = \"Upload or capture images for comprehensive analysis\"\r\n}) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [mode, setMode] = useState<'upload' | 'camera'>('upload');\r\n  const [stream, setStream] = useState<MediaStream | null>(null);\r\n  const [cameraError, setCameraError] = useState<string>('');\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Camera functions\r\n  const startCamera = useCallback(async () => {\r\n    try {\r\n      setCameraError('');\r\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\r\n        video: { \r\n          facingMode: 'environment', // Use back camera on mobile\r\n          width: { ideal: 1280 },\r\n          height: { ideal: 720 }\r\n        }\r\n      });\r\n      \r\n      setStream(mediaStream);\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = mediaStream;\r\n      }\r\n    } catch (error) {\r\n      console.error('Camera access error:', error);\r\n      setCameraError('Unable to access camera. Please check permissions.');\r\n    }\r\n  }, []);\r\n\r\n  const stopCamera = useCallback(() => {\r\n    if (stream) {\r\n      stream.getTracks().forEach(track => track.stop());\r\n      setStream(null);\r\n    }\r\n  }, [stream]);\r\n\r\n  const capturePhoto = useCallback(async () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    if (!context) return;\r\n\r\n    // Set canvas dimensions to match video\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n\r\n    // Draw current video frame to canvas\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n    // Convert canvas to blob and then to File\r\n    canvas.toBlob(async (blob) => {\r\n      if (blob) {\r\n        const file = new File([blob], 'camera-capture.jpg', { type: 'image/jpeg' });\r\n        await processFile(file);\r\n        stopCamera();\r\n      }\r\n    }, 'image/jpeg', 0.9);\r\n  }, [stream]);\r\n\r\n  // Handle mode changes\r\n  const handleModeChange = (newMode: 'upload' | 'camera') => {\r\n    if (newMode === mode) return;\r\n    \r\n    // Stop camera when switching away from camera mode\r\n    if (mode === 'camera') {\r\n      stopCamera();\r\n    }\r\n    \r\n    setMode(newMode);\r\n    \r\n    // Start camera when switching to camera mode\r\n    if (newMode === 'camera') {\r\n      startCamera();\r\n    }\r\n  };\r\n\r\n  // Handle file drop\r\n  const handleDrop = async (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    \r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    \r\n    if (imageFile) {\r\n      await processFile(imageFile);\r\n    } else {\r\n      alert('Please upload an image file (JPG, PNG, GIF, etc.)');\r\n    }\r\n  };\r\n\r\n  // Handle drag events\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  // Handle file input\r\n  const handleFileInput = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log('📁 File input triggered');\r\n    const file = e.target.files?.[0];\r\n    console.log('📁 Selected file:', file);\r\n    if (file) {\r\n      await processFile(file);\r\n    } else {\r\n      console.log('❌ No file selected');\r\n    }\r\n  };\r\n\r\n  // Handle URL upload\r\n  const handleUrlUpload = async () => {\r\n    if (!imageUrl.trim()) {\r\n      alert('Please enter a valid image URL');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    try {\r\n      const response = await fetch(imageUrl);\r\n      const blob = await response.blob();\r\n      \r\n      if (!blob.type.startsWith('image/')) {\r\n        throw new Error('URL does not point to an image');\r\n      }\r\n\r\n      const file = new File([blob], 'uploaded-image.jpg', { type: blob.type });\r\n      await processFile(file);\r\n    } catch (error) {\r\n      console.error('Error loading image from URL:', error);\r\n      alert('Failed to load image from URL. Please check the URL and try again.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Process file and analyze it with Azure Computer Vision\r\n  const processFile = async (file: File) => {\r\n    console.log('🔍 STEP 1: File received:', {\r\n      name: file.name,\r\n      type: file.type,\r\n      size: file.size\r\n    });\r\n    \r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      console.log('🔍 STEP 2: Using Azure Computer Vision for comprehensive analysis...');\r\n      \r\n      // Use Azure Computer Vision for multi-type detection\r\n      const visionResult = await azureVisionService.analyzeImage(file);\r\n      console.log('🔍 STEP 3: Azure Vision analysis result:', visionResult);\r\n      \r\n      let analysisText = 'Image analyzed';\r\n      \r\n      if (visionResult.success && visionResult.data) {\r\n        // Format comprehensive analysis results\r\n        analysisText = azureVisionService.formatForDisplay(visionResult);\r\n        \r\n        // Also try the original WiHy API for additional context\r\n        try {\r\n          console.log('🔍 STEP 4: Also checking WiHy API for additional context...');\r\n          const { wihyAPI } = await import('../services/wihyAPI');\r\n          const wihyResult = await wihyAPI.scanFood(file);\r\n          \r\n          if (wihyResult.success && 'data' in wihyResult && wihyResult.data?.ai_response?.response) {\r\n            analysisText = `${analysisText}\\n\\nAI Health Analysis: ${wihyResult.data.ai_response.response}`;\r\n          }\r\n        } catch (wihyError) {\r\n          console.log('ℹ️ WiHy API not available, using Azure Vision results only');\r\n        }\r\n      } else {\r\n        console.log('❌ Azure Vision analysis failed, falling back to basic analysis');\r\n        analysisText = visionResult.error || 'Image analysis unavailable';\r\n      }\r\n      \r\n      console.log('🔍 STEP 5: Final analysis text:', analysisText);\r\n      console.log('🔍 STEP 6: Triggering analysis completion...');\r\n      \r\n      onAnalysisComplete(analysisText);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error in processFile:', error);\r\n      onAnalysisComplete('Analysis failed. Please try again.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Handle modal close\r\n  const handleClose = () => {\r\n    if (!isProcessing) {\r\n      stopCamera(); // Clean up camera resources\r\n      onClose();\r\n      setImageUrl('');\r\n      setIsDragging(false);\r\n      setMode('upload');\r\n      setCameraError('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`photo-modal-overlay ${isOpen ? 'open' : ''}`} onClick={handleClose}>\r\n      <div className=\"photo-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>{title}</h2>\r\n          <p className=\"modal-subtitle\">{subtitle}</p>\r\n          <button \r\n            className=\"modal-close\"\r\n            onClick={handleClose}\r\n            aria-label=\"Close\"\r\n            disabled={isProcessing}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {/* Mode Tabs */}\r\n        <div className=\"mode-tabs\">\r\n          <button\r\n            className={`mode-tab ${mode === 'upload' ? 'active' : ''}`}\r\n            onClick={() => handleModeChange('upload')}\r\n            disabled={isProcessing}\r\n          >\r\n            📁 Upload\r\n          </button>\r\n          <button\r\n            className={`mode-tab ${mode === 'camera' ? 'active' : ''}`}\r\n            onClick={() => handleModeChange('camera')}\r\n            disabled={isProcessing}\r\n          >\r\n            📸 Camera\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Mode Content */}\r\n        <div className=\"mode-content\">\r\n          {mode === 'upload' && (\r\n            <div \r\n              className={`upload-area ${isDragging ? 'dragging' : ''} ${isProcessing ? 'processing' : ''}`}\r\n              onDrop={handleDrop}\r\n              onDragOver={handleDragOver}\r\n              onDragLeave={handleDragLeave}\r\n            >\r\n              <div className=\"upload-content\">\r\n                <div className=\"upload-icon\">\r\n                  {isProcessing ? (\r\n                    <div className=\"upload-spinner\">\r\n                      <div className=\"spinner\"></div>\r\n                    </div>\r\n                  ) : (\r\n                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                      <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                \r\n                {isProcessing ? (\r\n                  <p className=\"upload-text\">Analyzing image with Azure Computer Vision...</p>\r\n                ) : (\r\n                  <p className=\"upload-text\">\r\n                    {isDragging ? 'Drop image here' : 'Drag an image here or'}{' '}\r\n                    <button \r\n                      className=\"upload-link\"\r\n                      onClick={() => document.getElementById('modal-file-input')?.click()}\r\n                      disabled={isProcessing}\r\n                    >\r\n                      upload a file\r\n                    </button>\r\n                  </p>\r\n                )}\r\n              </div>\r\n              \r\n              <input\r\n                id=\"modal-file-input\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileInput}\r\n                disabled={isProcessing}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {mode === 'camera' && (\r\n            <div className=\"camera-section\">\r\n              {cameraError ? (\r\n                <div className=\"camera-error\">\r\n                  <p>{cameraError}</p>\r\n                  <button onClick={startCamera}>Try Again</button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"camera-info\">\r\n                    <h3>Camera Capture</h3>\r\n                    <p>Position your food item or package in the camera view</p>\r\n                  </div>\r\n                  \r\n                  <div className=\"camera-container\">\r\n                    <video\r\n                      ref={videoRef}\r\n                      autoPlay\r\n                      playsInline\r\n                      className=\"camera-video\"\r\n                    />\r\n                    {stream && !isProcessing && (\r\n                      <button\r\n                        className=\"capture-button\"\r\n                        onClick={capturePhoto}\r\n                        disabled={isProcessing}\r\n                      >\r\n                        📸 Capture & Analyze\r\n                      </button>\r\n                    )}\r\n                    {isProcessing && (\r\n                      <div className=\"camera-processing\">\r\n                        <div className=\"spinner\"></div>\r\n                        <p>Analyzing image...</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <canvas\r\n                    ref={canvasRef}\r\n                    style={{ display: 'none' }}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* URL Input - Only show in upload mode */}\r\n        {mode === 'upload' && (\r\n          <>\r\n            <div className=\"modal-divider\">\r\n              <span> </span>\r\n            </div>\r\n            \r\n            <div className=\"url-input-section\">\r\n              <input\r\n                type=\"url\"\r\n                placeholder=\"Paste image URL\"\r\n                className=\"url-input\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    handleUrlUpload();\r\n                  }\r\n                }}\r\n                disabled={isProcessing}\r\n              />\r\n              <button \r\n                className={`search-button-modal ${isProcessing ? 'processing' : ''}`}\r\n                onClick={handleUrlUpload}\r\n                disabled={isProcessing || !imageUrl.trim()}\r\n              >\r\n                {isProcessing ? 'Analyzing...' : 'Analyze URL'}\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n        \r\n        {/* Info */}\r\n        <div className=\"upload-info\">\r\n          <small>\r\n            {mode === 'upload' ? \r\n              'Supported: JPG, PNG, GIF, WebP (max 10MB) • Detects: Barcodes, Text, Nutrition Labels, Brands' :\r\n              'Camera will detect: Barcodes, QR codes, Text, Nutrition info, Food items, Brand logos'\r\n            }\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}