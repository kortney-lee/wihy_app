{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { searchCache } from './services/searchCache';\nimport { openaiAPI } from './services/openaiAPI'; // Add this import\n\n// Add this import\nimport ImageUploadModal from './components/ImageUploadModal';\nimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';\nimport ResultQualityPie from './components/ResultQualityPie';\nimport NutritionChart from './components/NutritionChart';\nimport NovaChart from './components/NovaChart';\nimport './VHealthSearch.css';\nimport Spinner from './components/Spinner';\n\n/* Define default topics and resources */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRelatedTopics = [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"];\nconst defaultResources = [{\n  text: \"Nutrition ED - Learn More\",\n  url: \"https://vowels.com\"\n}, {\n  text: \"Nutrition 101\",\n  url: \"https://members.vowels.com\"\n}, {\n  text: \"The World Counts\",\n  url: \"https://www.theworldcounts.com/\"\n}];\n\n// Define the dummy data for \"test\" queries\nconst dummyTestData = {\n  query: \"test\",\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\n\n**Recommendations:**\n• Consult healthcare professionals for personalized medical advice\n• Verify information with your doctor or medical provider\n• Follow evidence-based medical guidelines\n• Seek regular medical check-ups and screenings\n\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\n\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\n  relatedTopics: [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"],\n  resources: [{\n    text: \"🩺 mHealth - Mobile Health Solutions\",\n    url: \"#\"\n  }, {\n    text: \"🏥 CDC - Health Guidelines\",\n    url: \"#\"\n  }, {\n    text: \"🌍 WHO - Global Health Information\",\n    url: \"#\"\n  }]\n};\n\n// Update the SearchResultsProps interface to include the new properties\n\n// Add this function before the SearchResults component\nconst convertLinksToClickable = text => {\n  // Handle non-string inputs\n  if (!text) return null;\n\n  // If text is not a string, convert it to string first\n  if (typeof text !== 'string') {\n    // If it's an object, try to stringify it or extract meaningful content\n    if (typeof text === 'object') {\n      // If it has specific properties we can use\n      if (text.content) {\n        text = text.content;\n      } else if (text.message) {\n        text = text.message;\n      } else if (text.details) {\n        text = text.details;\n      } else {\n        // Last resort - stringify the object\n        text = JSON.stringify(text);\n      }\n    } else {\n      // Convert other types to string\n      text = String(text);\n    }\n  }\n\n  // Now we're sure text is a string, proceed with original logic\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  const parts = text.split(urlRegex);\n  return parts.map((part, index) => {\n    if (part.match(urlRegex)) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: part,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          color: '#2563eb',\n          textDecoration: 'underline'\n        },\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    }\n    return part;\n  });\n};\nconst SearchResults = ({\n  query,\n  onBackToSearch,\n  onNewSearch\n}) => {\n  _s();\n  const location = useLocation();\n  const navigationState = location.state;\n\n  // Use navigation state if available\n  const [results, setResults] = useState((navigationState === null || navigationState === void 0 ? void 0 : navigationState.results) || '');\n  const [dataSource, setDataSource] = useState((navigationState === null || navigationState === void 0 ? void 0 : navigationState.dataSource) || 'openai');\n  const [isLoading, setIsLoading] = useState(!(navigationState !== null && navigationState !== void 0 && navigationState.fromSearch)); // Only load if not from search\n  const [citations, setCitations] = useState([]);\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [newQuery, setNewQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [isUploadLoading, setUploadLoading] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Cache results when they change\n  useEffect(() => {\n    if (query && results && !isLoading) {\n      searchCache.setCachedResult(query, results, window.location.href);\n    }\n  }, [query, results, isLoading]);\n\n  // Add effect to manage body class when modal opens/closes\n  useEffect(() => {\n    if (isUploadModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [isUploadModalOpen]);\n\n  // Add cleanup effect\n  useEffect(() => {\n    return () => {\n      if (typeof image === 'string' && image.startsWith('blob:')) {\n        URL.revokeObjectURL(image);\n      }\n    };\n  }, [image]);\n\n  // Add this effect\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Handle new search submission\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const trimmedQuery = input.trim();\n\n    // Check for test query - return fake data without API call\n    if (trimmedQuery.toLowerCase() === 'test') {\n      console.log('Test query detected in SearchResults - avoiding API call');\n      onNewSearch(trimmedQuery); // This will trigger the test logic in parent\n      return;\n    }\n    onNewSearch(trimmedQuery);\n  };\n\n  // Handle voice input\n  const handleVoiceInput = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser');\n      return;\n    }\n    if (!recognitionRef.current) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setNewQuery(transcript); // Update the input field\n        setIsListening(false);\n      };\n      recognition.onerror = () => {\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n    }\n    if (!isListening) {\n      recognitionRef.current.start();\n    } else {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      setImage(file);\n      console.log(`Image uploaded: ${file.name}`);\n    }\n  };\n\n  // Clear all search items\n  const handleClearAll = () => {\n    setInput('');\n    setNewQuery(''); // <-- Add this line\n    setImage(null);\n    setCurrentPhotoId(null);\n    setIsListening(false);\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n\n    // Remove CSS class\n    const searchInput = document.querySelector('.results-search-input');\n    if (searchInput) {\n      searchInput.classList.remove('with-image');\n    }\n  };\n\n  // Handle Enter key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleTextSubmit(e);\n    }\n  };\n\n  // Photo modal handlers\n  const handleCameraClick = () => {\n    setIsUploadModalOpen(true);\n  };\n\n  // Simple handler that just triggers a new search\n  const handleAnalysisComplete = foodName => {\n    if (foodName) {\n      setNewQuery(foodName);\n      onNewSearch(foodName);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      // Instead of calling handleFileSelect, open the modal and let it handle the file\n      setIsUploadModalOpen(true);\n      // You could also trigger the analysis directly if you want immediate processing\n      // But it's cleaner to let the user see the modal and confirm\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleNewSearchSubmit = e => {\n    e.preventDefault();\n    if (!newQuery.trim()) return;\n    const trimmedQuery = newQuery.trim();\n\n    // Check for test query - return fake data without API call\n    if (trimmedQuery.toLowerCase() === 'test') {\n      console.log('Test query detected - using dummy data');\n      setResults(dummyTestData.healthInfo);\n      setDataSource('openai');\n      setIsLoading(false);\n      onNewSearch(trimmedQuery);\n      setNewQuery('');\n      return;\n    }\n\n    // Make API call for new search directly in SearchResults\n    console.log('Making new search from SearchResults:', trimmedQuery);\n    fetchResults(trimmedQuery);\n    onNewSearch(trimmedQuery); // This updates the URL\n    setNewQuery(''); // Reset input\n  };\n\n  // Check if current query is \"test\" to show dummy data styles\n  const isTestQuery = query.toLowerCase().trim() === 'test';\n\n  // Add auth handlers\n  const handleUserChange = user => {\n    console.log('User changed in SearchResults:', user);\n  };\n  const handleSignIn = user => {\n    console.log('User signed in from SearchResults:', user);\n  };\n  const handleSignOut = () => {\n    console.log('User signed out from SearchResults');\n  };\n\n  // Only fetch if we don't have data from navigation\n  const fetchResults = async searchQuery => {\n    if (!(searchQuery !== null && searchQuery !== void 0 && searchQuery.trim())) {\n      setIsLoading(false);\n      return;\n    }\n    console.log('SearchResults: Fetching data for', searchQuery);\n    setIsLoading(true);\n    try {\n      // Step 1: Check database cache first\n      try {\n        const cacheResponse = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(searchQuery)}`);\n        if (cacheResponse.ok) {\n          const cachedData = await cacheResponse.json();\n          console.log('Using cached results from database');\n          setResults(cachedData.results);\n          setDataSource(cachedData.source || 'cache');\n          setIsLoading(false);\n          return;\n        }\n      } catch (cacheError) {\n        console.log('No cache found, proceeding with API call');\n      }\n\n      // Step 2: Try nutrition database\n      try {\n        const nutritionUrl = `http://localhost:5000/api/search/food?q=${encodeURIComponent(searchQuery)}`;\n        const nutritionResponse = await fetch(nutritionUrl);\n        if (nutritionResponse.ok) {\n          const nutritionData = await nutritionResponse.json();\n          if (nutritionData && nutritionData.found !== false) {\n            console.log('Using nutrition database results');\n            setResults(typeof nutritionData === 'string' ? nutritionData : JSON.stringify(nutritionData));\n            setDataSource('vnutrition');\n\n            // Save to cache\n            fetch('http://localhost:5000/api/cache/save', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                query: searchQuery,\n                results: nutritionData,\n                source: 'vnutrition'\n              })\n            }).catch(err => console.warn('Cache save error:', err));\n            setIsLoading(false);\n            return;\n          }\n        }\n      } catch (error) {\n        console.log('Nutrition API not available, using OpenAI');\n      }\n\n      // Step 3: Fallback to OpenAI\n      const openaiResult = await openaiAPI.searchHealthInfo(searchQuery);\n      if (openaiResult !== null && openaiResult !== void 0 && openaiResult.content) {\n        console.log('Using OpenAI results');\n        setResults(openaiResult.content);\n        setDataSource('openai');\n        setCitations(openaiResult.citations || []);\n\n        // Save to cache\n        fetch('http://localhost:5000/api/cache/save', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query: searchQuery,\n            results: openaiResult.content,\n            source: 'openai'\n          })\n        }).catch(err => console.warn('Cache save error:', err));\n      } else {\n        throw new Error('No content received from OpenAI');\n      }\n    } catch (error) {\n      console.error('Search error:', error);\n      setResults('Sorry, there was an error processing your request. Please try again.');\n      setDataSource('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Updated useEffect to handle navigation state\n  useEffect(() => {\n    if (!query) return;\n    if (navigationState !== null && navigationState !== void 0 && navigationState.fromSearch && navigationState !== null && navigationState !== void 0 && navigationState.results) {\n      // Case 1: Coming from VHealthSearch with data - no API call needed\n      console.log('Using results from VHealthSearch navigation state');\n      setResults(navigationState.results);\n      setDataSource(navigationState.dataSource || 'openai');\n      setIsLoading(false);\n    } else {\n      // Case 2: Direct navigation to results page - need to fetch data\n      console.log('No navigation state found, fetching results for:', query);\n      fetchResults(query);\n    }\n  }, [query, navigationState === null || navigationState === void 0 ? void 0 : navigationState.fromSearch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(MultiAuthLogin, {\n      position: \"top-right\",\n      className: \"results-login-button\",\n      onUserChange: handleUserChange,\n      onSignIn: handleSignIn,\n      onSignOut: handleSignOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-search-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/whatishealthylogo.svg\",\n          alt: \"What is Healthy?\",\n          className: \"results-search-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNewSearchSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Ask anything about health...\",\n            value: newQuery,\n            onChange: e => setNewQuery(e.target.value),\n            className: \"search-input results-search-input\",\n            \"data-query\": isTestQuery ? 'test' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"image-name\",\n            children: typeof image === 'object' && image !== null ? image.name : 'Uploaded image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setImage(null);\n              setCurrentPhotoId(null);\n              const searchInput = document.querySelector('.results-search-input');\n              if (searchInput) {\n                searchInput.classList.remove('with-image');\n              }\n            },\n            className: \"remove-image\",\n            \"aria-label\": \"Remove image\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-icons\",\n          children: [(newQuery || image) && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleClearAll,\n            className: \"icon-button clear-button\",\n            \"aria-label\": \"Clear all\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCameraClick,\n            className: \"icon-button\",\n            \"aria-label\": \"Upload image\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVoiceInput,\n            className: `icon-button ${isListening ? 'listening' : ''}`,\n            \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"results-header\",\n          children: [\"Search Results for: \\\"\", query, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-info-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-info-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"markdown-content\",\n                children: dataSource === 'vnutrition' ? (() => {\n                  // Try to parse and display raw data for vnutrition\n                  let nutrition;\n                  try {\n                    nutrition = typeof results === 'string' ? JSON.parse(results) : results;\n                    console.log('Raw nutrition object for debugging:', nutrition);\n                    if (nutrition && nutrition.found !== false) {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Nutrition Information\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 571,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Calories per serving: \", nutrition.calories_per_serving || 0]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 573,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Protein: \", nutrition.protein_g || 0, \"g\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 574,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Carbs: \", nutrition.carbs_g || 0, \"g\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 575,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Fat: \", nutrition.fat_g || 0, \"g\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 576,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"NOVA Score: \", nutrition.nova_classification || 1]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 577,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: [\"Processing Level: \", nutrition.nova_description || nutrition.processed_level || 'Unknown']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 578,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 572,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 570,\n                        columnNumber: 31\n                      }, this);\n                    } else {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Raw Database Data (Debug)\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 585,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                          style: {\n                            fontSize: '12px',\n                            background: '#f5f5f5',\n                            padding: '10px'\n                          },\n                          children: JSON.stringify(nutrition, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 586,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 584,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  } catch {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Error parsing nutrition data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 34\n                    }, this);\n                  }\n                })() : convertLinksToClickable(results)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-source-indicator\",\n              children: dataSource === 'openai' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Powered by AI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 21\n              }, this) : dataSource === 'error' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-source\",\n                children: \"Error retrieving data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"What Is Healthy?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quality-chart-container\",\n              style: {\n                marginBottom: \"2rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ResultQualityPie, {\n                query: query,\n                results: results,\n                dataSource: dataSource,\n                citations: citations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), dataSource === 'vnutrition' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nutrition-chart-container\",\n                style: {\n                  marginBottom: \"2rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    fontSize: \"1.1rem\",\n                    marginBottom: \"1rem\",\n                    color: \"#374151\"\n                  },\n                  children: \"Nutrition Breakdown\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(NutritionChart, {\n                  query: query,\n                  results: results,\n                  dataSource: dataSource\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nova-chart-container\",\n                style: {\n                  marginBottom: \"2rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    fontSize: \"1.1rem\",\n                    marginBottom: \"1rem\",\n                    color: \"#374151\"\n                  },\n                  children: \"Processing Level (NOVA Score)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(NovaChart, {\n                  query: query,\n                  results: results,\n                  dataSource: dataSource\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"related-topics-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Related Health Topics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"related-topics-list\",\n                children: isTestQuery ? dummyTestData.relatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => onNewSearch(topic),\n                    className: \"topic-button\",\n                    children: topic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 25\n                }, this)) : defaultRelatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => onNewSearch(topic),\n                    className: \"topic-button\",\n                    children: topic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resources-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Useful Resources\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"resources-list\",\n                children: isTestQuery ? dummyTestData.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: resource.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: resource.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 25\n                }, this)) : defaultResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: resource.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: resource.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n        overlay: true,\n        message: \"Searching.......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n        isOpen: isUploadModalOpen,\n        onClose: () => setIsUploadModalOpen(false),\n        onAnalysisComplete: handleAnalysisComplete,\n        title: \"Upload Image\",\n        subtitle: \"Upload images for analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 452,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"6oaDUxsCnWv/qaFtFWkJBE0LDow=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","searchCache","openaiAPI","ImageUploadModal","MultiAuthLogin","ResultQualityPie","NutritionChart","NovaChart","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRelatedTopics","defaultResources","text","url","dummyTestData","query","healthInfo","relatedTopics","resources","convertLinksToClickable","content","message","details","JSON","stringify","String","urlRegex","parts","split","map","part","index","match","href","target","rel","style","color","textDecoration","children","fileName","_jsxFileName","lineNumber","columnNumber","SearchResults","onBackToSearch","onNewSearch","_s","location","navigationState","state","results","setResults","dataSource","setDataSource","isLoading","setIsLoading","fromSearch","citations","setCitations","input","setInput","image","setImage","currentPhotoId","setCurrentPhotoId","newQuery","setNewQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","notification","setNotification","isUploadLoading","setUploadLoading","recognitionRef","setCachedResult","window","document","body","classList","add","remove","startsWith","URL","revokeObjectURL","timer","setTimeout","clearTimeout","handleTextSubmit","e","preventDefault","trim","trimmedQuery","toLowerCase","console","log","handleVoiceInput","alert","current","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","transcript","onerror","onend","start","stop","handleImageUpload","_e$target$files","file","files","name","handleClearAll","searchInput","querySelector","handleKeyPress","key","handleCameraClick","handleAnalysisComplete","foodName","handleDrop","Array","from","dataTransfer","imageFile","find","type","handleDragOver","handleNewSearchSubmit","fetchResults","isTestQuery","handleUserChange","user","handleSignIn","handleSignOut","searchQuery","cacheResponse","fetch","encodeURIComponent","ok","cachedData","json","source","cacheError","nutritionUrl","nutritionResponse","nutritionData","found","method","headers","catch","err","warn","error","openaiResult","searchHealthInfo","Error","className","position","onUserChange","onSignIn","onSignOut","src","alt","onSubmit","placeholder","value","onChange","onClick","viewBox","fill","d","nutrition","parse","calories_per_serving","protein_g","carbs_g","fat_g","nova_classification","nova_description","processed_level","fontSize","background","padding","marginBottom","topic","resource","overlay","isOpen","onClose","onAnalysisComplete","title","subtitle","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/SearchResults.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { searchCache } from './services/searchCache';\r\nimport { photoStorageService } from './services/photoStorageService';\r\nimport { foodAnalysisService } from './components/foodAnalysisService';\r\nimport { openaiAPI } from './services/openaiAPI'; // Add this import\r\nimport { healthSearchService } from './services/healthSearchService'; // Add this import\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';\r\nimport ResultQualityPie from './components/ResultQualityPie';\r\nimport NutritionChart from './components/NutritionChart';\r\nimport NovaChart from './components/NovaChart';\r\nimport './VHealthSearch.css';\r\nimport Spinner from './components/Spinner';\r\n\r\n/* Define default topics and resources */\r\nconst defaultRelatedTopics = [\r\n  \"Nutrition and Diet Guidelines\",\r\n  \"Exercise and Physical Activity\", \r\n  \"Mental Health and Wellness\",\r\n  \"Preventive Care and Screenings\",\r\n  \"Chronic Disease Management\",\r\n  \"Healthy Lifestyle Choices\"\r\n];\r\n\r\nconst defaultResources = [\r\n  { text: \"Nutrition ED - Learn More\", url: \"https://vowels.com\" },\r\n  { text: \"Nutrition 101\", url: \"https://members.vowels.com\" },\r\n  { text: \"The World Counts\", url: \"https://www.theworldcounts.com/\" }\r\n];\r\n\r\n// Define the dummy data for \"test\" queries\r\nconst dummyTestData = {\r\n  query: \"test\",\r\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\r\n\r\n**Recommendations:**\r\n• Consult healthcare professionals for personalized medical advice\r\n• Verify information with your doctor or medical provider\r\n• Follow evidence-based medical guidelines\r\n• Seek regular medical check-ups and screenings\r\n\r\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\r\n\r\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\r\n  relatedTopics: [\r\n    \"Nutrition and Diet Guidelines\",\r\n    \"Exercise and Physical Activity\", \r\n    \"Mental Health and Wellness\",\r\n    \"Preventive Care and Screenings\",\r\n    \"Chronic Disease Management\",\r\n    \"Healthy Lifestyle Choices\"\r\n  ],\r\n  resources: [\r\n    { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"#\" },\r\n    { text: \"🏥 CDC - Health Guidelines\", url: \"#\" },\r\n    { text: \"🌍 WHO - Global Health Information\", url: \"#\" }\r\n  ]\r\n};\r\n\r\n// Update the SearchResultsProps interface to include the new properties\r\ninterface SearchResultsProps {\r\n  query: string;\r\n  onBackToSearch: () => void;\r\n  onNewSearch: (query: string) => void;\r\n}\r\n\r\n// Add this function before the SearchResults component\r\nconst convertLinksToClickable = (text: any): React.ReactNode => {\r\n  // Handle non-string inputs\r\n  if (!text) return null;\r\n  \r\n  // If text is not a string, convert it to string first\r\n  if (typeof text !== 'string') {\r\n    // If it's an object, try to stringify it or extract meaningful content\r\n    if (typeof text === 'object') {\r\n      // If it has specific properties we can use\r\n      if (text.content) {\r\n        text = text.content;\r\n      } else if (text.message) {\r\n        text = text.message;\r\n      } else if (text.details) {\r\n        text = text.details;\r\n      } else {\r\n        // Last resort - stringify the object\r\n        text = JSON.stringify(text);\r\n      }\r\n    } else {\r\n      // Convert other types to string\r\n      text = String(text);\r\n    }\r\n  }\r\n\r\n  // Now we're sure text is a string, proceed with original logic\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  const parts = text.split(urlRegex);\r\n  \r\n  return parts.map((part: string, index: number) => {\r\n    if (part.match(urlRegex)) {\r\n      return (\r\n        <a \r\n          key={index} \r\n          href={part} \r\n          target=\"_blank\" \r\n          rel=\"noopener noreferrer\"\r\n          style={{ color: '#2563eb', textDecoration: 'underline' }}\r\n        >\r\n          {part}\r\n        </a>\r\n      );\r\n    }\r\n    return part;\r\n  });\r\n};\r\n\r\nconst SearchResults: React.FC<SearchResultsProps> = ({ \r\n  query, \r\n  onBackToSearch,\r\n  onNewSearch,\r\n}) => {\r\n  const location = useLocation();\r\n  const navigationState = location.state as {\r\n    results?: any;\r\n    dataSource?: string;\r\n    fromSearch?: boolean;\r\n  } | null;\r\n\r\n  // Use navigation state if available\r\n  const [results, setResults] = useState(navigationState?.results || '');\r\n  const [dataSource, setDataSource] = useState(navigationState?.dataSource || 'openai');\r\n  const [isLoading, setIsLoading] = useState(!navigationState?.fromSearch); // Only load if not from search\r\n  const [citations, setCitations] = useState<string[]>([]);\r\n  const [input, setInput] = useState('');\r\n  const [image, setImage] = useState<File | string | null>(null);\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [newQuery, setNewQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [notification, setNotification] = useState<{message: string, type: string} | null>(null);\r\n  const [isUploadLoading, setUploadLoading] = useState(false);\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // Cache results when they change\r\n  useEffect(() => {\r\n    if (query && results && !isLoading) {\r\n      searchCache.setCachedResult(query, results, window.location.href);\r\n    }\r\n  }, [query, results, isLoading]);\r\n\r\n  // Add effect to manage body class when modal opens/closes\r\n  useEffect(() => {\r\n    if (isUploadModalOpen) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      document.body.classList.remove('modal-open');\r\n    };\r\n  }, [isUploadModalOpen]);\r\n\r\n  // Add cleanup effect\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typeof image === 'string' && image.startsWith('blob:')) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [image]);\r\n\r\n  // Add this effect\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Handle new search submission\r\n  const handleTextSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    \r\n    const trimmedQuery = input.trim();\r\n    \r\n    // Check for test query - return fake data without API call\r\n    if (trimmedQuery.toLowerCase() === 'test') {\r\n      console.log('Test query detected in SearchResults - avoiding API call');\r\n      onNewSearch(trimmedQuery); // This will trigger the test logic in parent\r\n      return;\r\n    }\r\n    \r\n    onNewSearch(trimmedQuery);\r\n  };\r\n\r\n  // Handle voice input\r\n  const handleVoiceInput = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (!recognitionRef.current) {\r\n      const recognition = new (window as any).webkitSpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      recognition.lang = 'en-US';\r\n\r\n      recognition.onstart = () => {\r\n        setIsListening(true);\r\n      };\r\n\r\n      recognition.onresult = (event: any) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setNewQuery(transcript); // Update the input field\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onerror = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    }\r\n\r\n    if (!isListening) {\r\n      recognitionRef.current.start();\r\n    } else {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setImage(file);\r\n      console.log(`Image uploaded: ${file.name}`);\r\n    }\r\n  };\r\n\r\n  // Clear all search items\r\n  const handleClearAll = () => {\r\n    setInput('');\r\n    setNewQuery(''); // <-- Add this line\r\n    setImage(null);\r\n    setCurrentPhotoId(null);\r\n    setIsListening(false);\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n    }\r\n    \r\n    // Remove CSS class\r\n    const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n    if (searchInput) {\r\n      searchInput.classList.remove('with-image');\r\n    }\r\n  };\r\n\r\n  // Handle Enter key press\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleTextSubmit(e as any);\r\n    }\r\n  };\r\n\r\n  // Photo modal handlers\r\n  const handleCameraClick = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  // Simple handler that just triggers a new search\r\n  const handleAnalysisComplete = (foodName: string) => {\r\n    if (foodName) {\r\n      setNewQuery(foodName);\r\n      onNewSearch(foodName);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    if (imageFile) {\r\n      // Instead of calling handleFileSelect, open the modal and let it handle the file\r\n      setIsUploadModalOpen(true);\r\n      // You could also trigger the analysis directly if you want immediate processing\r\n      // But it's cleaner to let the user see the modal and confirm\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewSearchSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newQuery.trim()) return;\r\n    \r\n    const trimmedQuery = newQuery.trim();\r\n    \r\n    // Check for test query - return fake data without API call\r\n    if (trimmedQuery.toLowerCase() === 'test') {\r\n      console.log('Test query detected - using dummy data');\r\n      setResults(dummyTestData.healthInfo);\r\n      setDataSource('openai');\r\n      setIsLoading(false);\r\n      onNewSearch(trimmedQuery);\r\n      setNewQuery('');\r\n      return;\r\n    }\r\n    \r\n    // Make API call for new search directly in SearchResults\r\n    console.log('Making new search from SearchResults:', trimmedQuery);\r\n    fetchResults(trimmedQuery);\r\n    onNewSearch(trimmedQuery); // This updates the URL\r\n    setNewQuery(''); // Reset input\r\n  };\r\n\r\n  // Check if current query is \"test\" to show dummy data styles\r\n  const isTestQuery = query.toLowerCase().trim() === 'test';\r\n\r\n  // Add auth handlers\r\n  const handleUserChange = (user: any) => {\r\n    console.log('User changed in SearchResults:', user);\r\n  };\r\n\r\n  const handleSignIn = (user: any) => {\r\n    console.log('User signed in from SearchResults:', user);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    console.log('User signed out from SearchResults');\r\n  };\r\n\r\n  // Only fetch if we don't have data from navigation\r\n  const fetchResults = async (searchQuery: string) => {\r\n    if (!searchQuery?.trim()) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    console.log('SearchResults: Fetching data for', searchQuery);\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Step 1: Check database cache first\r\n      try {\r\n        const cacheResponse = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(searchQuery)}`);\r\n        \r\n        if (cacheResponse.ok) {\r\n          const cachedData = await cacheResponse.json();\r\n          console.log('Using cached results from database');\r\n          setResults(cachedData.results);\r\n          setDataSource(cachedData.source || 'cache');\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n      } catch (cacheError) {\r\n        console.log('No cache found, proceeding with API call');\r\n      }\r\n\r\n      // Step 2: Try nutrition database\r\n      try {\r\n        const nutritionUrl = `http://localhost:5000/api/search/food?q=${encodeURIComponent(searchQuery)}`;\r\n        const nutritionResponse = await fetch(nutritionUrl);\r\n        \r\n        if (nutritionResponse.ok) {\r\n          const nutritionData = await nutritionResponse.json();\r\n          if (nutritionData && nutritionData.found !== false) {\r\n            console.log('Using nutrition database results');\r\n            setResults(typeof nutritionData === 'string' ? nutritionData : JSON.stringify(nutritionData));\r\n            setDataSource('vnutrition');\r\n            \r\n            // Save to cache\r\n            fetch('http://localhost:5000/api/cache/save', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({\r\n                query: searchQuery,\r\n                results: nutritionData,\r\n                source: 'vnutrition'\r\n              })\r\n            }).catch(err => console.warn('Cache save error:', err));\r\n            \r\n            setIsLoading(false);\r\n            return;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log('Nutrition API not available, using OpenAI');\r\n      }\r\n\r\n      // Step 3: Fallback to OpenAI\r\n      const openaiResult = await openaiAPI.searchHealthInfo(searchQuery);\r\n      if (openaiResult?.content) {\r\n        console.log('Using OpenAI results');\r\n        setResults(openaiResult.content);\r\n        setDataSource('openai');\r\n        setCitations(openaiResult.citations || []);\r\n        \r\n        // Save to cache\r\n        fetch('http://localhost:5000/api/cache/save', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            query: searchQuery,\r\n            results: openaiResult.content,\r\n            source: 'openai'\r\n          })\r\n        }).catch(err => console.warn('Cache save error:', err));\r\n        \r\n      } else {\r\n        throw new Error('No content received from OpenAI');\r\n      }\r\n    } catch (error) {\r\n      console.error('Search error:', error);\r\n      setResults('Sorry, there was an error processing your request. Please try again.');\r\n      setDataSource('error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Updated useEffect to handle navigation state\r\n  useEffect(() => {\r\n    if (!query) return;\r\n    \r\n    if (navigationState?.fromSearch && navigationState?.results) {\r\n      // Case 1: Coming from VHealthSearch with data - no API call needed\r\n      console.log('Using results from VHealthSearch navigation state');\r\n      setResults(navigationState.results);\r\n      setDataSource(navigationState.dataSource || 'openai');\r\n      setIsLoading(false);\r\n    } else {\r\n      // Case 2: Direct navigation to results page - need to fetch data\r\n      console.log('No navigation state found, fetching results for:', query);\r\n      fetchResults(query);\r\n    }\r\n  }, [query, navigationState?.fromSearch]);\r\n\r\n  return (\r\n    <div className={`results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`}>\r\n      <MultiAuthLogin \r\n        position=\"top-right\"\r\n        className=\"results-login-button\"\r\n        onUserChange={handleUserChange}\r\n        onSignIn={handleSignIn}\r\n        onSignOut={handleSignOut}\r\n      />\r\n\r\n      {/* Always show header with logo */}\r\n      <div className=\"results-search-header\">\r\n        {/* Add logo container - this was missing! */}\r\n        <div className=\"results-logo-container\">\r\n          <img \r\n            src=\"/assets/whatishealthylogo.svg\" \r\n            alt=\"What is Healthy?\" \r\n            className=\"results-search-logo\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"search-input-container\">\r\n          <form onSubmit={handleNewSearchSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ask anything about health...\"\r\n              value={newQuery}\r\n              onChange={(e) => setNewQuery(e.target.value)}\r\n              className=\"search-input results-search-input\"\r\n              data-query={isTestQuery ? 'test' : ''}\r\n            />\r\n          </form>\r\n          \r\n          {/* Show image chip when image is uploaded */}\r\n          {image && (\r\n            <div className=\"image-preview\">\r\n              <div className=\"image-icon\">📷</div>\r\n              <span className=\"image-name\">\r\n                {typeof image === 'object' && image !== null ? image.name : 'Uploaded image'}\r\n              </span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setImage(null);\r\n                  setCurrentPhotoId(null);\r\n                  const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n                  if (searchInput) {\r\n                    searchInput.classList.remove('with-image');\r\n                  }\r\n                }}\r\n                className=\"remove-image\"\r\n                aria-label=\"Remove image\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"search-icons\">\r\n            {(newQuery || image) && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleClearAll}\r\n                className=\"icon-button clear-button\"\r\n                aria-label=\"Clear all\"\r\n              >\r\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n                </svg>\r\n              </button>\r\n            )}\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCameraClick}\r\n              className=\"icon-button\"\r\n              aria-label=\"Upload image\"\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n              </svg>\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleVoiceInput}\r\n              className={`icon-button ${isListening ? 'listening' : ''}`}\r\n              aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n                <path d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Results Content - Only show when not loading */}\r\n      <div className=\"results-container\">\r\n        {!isLoading && (\r\n          <>\r\n            <h1 className=\"results-header\">Search Results for: \"{query}\"</h1>\r\n            \r\n            <div className=\"results-content\">\r\n              <div className=\"health-info-card\">\r\n                <div className=\"health-info-content\">\r\n                  {/* Use the link conversion function */}\r\n                  <div className=\"markdown-content\">\r\n                    {dataSource === 'vnutrition' ? (\r\n                      (() => {\r\n                        // Try to parse and display raw data for vnutrition\r\n                        let nutrition;\r\n                        try {\r\n                          nutrition = typeof results === 'string' ? JSON.parse(results) : results;\r\n                          console.log('Raw nutrition object for debugging:', nutrition);\r\n                          \r\n                          if (nutrition && nutrition.found !== false) {\r\n                            return (\r\n                              <div>\r\n                                <h3>Nutrition Information</h3>\r\n                                <ul>\r\n                                  <li>Calories per serving: {nutrition.calories_per_serving || 0}</li>\r\n                                  <li>Protein: {nutrition.protein_g || 0}g</li>\r\n                                  <li>Carbs: {nutrition.carbs_g || 0}g</li>\r\n                                  <li>Fat: {nutrition.fat_g || 0}g</li>\r\n                                  <li>NOVA Score: {nutrition.nova_classification || 1}</li>\r\n                                  <li>Processing Level: {nutrition.nova_description || nutrition.processed_level || 'Unknown'}</li>\r\n                                </ul>\r\n                              </div>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <div>\r\n                                <h3>Raw Database Data (Debug)</h3>\r\n                                <pre style={{ fontSize: '12px', background: '#f5f5f5', padding: '10px' }}>\r\n                                  {JSON.stringify(nutrition, null, 2)}\r\n                                </pre>\r\n                              </div>\r\n                            );\r\n                          }\r\n                        } catch {\r\n                          return <div>Error parsing nutrition data</div>;\r\n                        }\r\n                      })()\r\n                    ) : (\r\n                      convertLinksToClickable(results)\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"data-source-indicator\">\r\n                  {dataSource === 'openai' ? (\r\n                    <span>Powered by AI</span>\r\n                  ) : dataSource === 'error' ? (\r\n                    <span className=\"error-source\">Error retrieving data</span>\r\n                  ) : (\r\n                    <span>What Is Healthy?</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"sidebar\">\r\n                {/* Quality Chart - Only show when we have results */}\r\n                <div className=\"quality-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                  <ResultQualityPie \r\n                    query={query}\r\n                    results={results}\r\n                    dataSource={dataSource}\r\n                    citations={citations}\r\n                  />\r\n                </div>\r\n\r\n                {/* Nutrition Charts - Only show when we have nutrition data */}\r\n                {dataSource === 'vnutrition' && (\r\n                  <>\r\n                    <div className=\"nutrition-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                      <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                        Nutrition Breakdown\r\n                      </h3>\r\n                      <NutritionChart \r\n                        query={query}\r\n                        results={results}\r\n                        dataSource={dataSource}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"nova-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                      <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                        Processing Level (NOVA Score)\r\n                      </h3>\r\n                      <NovaChart \r\n                        query={query}\r\n                        results={results}\r\n                        dataSource={dataSource}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n                \r\n                <div className=\"related-topics-card\">\r\n                  <h3>Related Health Topics</h3>\r\n                  <ul className=\"related-topics-list\">\r\n                    {isTestQuery ? (\r\n                      dummyTestData.relatedTopics.map((topic, index) => (\r\n                        <li key={index}>\r\n                          <button \r\n                            onClick={() => onNewSearch(topic)}\r\n                            className=\"topic-button\"\r\n                          >\r\n                            {topic}\r\n                          </button>\r\n                        </li>\r\n                      ))\r\n                    ) : \r\n                      defaultRelatedTopics.map((topic, index) => (\r\n                        <li key={index}>\r\n                          <button \r\n                            onClick={() => onNewSearch(topic)}\r\n                            className=\"topic-button\"\r\n                          >\r\n                            {topic}\r\n                          </button>\r\n                        </li>\r\n                      ))\r\n                    }\r\n                  </ul>\r\n                </div>\r\n                \r\n                <div className=\"resources-card\">\r\n                  <h3>Useful Resources</h3>\r\n                  <ul className=\"resources-list\">\r\n                    {isTestQuery ? (\r\n                      dummyTestData.resources.map((resource, index) => (\r\n                        <li key={index}>\r\n                          <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {resource.text}\r\n                          </a>\r\n                        </li>\r\n                      ))\r\n                    ) : (\r\n                      defaultResources.map((resource, index) => (\r\n                        <li key={index}>\r\n                          <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {resource.text}\r\n                          </a>\r\n                        </li>\r\n                      ))\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        \r\n        {/* Loading State Overlay - Only shows when loading */}\r\n        {isLoading && (\r\n          <Spinner overlay message=\"Searching.......\" />\r\n        )}\r\n\r\n        {/* ImageUploadModal - always available */}\r\n        <ImageUploadModal\r\n          isOpen={isUploadModalOpen}\r\n          onClose={() => setIsUploadModalOpen(false)}\r\n          onAnalysisComplete={handleAnalysisComplete}\r\n          title=\"Upload Image\"\r\n          subtitle=\"Upload images for analysis\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}