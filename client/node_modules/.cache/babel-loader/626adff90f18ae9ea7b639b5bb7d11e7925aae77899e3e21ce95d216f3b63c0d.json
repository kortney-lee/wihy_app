{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\VHealthSearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './VHealthSearch.css';\nimport ImageUploadModal from './components/ImageUploadModal';\nimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';\nimport { healthSearchService } from './services/healthSearchService';\nimport { searchCache } from './services/searchCache';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VHealthSearch = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [imageError, setImageError] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('Searching...');\n  const navigate = useNavigate();\n  const searchInputRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const progressFromMessage = msg => {\n    if (msg.includes('Initializing')) return 10;\n    if (msg.includes('Checking cache')) return 25;\n    if (msg.includes('Analyzing with AI')) return 55;\n    if (msg.includes('Processing results')) return 75;\n    if (msg.includes('Results ready') || msg.includes('Response ready')) return 95;\n    if (msg.includes('Processing image')) return 35;\n    if (msg.includes('Checking nutrition')) return 45;\n    if (msg.includes('Analyzing nutrition')) return 60;\n    if (msg.includes('Processing nutrition')) return 80;\n    if (msg.includes('complete')) return 95;\n    if (msg.includes('failed')) return 100; // will close shortly\n    return 40; // default midpoint\n  };\n  const handleUserChange = user => {\n    console.log('User changed:', user);\n  };\n  const handleSignIn = user => {\n    console.log('User signed in:', user);\n  };\n  const handleSignOut = () => {\n    console.log('User signed out');\n  };\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) return;\n    setIsLoading(true);\n    setLoadingMessage('Initializing search...');\n    try {\n      // Step 1: Check cache first\n      setLoadingMessage('Checking cache...');\n      await new Promise(resolve => setTimeout(resolve, 200));\n      const cachedResult = searchCache.getCachedResult(searchQuery.toLowerCase());\n      if (cachedResult) {\n        console.log('Found cached result for:', searchQuery);\n        setLoadingMessage('Loading cached results...');\n        await new Promise(resolve => setTimeout(resolve, 300));\n\n        // Don't reset loading here - let the results page handle it\n        navigate(`/results?q=${encodeURIComponent(searchQuery)}`);\n        return;\n      }\n\n      // Step 2: Query the health search service (OpenAI/API)\n      setLoadingMessage('Analyzing with AI...');\n      console.log('Searching for:', searchQuery);\n      try {\n        const searchResults = await healthSearchService.searchHealthInfo(searchQuery);\n        console.log('Health search results:', searchResults);\n        if (searchResults) {\n          // Step 3: Cache the results\n          setLoadingMessage('Processing results...');\n          const cacheData = {\n            query: searchQuery,\n            results: searchResults,\n            timestamp: Date.now(),\n            dataSource: searchResults.dataSource || 'openai'\n          };\n\n          // Cache the results\n          if ('cacheSearchResult' in searchCache) {\n            searchCache.cacheSearchResult(searchQuery.toLowerCase(), cacheData);\n          } else if ('set' in searchCache) {\n            searchCache.set(searchQuery.toLowerCase(), cacheData);\n          } else if ('cache' in searchCache) {\n            searchCache.cache(searchQuery.toLowerCase(), cacheData);\n          } else {\n            console.warn('Cache method not found, skipping cache');\n          }\n\n          // Step 4: Only navigate when we have complete results\n          setLoadingMessage('Results ready!');\n          await new Promise(resolve => setTimeout(resolve, 200));\n\n          // Don't reset loading here - let the results page handle it\n          navigate(`/results?q=${encodeURIComponent(searchQuery)}`);\n          return;\n        }\n      } catch (apiError) {\n        console.error('Health search service failed:', apiError);\n        setLoadingMessage('API unavailable, trying fallback...');\n      }\n\n      // Fallback: Only if we really can't get data from API\n      setLoadingMessage('Generating fallback response...');\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const mockResult = {\n        query: searchQuery,\n        results: `I understand you're asking about \"${searchQuery}\". This is a health-related query that would benefit from professional medical advice. For the most accurate and personalized information, please consult with healthcare professionals.`,\n        timestamp: Date.now(),\n        dataSource: 'fallback'\n      };\n\n      // Cache the fallback result\n      try {\n        if ('cacheSearchResult' in searchCache) {\n          searchCache.cacheSearchResult(searchQuery.toLowerCase(), mockResult);\n        } else if ('set' in searchCache) {\n          searchCache.set(searchQuery.toLowerCase(), mockResult);\n        } else if ('cache' in searchCache) {\n          searchCache.cache(searchQuery.toLowerCase(), mockResult);\n        }\n      } catch (cacheError) {\n        console.warn('Failed to cache result:', cacheError);\n      }\n      setLoadingMessage('Response ready!');\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      // Don't reset loading here - let the results page handle it\n      navigate(`/results?q=${encodeURIComponent(searchQuery)}`);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setLoadingMessage('Search failed. Please try again.');\n\n      // Only reset loading on actual errors\n      setTimeout(() => {\n        setIsLoading(false);\n        setLoadingMessage('Searching...');\n      }, 2000);\n    }\n  };\n  const handleAnalysisComplete = async foodName => {\n    if (!foodName) {\n      setIsUploadModalOpen(false);\n      return;\n    }\n    setIsLoading(true);\n    setLoadingMessage('Processing image analysis...');\n    try {\n      console.log(\"Image analysis completed, food detected:\", foodName);\n      setSearchQuery(foodName);\n      setLoadingMessage('Checking nutrition database...');\n      const cachedNutrition = searchCache.getCachedResult(foodName.toLowerCase());\n      if (cachedNutrition) {\n        setLoadingMessage('Found nutrition data!');\n        await new Promise(resolve => setTimeout(resolve, 300));\n\n        // Don't reset loading - let results page handle it\n        navigate(`/results?q=${encodeURIComponent(foodName)}`);\n        return;\n      }\n      setLoadingMessage('Analyzing nutrition content...');\n      try {\n        const nutritionResults = await healthSearchService.searchHealthInfo(foodName);\n        if (nutritionResults) {\n          setLoadingMessage('Processing nutrition data...');\n          const nutritionCache = {\n            query: foodName,\n            results: nutritionResults,\n            timestamp: Date.now(),\n            dataSource: nutritionResults.dataSource || 'nutrition-api',\n            imageAnalysis: true\n          };\n\n          // Cache the results\n          try {\n            if ('cacheSearchResult' in searchCache) {\n              searchCache.cacheSearchResult(foodName.toLowerCase(), nutritionCache);\n            } else if ('set' in searchCache) {\n              searchCache.set(foodName.toLowerCase(), nutritionCache);\n            } else if ('cache' in searchCache) {\n              searchCache.cache(foodName.toLowerCase(), nutritionCache);\n            }\n          } catch (cacheError) {\n            console.warn('Failed to cache nutrition result:', cacheError);\n          }\n          setLoadingMessage('Nutrition analysis complete!');\n          await new Promise(resolve => setTimeout(resolve, 300));\n\n          // Don't reset loading - let results page handle it\n          navigate(`/results?q=${encodeURIComponent(foodName)}`);\n          return;\n        }\n      } catch (nutritionError) {\n        console.error('Nutrition analysis failed:', nutritionError);\n        setLoadingMessage('Generating nutrition summary...');\n      }\n\n      // Fallback nutrition data\n      setLoadingMessage('Creating nutrition profile...');\n      await new Promise(resolve => setTimeout(resolve, 800));\n      const mockNutritionResult = {\n        query: foodName,\n        results: `Nutrition analysis for ${foodName}: This food item has been identified from your image. For detailed nutritional information including calories, macronutrients, vitamins, and minerals, please consult nutritional databases or speak with a registered dietitian.`,\n        timestamp: Date.now(),\n        dataSource: 'image-analysis',\n        imageAnalysis: true\n      };\n\n      // Cache fallback\n      try {\n        if ('cacheSearchResult' in searchCache) {\n          searchCache.cacheSearchResult(foodName.toLowerCase(), mockNutritionResult);\n        } else if ('set' in searchCache) {\n          searchCache.set(foodName.toLowerCase(), mockNutritionResult);\n        } else if ('cache' in searchCache) {\n          searchCache.cache(foodName.toLowerCase(), mockNutritionResult);\n        }\n      } catch (cacheError) {\n        console.warn('Failed to cache mock nutrition result:', cacheError);\n      }\n      setLoadingMessage('Nutrition profile ready!');\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      // Don't reset loading - let results page handle it\n      navigate(`/results?q=${encodeURIComponent(foodName)}`);\n    } catch (error) {\n      console.error(\"Error processing analyzed food:\", error);\n      setLoadingMessage('Analysis failed. Please try again.');\n      setTimeout(() => {\n        setIsLoading(false);\n        setLoadingMessage('Searching...');\n      }, 2000);\n    } finally {\n      setIsUploadModalOpen(false);\n    }\n  };\n\n  // Reset loading state on component unmount\n  useEffect(() => {\n    return () => {\n      setIsLoading(false);\n      setLoadingMessage('Searching...');\n    };\n  }, []);\n  const LoadingOverlay = ({\n    message,\n    progress\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 9999\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        borderRadius: '12px',\n        padding: '40px',\n        textAlign: 'center',\n        minWidth: '320px',\n        boxShadow: '0 10px 25px rgba(0, 0, 0, 0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '48px',\n          height: '48px',\n          border: '4px solid #e5e7eb',\n          borderTop: '4px solid #3b82f6',\n          borderRadius: '50%',\n          animation: 'spin 1s linear infinite',\n          margin: '0 auto 24px auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 8px 0',\n          fontSize: '24px',\n          fontWeight: '600',\n          color: '#1f2937'\n        },\n        children: \"Loading Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0 0 24px 0',\n          fontSize: '16px',\n          color: '#6b7280'\n        },\n        children: \"Please wait while we process your request...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '8px',\n          backgroundColor: '#e5e7eb',\n          borderRadius: '4px',\n          overflow: 'hidden',\n          marginBottom: '12px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${progress}%`,\n            height: '100%',\n            backgroundColor: '#3b82f6',\n            borderRadius: '4px',\n            transition: 'width 0.3s ease'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          fontSize: '14px',\n          color: '#6b7280'\n        },\n        children: [progress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-landing\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      message: loadingMessage,\n      progress: progressFromMessage(loadingMessage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MultiAuthLogin, {\n      position: \"top-right\",\n      className: \"main-login-button\",\n      onUserChange: handleUserChange,\n      onSignIn: handleSignIn,\n      onSignOut: handleSignOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container-centered\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: !imageError ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/293a2ef6-826c-4ec9-9b26-c2abf3bb894f.png\",\n          alt: \"What is Healthy?\",\n          className: \"search-logo-image\",\n          onError: () => setImageError(true),\n          onLoad: () => setImageError(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"search-logo\",\n          children: \"What is Healthy?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleSearch();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && handleSearch(),\n            placeholder: \"Ask anything about health...\",\n            className: \"search-input\",\n            autoFocus: true,\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-icons\",\n          children: [searchQuery && !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSearchQuery(''),\n            className: \"icon-button clear-button\",\n            \"aria-label\": \"Clear all\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsUploadModalOpen(true),\n            className: \"icon-button\",\n            \"aria-label\": \"Upload image\",\n            disabled: isLoading,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              if (isLoading) return;\n              if (!('webkitSpeechRecognition' in window)) {\n                alert('Speech recognition not supported in this browser');\n                return;\n              }\n              if (!recognitionRef.current) {\n                const recognition = new window.webkitSpeechRecognition();\n                recognition.continuous = false;\n                recognition.interimResults = false;\n                recognition.lang = 'en-US';\n                recognition.onstart = () => setIsListening(true);\n                recognition.onresult = event => {\n                  const transcript = event.results[0][0].transcript;\n                  setSearchQuery(transcript);\n                  setIsListening(false);\n                };\n                recognition.onerror = () => setIsListening(false);\n                recognition.onend = () => setIsListening(false);\n                recognitionRef.current = recognition;\n              }\n              if (!isListening) {\n                recognitionRef.current.start();\n              } else {\n                recognitionRef.current.stop();\n                setIsListening(false);\n              }\n            },\n            className: `icon-button ${isListening ? 'listening' : ''}`,\n            \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n            disabled: isLoading,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.preventDefault();\n            handleSearch();\n          },\n          className: \"search-btn primary\",\n          disabled: !searchQuery.trim() || isLoading,\n          children: isLoading ? loadingMessage : 'Analyze Nutrition'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (isLoading) return;\n            const healthyFoods = ['apple', 'broccoli', 'salmon', 'quinoa', 'blueberries'];\n            const randomFood = healthyFoods[Math.floor(Math.random() * healthyFoods.length)];\n            setSearchQuery(randomFood);\n          },\n          className: \"search-btn secondary\",\n          type: \"button\",\n          style: {\n            color: '#000000'\n          },\n          disabled: isLoading,\n          children: \"I'm Feeling Healthy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n      isOpen: isUploadModalOpen,\n      onClose: () => setIsUploadModalOpen(false),\n      onAnalysisComplete: handleAnalysisComplete,\n      title: \"Upload Image\",\n      subtitle: \"Upload Image for Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_s(VHealthSearch, \"xe1rtLS6GoK+xQzENQi/SrDl3qg=\", false, function () {\n  return [useNavigate];\n});\n_c = VHealthSearch;\nexport default VHealthSearch;\n\n/* Add this CSS to your styles\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"VHealthSearch\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","ImageUploadModal","MultiAuthLogin","healthSearchService","searchCache","jsxDEV","_jsxDEV","VHealthSearch","_s","searchQuery","setSearchQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","isLoading","setIsLoading","imageError","setImageError","loadingMessage","setLoadingMessage","navigate","searchInputRef","recognitionRef","progressFromMessage","msg","includes","handleUserChange","user","console","log","handleSignIn","handleSignOut","handleSearch","trim","Promise","resolve","setTimeout","cachedResult","getCachedResult","toLowerCase","encodeURIComponent","searchResults","searchHealthInfo","cacheData","query","results","timestamp","Date","now","dataSource","cacheSearchResult","set","cache","warn","apiError","error","mockResult","cacheError","handleAnalysisComplete","foodName","cachedNutrition","nutritionResults","nutritionCache","imageAnalysis","nutritionError","mockNutritionResult","LoadingOverlay","message","progress","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","children","borderRadius","padding","textAlign","minWidth","boxShadow","width","height","border","borderTop","animation","margin","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","color","overflow","marginBottom","transition","className","onUserChange","onSignIn","onSignOut","src","alt","onError","onLoad","onSubmit","e","preventDefault","type","value","onChange","target","onKeyPress","key","placeholder","autoFocus","disabled","onClick","viewBox","fill","d","window","alert","current","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","transcript","onerror","onend","start","stop","healthyFoods","randomFood","Math","floor","random","length","isOpen","onClose","onAnalysisComplete","title","subtitle","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/VHealthSearch.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './VHealthSearch.css';\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';\r\nimport { healthSearchService } from './services/healthSearchService';\r\nimport { searchCache } from './services/searchCache';\r\nimport { foodAnalysisService } from './components/foodAnalysisService';\r\n\r\nconst VHealthSearch: React.FC = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [loadingMessage, setLoadingMessage] = useState('Searching...');\r\n  \r\n  const navigate = useNavigate();\r\n  const searchInputRef = useRef<HTMLInputElement>(null);\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  const progressFromMessage = (msg: string) => {\r\n    if (msg.includes('Initializing')) return 10;\r\n    if (msg.includes('Checking cache')) return 25;\r\n    if (msg.includes('Analyzing with AI')) return 55;\r\n    if (msg.includes('Processing results')) return 75;\r\n    if (msg.includes('Results ready') || msg.includes('Response ready')) return 95;\r\n\r\n    if (msg.includes('Processing image')) return 35;\r\n    if (msg.includes('Checking nutrition')) return 45;\r\n    if (msg.includes('Analyzing nutrition')) return 60;\r\n    if (msg.includes('Processing nutrition')) return 80;\r\n    if (msg.includes('complete')) return 95;\r\n\r\n    if (msg.includes('failed')) return 100; // will close shortly\r\n    return 40; // default midpoint\r\n  };\r\n\r\n  const handleUserChange = (user: any) => {\r\n    console.log('User changed:', user);\r\n  };\r\n\r\n  const handleSignIn = (user: any) => {\r\n    console.log('User signed in:', user);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    console.log('User signed out');\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchQuery.trim()) return;\r\n    \r\n    setIsLoading(true);\r\n    setLoadingMessage('Initializing search...');\r\n    \r\n    try {\r\n      // Step 1: Check cache first\r\n      setLoadingMessage('Checking cache...');\r\n      await new Promise(resolve => setTimeout(resolve, 200));\r\n      \r\n      const cachedResult = searchCache.getCachedResult(searchQuery.toLowerCase());\r\n      \r\n      if (cachedResult) {\r\n        console.log('Found cached result for:', searchQuery);\r\n        setLoadingMessage('Loading cached results...');\r\n        await new Promise(resolve => setTimeout(resolve, 300));\r\n        \r\n        // Don't reset loading here - let the results page handle it\r\n        navigate(`/results?q=${encodeURIComponent(searchQuery)}`);\r\n        return;\r\n      }\r\n\r\n      // Step 2: Query the health search service (OpenAI/API)\r\n      setLoadingMessage('Analyzing with AI...');\r\n      console.log('Searching for:', searchQuery);\r\n      \r\n      try {\r\n        const searchResults = await healthSearchService.searchHealthInfo(searchQuery);\r\n        console.log('Health search results:', searchResults);\r\n        \r\n        if (searchResults) {\r\n          // Step 3: Cache the results\r\n          setLoadingMessage('Processing results...');\r\n          const cacheData = {\r\n            query: searchQuery,\r\n            results: searchResults,\r\n            timestamp: Date.now(),\r\n            dataSource: searchResults.dataSource || 'openai'\r\n          };\r\n          \r\n          // Cache the results\r\n          if ('cacheSearchResult' in searchCache) {\r\n            (searchCache as any).cacheSearchResult(searchQuery.toLowerCase(), cacheData);\r\n          } else if ('set' in searchCache) {\r\n            (searchCache as any).set(searchQuery.toLowerCase(), cacheData);\r\n          } else if ('cache' in searchCache) {\r\n            (searchCache as any).cache(searchQuery.toLowerCase(), cacheData);\r\n          } else {\r\n            console.warn('Cache method not found, skipping cache');\r\n          }\r\n          \r\n          // Step 4: Only navigate when we have complete results\r\n          setLoadingMessage('Results ready!');\r\n          await new Promise(resolve => setTimeout(resolve, 200));\r\n          \r\n          // Don't reset loading here - let the results page handle it\r\n          navigate(`/results?q=${encodeURIComponent(searchQuery)}`);\r\n          return;\r\n        }\r\n      } catch (apiError) {\r\n        console.error('Health search service failed:', apiError);\r\n        setLoadingMessage('API unavailable, trying fallback...');\r\n      }\r\n\r\n      // Fallback: Only if we really can't get data from API\r\n      setLoadingMessage('Generating fallback response...');\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const mockResult = {\r\n        query: searchQuery,\r\n        results: `I understand you're asking about \"${searchQuery}\". This is a health-related query that would benefit from professional medical advice. For the most accurate and personalized information, please consult with healthcare professionals.`,\r\n        timestamp: Date.now(),\r\n        dataSource: 'fallback' as const\r\n      };\r\n      \r\n      // Cache the fallback result\r\n      try {\r\n        if ('cacheSearchResult' in searchCache) {\r\n          (searchCache as any).cacheSearchResult(searchQuery.toLowerCase(), mockResult);\r\n        } else if ('set' in searchCache) {\r\n          (searchCache as any).set(searchQuery.toLowerCase(), mockResult);\r\n        } else if ('cache' in searchCache) {\r\n          (searchCache as any).cache(searchQuery.toLowerCase(), mockResult);\r\n        }\r\n      } catch (cacheError) {\r\n        console.warn('Failed to cache result:', cacheError);\r\n      }\r\n      \r\n      setLoadingMessage('Response ready!');\r\n      await new Promise(resolve => setTimeout(resolve, 200));\r\n      \r\n      // Don't reset loading here - let the results page handle it\r\n      navigate(`/results?q=${encodeURIComponent(searchQuery)}`);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Search error:\", error);\r\n      setLoadingMessage('Search failed. Please try again.');\r\n      \r\n      // Only reset loading on actual errors\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        setLoadingMessage('Searching...');\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const handleAnalysisComplete = async (foodName: string): Promise<void> => {\r\n    if (!foodName) {\r\n      setIsUploadModalOpen(false);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setLoadingMessage('Processing image analysis...');\r\n    \r\n    try {\r\n      console.log(\"Image analysis completed, food detected:\", foodName);\r\n      setSearchQuery(foodName);\r\n      \r\n      setLoadingMessage('Checking nutrition database...');\r\n      const cachedNutrition = searchCache.getCachedResult(foodName.toLowerCase());\r\n      \r\n      if (cachedNutrition) {\r\n        setLoadingMessage('Found nutrition data!');\r\n        await new Promise(resolve => setTimeout(resolve, 300));\r\n        \r\n        // Don't reset loading - let results page handle it\r\n        navigate(`/results?q=${encodeURIComponent(foodName)}`);\r\n        return;\r\n      }\r\n\r\n      setLoadingMessage('Analyzing nutrition content...');\r\n      \r\n      try {\r\n        const nutritionResults = await healthSearchService.searchHealthInfo(foodName);\r\n        \r\n        if (nutritionResults) {\r\n          setLoadingMessage('Processing nutrition data...');\r\n          \r\n          const nutritionCache = {\r\n            query: foodName,\r\n            results: nutritionResults,\r\n            timestamp: Date.now(),\r\n            dataSource: nutritionResults.dataSource || 'nutrition-api',\r\n            imageAnalysis: true\r\n          };\r\n          \r\n          // Cache the results\r\n          try {\r\n            if ('cacheSearchResult' in searchCache) {\r\n              (searchCache as any).cacheSearchResult(foodName.toLowerCase(), nutritionCache);\r\n            } else if ('set' in searchCache) {\r\n              (searchCache as any).set(foodName.toLowerCase(), nutritionCache);\r\n            } else if ('cache' in searchCache) {\r\n              (searchCache as any).cache(foodName.toLowerCase(), nutritionCache);\r\n            }\r\n          } catch (cacheError) {\r\n            console.warn('Failed to cache nutrition result:', cacheError);\r\n          }\r\n          \r\n          setLoadingMessage('Nutrition analysis complete!');\r\n          await new Promise(resolve => setTimeout(resolve, 300));\r\n          \r\n          // Don't reset loading - let results page handle it\r\n          navigate(`/results?q=${encodeURIComponent(foodName)}`);\r\n          return;\r\n        }\r\n      } catch (nutritionError) {\r\n        console.error('Nutrition analysis failed:', nutritionError);\r\n        setLoadingMessage('Generating nutrition summary...');\r\n      }\r\n\r\n      // Fallback nutrition data\r\n      setLoadingMessage('Creating nutrition profile...');\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n      \r\n      const mockNutritionResult = {\r\n        query: foodName,\r\n        results: `Nutrition analysis for ${foodName}: This food item has been identified from your image. For detailed nutritional information including calories, macronutrients, vitamins, and minerals, please consult nutritional databases or speak with a registered dietitian.`,\r\n        timestamp: Date.now(),\r\n        dataSource: 'image-analysis' as const,\r\n        imageAnalysis: true\r\n      };\r\n      \r\n      // Cache fallback\r\n      try {\r\n        if ('cacheSearchResult' in searchCache) {\r\n          (searchCache as any).cacheSearchResult(foodName.toLowerCase(), mockNutritionResult);\r\n        } else if ('set' in searchCache) {\r\n          (searchCache as any).set(foodName.toLowerCase(), mockNutritionResult);\r\n        } else if ('cache' in searchCache) {\r\n          (searchCache as any).cache(foodName.toLowerCase(), mockNutritionResult);\r\n        }\r\n      } catch (cacheError) {\r\n        console.warn('Failed to cache mock nutrition result:', cacheError);\r\n      }\r\n      \r\n      setLoadingMessage('Nutrition profile ready!');\r\n      await new Promise(resolve => setTimeout(resolve, 200));\r\n      \r\n      // Don't reset loading - let results page handle it\r\n      navigate(`/results?q=${encodeURIComponent(foodName)}`);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error processing analyzed food:\", error);\r\n      setLoadingMessage('Analysis failed. Please try again.');\r\n      \r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        setLoadingMessage('Searching...');\r\n      }, 2000);\r\n    } finally {\r\n      setIsUploadModalOpen(false);\r\n    }\r\n  };\r\n\r\n  // Reset loading state on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsLoading(false);\r\n      setLoadingMessage('Searching...');\r\n    };\r\n  }, []);\r\n\r\n  const LoadingOverlay: React.FC<{ message: string; progress: number }> = ({ message, progress }) => (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 9999\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: 'white',\r\n        borderRadius: '12px',\r\n        padding: '40px',\r\n        textAlign: 'center',\r\n        minWidth: '320px',\r\n        boxShadow: '0 10px 25px rgba(0, 0, 0, 0.2)'\r\n      }}>\r\n        {/* Spinner */}\r\n        <div style={{\r\n          width: '48px',\r\n          height: '48px',\r\n          border: '4px solid #e5e7eb',\r\n          borderTop: '4px solid #3b82f6',\r\n          borderRadius: '50%',\r\n          animation: 'spin 1s linear infinite',\r\n          margin: '0 auto 24px auto'\r\n        }} />\r\n        \r\n        {/* Title */}\r\n        <h3 style={{\r\n          margin: '0 0 8px 0',\r\n          fontSize: '24px',\r\n          fontWeight: '600',\r\n          color: '#1f2937'\r\n        }}>\r\n          Loading Content\r\n        </h3>\r\n        \r\n        {/* Subtitle */}\r\n        <p style={{\r\n          margin: '0 0 24px 0',\r\n          fontSize: '16px',\r\n          color: '#6b7280'\r\n        }}>\r\n          Please wait while we process your request...\r\n        </p>\r\n        \r\n        {/* Progress Bar */}\r\n        <div style={{\r\n          width: '100%',\r\n          height: '8px',\r\n          backgroundColor: '#e5e7eb',\r\n          borderRadius: '4px',\r\n          overflow: 'hidden',\r\n          marginBottom: '12px'\r\n        }}>\r\n          <div style={{\r\n            width: `${progress}%`,\r\n            height: '100%',\r\n            backgroundColor: '#3b82f6',\r\n            borderRadius: '4px',\r\n            transition: 'width 0.3s ease'\r\n          }} />\r\n        </div>\r\n        \r\n        {/* Progress Text */}\r\n        <p style={{\r\n          margin: 0,\r\n          fontSize: '14px',\r\n          color: '#6b7280'\r\n        }}>\r\n          {progress}% Complete\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"search-landing\">\r\n      {isLoading && (\r\n        <LoadingOverlay \r\n          message={loadingMessage}\r\n          progress={progressFromMessage(loadingMessage)}\r\n        />\r\n      )}\r\n      \r\n      <MultiAuthLogin \r\n        position=\"top-right\"\r\n        className=\"main-login-button\"\r\n        onUserChange={handleUserChange}\r\n        onSignIn={handleSignIn}\r\n        onSignOut={handleSignOut}\r\n      />\r\n\r\n      <div className=\"search-container-centered\">\r\n        <div className=\"logo-container\">\r\n          {!imageError ? (\r\n            <img \r\n              src=\"/assets/293a2ef6-826c-4ec9-9b26-c2abf3bb894f.png\"\r\n              alt=\"What is Healthy?\"\r\n              className=\"search-logo-image\"\r\n              onError={() => setImageError(true)}\r\n              onLoad={() => setImageError(false)}\r\n            />\r\n          ) : (\r\n            <h1 className=\"search-logo\">\r\n              What is Healthy?\r\n            </h1>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"search-input-container\">\r\n          <form onSubmit={(e) => { \r\n            e.preventDefault();\r\n            handleSearch();\r\n          }}>\r\n            <input\r\n              type=\"text\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\r\n              placeholder=\"Ask anything about health...\"\r\n              className=\"search-input\"\r\n              autoFocus\r\n              disabled={isLoading}\r\n            />\r\n          </form>\r\n\r\n          <div className=\"search-icons\">\r\n            {searchQuery && !isLoading && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setSearchQuery('')}\r\n                className=\"icon-button clear-button\"\r\n                aria-label=\"Clear all\"\r\n              >\r\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n                </svg>\r\n              </button>\r\n            )}\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setIsUploadModalOpen(true)}\r\n              className=\"icon-button\"\r\n              aria-label=\"Upload image\"\r\n              disabled={isLoading}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n              </svg>\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (isLoading) return;\r\n                \r\n                if (!('webkitSpeechRecognition' in window)) {\r\n                  alert('Speech recognition not supported in this browser');\r\n                  return;\r\n                }\r\n\r\n                if (!recognitionRef.current) {\r\n                  const recognition = new (window as any).webkitSpeechRecognition();\r\n                  recognition.continuous = false;\r\n                  recognition.interimResults = false;\r\n                  recognition.lang = 'en-US';\r\n\r\n                  recognition.onstart = () => setIsListening(true);\r\n                  recognition.onresult = (event: any) => {\r\n                    const transcript = event.results[0][0].transcript;\r\n                    setSearchQuery(transcript);\r\n                    setIsListening(false);\r\n                  };\r\n                  recognition.onerror = () => setIsListening(false);\r\n                  recognition.onend = () => setIsListening(false);\r\n\r\n                  recognitionRef.current = recognition;\r\n                }\r\n\r\n                if (!isListening) {\r\n                  recognitionRef.current.start();\r\n                } else {\r\n                  recognitionRef.current.stop();\r\n                  setIsListening(false);\r\n                }\r\n              }}\r\n              className={`icon-button ${isListening ? 'listening' : ''}`}\r\n              aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n              disabled={isLoading}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n                <path d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-buttons\">\r\n          <button \r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleSearch();\r\n            }}\r\n            className=\"search-btn primary\"\r\n            disabled={!searchQuery.trim() || isLoading}\r\n          >\r\n            {isLoading ? loadingMessage : 'Analyze Nutrition'}\r\n          </button>\r\n          \r\n          <button \r\n            onClick={() => {\r\n              if (isLoading) return;\r\n              const healthyFoods = ['apple', 'broccoli', 'salmon', 'quinoa', 'blueberries'];\r\n              const randomFood = healthyFoods[Math.floor(Math.random() * healthyFoods.length)];\r\n              setSearchQuery(randomFood);\r\n            }}\r\n            className=\"search-btn secondary\"\r\n            type=\"button\"\r\n            style={{ color: '#000000' }}\r\n            disabled={isLoading}\r\n          >\r\n            I'm Feeling Healthy\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <ImageUploadModal\r\n        isOpen={isUploadModalOpen}\r\n        onClose={() => setIsUploadModalOpen(false)}\r\n        onAnalysisComplete={handleAnalysisComplete}\r\n        title=\"Upload Image\"\r\n        subtitle=\"Upload Image for Analysis\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VHealthSearch;\r\n\r\n/* Add this CSS to your styles\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}