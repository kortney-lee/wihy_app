{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\VHealthSearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles/VHealthSearch.css';\nimport ImageUploadModal from './components/ImageUploadModal';\nimport MultiAuthLogin from './components/MultiAuthLogin';\nimport { healthSearchService } from './services/healthSearchService';\nimport HealthNewsFeed from './components/HealthNewsFeed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VHealthSearch = () => {\n  _s();\n  // ================================\n  // STATE MANAGEMENT\n  // ================================\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [imageError, setImageError] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('Searching...');\n  const [showFeelingHealthyContent, setShowFeelingHealthyContent] = useState(false);\n\n  // ADD: Rotating text for \"I'm Feeling Healthy\" button\n  const [currentCategoryIndex, setCurrentCategoryIndex] = useState(0);\n  const [isRotating, setIsRotating] = useState(false);\n\n  // ADD: Selected category state for news filtering\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  // ADD: Closing state for news feed animation\n  const [isClosingNewsfeed, setIsClosingNewsfeed] = useState(false);\n  const [visibleArticleCount, setVisibleArticleCount] = useState(3);\n\n  // ADD: State to track if more articles are available\n  const [hasMoreArticles, setHasMoreArticles] = useState(true);\n\n  // Health categories that will rotate (excluding \"All Health News\" since that's what \"I'm Feeling Healthy\" maps to)\n  const healthCategories = ['I\\'m Feeling Healthy', 'Nutrition', 'Medical Research', 'Public Health', 'Clinical Studies', 'Prevention', 'Mental Health', 'General Health'];\n  const navigate = useNavigate();\n  const searchInputRef = useRef(null);\n  const recognitionRef = useRef(null);\n\n  // ADD THESE REFS for scroll handling\n  const lastYRef = useRef(window.scrollY);\n  const tickingRef = useRef(false);\n  const justOpenedAtRef = useRef(0);\n  const touchStartY = useRef(0);\n  const openFeed = () => {\n    lastYRef.current = window.scrollY; // prime direction\n    justOpenedAtRef.current = Date.now(); // grace window\n    setShowFeelingHealthyContent(true);\n    setSelectedCategory('all');\n    setVisibleArticleCount(3);\n  };\n  const closeFeed = () => {\n    if (isClosingNewsfeed) return;\n    setIsClosingNewsfeed(true);\n    setTimeout(() => {\n      setShowFeelingHealthyContent(false);\n      setSearchQuery('What is Healthy?');\n      setSelectedCategory('all');\n      setVisibleArticleCount(3);\n      setIsClosingNewsfeed(false);\n    }, 400); // match your CSS animation\n  };\n\n  // ================================\n  // UTILITY FUNCTIONS\n  // ================================\n\n  /**\r\n   * PROGRESS CALCULATOR\r\n   * Converts loading message text to progress percentage for UI feedback\r\n   * @param msg - The current loading message\r\n   * @returns Progress percentage (0-100)\r\n   */\n  const progressFromMessage = msg => {\n    if (msg.includes('Initializing')) return 10;\n    if (msg.includes('Checking cache')) return 25;\n    if (msg.includes('Analyzing with AI')) return 55;\n    if (msg.includes('Processing results')) return 75;\n    if (msg.includes('Results ready') || msg.includes('Response ready')) return 95;\n    if (msg.includes('Processing image')) return 35;\n    if (msg.includes('Checking nutrition')) return 45;\n    if (msg.includes('Analyzing nutrition')) return 60;\n    if (msg.includes('Processing nutrition')) return 80;\n    if (msg.includes('complete')) return 95;\n    if (msg.includes('failed')) return 100; // will close shortly\n    return 40; // default midpoint\n  };\n\n  // ================================\n  // AUTHENTICATION HANDLERS\n  // ================================\n\n  /**\r\n   * USER CHANGE HANDLER\r\n   * Handles when user authentication state changes\r\n   * @param user - User object from auth service\r\n   */\n  const handleUserChange = user => {\n    console.log('User changed:', user);\n  };\n\n  /**\r\n   * SIGN IN HANDLER\r\n   * Handles successful user sign-in\r\n   * @param user - Authenticated user object\r\n   */\n  const handleSignIn = user => {\n    console.log('User signed in:', user);\n  };\n\n  /**\r\n   * SIGN OUT HANDLER\r\n   * Handles user sign-out action\r\n   */\n  const handleSignOut = () => {\n    console.log('User signed out');\n  };\n\n  // ================================\n  // MAIN SEARCH FUNCTIONALITY\n  // ================================\n\n  /**\r\n   * MAIN SEARCH HANDLER\r\n   * Primary search function that handles text-based health queries\r\n   * Flow: Check cache → API call → Save to cache → Navigate to results\r\n   * Uses 4-step fallback strategy for reliability\r\n   */\n  const handleSearch = async () => {\n    if (!searchQuery.trim() || isLoading) return;\n    setIsLoading(true);\n    setLoadingMessage('Initializing search...');\n    try {\n      // Step 1: Check database cache first\n      setLoadingMessage('Checking cache...');\n      try {\n        const response = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(searchQuery)}`);\n        if (response.ok) {\n          const cachedData = await response.json();\n          console.log('Using cached results from database');\n          setLoadingMessage('Loading cached results...');\n          await new Promise(resolve => setTimeout(resolve, 300));\n          setIsLoading(false);\n          // Pass the cached data via navigation state\n          navigate(`/results?q=${encodeURIComponent(searchQuery)}`, {\n            state: {\n              results: cachedData.results,\n              dataSource: cachedData.source || 'cache',\n              fromSearch: true\n            }\n          });\n          return;\n        }\n      } catch (cacheError) {\n        console.log('No cache found, proceeding with API call');\n      }\n\n      // Step 2: Get fresh results from API\n      setLoadingMessage('Analyzing with AI...');\n      console.log('Getting fresh results for:', searchQuery);\n      try {\n        const searchResults = await healthSearchService.searchHealthInfo(searchQuery);\n        console.log('Health search results received:', searchResults);\n        const isValidResult = searchResults && typeof searchResults === 'object' && searchResults !== null && (searchResults.summary || searchResults.details || Object.keys(searchResults).length > 0);\n        if (isValidResult) {\n          console.log('Valid results confirmed');\n\n          // Step 3: Save to database cache (async, don't wait)\n          setLoadingMessage('Caching results...');\n          fetch('http://localhost:5000/api/cache/save', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              query: searchQuery,\n              results: searchResults,\n              source: 'openai'\n            })\n          }).then(response => {\n            if (response.ok) {\n              console.log('Results saved to database cache');\n            } else {\n              console.warn('Failed to save to cache');\n            }\n          }).catch(err => {\n            console.warn('Cache save error:', err);\n          });\n          setLoadingMessage('Results ready!');\n          await new Promise(resolve => setTimeout(resolve, 300));\n          setIsLoading(false);\n          console.log('Navigating to results page with data');\n\n          // Pass the fresh results via navigation state\n          navigate(`/results?q=${encodeURIComponent(searchQuery)}`, {\n            state: {\n              results: searchResults,\n              dataSource: 'openai',\n              fromSearch: true\n            }\n          });\n          return;\n        } else {\n          throw new Error('Invalid results from API');\n        }\n      } catch (apiError) {\n        console.error('Health search service failed:', apiError);\n\n        // Step 4: Try similar results as fallback\n        setLoadingMessage('Searching for similar results...');\n        try {\n          const similarResponse = await fetch(`http://localhost:5000/api/cache/similar?q=${encodeURIComponent(searchQuery)}`);\n          if (similarResponse.ok) {\n            const similarResults = await similarResponse.json();\n            if (similarResults.length > 0) {\n              console.log('Using similar cached results');\n              setLoadingMessage('Loading similar results...');\n              await new Promise(resolve => setTimeout(resolve, 300));\n              setIsLoading(false);\n              // Pass similar results via navigation state\n              navigate(`/results?q=${encodeURIComponent(searchQuery)}`, {\n                state: {\n                  results: similarResults[0].results,\n                  dataSource: 'similar',\n                  fromSearch: true\n                }\n              });\n              return;\n            }\n          }\n        } catch (similarError) {\n          console.warn('Similar results search failed:', similarError);\n        }\n        setLoadingMessage('No results found. Please try a different search.');\n        setTimeout(() => {\n          setIsLoading(false);\n          setLoadingMessage('Searching...');\n        }, 3000);\n        return;\n      }\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setLoadingMessage('Search failed. Please try again.');\n      setTimeout(() => {\n        setIsLoading(false);\n        setLoadingMessage('Searching...');\n      }, 2000);\n    }\n  };\n\n  // ================================\n  // IMAGE ANALYSIS FUNCTIONALITY\n  // ================================\n\n  /**\r\n   * IMAGE ANALYSIS COMPLETION HANDLER\r\n   * Processes results from image upload and food recognition\r\n   * Triggered when ImageUploadModal completes food detection\r\n   * @param foodName - The detected food name from image analysis\r\n   */\n  const handleAnalysisComplete = async foodName => {\n    if (!foodName || isLoading) {\n      setIsUploadModalOpen(false);\n      return;\n    }\n    setIsLoading(true);\n    setLoadingMessage('Processing image analysis...');\n    try {\n      console.log(\"Image analysis completed, food detected:\", foodName);\n      setSearchQuery(foodName);\n\n      // Step 1: Check database cache for nutrition data\n      setLoadingMessage('Checking nutrition database...');\n      try {\n        const response = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(foodName)}`);\n        if (response.ok) {\n          const cachedData = await response.json();\n          console.log('Using cached nutrition data');\n          setLoadingMessage('Loading cached nutrition data...');\n          await new Promise(resolve => setTimeout(resolve, 300));\n          setIsLoading(false);\n          // Pass the cached data via navigation state\n          navigate(`/results?q=${encodeURIComponent(foodName)}`, {\n            state: {\n              results: cachedData.results,\n              dataSource: cachedData.source || 'cache',\n              fromSearch: true\n            }\n          });\n          return;\n        }\n      } catch (cacheError) {\n        console.log('No cached nutrition data found');\n      }\n\n      // Step 2: Get fresh nutrition data\n      setLoadingMessage('Analyzing nutrition content...');\n      try {\n        const nutritionResults = await healthSearchService.searchHealthInfo(foodName);\n        const isValidResult = nutritionResults && typeof nutritionResults === 'object' && nutritionResults !== null && (nutritionResults.summary || nutritionResults.details || Object.keys(nutritionResults).length > 0);\n        if (isValidResult) {\n          // Step 3: Save to database cache (async, don't wait)\n          setLoadingMessage('Caching nutrition data...');\n          fetch('http://localhost:5000/api/cache/save', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              query: foodName,\n              results: nutritionResults,\n              source: 'image-analysis'\n            })\n          }).then(response => {\n            if (response.ok) {\n              console.log('Nutrition data saved to cache');\n            } else {\n              console.warn('Failed to save nutrition data to cache');\n            }\n          }).catch(err => {\n            console.warn('Nutrition cache save error:', err);\n          });\n          setLoadingMessage('Nutrition analysis complete!');\n          await new Promise(resolve => setTimeout(resolve, 300));\n          setIsLoading(false);\n          // Pass the fresh nutrition results via navigation state\n          navigate(`/results?q=${encodeURIComponent(foodName)}`, {\n            state: {\n              results: nutritionResults,\n              dataSource: 'image-analysis',\n              fromSearch: true\n            }\n          });\n          return;\n        } else {\n          throw new Error('Invalid nutrition results');\n        }\n      } catch (nutritionError) {\n        console.error('Nutrition analysis failed:', nutritionError);\n\n        // Try similar results as fallback\n        try {\n          const similarResponse = await fetch(`http://localhost:5000/api/cache/similar?q=${encodeURIComponent(foodName)}`);\n          if (similarResponse.ok) {\n            const similarResults = await similarResponse.json();\n            if (similarResults.length > 0) {\n              console.log('Using similar nutrition data');\n              setLoadingMessage('Loading similar nutrition data...');\n              await new Promise(resolve => setTimeout(resolve, 300));\n              setIsLoading(false);\n              navigate(`/results?q=${encodeURIComponent(foodName)}`);\n              return;\n            }\n          }\n        } catch (similarError) {\n          console.warn('Similar nutrition search failed:', similarError);\n        }\n        setLoadingMessage('Could not analyze this food item. Please try again.');\n        setTimeout(() => {\n          setIsLoading(false);\n          setLoadingMessage('Searching...');\n        }, 3000);\n        return;\n      }\n    } catch (error) {\n      console.error(\"Error processing analyzed food:\", error);\n      setLoadingMessage('Analysis failed. Please try again.');\n      setTimeout(() => {\n        setIsLoading(false);\n        setLoadingMessage('Searching...');\n      }, 2000);\n    } finally {\n      setIsUploadModalOpen(false);\n    }\n  };\n\n  // ================================\n  // LIFECYCLE HOOKS\n  // ================================\n\n  /**\r\n   * CLEANUP EFFECT\r\n   * Resets loading state when component unmounts\r\n   * Prevents memory leaks and state persistence issues\r\n   */\n  useEffect(() => {\n    return () => {\n      setIsLoading(false);\n      setLoadingMessage('Searching...');\n    };\n  }, []);\n\n  // Rotation effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setIsRotating(true);\n      setTimeout(() => {\n        setCurrentCategoryIndex(prev => (prev + 1) % healthCategories.length);\n        setIsRotating(false);\n      }, 300);\n    }, 3000); // Change every 3 seconds\n\n    return () => clearInterval(interval);\n  }, [healthCategories.length]);\n\n  // ================================\n  // SCROLL HANDLING EFFECT\n  // ================================\n\n  useEffect(() => {\n    const THRESH = 8;\n    const GRACE_MS = 250;\n\n    // Track if we're at the top boundary to help with \"escape\" gesture\n    const isAtTopBoundary = () => window.scrollY < 10;\n    const onScroll = () => {\n      if (tickingRef.current) return;\n      tickingRef.current = true;\n      requestAnimationFrame(() => {\n        const y = window.scrollY;\n        const delta = y - lastYRef.current; // >0 down, <0 up\n\n        // Feed is open: handle scroll actions\n        if (showFeelingHealthyContent && !isClosingNewsfeed) {\n          // Ignore tiny scrolls right after opening\n          if (Date.now() - justOpenedAtRef.current < GRACE_MS) {\n            lastYRef.current = y;\n            tickingRef.current = false;\n            return;\n          }\n\n          // CASE 1: Close feed when scrolling DOWN at the top boundary\n          if (delta > THRESH && isAtTopBoundary()) {\n            closeFeed();\n          }\n          // CASE 2: Load more content when scrolling UP while in the feed AND more content available\n          else if (delta < -THRESH && !isAtTopBoundary() && hasMoreArticles) {\n            setVisibleArticleCount(v => v < 12 ? v + 1 : v);\n          }\n          // CASE 3: Return to search when scrolling UP and already at the top (escape gesture)\n          else if (delta < -THRESH && isAtTopBoundary() && lastYRef.current <= 10) {\n            closeFeed();\n          }\n        }\n\n        // Feed is hidden: open it when scrolling UP while page is scrolled down\n        if (!showFeelingHealthyContent && y > 100 && delta < -THRESH) {\n          openFeed();\n        }\n        lastYRef.current = y;\n        tickingRef.current = false;\n      });\n    };\n\n    // Wheel event provides more immediate response than scroll\n    const onWheel = e => {\n      if (showFeelingHealthyContent && !isClosingNewsfeed && Date.now() - justOpenedAtRef.current >= GRACE_MS) {\n        if (e.deltaY > 10 && isAtTopBoundary()) {\n          closeFeed();\n        } else if (e.deltaY < -10 && !isAtTopBoundary() && hasMoreArticles) {\n          setVisibleArticleCount(v => v < 12 ? v + 1 : v);\n        } else if (e.deltaY < -10 && isAtTopBoundary()) {\n          closeFeed();\n        }\n      } else if (!showFeelingHealthyContent && window.scrollY > 100 && e.deltaY < -10) {\n        openFeed();\n      }\n    };\n\n    // Add touch events for mobile devices\n    const onTouchStart = e => {\n      touchStartY.current = e.touches[0].clientY;\n    };\n    const onTouchMove = e => {\n      const touchY = e.touches[0].clientY;\n      const deltaY = touchStartY.current - touchY;\n      if (showFeelingHealthyContent && !isClosingNewsfeed && isAtTopBoundary()) {\n        // If swiping down from top, close feed (escape gesture)\n        if (deltaY < -50) {\n          closeFeed();\n        }\n      }\n    };\n    window.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n    window.addEventListener('wheel', onWheel, {\n      passive: true\n    });\n    window.addEventListener('touchstart', onTouchStart, {\n      passive: true\n    });\n    window.addEventListener('touchmove', onTouchMove, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n      window.removeEventListener('wheel', onWheel);\n      window.removeEventListener('touchstart', onTouchStart);\n      window.removeEventListener('touchmove', onTouchMove);\n    };\n  }, [showFeelingHealthyContent, isClosingNewsfeed, hasMoreArticles]);\n\n  // ================================\n  // UI COMPONENTS\n  // ================================\n\n  /**\r\n   * LOADING OVERLAY COMPONENT\r\n   * Shows animated loading screen with progress bar during search operations\r\n   * @param message - Current loading message to display\r\n   * @param progress - Progress percentage (0-100) for progress bar\r\n   */\n  const LoadingOverlay = ({\n    message,\n    progress\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 9999\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        borderRadius: '12px',\n        padding: '40px',\n        textAlign: 'center',\n        minWidth: '320px',\n        boxShadow: '0 10px 25px rgba(0, 0, 0, 0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '0 auto 24px auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/whatishealthyspinner.gif\",\n          alt: \"Loading...\",\n          style: {\n            width: '48px',\n            height: '48px',\n            objectFit: 'contain'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 8px 0',\n          fontSize: '24px',\n          fontWeight: '600',\n          color: '#1f2937'\n        },\n        children: \"Loading Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0 0 24px 0',\n          fontSize: '16px',\n          color: '#6b7280'\n        },\n        children: \"Please wait while we process your request...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '8px',\n          backgroundColor: '#e5e7eb',\n          borderRadius: '4px',\n          overflow: 'hidden',\n          marginBottom: '12px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${progress}%`,\n            height: '100%',\n            backgroundColor: '#3b82f6',\n            borderRadius: '4px',\n            transition: 'width 0.3s ease'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          fontSize: '14px',\n          color: '#6b7280'\n        },\n        children: [progress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 579,\n    columnNumber: 5\n  }, this);\n\n  // ================================\n  // MAIN COMPONENT RENDER\n  // ================================\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-landing\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      message: loadingMessage,\n      progress: progressFromMessage(loadingMessage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(MultiAuthLogin, {\n        className: \"main-login-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container-centered\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: !imageError ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/wihylogo.png\",\n          alt: \"What is Healthy?\",\n          className: \"search-logo-image\",\n          onError: () => setImageError(true),\n          onLoad: () => setImageError(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"search-logo\",\n          children: \"What is Healthy?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleSearch();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSearch();\n              }\n            },\n            placeholder: \"Ask anything about health...\",\n            className: \"search-input\",\n            autoFocus: true,\n            disabled: isLoading,\n            rows: 1,\n            style: {\n              resize: 'none',\n              overflow: 'hidden'\n            },\n            onInput: e => {\n              // Auto-resize textarea\n              const target = e.target;\n              target.style.height = 'auto';\n              target.style.height = Math.min(target.scrollHeight, 120) + 'px';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-icons\",\n          children: [searchQuery && !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSearchQuery(''),\n            className: \"icon-button clear-button\",\n            \"aria-label\": \"Clear all\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsUploadModalOpen(true),\n            className: \"icon-button\",\n            \"aria-label\": \"Upload image\",\n            disabled: isLoading,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              if (isLoading) return;\n              if (!('webkitSpeechRecognition' in window)) {\n                alert('Speech recognition not supported in this browser');\n                return;\n              }\n              if (!recognitionRef.current) {\n                const recognition = new window.webkitSpeechRecognition();\n                recognition.continuous = false;\n                recognition.interimResults = false;\n                recognition.lang = 'en-US';\n                recognition.onstart = () => setIsListening(true);\n                recognition.onresult = event => {\n                  const transcript = event.results[0][0].transcript;\n                  setSearchQuery(transcript);\n                  setIsListening(false);\n                };\n                recognition.onerror = () => setIsListening(false);\n                recognition.onend = () => setIsListening(false);\n                recognitionRef.current = recognition;\n              }\n              if (!isListening) {\n                recognitionRef.current.start();\n              } else {\n                recognitionRef.current.stop();\n                setIsListening(false);\n              }\n            },\n            className: `icon-button ${isListening ? 'listening' : ''}`,\n            \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n            disabled: isLoading,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.preventDefault();\n            handleSearch();\n          },\n          className: \"search-btn primary analyze-btn\",\n          disabled: !searchQuery.trim() || isLoading,\n          children: isLoading ? loadingMessage : 'Analyze Nutrition'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (isLoading) return;\n            if (showFeelingHealthyContent && !isClosingNewsfeed) closeFeed();else if (!showFeelingHealthyContent) openFeed(); // use helper\n          },\n          className: \"search-btn secondary feeling-healthy-btn\",\n          type: \"button\",\n          disabled: isLoading,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `rotating-text ${isRotating ? 'rotate' : ''}`,\n            children: healthCategories[currentCategoryIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }, this), showFeelingHealthyContent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `feeling-healthy-section ${isClosingNewsfeed ? 'closing' : ''}`,\n      onClick: e => {\n        // Close if clicking on the background, not the content\n        if (e.target === e.currentTarget && !isClosingNewsfeed) {\n          closeFeed(); // Use the centralized close function\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(HealthNewsFeed, {\n          maxArticles: visibleArticleCount // Dynamic article count\n          ,\n          selectedCategory: selectedCategory,\n          onCategorySelect: category => {\n            setSelectedCategory(category);\n            setHasMoreArticles(true); // Reset when changing categories\n            setVisibleArticleCount(3); // Reset to initial count\n          },\n          onAnalyzeArticle: analysisQuery => {\n            setShowFeelingHealthyContent(false);\n            setSearchQuery(analysisQuery);\n            handleSearch();\n          },\n          setSearchQuery: setSearchQuery,\n          triggerSearch: () => {\n            setShowFeelingHealthyContent(false);\n            handleSearch();\n          },\n          onEndReached: hasMore => {\n            setHasMoreArticles(hasMore);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n      isOpen: isUploadModalOpen,\n      onClose: () => setIsUploadModalOpen(false),\n      onAnalysisComplete: handleAnalysisComplete,\n      title: \"Upload Image\",\n      subtitle: \"Upload Image for Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 666,\n    columnNumber: 5\n  }, this);\n};\n_s(VHealthSearch, \"HUHeCZZRvZEHI8HHs2gLxqhG4Vg=\", false, function () {\n  return [useNavigate];\n});\n_c = VHealthSearch;\nexport default VHealthSearch;\n\n/* Add this CSS to your styles\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }m: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }form: rotate(360deg); }\r\n}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"VHealthSearch\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","ImageUploadModal","MultiAuthLogin","healthSearchService","HealthNewsFeed","jsxDEV","_jsxDEV","VHealthSearch","_s","searchQuery","setSearchQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","isLoading","setIsLoading","imageError","setImageError","loadingMessage","setLoadingMessage","showFeelingHealthyContent","setShowFeelingHealthyContent","currentCategoryIndex","setCurrentCategoryIndex","isRotating","setIsRotating","selectedCategory","setSelectedCategory","isClosingNewsfeed","setIsClosingNewsfeed","visibleArticleCount","setVisibleArticleCount","hasMoreArticles","setHasMoreArticles","healthCategories","navigate","searchInputRef","recognitionRef","lastYRef","window","scrollY","tickingRef","justOpenedAtRef","touchStartY","openFeed","current","Date","now","closeFeed","setTimeout","progressFromMessage","msg","includes","handleUserChange","user","console","log","handleSignIn","handleSignOut","handleSearch","trim","response","fetch","encodeURIComponent","ok","cachedData","json","Promise","resolve","state","results","dataSource","source","fromSearch","cacheError","searchResults","searchHealthInfo","isValidResult","summary","details","Object","keys","length","method","headers","body","JSON","stringify","query","then","warn","catch","err","Error","apiError","error","similarResponse","similarResults","similarError","handleAnalysisComplete","foodName","nutritionResults","nutritionError","interval","setInterval","prev","clearInterval","THRESH","GRACE_MS","isAtTopBoundary","onScroll","requestAnimationFrame","y","delta","v","onWheel","e","deltaY","onTouchStart","touches","clientY","onTouchMove","touchY","addEventListener","passive","removeEventListener","LoadingOverlay","message","progress","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","children","borderRadius","padding","textAlign","minWidth","boxShadow","margin","src","alt","width","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","color","overflow","marginBottom","transition","className","onError","onLoad","onSubmit","preventDefault","value","onChange","target","onKeyDown","key","shiftKey","placeholder","autoFocus","disabled","rows","resize","onInput","Math","min","scrollHeight","type","onClick","viewBox","fill","d","alert","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","transcript","onerror","onend","start","stop","currentTarget","stopPropagation","maxArticles","onCategorySelect","category","onAnalyzeArticle","analysisQuery","triggerSearch","onEndReached","hasMore","isOpen","onClose","onAnalysisComplete","title","subtitle","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/VHealthSearch.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './styles/VHealthSearch.css';\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport MultiAuthLogin from './components/MultiAuthLogin';\r\nimport { healthSearchService } from './services/healthSearchService';\r\nimport { searchCache } from './services/searchCache';\r\nimport { foodAnalysisService } from './components/foodAnalysisService';\r\nimport HealthNewsFeed from './components/HealthNewsFeed';\r\n\r\nconst VHealthSearch: React.FC = () => {\r\n  // ================================\r\n  // STATE MANAGEMENT\r\n  // ================================\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [loadingMessage, setLoadingMessage] = useState('Searching...');\r\n  const [showFeelingHealthyContent, setShowFeelingHealthyContent] = useState(false);\r\n\r\n  // ADD: Rotating text for \"I'm Feeling Healthy\" button\r\n  const [currentCategoryIndex, setCurrentCategoryIndex] = useState(0);\r\n  const [isRotating, setIsRotating] = useState(false);\r\n\r\n  // ADD: Selected category state for news filtering\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n\r\n  // ADD: Closing state for news feed animation\r\n  const [isClosingNewsfeed, setIsClosingNewsfeed] = useState(false);\r\n  const [visibleArticleCount, setVisibleArticleCount] = useState(3);\r\n\r\n  // ADD: State to track if more articles are available\r\n  const [hasMoreArticles, setHasMoreArticles] = useState(true);\r\n\r\n  // Health categories that will rotate (excluding \"All Health News\" since that's what \"I'm Feeling Healthy\" maps to)\r\n  const healthCategories = [\r\n    'I\\'m Feeling Healthy',\r\n    'Nutrition', \r\n    'Medical Research',\r\n    'Public Health',\r\n    'Clinical Studies',\r\n    'Prevention',\r\n    'Mental Health',\r\n    'General Health'\r\n  ];\r\n  \r\n  const navigate = useNavigate();\r\n  const searchInputRef = useRef<HTMLInputElement>(null);\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // ADD THESE REFS for scroll handling\r\n  const lastYRef = useRef(window.scrollY);\r\n  const tickingRef = useRef(false);\r\n  const justOpenedAtRef = useRef(0);\r\n  const touchStartY = useRef(0);\r\n\r\n  const openFeed = () => {\r\n    lastYRef.current = window.scrollY;     // prime direction\r\n    justOpenedAtRef.current = Date.now();  // grace window\r\n    setShowFeelingHealthyContent(true);\r\n    setSelectedCategory('all');\r\n    setVisibleArticleCount(3);\r\n  };\r\n\r\n  const closeFeed = () => {\r\n    if (isClosingNewsfeed) return;\r\n    setIsClosingNewsfeed(true);\r\n    setTimeout(() => {\r\n      setShowFeelingHealthyContent(false);\r\n      setSearchQuery('What is Healthy?');\r\n      setSelectedCategory('all');\r\n      setVisibleArticleCount(3);\r\n      setIsClosingNewsfeed(false);\r\n    }, 400); // match your CSS animation\r\n  };\r\n\r\n  // ================================\r\n  // UTILITY FUNCTIONS\r\n  // ================================\r\n\r\n  /**\r\n   * PROGRESS CALCULATOR\r\n   * Converts loading message text to progress percentage for UI feedback\r\n   * @param msg - The current loading message\r\n   * @returns Progress percentage (0-100)\r\n   */\r\n  const progressFromMessage = (msg: string) => {\r\n    if (msg.includes('Initializing')) return 10;\r\n    if (msg.includes('Checking cache')) return 25;\r\n    if (msg.includes('Analyzing with AI')) return 55;\r\n    if (msg.includes('Processing results')) return 75;\r\n    if (msg.includes('Results ready') || msg.includes('Response ready')) return 95;\r\n\r\n    if (msg.includes('Processing image')) return 35;\r\n    if (msg.includes('Checking nutrition')) return 45;\r\n    if (msg.includes('Analyzing nutrition')) return 60;\r\n    if (msg.includes('Processing nutrition')) return 80;\r\n    if (msg.includes('complete')) return 95;\r\n\r\n    if (msg.includes('failed')) return 100; // will close shortly\r\n    return 40; // default midpoint\r\n  };\r\n\r\n  // ================================\r\n  // AUTHENTICATION HANDLERS\r\n  // ================================\r\n\r\n  /**\r\n   * USER CHANGE HANDLER\r\n   * Handles when user authentication state changes\r\n   * @param user - User object from auth service\r\n   */\r\n  const handleUserChange = (user: any) => {\r\n    console.log('User changed:', user);\r\n  };\r\n\r\n  /**\r\n   * SIGN IN HANDLER\r\n   * Handles successful user sign-in\r\n   * @param user - Authenticated user object\r\n   */\r\n  const handleSignIn = (user: any) => {\r\n    console.log('User signed in:', user);\r\n  };\r\n\r\n  /**\r\n   * SIGN OUT HANDLER\r\n   * Handles user sign-out action\r\n   */\r\n  const handleSignOut = () => {\r\n    console.log('User signed out');\r\n  };\r\n\r\n  // ================================\r\n  // MAIN SEARCH FUNCTIONALITY\r\n  // ================================\r\n\r\n  /**\r\n   * MAIN SEARCH HANDLER\r\n   * Primary search function that handles text-based health queries\r\n   * Flow: Check cache → API call → Save to cache → Navigate to results\r\n   * Uses 4-step fallback strategy for reliability\r\n   */\r\n  const handleSearch = async () => {\r\n    if (!searchQuery.trim() || isLoading) return;\r\n    \r\n    setIsLoading(true);\r\n    setLoadingMessage('Initializing search...');\r\n    \r\n    try {\r\n      // Step 1: Check database cache first\r\n      setLoadingMessage('Checking cache...');\r\n      \r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(searchQuery)}`);\r\n        \r\n        if (response.ok) {\r\n          const cachedData = await response.json();\r\n          console.log('Using cached results from database');\r\n          setLoadingMessage('Loading cached results...');\r\n          await new Promise(resolve => setTimeout(resolve, 300));\r\n          \r\n          setIsLoading(false);\r\n          // Pass the cached data via navigation state\r\n          navigate(`/results?q=${encodeURIComponent(searchQuery)}`, {\r\n            state: {\r\n              results: cachedData.results,\r\n              dataSource: cachedData.source || 'cache',\r\n              fromSearch: true\r\n            }\r\n          });\r\n          return;\r\n        }\r\n      } catch (cacheError) {\r\n        console.log('No cache found, proceeding with API call');\r\n      }\r\n\r\n      // Step 2: Get fresh results from API\r\n      setLoadingMessage('Analyzing with AI...');\r\n      console.log('Getting fresh results for:', searchQuery);\r\n      \r\n      try {\r\n        const searchResults = await healthSearchService.searchHealthInfo(searchQuery);\r\n        console.log('Health search results received:', searchResults);\r\n        \r\n        const isValidResult = searchResults && \r\n          typeof searchResults === 'object' && \r\n          searchResults !== null &&\r\n          (searchResults.summary || searchResults.details || Object.keys(searchResults).length > 0);\r\n        \r\n        if (isValidResult) {\r\n          console.log('Valid results confirmed');\r\n          \r\n          // Step 3: Save to database cache (async, don't wait)\r\n          setLoadingMessage('Caching results...');\r\n          \r\n          fetch('http://localhost:5000/api/cache/save', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              query: searchQuery,\r\n              results: searchResults,\r\n              source: 'openai'\r\n            })\r\n          }).then(response => {\r\n            if (response.ok) {\r\n              console.log('Results saved to database cache');\r\n            } else {\r\n              console.warn('Failed to save to cache');\r\n            }\r\n          }).catch(err => {\r\n            console.warn('Cache save error:', err);\r\n          });\r\n          \r\n          setLoadingMessage('Results ready!');\r\n          await new Promise(resolve => setTimeout(resolve, 300));\r\n          \r\n          setIsLoading(false);\r\n          console.log('Navigating to results page with data');\r\n          \r\n          // Pass the fresh results via navigation state\r\n          navigate(`/results?q=${encodeURIComponent(searchQuery)}`, {\r\n            state: {\r\n              results: searchResults,\r\n              dataSource: 'openai',\r\n              fromSearch: true\r\n            }\r\n          });\r\n          return;\r\n        } else {\r\n          throw new Error('Invalid results from API');\r\n        }\r\n        \r\n      } catch (apiError) {\r\n        console.error('Health search service failed:', apiError);\r\n        \r\n        // Step 4: Try similar results as fallback\r\n        setLoadingMessage('Searching for similar results...');\r\n        \r\n        try {\r\n          const similarResponse = await fetch(`http://localhost:5000/api/cache/similar?q=${encodeURIComponent(searchQuery)}`);\r\n          \r\n          if (similarResponse.ok) {\r\n            const similarResults = await similarResponse.json();\r\n            \r\n            if (similarResults.length > 0) {\r\n              console.log('Using similar cached results');\r\n              setLoadingMessage('Loading similar results...');\r\n              await new Promise(resolve => setTimeout(resolve, 300));\r\n              \r\n              setIsLoading(false);\r\n              // Pass similar results via navigation state\r\n              navigate(`/results?q=${encodeURIComponent(searchQuery)}`, {\r\n                state: {\r\n                  results: similarResults[0].results,\r\n                  dataSource: 'similar',\r\n                  fromSearch: true\r\n                }\r\n              });\r\n              return;\r\n            }\r\n          }\r\n        } catch (similarError) {\r\n          console.warn('Similar results search failed:', similarError);\r\n        }\r\n        \r\n        setLoadingMessage('No results found. Please try a different search.');\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n          setLoadingMessage('Searching...');\r\n        }, 3000);\r\n        return;\r\n      }\r\n        \r\n    } catch (error) {\r\n      console.error(\"Search error:\", error);\r\n      setLoadingMessage('Search failed. Please try again.');\r\n      \r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        setLoadingMessage('Searching...');\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  // ================================\r\n  // IMAGE ANALYSIS FUNCTIONALITY\r\n  // ================================\r\n\r\n  /**\r\n   * IMAGE ANALYSIS COMPLETION HANDLER\r\n   * Processes results from image upload and food recognition\r\n   * Triggered when ImageUploadModal completes food detection\r\n   * @param foodName - The detected food name from image analysis\r\n   */\r\n  const handleAnalysisComplete = async (foodName: string): Promise<void> => {\r\n    if (!foodName || isLoading) {\r\n      setIsUploadModalOpen(false);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setLoadingMessage('Processing image analysis...');\r\n    \r\n    try {\r\n      console.log(\"Image analysis completed, food detected:\", foodName);\r\n      setSearchQuery(foodName);\r\n      \r\n      // Step 1: Check database cache for nutrition data\r\n      setLoadingMessage('Checking nutrition database...');\r\n      \r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(foodName)}`);\r\n        \r\n        if (response.ok) {\r\n          const cachedData = await response.json();\r\n          console.log('Using cached nutrition data');\r\n          setLoadingMessage('Loading cached nutrition data...');\r\n          await new Promise(resolve => setTimeout(resolve, 300));\r\n          \r\n          setIsLoading(false);\r\n          // Pass the cached data via navigation state\r\n          navigate(`/results?q=${encodeURIComponent(foodName)}`, {\r\n            state: {\r\n              results: cachedData.results,\r\n              dataSource: cachedData.source || 'cache',\r\n              fromSearch: true\r\n            }\r\n          });\r\n          return;\r\n        }\r\n      } catch (cacheError) {\r\n        console.log('No cached nutrition data found');\r\n      }\r\n      \r\n      // Step 2: Get fresh nutrition data\r\n      setLoadingMessage('Analyzing nutrition content...');\r\n      \r\n      try {\r\n        const nutritionResults = await healthSearchService.searchHealthInfo(foodName);\r\n        \r\n        const isValidResult = nutritionResults && \r\n          typeof nutritionResults === 'object' && \r\n          nutritionResults !== null &&\r\n          (nutritionResults.summary || nutritionResults.details || Object.keys(nutritionResults).length > 0);\r\n        \r\n        if (isValidResult) {\r\n          // Step 3: Save to database cache (async, don't wait)\r\n          setLoadingMessage('Caching nutrition data...');\r\n          \r\n          fetch('http://localhost:5000/api/cache/save', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              query: foodName,\r\n              results: nutritionResults,\r\n              source: 'image-analysis'\r\n            })\r\n          }).then(response => {\r\n            if (response.ok) {\r\n              console.log('Nutrition data saved to cache');\r\n            } else {\r\n              console.warn('Failed to save nutrition data to cache');\r\n            }\r\n          }).catch(err => {\r\n            console.warn('Nutrition cache save error:', err);\r\n          });\r\n          \r\n          setLoadingMessage('Nutrition analysis complete!');\r\n          await new Promise(resolve => setTimeout(resolve, 300));\r\n          \r\n          setIsLoading(false);\r\n          // Pass the fresh nutrition results via navigation state\r\n          navigate(`/results?q=${encodeURIComponent(foodName)}`, {\r\n            state: {\r\n              results: nutritionResults,\r\n              dataSource: 'image-analysis',\r\n              fromSearch: true\r\n            }\r\n          });\r\n          return;\r\n        } else {\r\n          throw new Error('Invalid nutrition results');\r\n        }\r\n        \r\n      } catch (nutritionError) {\r\n        console.error('Nutrition analysis failed:', nutritionError);\r\n        \r\n        // Try similar results as fallback\r\n        try {\r\n          const similarResponse = await fetch(`http://localhost:5000/api/cache/similar?q=${encodeURIComponent(foodName)}`);\r\n          \r\n          if (similarResponse.ok) {\r\n            const similarResults = await similarResponse.json();\r\n            \r\n            if (similarResults.length > 0) {\r\n              console.log('Using similar nutrition data');\r\n              setLoadingMessage('Loading similar nutrition data...');\r\n              await new Promise(resolve => setTimeout(resolve, 300));\r\n              \r\n              setIsLoading(false);\r\n              navigate(`/results?q=${encodeURIComponent(foodName)}`);\r\n              return;\r\n            }\r\n          }\r\n        } catch (similarError) {\r\n          console.warn('Similar nutrition search failed:', similarError);\r\n        }\r\n        \r\n        setLoadingMessage('Could not analyze this food item. Please try again.');\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n          setLoadingMessage('Searching...');\r\n        }, 3000);\r\n        return;\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error processing analyzed food:\", error);\r\n      setLoadingMessage('Analysis failed. Please try again.');\r\n      \r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        setLoadingMessage('Searching...');\r\n      }, 2000);\r\n    } finally {\r\n      setIsUploadModalOpen(false);\r\n    }\r\n  };\r\n\r\n  // ================================\r\n  // LIFECYCLE HOOKS\r\n  // ================================\r\n\r\n  /**\r\n   * CLEANUP EFFECT\r\n   * Resets loading state when component unmounts\r\n   * Prevents memory leaks and state persistence issues\r\n   */\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsLoading(false);\r\n      setLoadingMessage('Searching...');\r\n    };\r\n  }, []);\r\n\r\n  // Rotation effect\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setIsRotating(true);\r\n      setTimeout(() => {\r\n        setCurrentCategoryIndex((prev) => (prev + 1) % healthCategories.length);\r\n        setIsRotating(false);\r\n      }, 300);\r\n    }, 3000); // Change every 3 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [healthCategories.length]);\r\n\r\n  // ================================\r\n  // SCROLL HANDLING EFFECT\r\n  // ================================\r\n\r\n  useEffect(() => {\r\n    const THRESH = 8;\r\n    const GRACE_MS = 250;\r\n    \r\n    // Track if we're at the top boundary to help with \"escape\" gesture\r\n    const isAtTopBoundary = () => window.scrollY < 10;\r\n    \r\n    const onScroll = () => {\r\n      if (tickingRef.current) return;\r\n      tickingRef.current = true;\r\n\r\n      requestAnimationFrame(() => {\r\n        const y = window.scrollY;\r\n        const delta = y - lastYRef.current; // >0 down, <0 up\r\n\r\n        // Feed is open: handle scroll actions\r\n        if (showFeelingHealthyContent && !isClosingNewsfeed) {\r\n          // Ignore tiny scrolls right after opening\r\n          if (Date.now() - justOpenedAtRef.current < GRACE_MS) {\r\n            lastYRef.current = y;\r\n            tickingRef.current = false;\r\n            return;\r\n          }\r\n\r\n          // CASE 1: Close feed when scrolling DOWN at the top boundary\r\n          if (delta > THRESH && isAtTopBoundary()) {\r\n            closeFeed();\r\n          } \r\n          // CASE 2: Load more content when scrolling UP while in the feed AND more content available\r\n          else if (delta < -THRESH && !isAtTopBoundary() && hasMoreArticles) {\r\n            setVisibleArticleCount(v => (v < 12 ? v + 1 : v));\r\n          }\r\n          // CASE 3: Return to search when scrolling UP and already at the top (escape gesture)\r\n          else if (delta < -THRESH && isAtTopBoundary() && lastYRef.current <= 10) {\r\n            closeFeed();\r\n          }\r\n        }\r\n\r\n        // Feed is hidden: open it when scrolling UP while page is scrolled down\r\n        if (!showFeelingHealthyContent && y > 100 && delta < -THRESH) {\r\n          openFeed();\r\n        }\r\n\r\n        lastYRef.current = y;\r\n        tickingRef.current = false;\r\n      });\r\n    };\r\n\r\n    // Wheel event provides more immediate response than scroll\r\n    const onWheel = (e: WheelEvent) => {\r\n      if (showFeelingHealthyContent && !isClosingNewsfeed && \r\n          Date.now() - justOpenedAtRef.current >= GRACE_MS) {\r\n        \r\n        if (e.deltaY > 10 && isAtTopBoundary()) {\r\n          closeFeed();\r\n        } \r\n        else if (e.deltaY < -10 && !isAtTopBoundary() && hasMoreArticles) {\r\n          setVisibleArticleCount(v => (v < 12 ? v + 1 : v));\r\n        }\r\n        else if (e.deltaY < -10 && isAtTopBoundary()) {\r\n          closeFeed();\r\n        }\r\n      } \r\n      else if (!showFeelingHealthyContent && window.scrollY > 100 && e.deltaY < -10) {\r\n        openFeed();\r\n      }\r\n    };\r\n    \r\n    // Add touch events for mobile devices\r\n    const onTouchStart = (e: TouchEvent) => {\r\n      touchStartY.current = e.touches[0].clientY;\r\n    };\r\n    \r\n    const onTouchMove = (e: TouchEvent) => {\r\n      const touchY = e.touches[0].clientY;\r\n      const deltaY = touchStartY.current - touchY;\r\n      \r\n      if (showFeelingHealthyContent && !isClosingNewsfeed && isAtTopBoundary()) {\r\n        // If swiping down from top, close feed (escape gesture)\r\n        if (deltaY < -50) {\r\n          closeFeed();\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', onScroll, { passive: true });\r\n    window.addEventListener('wheel', onWheel, { passive: true });\r\n    window.addEventListener('touchstart', onTouchStart, { passive: true });\r\n    window.addEventListener('touchmove', onTouchMove, { passive: true });\r\n    \r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n      window.removeEventListener('wheel', onWheel);\r\n      window.removeEventListener('touchstart', onTouchStart);\r\n      window.removeEventListener('touchmove', onTouchMove);\r\n    };\r\n  }, [showFeelingHealthyContent, isClosingNewsfeed, hasMoreArticles]);\r\n\r\n  // ================================\r\n  // UI COMPONENTS\r\n  // ================================\r\n\r\n  /**\r\n   * LOADING OVERLAY COMPONENT\r\n   * Shows animated loading screen with progress bar during search operations\r\n   * @param message - Current loading message to display\r\n   * @param progress - Progress percentage (0-100) for progress bar\r\n   */\r\n  const LoadingOverlay: React.FC<{ message: string; progress: number }> = ({ message, progress }) => (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 9999\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: 'white',\r\n        borderRadius: '12px',\r\n        padding: '40px',\r\n        textAlign: 'center',\r\n        minWidth: '320px',\r\n        boxShadow: '0 10px 25px rgba(0, 0, 0, 0.2)'\r\n      }}>\r\n      \r\n        {/* Replace the CSS spinner with your GIF */}\r\n        <div style={{ margin: '0 auto 24px auto' }}>\r\n          <img \r\n            src=\"/assets/whatishealthyspinner.gif\" \r\n            alt=\"Loading...\" \r\n            style={{\r\n              width: '48px',\r\n              height: '48px',\r\n              objectFit: 'contain'\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        {/* Title */}\r\n        <h3 style={{\r\n          margin: '0 0 8px 0',\r\n          fontSize: '24px',\r\n          fontWeight: '600',\r\n          color: '#1f2937'\r\n        }}>\r\n          Loading Content\r\n        </h3>\r\n        \r\n        {/* Subtitle */}\r\n        <p style={{\r\n          margin: '0 0 24px 0',\r\n          fontSize: '16px',\r\n          color: '#6b7280'\r\n        }}>\r\n          Please wait while we process your request...\r\n        </p>\r\n        \r\n        {/* Progress Bar */}\r\n        <div style={{\r\n          width: '100%',\r\n          height: '8px',\r\n          backgroundColor: '#e5e7eb',\r\n          borderRadius: '4px',\r\n          overflow: 'hidden',\r\n          marginBottom: '12px'\r\n        }}>\r\n          <div style={{\r\n            width: `${progress}%`,\r\n            height: '100%',\r\n            backgroundColor: '#3b82f6',\r\n            borderRadius: '4px',\r\n            transition: 'width 0.3s ease'\r\n          }} />\r\n        </div>\r\n        \r\n        <p style={{\r\n          margin: 0,\r\n          fontSize: '14px',\r\n          color: '#6b7280'\r\n        }}>\r\n          {progress}% Complete\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // ================================\r\n  // MAIN COMPONENT RENDER\r\n  // ================================\r\n\r\n  return (\r\n    <div className=\"search-landing\">\r\n      {/* LOADING OVERLAY - Shows during search operations */}\r\n      {isLoading && (\r\n        <LoadingOverlay \r\n          message={loadingMessage}\r\n          progress={progressFromMessage(loadingMessage)}\r\n        />\r\n      )}\r\n      \r\n      {/* AUTHENTICATION COMPONENT - Top-right login/logout */}\r\n      <div style={{\r\n        position: 'fixed',\r\n        top: '20px',\r\n        right: '20px',\r\n        zIndex: 1000\r\n      }}>\r\n        <MultiAuthLogin className=\"main-login-button\" />\r\n      </div>\r\n\r\n      {/* MAIN SEARCH INTERFACE */}\r\n      <div className=\"search-container-centered\">\r\n        {/* LOGO SECTION - Shows either image logo or text fallback */}\r\n        <div className=\"logo-container\">\r\n          {!imageError ? (\r\n            <img \r\n              src=\"/assets/wihylogo.png\"\r\n              alt=\"What is Healthy?\"\r\n              className=\"search-logo-image\"\r\n              onError={() => setImageError(true)}\r\n              onLoad={() => setImageError(false)}\r\n            />\r\n          ) : (\r\n            <h1 className=\"search-logo\">\r\n              What is Healthy?\r\n            </h1>\r\n          )}\r\n        </div>\r\n        \r\n        {/* SEARCH INPUT SECTION - Main search bar with icons */}\r\n        <div className=\"search-input-container\">\r\n          <form onSubmit={(e) => { \r\n            e.preventDefault();\r\n            handleSearch();\r\n          }}>\r\n            <textarea\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' && !e.shiftKey) {\r\n                  e.preventDefault();\r\n                  handleSearch();\r\n                }\r\n              }}\r\n              placeholder=\"Ask anything about health...\"\r\n              className=\"search-input\"\r\n              autoFocus\r\n              disabled={isLoading}\r\n              rows={1}\r\n              style={{\r\n                resize: 'none',\r\n                overflow: 'hidden'\r\n              }}\r\n              onInput={(e) => {\r\n                // Auto-resize textarea\r\n                const target = e.target as HTMLTextAreaElement;\r\n                target.style.height = 'auto';\r\n                target.style.height = Math.min(target.scrollHeight, 120) + 'px';\r\n              }}\r\n            />\r\n          </form>\r\n\r\n          {/* SEARCH ICONS - Clear, Camera, Voice input buttons */}\r\n          <div className=\"search-icons\">\r\n            {/* CLEAR BUTTON - Clears current search query */}\r\n            {searchQuery && !isLoading && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setSearchQuery('')}\r\n                className=\"icon-button clear-button\"\r\n                aria-label=\"Clear all\"\r\n              >\r\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n                </svg>\r\n              </button>\r\n            )}\r\n            \r\n            {/* CAMERA BUTTON - Opens image upload modal */}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setIsUploadModalOpen(true)}\r\n              className=\"icon-button\"\r\n              aria-label=\"Upload image\"\r\n              disabled={isLoading}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n              </svg>\r\n            </button>\r\n            \r\n            {/* VOICE INPUT BUTTON - Activates speech recognition */}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (isLoading) return;\r\n                \r\n                if (!('webkitSpeechRecognition' in window)) {\r\n                  alert('Speech recognition not supported in this browser');\r\n                  return;\r\n                }\r\n\r\n                if (!recognitionRef.current) {\r\n                  const recognition = new (window as any).webkitSpeechRecognition();\r\n                  recognition.continuous = false;\r\n                  recognition.interimResults = false;\r\n                  recognition.lang = 'en-US';\r\n\r\n                  recognition.onstart = () => setIsListening(true);\r\n                  recognition.onresult = (event: any) => {\r\n                    const transcript = event.results[0][0].transcript;\r\n                    setSearchQuery(transcript);\r\n                    setIsListening(false);\r\n                  };\r\n                  recognition.onerror = () => setIsListening(false);\r\n                  recognition.onend = () => setIsListening(false);\r\n\r\n                  recognitionRef.current = recognition;\r\n                }\r\n\r\n                if (!isListening) {\r\n                  recognitionRef.current.start();\r\n                } else {\r\n                  recognitionRef.current.stop();\r\n                  setIsListening(false);\r\n                }\r\n              }}\r\n              className={`icon-button ${isListening ? 'listening' : ''}`}\r\n              aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n              disabled={isLoading}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n                <path d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* ACTION BUTTONS - Primary search and secondary \"feeling healthy\" */}\r\n        <div className=\"search-buttons\">\r\n          {/* PRIMARY SEARCH BUTTON - Triggers main search function */}\r\n          <button \r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleSearch();\r\n            }}\r\n            className=\"search-btn primary analyze-btn\"\r\n            disabled={!searchQuery.trim() || isLoading}\r\n          >\r\n            {isLoading ? loadingMessage : 'Analyze Nutrition'}\r\n          </button>\r\n          \r\n          {/* FEELING HEALTHY BUTTON - Shows/hides health news feed with rotating text */}\r\n          <button \r\n            onClick={() => {\r\n              if (isLoading) return;\r\n              if (showFeelingHealthyContent && !isClosingNewsfeed) closeFeed();\r\n              else if (!showFeelingHealthyContent) openFeed(); // use helper\r\n            }}\r\n            className=\"search-btn secondary feeling-healthy-btn\"\r\n            type=\"button\"\r\n            disabled={isLoading}\r\n          >\r\n            <span className={`rotating-text ${isRotating ? 'rotate' : ''}`}>\r\n              {healthCategories[currentCategoryIndex]}\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* HEALTH NEWS FEED - Shows when \"I'm Feeling Healthy\" is active */}\r\n      {showFeelingHealthyContent && (\r\n        <div \r\n          className={`feeling-healthy-section ${isClosingNewsfeed ? 'closing' : ''}`}\r\n          onClick={(e) => {\r\n            // Close if clicking on the background, not the content\r\n            if (e.target === e.currentTarget && !isClosingNewsfeed) {\r\n              closeFeed(); // Use the centralized close function\r\n            }\r\n          }}\r\n        >\r\n          <div onClick={(e) => e.stopPropagation()}>\r\n            <HealthNewsFeed \r\n              maxArticles={visibleArticleCount} // Dynamic article count\r\n              selectedCategory={selectedCategory}\r\n              onCategorySelect={(category) => {\r\n                setSelectedCategory(category);\r\n                setHasMoreArticles(true); // Reset when changing categories\r\n                setVisibleArticleCount(3); // Reset to initial count\r\n              }}\r\n              onAnalyzeArticle={(analysisQuery) => {\r\n                setShowFeelingHealthyContent(false);\r\n                setSearchQuery(analysisQuery);\r\n                handleSearch();\r\n              }}\r\n              setSearchQuery={setSearchQuery}\r\n              triggerSearch={() => {\r\n                setShowFeelingHealthyContent(false);\r\n                handleSearch();\r\n              }}\r\n              onEndReached={(hasMore) => {\r\n                setHasMoreArticles(hasMore);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* IMAGE UPLOAD MODAL - Opens when camera button is clicked */}\r\n      <ImageUploadModal\r\n        isOpen={isUploadModalOpen}\r\n        onClose={() => setIsUploadModalOpen(false)}\r\n        onAnalysisComplete={handleAnalysisComplete}\r\n        title=\"Upload Image\"\r\n        subtitle=\"Upload Image for Analysis\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VHealthSearch;\r\n\r\n/* Add this CSS to your styles\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }m: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }form: rotate(360deg); }\r\n}\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}