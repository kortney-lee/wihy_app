{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\components\\\\NovaChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart } from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NovaChart = ({\n  novaDistribution\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!canvasRef.current || !novaDistribution.length) return;\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n    const config = {\n      type: 'doughnut',\n      data: {\n        labels: novaDistribution.map(item => item.label.replace('Group ', '').replace(': ', ':\\n')),\n        datasets: [{\n          data: novaDistribution.map(item => item.percentage),\n          backgroundColor: novaDistribution.map(item => item.color),\n          borderWidth: 2,\n          borderColor: '#fff'\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        cutout: '50%',\n        plugins: {\n          legend: {\n            position: 'bottom',\n            labels: {\n              boxWidth: 12,\n              padding: 8,\n              font: {\n                size: 11\n              }\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                return `${context.label}: ${context.parsed}%`;\n              }\n            }\n          }\n        }\n      }\n    };\n    chartRef.current = new Chart(ctx, config);\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n      }\n    };\n  }, [novaDistribution]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-card\",\n    style: {\n      marginBottom: '1.5rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: '1rem',\n        fontSize: '1.1rem',\n        fontWeight: '600'\n      },\n      children: \"NOVA Food Classification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '200px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '0.5rem',\n        fontSize: '0.85rem',\n        color: '#666'\n      },\n      children: novaDistribution.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: '2px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.label.replace('Group ', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.count, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(NovaChart, \"WDVG+s/RUdgzBQM+WtvU+4sd8NI=\");\n_c = NovaChart;\nexport default NovaChart;\nvar _c;\n$RefreshReg$(_c, \"NovaChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","NovaChart","novaDistribution","_s","canvasRef","chartRef","current","length","destroy","ctx","getContext","config","type","data","labels","map","item","label","replace","datasets","percentage","backgroundColor","color","borderWidth","borderColor","options","responsive","maintainAspectRatio","cutout","plugins","legend","position","boxWidth","padding","font","size","tooltip","callbacks","context","parsed","className","style","marginBottom","children","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","height","ref","marginTop","index","display","justifyContent","count","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/components/NovaChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Chart, ChartConfiguration } from 'chart.js/auto';\r\n\r\ninterface NovaChartProps {\r\n  novaDistribution: Array<{\r\n    label: string;\r\n    count: number;\r\n    color: string;\r\n    percentage: number;\r\n  }>;\r\n}\r\n\r\nconst NovaChart: React.FC<NovaChartProps> = ({ novaDistribution }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const chartRef = useRef<Chart | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current || !novaDistribution.length) return;\r\n\r\n    if (chartRef.current) {\r\n      chartRef.current.destroy();\r\n    }\r\n\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    const config: ChartConfiguration = {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: novaDistribution.map(item => item.label.replace('Group ', '').replace(': ', ':\\n')),\r\n        datasets: [{\r\n          data: novaDistribution.map(item => item.percentage),\r\n          backgroundColor: novaDistribution.map(item => item.color),\r\n          borderWidth: 2,\r\n          borderColor: '#fff'\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        cutout: '50%',\r\n        plugins: {\r\n          legend: {\r\n            position: 'bottom',\r\n            labels: {\r\n              boxWidth: 12,\r\n              padding: 8,\r\n              font: { size: 11 }\r\n            }\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                return `${context.label}: ${context.parsed}%`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    chartRef.current = new Chart(ctx, config);\r\n\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy();\r\n      }\r\n    };\r\n  }, [novaDistribution]);\r\n\r\n  return (\r\n    <div className=\"chart-card\" style={{ marginBottom: '1.5rem' }}>\r\n      <h3 style={{ marginBottom: '1rem', fontSize: '1.1rem', fontWeight: '600' }}>\r\n        NOVA Food Classification\r\n      </h3>\r\n      <div style={{ height: '200px' }}>\r\n        <canvas ref={canvasRef}></canvas>\r\n      </div>\r\n      <div style={{ marginTop: '0.5rem', fontSize: '0.85rem', color: '#666' }}>\r\n        {novaDistribution.map((item, index) => (\r\n          <div key={index} style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '2px' }}>\r\n            <span>{item.label.replace('Group ', '')}</span>\r\n            <span>{item.count} items</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}