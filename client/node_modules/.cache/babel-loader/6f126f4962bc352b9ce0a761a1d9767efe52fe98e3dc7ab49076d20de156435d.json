{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\components\\\\ImageUploadModal.tsx\",\n  _s = $RefreshSig$();\n// src/components/ImageUploadModal.tsx\nimport React, { useState, useRef } from 'react';\nimport '../VHealthSearch.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageUploadModal = ({\n  isOpen,\n  onClose,\n  onAnalysisComplete,\n  title = \"Upload Health Image\",\n  subtitle = \"Upload food, medical, or health-related images for AI analysis\"\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const fileInputRef = useRef(null);\n  if (!isOpen) return null;\n\n  // Handle file analysis (keep the logic from before)\n  const handleImageAnalysis = async file => {\n    setIsProcessing(true);\n    try {\n      // For now, just extract filename as mock analysis\n      // TODO: Replace with actual API call\n      const fileName = file.name.toLowerCase();\n      let foodName = 'unknown food';\n\n      // Simple mock analysis based on filename\n      if (fileName.includes('apple')) foodName = 'apple';else if (fileName.includes('banana')) foodName = 'banana';else if (fileName.includes('pizza')) foodName = 'pizza';else foodName = 'food item';\n      console.log('Mock analysis result:', foodName);\n\n      // Close modal and return result\n      onClose();\n      onAnalysisComplete(foodName);\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      alert('Failed to analyze image. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // File input handlers\n  const handleFileSelect = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      handleImageAnalysis(file);\n    }\n  };\n  const handleUploadClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n\n  // Drag and drop handlers\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragging(false);\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      handleImageAnalysis(imageFile);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  const handleClose = () => {\n    if (!isProcessing) {\n      onClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `photo-modal-overlay ${isOpen ? 'open' : ''}`,\n    onClick: handleClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"photo-modal-close\",\n          onClick: handleClose,\n          disabled: isProcessing,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"photo-modal-subtitle\",\n        children: subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `photo-drop-zone ${isDragging ? 'dragging' : ''} ${isProcessing ? 'processing' : ''}`,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onClick: handleUploadClick,\n        children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Analyzing image...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Drag an image here or\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"upload-link\",\n              children: \"upload a file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fileInputRef,\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileSelect,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\",\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"url-input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          placeholder: \"Paste image URL\",\n          className: \"url-input\",\n          value: imageUrl,\n          onChange: e => setImageUrl(e.target.value),\n          disabled: isProcessing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"url-search-button\",\n          disabled: !imageUrl.trim() || isProcessing,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-info\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Supported formats: JPG, PNG, GIF, WebP (max 10MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploadModal, \"xO5azdguzxBvOE+QklhbvqAFMyQ=\");\n_c = ImageUploadModal;\nexport default ImageUploadModal;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadModal\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUploadModal","isOpen","onClose","onAnalysisComplete","title","subtitle","_s","isDragging","setIsDragging","imageUrl","setImageUrl","isProcessing","setIsProcessing","fileInputRef","handleImageAnalysis","file","fileName","name","toLowerCase","foodName","includes","console","log","error","alert","handleFileSelect","e","_e$target$files","target","files","handleUploadClick","_fileInputRef$current","current","click","handleDrop","preventDefault","Array","from","dataTransfer","imageFile","find","type","startsWith","handleDragOver","handleDragLeave","handleClose","className","onClick","children","stopPropagation","_jsxFileName","lineNumber","columnNumber","disabled","onDrop","onDragOver","onDragLeave","ref","accept","onChange","style","display","placeholder","value","trim","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/components/ImageUploadModal.tsx"],"sourcesContent":["// src/components/ImageUploadModal.tsx\r\nimport React, { useState, useRef } from 'react';\r\nimport { foodAnalysisService } from './foodAnalysisService';\r\nimport { photoStorageService } from '../services/photoStorageService';\r\nimport '../VHealthSearch.css';\r\n\r\ninterface ImageUploadModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onAnalysisComplete: (foodName: string) => void;\r\n  title?: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst ImageUploadModal: React.FC<ImageUploadModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onAnalysisComplete,\r\n  title = \"Upload Health Image\",\r\n  subtitle = \"Upload food, medical, or health-related images for AI analysis\"\r\n}) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Handle file analysis (keep the logic from before)\r\n  const handleImageAnalysis = async (file: File) => {\r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      // For now, just extract filename as mock analysis\r\n      // TODO: Replace with actual API call\r\n      const fileName = file.name.toLowerCase();\r\n      let foodName = 'unknown food';\r\n      \r\n      // Simple mock analysis based on filename\r\n      if (fileName.includes('apple')) foodName = 'apple';\r\n      else if (fileName.includes('banana')) foodName = 'banana';\r\n      else if (fileName.includes('pizza')) foodName = 'pizza';\r\n      else foodName = 'food item';\r\n      \r\n      console.log('Mock analysis result:', foodName);\r\n      \r\n      // Close modal and return result\r\n      onClose();\r\n      onAnalysisComplete(foodName);\r\n      \r\n    } catch (error) {\r\n      console.error('Error analyzing image:', error);\r\n      alert('Failed to analyze image. Please try again.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // File input handlers\r\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      handleImageAnalysis(file);\r\n    }\r\n  };\r\n\r\n  const handleUploadClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  // Drag and drop handlers\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    \r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    \r\n    if (imageFile) {\r\n      handleImageAnalysis(imageFile);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (!isProcessing) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`photo-modal-overlay ${isOpen ? 'open' : ''}`} onClick={handleClose}>\r\n      <div className=\"photo-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"photo-modal-header\">\r\n          <h2>{title}</h2>\r\n          <button \r\n            className=\"photo-modal-close\" \r\n            onClick={handleClose}\r\n            disabled={isProcessing}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        \r\n        <p className=\"photo-modal-subtitle\">{subtitle}</p>\r\n        \r\n        <div \r\n          className={`photo-drop-zone ${isDragging ? 'dragging' : ''} ${isProcessing ? 'processing' : ''}`}\r\n          onDrop={handleDrop}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onClick={handleUploadClick}\r\n        >\r\n          {isProcessing ? (\r\n            <div className=\"processing-state\">\r\n              <div className=\"spinner\"></div>\r\n              <p>Analyzing image...</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"upload-icon\">📁</div>\r\n              <p>\r\n                Drag an image here or{' '}\r\n                <span className=\"upload-link\">upload a file</span>\r\n              </p>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleFileSelect}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"divider\">OR</div>\r\n        \r\n        <div className=\"url-input-section\">\r\n          <input\r\n            type=\"url\"\r\n            placeholder=\"Paste image URL\"\r\n            className=\"url-input\"\r\n            value={imageUrl}\r\n            onChange={(e) => setImageUrl(e.target.value)}\r\n            disabled={isProcessing}\r\n          />\r\n          <button \r\n            className=\"url-search-button\"\r\n            disabled={!imageUrl.trim() || isProcessing}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"upload-info\">\r\n          <small>Supported formats: JPG, PNG, GIF, WebP (max 10MB)</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}