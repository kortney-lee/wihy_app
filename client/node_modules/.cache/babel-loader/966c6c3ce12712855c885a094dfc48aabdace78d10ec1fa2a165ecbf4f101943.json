{"ast":null,"code":"import React,{useState,useRef,useEffect,useCallback}from'react';import{chatService}from'../../services/chatService';import'../../styles/VHealthSearch.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatWidget=_ref=>{let{isOpen,onClose,searchQuery,searchResponse,currentContext,inline=false,onNewSearch}=_ref;const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const[hasMore,setHasMore]=useState(true);const[loadingMore,setLoadingMore]=useState(false);const chatThreadRef=useRef(null);const inputRef=useRef(null);// Cache measured heights so items retain size during prepend\nconst heightMap=useRef({});const ro=useRef();useEffect(()=>{ro.current=new ResizeObserver(entries=>{for(const e of entries){const id=e.target.dataset.id;heightMap.current[id]=e.contentRect.height;}});return()=>{var _ro$current;return(_ro$current=ro.current)===null||_ro$current===void 0?void 0:_ro$current.disconnect();};},[]);// Attach observer to each rendered message\nconst observe=el=>{if(!el||!ro.current)return;ro.current.observe(el);};// Keep auto-scrolling to bottom ONLY if user is near bottom\nconst scrollToBottomIfPinned=()=>{const el=chatThreadRef.current;if(!el)return;const nearBottom=el.scrollHeight-el.scrollTop-el.clientHeight<120;if(nearBottom)el.scrollTop=el.scrollHeight;};// Call this when appending a new message\nconst appendMessage=useCallback(newMessage=>{setMessages(prev=>[...prev,newMessage]);requestAnimationFrame(scrollToBottomIfPinned);},[]);// Scroll handler for loading older messages\nconst onScroll=()=>{const el=chatThreadRef.current;if(!el)return;if(el.scrollTop<120)loadOlder();};// Load older messages with viewport anchoring\nconst loadOlder=async()=>{var _children$find,_anchor$getBoundingCl;if(loadingMore||!hasMore||messages.length===0)return;const el=chatThreadRef.current;if(!el)return;setLoadingMore(true);// 1) Pick an anchor element (first fully visible)\nconst children=Array.from(el.children);const anchor=(_children$find=children.find(c=>c.getBoundingClientRect().top>=el.getBoundingClientRect().top))!==null&&_children$find!==void 0?_children$find:children[0];const anchorId=anchor===null||anchor===void 0?void 0:anchor.dataset.id;const anchorTopBefore=(_anchor$getBoundingCl=anchor===null||anchor===void 0?void 0:anchor.getBoundingClientRect().top)!==null&&_anchor$getBoundingCl!==void 0?_anchor$getBoundingCl:0;// 2) Freeze current heights so items \"retain their size\"\nchildren.forEach(c=>{const id=c.dataset.id;const h=heightMap.current[id]||c.getBoundingClientRect().height;c.style.height=\"\".concat(h,\"px\");});// 3) Simulate prepending older items (for now, just mark no more)\n// In a real app, you'd fetch older messages here\nsetHasMore(false);// 4) After DOM updates, restore the anchor position\nrequestAnimationFrame(()=>{var _newAnchor$getBoundin;const newAnchor=anchorId?Array.from(el.children).find(c=>c.dataset.id===anchorId):null;const anchorTopAfter=(_newAnchor$getBoundin=newAnchor===null||newAnchor===void 0?void 0:newAnchor.getBoundingClientRect().top)!==null&&_newAnchor$getBoundin!==void 0?_newAnchor$getBoundin:0;const delta=anchorTopAfter-anchorTopBefore;el.scrollTop+=delta;// shift viewport up by the added height\n// 5) Unfreeze heights (let new messages measure/observe)\nArray.from(el.children).forEach(c=>c.style.height=\"\");setLoadingMore(false);});};// Jump to bottom on first load\nuseEffect(()=>{if(messages.length>0){requestAnimationFrame(()=>{const el=chatThreadRef.current;if(el)el.scrollTop=el.scrollHeight;});}},[messages.length]);// Global message addition capability\nuseEffect(()=>{const addChatMessage=(userMessage,assistantMessage)=>{console.log('🔍 CHATWIDGET: External message addition',{userMessage,assistantMessage});const userMsg={id:Date.now().toString()+'-user',type:'user',message:userMessage,timestamp:new Date()};const aiMsg={id:Date.now().toString()+'-assistant',type:'assistant',message:assistantMessage,timestamp:new Date()};setMessages(prev=>[...prev,userMsg,aiMsg]);};// Expose global function for external message addition\nwindow.addChatMessage=addChatMessage;return()=>{delete window.addChatMessage;};},[]);// Initialize conversation with search results if provided\nconst[hasInitialized,setHasInitialized]=useState(false);useEffect(()=>{// Only initialize once when we have the required data and haven't initialized yet\nif(searchQuery&&searchResponse&&!hasInitialized){console.log('🔍 CHATWIDGET: Initializing conversation');// Create a conversational summary instead of full response\nlet conversationalSummary=searchResponse;// Extract key points and make it conversational\nif(searchResponse.includes('WIHY Health')){const lines=searchResponse.split('\\n').filter(line=>line.trim());const keyPoints=lines.filter(line=>line.includes('•')||line.includes('-')).slice(0,2).map(line=>line.replace(/[•-]/g,'').trim()).join('. ');conversationalSummary=keyPoints||'I found some helpful information for you!';conversationalSummary+=' What specific aspect would you like to explore further?';}const initialMessages=[{id:Date.now().toString()+'-user',type:'user',message:searchQuery,timestamp:new Date()},{id:Date.now().toString()+'-assistant',type:'assistant',message:conversationalSummary,timestamp:new Date()}];setMessages(initialMessages);setHasInitialized(true);console.log('🔍 CHATWIDGET: Conversation initialized with',initialMessages.length,'messages');}},[searchQuery,searchResponse,hasInitialized]);// Focus input when chat opens\nuseEffect(()=>{if(isOpen&&inputRef.current){setTimeout(()=>{var _inputRef$current;return(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();},100);}},[isOpen]);const handleSendMessage=async()=>{if(!inputMessage.trim()||isLoading)return;console.log('🔍 CHATWIDGET: Sending message:',inputMessage.trim());const userMessage={id:Date.now().toString()+'-user',type:'user',message:inputMessage.trim(),timestamp:new Date(),context:currentContext};appendMessage(userMessage);setInputMessage('');setIsLoading(true);try{// Build conversation context from previous messages\nconst conversationHistory=messages.slice(-4)// Last 4 messages for context\n.map(msg=>\"\".concat(msg.type==='user'?'User':'Assistant',\": \").concat(msg.message)).join('\\n');// Create a focused query for conversational responses\nconst contextualQuery=\"Please provide a brief, conversational response (2-3 sentences max) to: \".concat(userMessage.message).concat(conversationHistory?\"\\n\\nContext from our conversation: \".concat(conversationHistory):'');// Use the dedicated chat service instead of wihyAPI\nconst response=await chatService.sendMessage(contextualQuery,{conversation_mode:true,response_style:'concise',conversation_context:conversationHistory,current_context:currentContext,is_followup:messages.length>0},false);// Call the callback to update the main content if provided\nif(onNewSearch){console.log('🔍 CHATWIDGET: Triggering new search for:',userMessage.message);onNewSearch(userMessage.message);}// Extract just the main response\nlet aiResponse='';if(response&&typeof response==='object'){if(response.response){aiResponse=response.response;}else if(response.message){aiResponse=response.message;}else{aiResponse=JSON.stringify(response);}}else if(typeof response==='string'){aiResponse=response;}else{aiResponse='I apologize, but I encountered an issue processing your request. Could you please try again?';}// Clean up the response to be more conversational\naiResponse=aiResponse.replace(/🥗.*?\\*\\*/g,'')// Remove emoji headers\n.replace(/\\*\\*.*?\\*\\*/g,'')// Remove bold formatting\n.replace(/📋.*?:/g,'')// Remove section headers\n.replace(/•/g,'-')// Replace bullets\n.split('\\n').filter(line=>line.trim()&&!line.includes('Biblical')&&!line.includes('Corinthians')).slice(0,3)// Take first 3 meaningful lines\n.join(' ').trim();// If response is too long, truncate and add follow-up prompt\nif(aiResponse.length>200){aiResponse=aiResponse.substring(0,200).trim()+'... What would you like to know more about?';}const aiMessage={id:Date.now().toString()+'-assistant',type:'assistant',message:aiResponse,timestamp:new Date()};appendMessage(aiMessage);console.log('🔍 CHATWIDGET: Response added to chat');}catch(error){console.error('Chat error:',error);const errorMessage={id:Date.now().toString()+'-assistant',type:'assistant',message:\"I'm having trouble connecting right now. Please try again in a moment.\",timestamp:new Date()};appendMessage(errorMessage);}finally{setIsLoading(false);}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};if(!isOpen){return null;}const formatTime=date=>{return date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});};if(!isOpen){return null;}return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',height:'100%',backgroundColor:'white',fontFamily:'system-ui, -apple-system, sans-serif'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'20px 16px 16px 16px',borderBottom:'1px solid #f3f4f6'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:0,fontSize:'20px',fontWeight:'600',color:'#1f2937'},children:\"WiHy Health Response\"}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px',color:'#6b7280',backgroundColor:'#f3f4f6',padding:'4px 8px',borderRadius:'4px'},children:\"AI-Powered\"})]}),/*#__PURE__*/_jsxs(\"div\",{ref:chatThreadRef,className:\"chat-thread\",onScroll:onScroll,style:{height:'calc(100vh - 240px)',// Fixed height based on viewport\noverflowY:'auto',overscrollBehavior:'contain',// Prevent body scroll chaining\nscrollBehavior:'smooth',// Nice bottom scroll on new msg\npadding:'12px 16px',display:'flex',flexDirection:'column',gap:'10px'},children:[loadingMore&&hasMore&&/*#__PURE__*/_jsx(\"div\",{style:{textAlign:\"center\",padding:\"6px 0\"},children:\"Loading\\u2026\"}),messages.length===0?/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'40px 20px',color:'#64748b'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'48px',marginBottom:'16px',opacity:0.3},children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'14px',fontWeight:'500',marginBottom:'8px'},children:\"Start a health conversation\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#94a3b8'},children:\"Ask any health question to begin learning\"})]}):messages.map(message=>/*#__PURE__*/_jsxs(\"div\",{\"data-id\":message.id,className:\"chat-message\",ref:observe,style:{flex:'0 0 auto',// Don't shrink or stretch\noverflow:'visible',// Important: no nested scrollbars\nmaxHeight:'none',// Remove any fixed max-height\ndisplay:'flex',flexDirection:message.type==='user'?'row-reverse':'row',gap:'10px',padding:'10px 0',alignItems:'flex-start',contain:'content'// Micro-optimization\n},children:[message.type==='user'?/*#__PURE__*/_jsx(\"div\",{style:{width:'28px',height:'28px',borderRadius:'50%',backgroundColor:'#10b981',display:'flex',alignItems:'center',justifyContent:'center',color:'white',fontSize:'12px',fontWeight:'bold',flexShrink:0},children:\"U\"}):/*#__PURE__*/_jsx(\"img\",{src:\"/assets/wihyfavicon.png\",alt:\"WiHy\",style:{width:'28px',height:'28px',borderRadius:'50%',border:'1px solid #e5e7eb',backgroundColor:'white',padding:'2px',flexShrink:0}}),/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'75%',display:'flex',flexDirection:'column',gap:'4px'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"bubble\",style:{backgroundColor:message.type==='user'?'#10b981':'#f3f4f6',color:message.type==='user'?'white':'#1f2937',padding:'12px 16px',borderRadius:message.type==='user'?'18px 18px 4px 18px':'18px 18px 18px 4px',fontSize:'14px',lineHeight:'1.4',overflow:'visible',// Clean pattern: no bubble scrolling\nwhiteSpace:'pre-wrap',overflowWrap:'anywhere'// Handle super-long tokens/URLs\n},children:message.message}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'11px',color:'#9ca3af',textAlign:message.type==='user'?'right':'left',paddingLeft:message.type==='user'?'0':'16px',paddingRight:message.type==='user'?'16px':'0'},children:[formatTime(message.timestamp),message.context&&/*#__PURE__*/_jsxs(\"span\",{style:{marginLeft:'8px',fontStyle:'italic'},children:[\"\\u2022 viewing \",message.context]})]})]})]},message.id)),isLoading&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'8px',alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(\"img\",{src:\"/assets/wihyfavicon.png\",alt:\"WiHy\",style:{width:'28px',height:'28px',borderRadius:'50%',border:'1px solid #e5e7eb',backgroundColor:'white',padding:'2px',flexShrink:0}}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f3f4f6',padding:'12px 16px',borderRadius:'18px 18px 18px 4px',display:'flex',gap:'4px',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'6px',height:'6px',borderRadius:'50%',backgroundColor:'#9ca3af',animation:'typing 1.5s ease-in-out infinite'}}),/*#__PURE__*/_jsx(\"div\",{style:{width:'6px',height:'6px',borderRadius:'50%',backgroundColor:'#9ca3af',animation:'typing 1.5s ease-in-out infinite 0.2s'}}),/*#__PURE__*/_jsx(\"div\",{style:{width:'6px',height:'6px',borderRadius:'50%',backgroundColor:'#9ca3af',animation:'typing 1.5s ease-in-out infinite 0.4s'}})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-input-area\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-input-container chat-input-container\",children:/*#__PURE__*/_jsx(\"textarea\",{ref:inputRef,className:\"search-input\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Ask about your health data...\",rows:1})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:!inputMessage.trim()||isLoading,className:\"send-button \".concat(inputMessage.trim()?'active':'disabled'),children:/*#__PURE__*/_jsx(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"})})})]})}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n        @keyframes typing {\\n          0%, 60%, 100% {\\n            transform: translateY(0);\\n            opacity: 0.4;\\n          }\\n          30% {\\n            transform: translateY(-10px);\\n            opacity: 1;\\n          }\\n        }\\n\\n        /* The ONLY scroller - Hide scrollbar but keep functionality */\\n        .chat-thread {\\n          height: calc(100vh - 240px);    /* adjust for your header/input */\\n          overflow-y: auto;\\n          overscroll-behavior: contain;\\n          scrollbar-width: none; /* Firefox */\\n          -ms-overflow-style: none; /* Internet Explorer 10+ */\\n        }\\n\\n        /* Hide scrollbar for WebKit browsers */\\n        .chat-thread::-webkit-scrollbar {\\n          display: none;\\n        }\\n\\n        /* Each message keeps its size and never creates its own scrollbar */\\n        .chat-message {\\n          flex: 0 0 auto;                 /* don't shrink or stretch */\\n          overflow: visible;              /* prevent inner scrollbars */\\n          max-height: none;\\n          padding: 10px 0;\\n        }\\n\\n        /* Long text wraps (no overflow) */\\n        .chat-message .bubble {\\n          white-space: pre-wrap;\\n          overflow-wrap: anywhere;\\n        }\\n\\n        /* Kill any legacy scrollbars on messages */\\n        .chat-message::-webkit-scrollbar {\\n          display: none;\\n        }\\n\\n        .chat-message {\\n          scrollbar-width: none;\\n          -ms-overflow-style: none;\\n        }\\n\\n        /* Chat-specific input area styling */\\n        .chat-input-area {\\n          padding: 16px;\\n          border-top: 1px solid #ffffff;\\n          background-color: #ffffff; /* Pure white background */\\n        }\\n\\n        /* Wrapper for input and button positioning */\\n        .chat-input-wrapper {\\n          position: relative;\\n          display: flex;\\n          align-items: center;\\n          gap: 8px;\\n        }\\n\\n        /* Chat input container - Simple solid styling for chat */\\n        .chat-input-container {\\n          width: 100% !important; /* Override the 80% width for chat context */\\n          margin: 0 !important; /* Override auto margins for flexbox */\\n          flex: 1; /* Allow it to grow in flexbox */\\n          /* Override animated styles with solid styling */\\n          background: #ffffff !important;\\n          border: 2px solid #fa5f06 !important;\\n          border-radius: 28px !important;\\n          box-shadow: 0 2px 8px rgba(250, 95, 6, 0.1) !important;\\n          animation: none !important;\\n          padding: 4px;\\n        }\\n\\n        /* Chat input overrides */\\n        .chat-input-container .search-input {\\n          resize: none;\\n          min-height: 20px;\\n          max-height: 80px;\\n          padding-right: 16px;\\n          background-color: #ffffff !important; /* Ensure pure white background */\\n        }\\n\\n        /* Send button styling - now positioned outside animated container */\\n        .send-button {\\n          position: relative;\\n          right: auto;\\n          top: auto;\\n          transform: none;\\n          color: white;\\n          border: none;\\n          border-radius: 12px;\\n          padding: 12px;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          transition: background-color 0.2s ease;\\n          flex-shrink: 0;\\n          min-width: 44px;\\n          height: 44px;\\n        }\\n\\n        .send-button.active {\\n          background-color: #1a73e8;\\n          cursor: pointer;\\n        }\\n\\n        .send-button.disabled {\\n          background-color: #d1d5db;\\n          cursor: not-allowed;\\n        }\\n      \"})]});};export default ChatWidget;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","chatService","jsx","_jsx","jsxs","_jsxs","ChatWidget","_ref","isOpen","onClose","searchQuery","searchResponse","currentContext","inline","onNewSearch","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","hasMore","setHasMore","loadingMore","setLoadingMore","chatThreadRef","inputRef","heightMap","ro","current","ResizeObserver","entries","e","id","target","dataset","contentRect","height","_ro$current","disconnect","observe","el","scrollToBottomIfPinned","nearBottom","scrollHeight","scrollTop","clientHeight","appendMessage","newMessage","prev","requestAnimationFrame","onScroll","loadOlder","_children$find","_anchor$getBoundingCl","length","children","Array","from","anchor","find","c","getBoundingClientRect","top","anchorId","anchorTopBefore","forEach","h","style","concat","_newAnchor$getBoundin","newAnchor","anchorTopAfter","delta","addChatMessage","userMessage","assistantMessage","console","log","userMsg","Date","now","toString","type","message","timestamp","aiMsg","window","hasInitialized","setHasInitialized","conversationalSummary","includes","lines","split","filter","line","trim","keyPoints","slice","map","replace","join","initialMessages","setTimeout","_inputRef$current","focus","handleSendMessage","context","conversationHistory","msg","contextualQuery","response","sendMessage","conversation_mode","response_style","conversation_context","current_context","is_followup","aiResponse","JSON","stringify","substring","aiMessage","error","errorMessage","handleKeyPress","key","shiftKey","preventDefault","formatTime","date","toLocaleTimeString","hour","minute","display","flexDirection","backgroundColor","fontFamily","alignItems","justifyContent","padding","borderBottom","margin","fontSize","fontWeight","color","borderRadius","ref","className","overflowY","overscrollBehavior","scrollBehavior","gap","textAlign","marginBottom","opacity","flex","overflow","maxHeight","contain","width","flexShrink","src","alt","border","maxWidth","lineHeight","whiteSpace","overflowWrap","paddingLeft","paddingRight","marginLeft","fontStyle","animation","value","onChange","onKeyPress","placeholder","rows","onClick","disabled","viewBox","fill","d"],"sources":["C:/repo/wihy_ui/client/src/components/ui/ChatWidget.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { chatService } from '../../services/chatService';\r\nimport '../../styles/VHealthSearch.css';\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  type: 'user' | 'assistant';\r\n  message: string;\r\n  timestamp: Date;\r\n  context?: string;\r\n}\r\n\r\ninterface ChatWidgetProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  searchQuery?: string;\r\n  searchResponse?: string;\r\n  currentContext?: string; // Current dashboard section being viewed\r\n  inline?: boolean; // Whether to render inline or as fixed overlay\r\n  onNewSearch?: (query: string) => void; // Callback to update main content\r\n  onAddMessage?: (userMessage: string, assistantMessage: string) => void; // Callback to add new messages externally\r\n}\r\n\r\nconst ChatWidget: React.FC<ChatWidgetProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  searchQuery,\r\n  searchResponse,\r\n  currentContext,\r\n  inline = false,\r\n  onNewSearch\r\n}) => {\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const chatThreadRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  // Cache measured heights so items retain size during prepend\r\n  const heightMap = useRef<Record<string, number>>({});\r\n  const ro = useRef<ResizeObserver>();\r\n\r\n  useEffect(() => {\r\n    ro.current = new ResizeObserver(entries => {\r\n      for (const e of entries) {\r\n        const id = (e.target as HTMLElement).dataset.id!;\r\n        heightMap.current[id] = e.contentRect.height;\r\n      }\r\n    });\r\n    return () => ro.current?.disconnect();\r\n  }, []);\r\n\r\n  // Attach observer to each rendered message\r\n  const observe = (el: HTMLDivElement | null) => {\r\n    if (!el || !ro.current) return;\r\n    ro.current.observe(el);\r\n  };\r\n\r\n  // Keep auto-scrolling to bottom ONLY if user is near bottom\r\n  const scrollToBottomIfPinned = () => {\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n    const nearBottom = el.scrollHeight - el.scrollTop - el.clientHeight < 120;\r\n    if (nearBottom) el.scrollTop = el.scrollHeight;\r\n  };\r\n\r\n  // Call this when appending a new message\r\n  const appendMessage = useCallback((newMessage: ChatMessage) => {\r\n    setMessages(prev => [...prev, newMessage]);\r\n    requestAnimationFrame(scrollToBottomIfPinned);\r\n  }, []);\r\n\r\n  // Scroll handler for loading older messages\r\n  const onScroll = () => {\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n    if (el.scrollTop < 120) loadOlder();\r\n  };\r\n\r\n  // Load older messages with viewport anchoring\r\n  const loadOlder = async () => {\r\n    if (loadingMore || !hasMore || messages.length === 0) return;\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n\r\n    setLoadingMore(true);\r\n\r\n    // 1) Pick an anchor element (first fully visible)\r\n    const children = Array.from(el.children) as HTMLElement[];\r\n    const anchor =\r\n      children.find(c => c.getBoundingClientRect().top >= el.getBoundingClientRect().top) ??  \r\n      (children[0] as HTMLElement);\r\n\r\n    const anchorId = anchor?.dataset.id;\r\n    const anchorTopBefore = anchor?.getBoundingClientRect().top ?? 0;\r\n\r\n    // 2) Freeze current heights so items \"retain their size\"\r\n    children.forEach(c => {\r\n      const id = (c as HTMLElement).dataset.id!;\r\n      const h = heightMap.current[id] || c.getBoundingClientRect().height;\r\n      (c as HTMLElement).style.height = `${h}px`;\r\n    });\r\n\r\n    // 3) Simulate prepending older items (for now, just mark no more)\r\n    // In a real app, you'd fetch older messages here\r\n    setHasMore(false);\r\n\r\n    // 4) After DOM updates, restore the anchor position\r\n    requestAnimationFrame(() => {\r\n      const newAnchor = anchorId\r\n        ? (Array.from(el.children).find(c => (c as HTMLElement).dataset.id === anchorId) as HTMLElement)\r\n        : null;\r\n\r\n      const anchorTopAfter = newAnchor?.getBoundingClientRect().top ?? 0;\r\n      const delta = anchorTopAfter - anchorTopBefore;\r\n      el.scrollTop += delta; // shift viewport up by the added height\r\n\r\n      // 5) Unfreeze heights (let new messages measure/observe)\r\n      Array.from(el.children).forEach(c => ((c as HTMLElement).style.height = \"\"));\r\n      setLoadingMore(false);\r\n    });\r\n  };\r\n\r\n  // Jump to bottom on first load\r\n  useEffect(() => {\r\n    if (messages.length > 0) {\r\n      requestAnimationFrame(() => {\r\n        const el = chatThreadRef.current;\r\n        if (el) el.scrollTop = el.scrollHeight;\r\n      });\r\n    }\r\n  }, [messages.length]);\r\n\r\n  // Global message addition capability\r\n  useEffect(() => {\r\n    const addChatMessage = (userMessage: string, assistantMessage: string) => {\r\n      console.log('🔍 CHATWIDGET: External message addition', { userMessage, assistantMessage });\r\n      \r\n      const userMsg: ChatMessage = {\r\n        id: Date.now().toString() + '-user',\r\n        type: 'user',\r\n        message: userMessage,\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const aiMsg: ChatMessage = {\r\n        id: Date.now().toString() + '-assistant',\r\n        type: 'assistant',\r\n        message: assistantMessage,\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, userMsg, aiMsg]);\r\n    };\r\n\r\n    // Expose global function for external message addition\r\n    (window as any).addChatMessage = addChatMessage;\r\n\r\n    return () => {\r\n      delete (window as any).addChatMessage;\r\n    };\r\n  }, []);\r\n\r\n  // Initialize conversation with search results if provided\r\n  const [hasInitialized, setHasInitialized] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    // Only initialize once when we have the required data and haven't initialized yet\r\n    if (searchQuery && searchResponse && !hasInitialized) {\r\n      console.log('🔍 CHATWIDGET: Initializing conversation');\r\n\r\n      // Create a conversational summary instead of full response\r\n      let conversationalSummary = searchResponse;\r\n\r\n      // Extract key points and make it conversational\r\n      if (searchResponse.includes('WIHY Health')) {\r\n        const lines = searchResponse.split('\\n').filter(line => line.trim());\r\n        const keyPoints = lines\r\n          .filter(line => line.includes('•') || line.includes('-'))\r\n          .slice(0, 2)\r\n          .map(line => line.replace(/[•-]/g, '').trim())\r\n          .join('. ');\r\n\r\n        conversationalSummary = keyPoints || 'I found some helpful information for you!';\r\n        conversationalSummary += ' What specific aspect would you like to explore further?';\r\n      }\r\n\r\n      const initialMessages: ChatMessage[] = [\r\n        {\r\n          id: Date.now().toString() + '-user',\r\n          type: 'user',\r\n          message: searchQuery,\r\n          timestamp: new Date()\r\n        },\r\n        {\r\n          id: Date.now().toString() + '-assistant',\r\n          type: 'assistant',\r\n          message: conversationalSummary,\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n      setMessages(initialMessages);\r\n      setHasInitialized(true);\r\n      \r\n      console.log('🔍 CHATWIDGET: Conversation initialized with', initialMessages.length, 'messages');\r\n    }\r\n  }, [searchQuery, searchResponse, hasInitialized]);\r\n\r\n  // Focus input when chat opens\r\n  useEffect(() => {\r\n    if (isOpen && inputRef.current) {\r\n      setTimeout(() => inputRef.current?.focus(), 100);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    console.log('🔍 CHATWIDGET: Sending message:', inputMessage.trim());\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString() + '-user',\r\n      type: 'user',\r\n      message: inputMessage.trim(),\r\n      timestamp: new Date(),\r\n      context: currentContext\r\n    };\r\n\r\n    appendMessage(userMessage);\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Build conversation context from previous messages\r\n      const conversationHistory = messages.slice(-4) // Last 4 messages for context\r\n        .map(msg => `${msg.type === 'user' ? 'User' : 'Assistant'}: ${msg.message}`)\r\n        .join('\\n');\r\n\r\n      // Create a focused query for conversational responses\r\n      const contextualQuery = `Please provide a brief, conversational response (2-3 sentences max) to: ${userMessage.message}${conversationHistory ? `\\n\\nContext from our conversation: ${conversationHistory}` : ''}`;\r\n\r\n      // Use the dedicated chat service instead of wihyAPI\r\n      const response = await chatService.sendMessage(\r\n        contextualQuery,\r\n        {\r\n          conversation_mode: true,\r\n          response_style: 'concise',\r\n          conversation_context: conversationHistory,\r\n          current_context: currentContext,\r\n          is_followup: messages.length > 0\r\n        },\r\n        false\r\n      );\r\n\r\n      // Call the callback to update the main content if provided\r\n      if (onNewSearch) {\r\n        console.log('🔍 CHATWIDGET: Triggering new search for:', userMessage.message);\r\n        onNewSearch(userMessage.message);\r\n      }\r\n\r\n      // Extract just the main response\r\n      let aiResponse = '';\r\n      if (response && typeof response === 'object') {\r\n        if (response.response) {\r\n          aiResponse = response.response;\r\n        } else if (response.message) {\r\n          aiResponse = response.message;\r\n        } else {\r\n          aiResponse = JSON.stringify(response);\r\n        }\r\n      } else if (typeof response === 'string') {\r\n        aiResponse = response;\r\n      } else {\r\n        aiResponse = 'I apologize, but I encountered an issue processing your request. Could you please try again?';\r\n      }\r\n\r\n      // Clean up the response to be more conversational\r\n      aiResponse = aiResponse\r\n        .replace(/🥗.*?\\*\\*/g, '') // Remove emoji headers\r\n        .replace(/\\*\\*.*?\\*\\*/g, '') // Remove bold formatting\r\n        .replace(/📋.*?:/g, '') // Remove section headers\r\n        .replace(/•/g, '-') // Replace bullets\r\n        .split('\\n')\r\n        .filter(line => line.trim() && !line.includes('Biblical') && !line.includes('Corinthians'))\r\n        .slice(0, 3) // Take first 3 meaningful lines\r\n        .join(' ')\r\n        .trim();\r\n\r\n      // If response is too long, truncate and add follow-up prompt\r\n      if (aiResponse.length > 200) {\r\n        aiResponse = aiResponse.substring(0, 200).trim() + '... What would you like to know more about?';\r\n      }\r\n\r\n      const aiMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-assistant',\r\n        type: 'assistant',\r\n        message: aiResponse,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      appendMessage(aiMessage);\r\n      console.log('🔍 CHATWIDGET: Response added to chat');\r\n\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      const errorMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-assistant',\r\n        type: 'assistant',\r\n        message: \"I'm having trouble connecting right now. Please try again in a moment.\",\r\n        timestamp: new Date()\r\n      };\r\n      appendMessage(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const formatTime = (date: Date) => {\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%',\r\n      backgroundColor: 'white',\r\n      fontFamily: 'system-ui, -apple-system, sans-serif'\r\n    }}>\r\n      {/* Header - now inside the component */}\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '20px 16px 16px 16px',\r\n        borderBottom: '1px solid #f3f4f6'\r\n      }}>\r\n        <h2 style={{\r\n          margin: 0,\r\n          fontSize: '20px',\r\n          fontWeight: '600',\r\n          color: '#1f2937'\r\n        }}>\r\n          WiHy Health Response\r\n        </h2>\r\n        <span style={{\r\n          fontSize: '12px',\r\n          color: '#6b7280',\r\n          backgroundColor: '#f3f4f6',\r\n          padding: '4px 8px',\r\n          borderRadius: '4px'\r\n        }}>\r\n          AI-Powered\r\n        </span>\r\n      </div>\r\n\r\n      {/* Messages - Clean scroll pattern with viewport anchoring */}\r\n      <div\r\n        ref={chatThreadRef}\r\n        className=\"chat-thread\"\r\n        onScroll={onScroll}\r\n        style={{\r\n          height: 'calc(100vh - 240px)', // Fixed height based on viewport\r\n          overflowY: 'auto',\r\n          overscrollBehavior: 'contain', // Prevent body scroll chaining\r\n          scrollBehavior: 'smooth',      // Nice bottom scroll on new msg\r\n          padding: '12px 16px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: '10px'\r\n        }}>\r\n\r\n        {/* Loading indicator for older messages */}\r\n        {loadingMore && hasMore && (\r\n          <div style={{ textAlign: \"center\", padding: \"6px 0\" }}>Loading…</div>\r\n        )}\r\n\r\n        {messages.length === 0 ? (\r\n          <div style={{\r\n            textAlign: 'center',\r\n            padding: '40px 20px',\r\n            color: '#64748b'\r\n          }}>\r\n            <div style={{\r\n              fontSize: '48px',\r\n              marginBottom: '16px',\r\n              opacity: 0.3\r\n            }}>\r\n              💬\r\n            </div>\r\n            <div style={{\r\n              fontSize: '14px',\r\n              fontWeight: '500',\r\n              marginBottom: '8px'\r\n            }}>\r\n              Start a health conversation\r\n            </div>\r\n            <div style={{\r\n              fontSize: '12px',\r\n              color: '#94a3b8'\r\n            }}>\r\n              Ask any health question to begin learning\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              data-id={message.id}\r\n              className=\"chat-message\"\r\n              ref={observe}\r\n              style={{\r\n                flex: '0 0 auto',         // Don't shrink or stretch\r\n                overflow: 'visible',      // Important: no nested scrollbars\r\n                maxHeight: 'none',        // Remove any fixed max-height\r\n                display: 'flex',\r\n                flexDirection: message.type === 'user' ? 'row-reverse' : 'row',\r\n                gap: '10px',\r\n                padding: '10px 0',\r\n                alignItems: 'flex-start',\r\n                contain: 'content'        // Micro-optimization\r\n              }}\r\n            >\r\n              {message.type === 'user' ? (\r\n                <div style={{\r\n                  width: '28px',\r\n                  height: '28px',\r\n                  borderRadius: '50%',\r\n                  backgroundColor: '#10b981',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  color: 'white',\r\n                  fontSize: '12px',\r\n                  fontWeight: 'bold',\r\n                  flexShrink: 0\r\n                }}>\r\n                  U\r\n                </div>\r\n              ) : (\r\n                <img\r\n                  src=\"/assets/wihyfavicon.png\"\r\n                  alt=\"WiHy\"\r\n                  style={{\r\n                    width: '28px',\r\n                    height: '28px',\r\n                    borderRadius: '50%',\r\n                    border: '1px solid #e5e7eb',\r\n                    backgroundColor: 'white',\r\n                    padding: '2px',\r\n                    flexShrink: 0\r\n                  }}\r\n                />\r\n              )}\r\n              <div style={{\r\n                maxWidth: '75%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '4px'\r\n              }}>\r\n                <div\r\n                  className=\"bubble\"\r\n                  style={{\r\n                    backgroundColor: message.type === 'user' ? '#10b981' : '#f3f4f6',\r\n                    color: message.type === 'user' ? 'white' : '#1f2937',\r\n                    padding: '12px 16px',\r\n                    borderRadius: message.type === 'user' ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\r\n                    fontSize: '14px',\r\n                    lineHeight: '1.4',\r\n                    overflow: 'visible',        // Clean pattern: no bubble scrolling\r\n                    whiteSpace: 'pre-wrap',\r\n                    overflowWrap: 'anywhere'    // Handle super-long tokens/URLs\r\n                  }}>\r\n                  {message.message}\r\n                </div>\r\n                <div style={{\r\n                  fontSize: '11px',\r\n                  color: '#9ca3af',\r\n                  textAlign: message.type === 'user' ? 'right' : 'left',\r\n                  paddingLeft: message.type === 'user' ? '0' : '16px',\r\n                  paddingRight: message.type === 'user' ? '16px' : '0'\r\n                }}>\r\n                  {formatTime(message.timestamp)}\r\n                  {message.context && (\r\n                    <span style={{ marginLeft: '8px', fontStyle: 'italic' }}>\r\n                      • viewing {message.context}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n\r\n        {isLoading && (\r\n          <div style={{\r\n            display: 'flex',\r\n            gap: '8px',\r\n            alignItems: 'flex-start'\r\n          }}>\r\n            <img\r\n              src=\"/assets/wihyfavicon.png\"\r\n              alt=\"WiHy\"\r\n              style={{\r\n                width: '28px',\r\n                height: '28px',\r\n                borderRadius: '50%',\r\n                border: '1px solid #e5e7eb',\r\n                backgroundColor: 'white',\r\n                padding: '2px',\r\n                flexShrink: 0\r\n              }}\r\n            />\r\n            <div style={{\r\n              backgroundColor: '#f3f4f6',\r\n              padding: '12px 16px',\r\n              borderRadius: '18px 18px 18px 4px',\r\n              display: 'flex',\r\n              gap: '4px',\r\n              alignItems: 'center'\r\n            }}>\r\n              <div style={{\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#9ca3af',\r\n                animation: 'typing 1.5s ease-in-out infinite'\r\n              }} />\r\n              <div style={{\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#9ca3af',\r\n                animation: 'typing 1.5s ease-in-out infinite 0.2s'\r\n              }} />\r\n              <div style={{\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#9ca3af',\r\n                animation: 'typing 1.5s ease-in-out infinite 0.4s'\r\n              }} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input */}\r\n      <div className=\"chat-input-area\">\r\n        <div className=\"chat-input-wrapper\">\r\n          <div className=\"search-input-container chat-input-container\">\r\n            <textarea\r\n              ref={inputRef}\r\n              className=\"search-input\"\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask about your health data...\"\r\n              rows={1}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleSendMessage}\r\n            disabled={!inputMessage.trim() || isLoading}\r\n            className={`send-button ${inputMessage.trim() ? 'active' : 'disabled'}`}\r\n          >\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n              <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <style>{`\r\n        @keyframes typing {\r\n          0%, 60%, 100% {\r\n            transform: translateY(0);\r\n            opacity: 0.4;\r\n          }\r\n          30% {\r\n            transform: translateY(-10px);\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        /* The ONLY scroller - Hide scrollbar but keep functionality */\r\n        .chat-thread {\r\n          height: calc(100vh - 240px);    /* adjust for your header/input */\r\n          overflow-y: auto;\r\n          overscroll-behavior: contain;\r\n          scrollbar-width: none; /* Firefox */\r\n          -ms-overflow-style: none; /* Internet Explorer 10+ */\r\n        }\r\n\r\n        /* Hide scrollbar for WebKit browsers */\r\n        .chat-thread::-webkit-scrollbar {\r\n          display: none;\r\n        }\r\n\r\n        /* Each message keeps its size and never creates its own scrollbar */\r\n        .chat-message {\r\n          flex: 0 0 auto;                 /* don't shrink or stretch */\r\n          overflow: visible;              /* prevent inner scrollbars */\r\n          max-height: none;\r\n          padding: 10px 0;\r\n        }\r\n\r\n        /* Long text wraps (no overflow) */\r\n        .chat-message .bubble {\r\n          white-space: pre-wrap;\r\n          overflow-wrap: anywhere;\r\n        }\r\n\r\n        /* Kill any legacy scrollbars on messages */\r\n        .chat-message::-webkit-scrollbar {\r\n          display: none;\r\n        }\r\n\r\n        .chat-message {\r\n          scrollbar-width: none;\r\n          -ms-overflow-style: none;\r\n        }\r\n\r\n        /* Chat-specific input area styling */\r\n        .chat-input-area {\r\n          padding: 16px;\r\n          border-top: 1px solid #ffffff;\r\n          background-color: #ffffff; /* Pure white background */\r\n        }\r\n\r\n        /* Wrapper for input and button positioning */\r\n        .chat-input-wrapper {\r\n          position: relative;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n        }\r\n\r\n        /* Chat input container - Simple solid styling for chat */\r\n        .chat-input-container {\r\n          width: 100% !important; /* Override the 80% width for chat context */\r\n          margin: 0 !important; /* Override auto margins for flexbox */\r\n          flex: 1; /* Allow it to grow in flexbox */\r\n          /* Override animated styles with solid styling */\r\n          background: #ffffff !important;\r\n          border: 2px solid #fa5f06 !important;\r\n          border-radius: 28px !important;\r\n          box-shadow: 0 2px 8px rgba(250, 95, 6, 0.1) !important;\r\n          animation: none !important;\r\n          padding: 4px;\r\n        }\r\n\r\n        /* Chat input overrides */\r\n        .chat-input-container .search-input {\r\n          resize: none;\r\n          min-height: 20px;\r\n          max-height: 80px;\r\n          padding-right: 16px;\r\n          background-color: #ffffff !important; /* Ensure pure white background */\r\n        }\r\n\r\n        /* Send button styling - now positioned outside animated container */\r\n        .send-button {\r\n          position: relative;\r\n          right: auto;\r\n          top: auto;\r\n          transform: none;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 12px;\r\n          padding: 12px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          transition: background-color 0.2s ease;\r\n          flex-shrink: 0;\r\n          min-width: 44px;\r\n          height: 44px;\r\n        }\r\n\r\n        .send-button.active {\r\n          background-color: #1a73e8;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .send-button.disabled {\r\n          background-color: #d1d5db;\r\n          cursor: not-allowed;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}