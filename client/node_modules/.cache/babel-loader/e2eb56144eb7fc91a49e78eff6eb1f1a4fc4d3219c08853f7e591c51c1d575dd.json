{"ast":null,"code":"const NEWS_API_KEY = process.env.REACT_APP_NEWS_API_KEY;\nexport class NewsService {\n  static async fetchHealthNews(category = 'health', pageSize = 6) {\n    try {\n      var _data$articles;\n      const params = new URLSearchParams({\n        q: `health ${category !== 'all' ? category : ''}`,\n        category: 'health',\n        language: 'en',\n        sortBy: 'publishedAt',\n        pageSize: pageSize.toString(),\n        apiKey: NEWS_API_KEY || ''\n      });\n      const response = await fetch(`${this.BASE_URL}/everything?${params}`);\n      const data = await response.json();\n      return ((_data$articles = data.articles) === null || _data$articles === void 0 ? void 0 : _data$articles.map(article => ({\n        id: article.url,\n        title: article.title,\n        summary: article.description,\n        url: article.url,\n        source: article.source.name,\n        publishedAt: article.publishedAt,\n        imageUrl: article.urlToImage,\n        category: this.categorizeArticle(article.title + ' ' + article.description)\n      }))) || [];\n    } catch (error) {\n      console.error('Error fetching news:', error);\n      return [];\n    }\n  }\n  static categorizeArticle(content) {\n    const lower = content.toLowerCase();\n    if (lower.includes('nutrition') || lower.includes('diet') || lower.includes('food')) return 'nutrition';\n    if (lower.includes('exercise') || lower.includes('fitness') || lower.includes('workout')) return 'fitness';\n    if (lower.includes('mental') || lower.includes('anxiety') || lower.includes('depression')) return 'mental-health';\n    if (lower.includes('research') || lower.includes('study') || lower.includes('medical')) return 'medical';\n    if (lower.includes('wellness') || lower.includes('lifestyle')) return 'wellness';\n    return 'general';\n  }\n}\nNewsService.BASE_URL = 'https://newsapi.org/v2';","map":{"version":3,"names":["NEWS_API_KEY","process","env","REACT_APP_NEWS_API_KEY","NewsService","fetchHealthNews","category","pageSize","_data$articles","params","URLSearchParams","q","language","sortBy","toString","apiKey","response","fetch","BASE_URL","data","json","articles","map","article","id","url","title","summary","description","source","name","publishedAt","imageUrl","urlToImage","categorizeArticle","error","console","content","lower","toLowerCase","includes"],"sources":["C:/vHealth/vhealth/client/src/services/newsService.ts"],"sourcesContent":["const NEWS_API_KEY = process.env.REACT_APP_NEWS_API_KEY;\r\n\r\nexport class NewsService {\r\n  private static readonly BASE_URL = 'https://newsapi.org/v2';\r\n  \r\n  static async fetchHealthNews(category: string = 'health', pageSize: number = 6) {\r\n    try {\r\n      const params = new URLSearchParams({\r\n        q: `health ${category !== 'all' ? category : ''}`,\r\n        category: 'health',\r\n        language: 'en',\r\n        sortBy: 'publishedAt',\r\n        pageSize: pageSize.toString(),\r\n        apiKey: NEWS_API_KEY || ''\r\n      });\r\n\r\n      const response = await fetch(`${this.BASE_URL}/everything?${params}`);\r\n      const data = await response.json();\r\n      \r\n      return data.articles?.map((article: any) => ({\r\n        id: article.url,\r\n        title: article.title,\r\n        summary: article.description,\r\n        url: article.url,\r\n        source: article.source.name,\r\n        publishedAt: article.publishedAt,\r\n        imageUrl: article.urlToImage,\r\n        category: this.categorizeArticle(article.title + ' ' + article.description)\r\n      })) || [];\r\n    } catch (error) {\r\n      console.error('Error fetching news:', error);\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  private static categorizeArticle(content: string): string {\r\n    const lower = content.toLowerCase();\r\n    if (lower.includes('nutrition') || lower.includes('diet') || lower.includes('food')) return 'nutrition';\r\n    if (lower.includes('exercise') || lower.includes('fitness') || lower.includes('workout')) return 'fitness';\r\n    if (lower.includes('mental') || lower.includes('anxiety') || lower.includes('depression')) return 'mental-health';\r\n    if (lower.includes('research') || lower.includes('study') || lower.includes('medical')) return 'medical';\r\n    if (lower.includes('wellness') || lower.includes('lifestyle')) return 'wellness';\r\n    return 'general';\r\n  }\r\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,OAAO,MAAMC,WAAW,CAAC;EAGvB,aAAaC,eAAeA,CAACC,QAAgB,GAAG,QAAQ,EAAEC,QAAgB,GAAG,CAAC,EAAE;IAC9E,IAAI;MAAA,IAAAC,cAAA;MACF,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;QACjCC,CAAC,EAAE,UAAUL,QAAQ,KAAK,KAAK,GAAGA,QAAQ,GAAG,EAAE,EAAE;QACjDA,QAAQ,EAAE,QAAQ;QAClBM,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE,aAAa;QACrBN,QAAQ,EAAEA,QAAQ,CAACO,QAAQ,CAAC,CAAC;QAC7BC,MAAM,EAAEf,YAAY,IAAI;MAC1B,CAAC,CAAC;MAEF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACC,QAAQ,eAAeT,MAAM,EAAE,CAAC;MACrE,MAAMU,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAElC,OAAO,EAAAZ,cAAA,GAAAW,IAAI,CAACE,QAAQ,cAAAb,cAAA,uBAAbA,cAAA,CAAec,GAAG,CAAEC,OAAY,KAAM;QAC3CC,EAAE,EAAED,OAAO,CAACE,GAAG;QACfC,KAAK,EAAEH,OAAO,CAACG,KAAK;QACpBC,OAAO,EAAEJ,OAAO,CAACK,WAAW;QAC5BH,GAAG,EAAEF,OAAO,CAACE,GAAG;QAChBI,MAAM,EAAEN,OAAO,CAACM,MAAM,CAACC,IAAI;QAC3BC,WAAW,EAAER,OAAO,CAACQ,WAAW;QAChCC,QAAQ,EAAET,OAAO,CAACU,UAAU;QAC5B3B,QAAQ,EAAE,IAAI,CAAC4B,iBAAiB,CAACX,OAAO,CAACG,KAAK,GAAG,GAAG,GAAGH,OAAO,CAACK,WAAW;MAC5E,CAAC,CAAC,CAAC,KAAI,EAAE;IACX,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,EAAE;IACX;EACF;EAEA,OAAeD,iBAAiBA,CAACG,OAAe,EAAU;IACxD,MAAMC,KAAK,GAAGD,OAAO,CAACE,WAAW,CAAC,CAAC;IACnC,IAAID,KAAK,CAACE,QAAQ,CAAC,WAAW,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,WAAW;IACvG,IAAIF,KAAK,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,SAAS,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,SAAS;IAC1G,IAAIF,KAAK,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,SAAS,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,YAAY,CAAC,EAAE,OAAO,eAAe;IACjH,IAAIF,KAAK,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,OAAO,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,SAAS;IACxG,IAAIF,KAAK,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,WAAW,CAAC,EAAE,OAAO,UAAU;IAChF,OAAO,SAAS;EAClB;AACF;AA1CapC,WAAW,CACEc,QAAQ,GAAG,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}