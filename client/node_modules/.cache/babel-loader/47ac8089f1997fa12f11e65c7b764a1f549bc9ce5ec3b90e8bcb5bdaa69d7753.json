{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\ChatWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { wihyAPI } from '../services/wihyAPI';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWidget = ({\n  isOpen,\n  onClose,\n  searchQuery,\n  searchResponse,\n  currentContext,\n  inline = false\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Auto-scroll to bottom when new messages are added\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize conversation with search results if provided\n  useEffect(() => {\n    if (searchQuery && searchResponse && messages.length === 0) {\n      // Create a conversational summary instead of full response\n      let conversationalSummary = searchResponse;\n\n      // Extract key points and make it conversational\n      if (searchResponse.includes('WIHY Health')) {\n        const lines = searchResponse.split('\\n').filter(line => line.trim());\n        const keyPoints = lines.filter(line => line.includes('â€¢') || line.includes('-')).slice(0, 2).map(line => line.replace(/[â€¢-]/g, '').trim()).join('. ');\n        conversationalSummary = keyPoints || 'I found some helpful information for you!';\n        conversationalSummary += ' What specific aspect would you like to explore further?';\n      }\n      const initialMessages = [{\n        id: Date.now().toString() + '-user',\n        type: 'user',\n        content: searchQuery,\n        timestamp: new Date()\n      }, {\n        id: Date.now().toString() + '-ai',\n        type: 'ai',\n        content: conversationalSummary,\n        timestamp: new Date()\n      }];\n      setMessages(initialMessages);\n    }\n  }, [searchQuery, searchResponse, messages.length]);\n\n  // Focus input when chat opens\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      setTimeout(() => {\n        var _inputRef$current;\n        return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 100);\n    }\n  }, [isOpen]);\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now().toString() + '-user',\n      type: 'user',\n      content: inputValue.trim(),\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n    try {\n      // Build conversation context from previous messages\n      const conversationHistory = messages.slice(-4) // Last 4 messages for context\n      .map(msg => `${msg.type === 'user' ? 'User' : 'AI'}: ${msg.content}`).join('\\n');\n\n      // Create a focused query for conversational responses\n      const contextualQuery = `Please provide a brief, conversational response (2-3 sentences max) to: ${userMessage.content}${conversationHistory ? `\\n\\nContext from our conversation: ${conversationHistory}` : ''}`;\n      const response = await wihyAPI.askAnything({\n        query: contextualQuery,\n        user_context: {\n          conversation_mode: true,\n          response_style: 'concise',\n          conversation_context: conversationHistory,\n          current_context: currentContext,\n          is_followup: messages.length > 0\n        }\n      });\n\n      // Extract just the main response without full formatting\n      let aiResponse = '';\n      if ('success' in response && 'data' in response && response.data && 'response' in response.data) {\n        const healthResp = response;\n        aiResponse = healthResp.data.response;\n\n        // Clean up the response to be more conversational\n        aiResponse = aiResponse.replace(/ðŸ¥—.*?\\*\\*/g, '') // Remove emoji headers\n        .replace(/\\*\\*.*?\\*\\*/g, '') // Remove bold formatting\n        .replace(/ðŸ“‹.*?:/g, '') // Remove section headers\n        .replace(/â€¢/g, '-') // Replace bullets\n        .split('\\n').filter(line => line.trim() && !line.includes('Biblical') && !line.includes('Corinthians')).slice(0, 3) // Take first 3 meaningful lines\n        .join(' ').trim();\n\n        // If response is too long, truncate and add follow-up prompt\n        if (aiResponse.length > 200) {\n          aiResponse = aiResponse.substring(0, 200).trim() + '... What would you like to know more about?';\n        }\n      } else {\n        aiResponse = wihyAPI.formatWihyResponse(response);\n      }\n      const aiMessage = {\n        id: Date.now().toString() + '-ai',\n        type: 'ai',\n        content: aiResponse,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage = {\n        id: Date.now().toString() + '-ai',\n        type: 'ai',\n        content: \"I'm having trouble connecting right now. Please try again in a moment.\",\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* Hide scrollbars on all mobile devices */\n        @media (max-width: 767px) {\n          .chat-messages-scroll {\n            scrollbar-width: none !important; /* Firefox */\n            -ms-overflow-style: none !important; /* IE and Edge */\n          }\n          .chat-messages-scroll::-webkit-scrollbar {\n            display: none !important; /* Chrome, Safari, Opera */\n            width: 0 !important;\n            height: 0 !important;\n          }\n        }\n        \n        /* Show thin scrollbar only on desktop */\n        @media (min-width: 768px) {\n          .chat-messages-scroll {\n            scrollbar-width: thin; /* Firefox */\n            -ms-overflow-style: auto; /* IE and Edge */\n          }\n          .chat-messages-scroll::-webkit-scrollbar {\n            display: block;\n            width: 6px;\n          }\n          .chat-messages-scroll::-webkit-scrollbar-track {\n            background: #f1f1f1;\n            border-radius: 3px;\n          }\n          .chat-messages-scroll::-webkit-scrollbar-thumb {\n            background: #c1c1c1;\n            border-radius: 3px;\n          }\n          .chat-messages-scroll::-webkit-scrollbar-thumb:hover {\n            background: #a8a8a8;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-scroll\",\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '12px',\n        height: '300px',\n        // Fixed height\n        overflowY: 'auto',\n        // Enable vertical scrolling\n        overflowX: 'hidden',\n        // Prevent horizontal scroll\n        padding: '8px',\n        border: '1px solid #e2e8f0',\n        borderRadius: '8px',\n        backgroundColor: '#fafafa'\n      },\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px 20px',\n          color: '#64748b'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '48px',\n            marginBottom: '16px',\n            opacity: 0.3\n          },\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            fontWeight: '500',\n            marginBottom: '8px'\n          },\n          children: \"Start a health conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#94a3b8'\n          },\n          children: \"Ask any health question to begin learning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: message.type === 'user' ? 'flex-end' : 'flex-start',\n          marginBottom: '8px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: '80%',\n            padding: '12px 16px',\n            borderRadius: '18px',\n            backgroundColor: message.type === 'user' ? '#3b82f6' : '#f1f5f9',\n            color: message.type === 'user' ? 'white' : '#334155',\n            fontSize: '14px',\n            lineHeight: '1.5',\n            whiteSpace: 'pre-wrap',\n            wordWrap: 'break-word'\n          },\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-start'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '12px 16px',\n            borderRadius: '18px',\n            backgroundColor: '#f1f5f9',\n            color: '#64748b',\n            fontSize: '14px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '4px',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Thinking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'inline-flex',\n                gap: '2px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '4px',\n                  height: '4px',\n                  borderRadius: '50%',\n                  backgroundColor: '#64748b',\n                  animation: 'pulse 1.4s ease-in-out infinite both',\n                  animationDelay: '0s'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '4px',\n                  height: '4px',\n                  borderRadius: '50%',\n                  backgroundColor: '#64748b',\n                  animation: 'pulse 1.4s ease-in-out infinite both',\n                  animationDelay: '0.2s'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '4px',\n                  height: '4px',\n                  borderRadius: '50%',\n                  backgroundColor: '#64748b',\n                  animation: 'pulse 1.4s ease-in-out infinite both',\n                  animationDelay: '0.4s'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '8px',\n        alignItems: 'center',\n        marginTop: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Ask a follow-up question...\",\n        disabled: isLoading,\n        style: {\n          flex: 1,\n          padding: '8px 12px',\n          border: '1px solid #d1d5db',\n          borderRadius: '16px',\n          fontSize: '14px',\n          outline: 'none',\n          backgroundColor: isLoading ? '#f9fafb' : 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: !inputValue.trim() || isLoading,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: !inputValue.trim() || isLoading ? '#d1d5db' : '#3b82f6',\n          color: 'white',\n          border: 'none',\n          borderRadius: '16px',\n          cursor: !inputValue.trim() || isLoading ? 'not-allowed' : 'pointer',\n          fontSize: '14px',\n          fontWeight: '500'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatWidget, \"qXauW2dyHQhHe57+9+CjUUp3s+A=\");\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","useRef","useEffect","wihyAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWidget","isOpen","onClose","searchQuery","searchResponse","currentContext","inline","_s","messages","setMessages","inputValue","setInputValue","isLoading","setIsLoading","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","length","conversationalSummary","includes","lines","split","filter","line","trim","keyPoints","slice","map","replace","join","initialMessages","id","Date","now","toString","type","content","timestamp","setTimeout","_inputRef$current","focus","handleSendMessage","userMessage","prev","conversationHistory","msg","contextualQuery","response","askAnything","query","user_context","conversation_mode","response_style","conversation_context","current_context","is_followup","aiResponse","data","healthResp","substring","formatWihyResponse","aiMessage","error","console","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","flexDirection","gap","height","overflowY","overflowX","padding","border","borderRadius","backgroundColor","textAlign","color","fontSize","marginBottom","opacity","fontWeight","message","justifyContent","maxWidth","lineHeight","whiteSpace","wordWrap","alignItems","width","animation","animationDelay","ref","marginTop","value","onChange","target","onKeyPress","placeholder","disabled","flex","outline","onClick","cursor","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/ChatWidget.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { wihyAPI } from '../services/wihyAPI';\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  type: 'user' | 'ai';\r\n  content: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface ChatWidgetProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  searchQuery?: string;\r\n  searchResponse?: string;\r\n  currentContext?: string; // Current dashboard section being viewed\r\n  inline?: boolean; // Whether to render inline or as fixed overlay\r\n}\r\n\r\nconst ChatWidget: React.FC<ChatWidgetProps> = ({ isOpen, onClose, searchQuery, searchResponse, currentContext, inline = false }) => {\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Auto-scroll to bottom when new messages are added\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Initialize conversation with search results if provided\r\n  useEffect(() => {\r\n    if (searchQuery && searchResponse && messages.length === 0) {\r\n      // Create a conversational summary instead of full response\r\n      let conversationalSummary = searchResponse;\r\n      \r\n      // Extract key points and make it conversational\r\n      if (searchResponse.includes('WIHY Health')) {\r\n        const lines = searchResponse.split('\\n').filter(line => line.trim());\r\n        const keyPoints = lines\r\n          .filter(line => line.includes('â€¢') || line.includes('-'))\r\n          .slice(0, 2)\r\n          .map(line => line.replace(/[â€¢-]/g, '').trim())\r\n          .join('. ');\r\n          \r\n        conversationalSummary = keyPoints || 'I found some helpful information for you!';\r\n        conversationalSummary += ' What specific aspect would you like to explore further?';\r\n      }\r\n      \r\n      const initialMessages: ChatMessage[] = [\r\n        {\r\n          id: Date.now().toString() + '-user',\r\n          type: 'user',\r\n          content: searchQuery,\r\n          timestamp: new Date()\r\n        },\r\n        {\r\n          id: Date.now().toString() + '-ai',\r\n          type: 'ai',\r\n          content: conversationalSummary,\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n      setMessages(initialMessages);\r\n    }\r\n  }, [searchQuery, searchResponse, messages.length]);\r\n\r\n  // Focus input when chat opens\r\n  useEffect(() => {\r\n    if (isOpen && inputRef.current) {\r\n      setTimeout(() => inputRef.current?.focus(), 100);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim() || isLoading) return;\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString() + '-user',\r\n      type: 'user',\r\n      content: inputValue.trim(),\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Build conversation context from previous messages\r\n      const conversationHistory = messages.slice(-4) // Last 4 messages for context\r\n        .map(msg => `${msg.type === 'user' ? 'User' : 'AI'}: ${msg.content}`)\r\n        .join('\\n');\r\n      \r\n      // Create a focused query for conversational responses\r\n      const contextualQuery = `Please provide a brief, conversational response (2-3 sentences max) to: ${userMessage.content}${conversationHistory ? `\\n\\nContext from our conversation: ${conversationHistory}` : ''}`;\r\n\r\n      const response = await wihyAPI.askAnything({\r\n        query: contextualQuery,\r\n        user_context: {\r\n          conversation_mode: true,\r\n          response_style: 'concise',\r\n          conversation_context: conversationHistory,\r\n          current_context: currentContext,\r\n          is_followup: messages.length > 0\r\n        }\r\n      });\r\n\r\n      // Extract just the main response without full formatting\r\n      let aiResponse = '';\r\n      if ('success' in response && 'data' in response && response.data && 'response' in response.data) {\r\n        const healthResp = response as any;\r\n        aiResponse = healthResp.data.response;\r\n        \r\n        // Clean up the response to be more conversational\r\n        aiResponse = aiResponse\r\n          .replace(/ðŸ¥—.*?\\*\\*/g, '') // Remove emoji headers\r\n          .replace(/\\*\\*.*?\\*\\*/g, '') // Remove bold formatting\r\n          .replace(/ðŸ“‹.*?:/g, '') // Remove section headers\r\n          .replace(/â€¢/g, '-') // Replace bullets\r\n          .split('\\n')\r\n          .filter(line => line.trim() && !line.includes('Biblical') && !line.includes('Corinthians'))\r\n          .slice(0, 3) // Take first 3 meaningful lines\r\n          .join(' ')\r\n          .trim();\r\n          \r\n        // If response is too long, truncate and add follow-up prompt\r\n        if (aiResponse.length > 200) {\r\n          aiResponse = aiResponse.substring(0, 200).trim() + '... What would you like to know more about?';\r\n        }\r\n      } else {\r\n        aiResponse = wihyAPI.formatWihyResponse(response);\r\n      }\r\n      \r\n      const aiMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-ai',\r\n        type: 'ai',\r\n        content: aiResponse,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      setMessages(prev => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      const errorMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-ai',\r\n        type: 'ai',\r\n        content: \"I'm having trouble connecting right now. Please try again in a moment.\",\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n  \r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Add custom scrollbar styles - hide on mobile, show on desktop */}\r\n      <style>{`\r\n        /* Hide scrollbars on all mobile devices */\r\n        @media (max-width: 767px) {\r\n          .chat-messages-scroll {\r\n            scrollbar-width: none !important; /* Firefox */\r\n            -ms-overflow-style: none !important; /* IE and Edge */\r\n          }\r\n          .chat-messages-scroll::-webkit-scrollbar {\r\n            display: none !important; /* Chrome, Safari, Opera */\r\n            width: 0 !important;\r\n            height: 0 !important;\r\n          }\r\n        }\r\n        \r\n        /* Show thin scrollbar only on desktop */\r\n        @media (min-width: 768px) {\r\n          .chat-messages-scroll {\r\n            scrollbar-width: thin; /* Firefox */\r\n            -ms-overflow-style: auto; /* IE and Edge */\r\n          }\r\n          .chat-messages-scroll::-webkit-scrollbar {\r\n            display: block;\r\n            width: 6px;\r\n          }\r\n          .chat-messages-scroll::-webkit-scrollbar-track {\r\n            background: #f1f1f1;\r\n            border-radius: 3px;\r\n          }\r\n          .chat-messages-scroll::-webkit-scrollbar-thumb {\r\n            background: #c1c1c1;\r\n            border-radius: 3px;\r\n          }\r\n          .chat-messages-scroll::-webkit-scrollbar-thumb:hover {\r\n            background: #a8a8a8;\r\n          }\r\n        }\r\n      `}</style>\r\n\r\n      {/* Just render the messages without outer container */}\r\n\r\n      {/* Messages Area - render directly without container */}\r\n      <div \r\n        className=\"chat-messages-scroll\"\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: '12px',\r\n          height: '300px', // Fixed height\r\n          overflowY: 'auto', // Enable vertical scrolling\r\n          overflowX: 'hidden', // Prevent horizontal scroll\r\n          padding: '8px',\r\n          border: '1px solid #e2e8f0',\r\n          borderRadius: '8px',\r\n          backgroundColor: '#fafafa'\r\n        }}>\r\n        {messages.length === 0 ? (\r\n          <div style={{\r\n            textAlign: 'center',\r\n            padding: '40px 20px',\r\n            color: '#64748b'\r\n          }}>\r\n            <div style={{\r\n              fontSize: '48px',\r\n              marginBottom: '16px',\r\n              opacity: 0.3\r\n            }}>\r\n              ðŸ’¬\r\n            </div>\r\n            <div style={{\r\n              fontSize: '14px',\r\n              fontWeight: '500',\r\n              marginBottom: '8px'\r\n            }}>\r\n              Start a health conversation\r\n            </div>\r\n            <div style={{\r\n              fontSize: '12px',\r\n              color: '#94a3b8'\r\n            }}>\r\n              Ask any health question to begin learning\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: message.type === 'user' ? 'flex-end' : 'flex-start',\r\n                marginBottom: '8px'\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  maxWidth: '80%',\r\n                  padding: '12px 16px',\r\n                  borderRadius: '18px',\r\n                  backgroundColor: message.type === 'user' ? '#3b82f6' : '#f1f5f9',\r\n                  color: message.type === 'user' ? 'white' : '#334155',\r\n                  fontSize: '14px',\r\n                  lineHeight: '1.5',\r\n                  whiteSpace: 'pre-wrap',\r\n                  wordWrap: 'break-word'\r\n                }}\r\n              >\r\n                {message.content}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        \r\n        {isLoading && (\r\n          <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\r\n            <div style={{\r\n              padding: '12px 16px',\r\n              borderRadius: '18px',\r\n              backgroundColor: '#f1f5f9',\r\n              color: '#64748b',\r\n              fontSize: '14px'\r\n            }}>\r\n              <div style={{\r\n                display: 'flex',\r\n                gap: '4px',\r\n                alignItems: 'center'\r\n              }}>\r\n                <span>Thinking</span>\r\n                <div style={{\r\n                  display: 'inline-flex',\r\n                  gap: '2px'\r\n                }}>\r\n                  <div style={{\r\n                    width: '4px',\r\n                    height: '4px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: '#64748b',\r\n                    animation: 'pulse 1.4s ease-in-out infinite both',\r\n                    animationDelay: '0s'\r\n                  }}></div>\r\n                  <div style={{\r\n                    width: '4px',\r\n                    height: '4px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: '#64748b',\r\n                    animation: 'pulse 1.4s ease-in-out infinite both',\r\n                    animationDelay: '0.2s'\r\n                  }}></div>\r\n                  <div style={{\r\n                    width: '4px',\r\n                    height: '4px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: '#64748b',\r\n                    animation: 'pulse 1.4s ease-in-out infinite both',\r\n                    animationDelay: '0.4s'\r\n                  }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div style={{\r\n        display: 'flex',\r\n        gap: '8px',\r\n        alignItems: 'center',\r\n        marginTop: '16px'\r\n      }}>\r\n        <input\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Ask a follow-up question...\"\r\n          disabled={isLoading}\r\n          style={{\r\n            flex: 1,\r\n            padding: '8px 12px',\r\n            border: '1px solid #d1d5db',\r\n            borderRadius: '16px',\r\n            fontSize: '14px',\r\n            outline: 'none',\r\n            backgroundColor: isLoading ? '#f9fafb' : 'white'\r\n          }}\r\n        />\r\n        <button\r\n          onClick={handleSendMessage}\r\n          disabled={!inputValue.trim() || isLoading}\r\n          style={{\r\n            padding: '8px 16px',\r\n            backgroundColor: (!inputValue.trim() || isLoading) ? '#d1d5db' : '#3b82f6',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '16px',\r\n            cursor: (!inputValue.trim() || isLoading) ? 'not-allowed' : 'pointer',\r\n            fontSize: '14px',\r\n            fontWeight: '500'\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatWidget;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAkB9C,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,WAAW;EAAEC,cAAc;EAAEC,cAAc;EAAEC,MAAM,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClI,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAgB,EAAE,CAAC;EAC3D,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMsB,cAAc,GAAGrB,MAAM,CAAiB,IAAI,CAAC;EACnD,MAAMsB,QAAQ,GAAGtB,MAAM,CAAmB,IAAI,CAAC;;EAE/C;EACA,MAAMuB,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAH,cAAc,CAACI,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED1B,SAAS,CAAC,MAAM;IACdsB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;;EAEd;EACAd,SAAS,CAAC,MAAM;IACd,IAAIS,WAAW,IAAIC,cAAc,IAAII,QAAQ,CAACa,MAAM,KAAK,CAAC,EAAE;MAC1D;MACA,IAAIC,qBAAqB,GAAGlB,cAAc;;MAE1C;MACA,IAAIA,cAAc,CAACmB,QAAQ,CAAC,aAAa,CAAC,EAAE;QAC1C,MAAMC,KAAK,GAAGpB,cAAc,CAACqB,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;QACpE,MAAMC,SAAS,GAAGL,KAAK,CACpBE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,QAAQ,CAAC,GAAG,CAAC,IAAII,IAAI,CAACJ,QAAQ,CAAC,GAAG,CAAC,CAAC,CACxDO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACXC,GAAG,CAACJ,IAAI,IAAIA,IAAI,CAACK,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACJ,IAAI,CAAC,CAAC,CAAC,CAC7CK,IAAI,CAAC,IAAI,CAAC;QAEbX,qBAAqB,GAAGO,SAAS,IAAI,2CAA2C;QAChFP,qBAAqB,IAAI,0DAA0D;MACrF;MAEA,MAAMY,eAA8B,GAAG,CACrC;QACEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,OAAO;QACnCC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAErC,WAAW;QACpBsC,SAAS,EAAE,IAAIL,IAAI,CAAC;MACtB,CAAC,EACD;QACED,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,KAAK;QACjCC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAElB,qBAAqB;QAC9BmB,SAAS,EAAE,IAAIL,IAAI,CAAC;MACtB,CAAC,CACF;MACD3B,WAAW,CAACyB,eAAe,CAAC;IAC9B;EACF,CAAC,EAAE,CAAC/B,WAAW,EAAEC,cAAc,EAAEI,QAAQ,CAACa,MAAM,CAAC,CAAC;;EAElD;EACA3B,SAAS,CAAC,MAAM;IACd,IAAIO,MAAM,IAAIc,QAAQ,CAACG,OAAO,EAAE;MAC9BwB,UAAU,CAAC;QAAA,IAAAC,iBAAA;QAAA,QAAAA,iBAAA,GAAM5B,QAAQ,CAACG,OAAO,cAAAyB,iBAAA,uBAAhBA,iBAAA,CAAkBC,KAAK,CAAC,CAAC;MAAA,GAAE,GAAG,CAAC;IAClD;EACF,CAAC,EAAE,CAAC3C,MAAM,CAAC,CAAC;EAEZ,MAAM4C,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACnC,UAAU,CAACkB,IAAI,CAAC,CAAC,IAAIhB,SAAS,EAAE;IAErC,MAAMkC,WAAwB,GAAG;MAC/BX,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,OAAO;MACnCC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE9B,UAAU,CAACkB,IAAI,CAAC,CAAC;MAC1Ba,SAAS,EAAE,IAAIL,IAAI,CAAC;IACtB,CAAC;IAED3B,WAAW,CAACsC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,WAAW,CAAC,CAAC;IAC3CnC,aAAa,CAAC,EAAE,CAAC;IACjBE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAMmC,mBAAmB,GAAGxC,QAAQ,CAACsB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MAAA,CAC5CC,GAAG,CAACkB,GAAG,IAAI,GAAGA,GAAG,CAACV,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,IAAI,KAAKU,GAAG,CAACT,OAAO,EAAE,CAAC,CACpEP,IAAI,CAAC,IAAI,CAAC;;MAEb;MACA,MAAMiB,eAAe,GAAG,2EAA2EJ,WAAW,CAACN,OAAO,GAAGQ,mBAAmB,GAAG,sCAAsCA,mBAAmB,EAAE,GAAG,EAAE,EAAE;MAEjN,MAAMG,QAAQ,GAAG,MAAMxD,OAAO,CAACyD,WAAW,CAAC;QACzCC,KAAK,EAAEH,eAAe;QACtBI,YAAY,EAAE;UACZC,iBAAiB,EAAE,IAAI;UACvBC,cAAc,EAAE,SAAS;UACzBC,oBAAoB,EAAET,mBAAmB;UACzCU,eAAe,EAAErD,cAAc;UAC/BsD,WAAW,EAAEnD,QAAQ,CAACa,MAAM,GAAG;QACjC;MACF,CAAC,CAAC;;MAEF;MACA,IAAIuC,UAAU,GAAG,EAAE;MACnB,IAAI,SAAS,IAAIT,QAAQ,IAAI,MAAM,IAAIA,QAAQ,IAAIA,QAAQ,CAACU,IAAI,IAAI,UAAU,IAAIV,QAAQ,CAACU,IAAI,EAAE;QAC/F,MAAMC,UAAU,GAAGX,QAAe;QAClCS,UAAU,GAAGE,UAAU,CAACD,IAAI,CAACV,QAAQ;;QAErC;QACAS,UAAU,GAAGA,UAAU,CACpB5B,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAAA,CAC1BA,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;QAAA,CAC5BA,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAAA,CACvBA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAAA,CACnBP,KAAK,CAAC,IAAI,CAAC,CACXC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,IAAI,CAACD,IAAI,CAACJ,QAAQ,CAAC,UAAU,CAAC,IAAI,CAACI,IAAI,CAACJ,QAAQ,CAAC,aAAa,CAAC,CAAC,CAC1FO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAAA,CACZG,IAAI,CAAC,GAAG,CAAC,CACTL,IAAI,CAAC,CAAC;;QAET;QACA,IAAIgC,UAAU,CAACvC,MAAM,GAAG,GAAG,EAAE;UAC3BuC,UAAU,GAAGA,UAAU,CAACG,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAACnC,IAAI,CAAC,CAAC,GAAG,6CAA6C;QAClG;MACF,CAAC,MAAM;QACLgC,UAAU,GAAGjE,OAAO,CAACqE,kBAAkB,CAACb,QAAQ,CAAC;MACnD;MAEA,MAAMc,SAAsB,GAAG;QAC7B9B,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,KAAK;QACjCC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAEoB,UAAU;QACnBnB,SAAS,EAAE,IAAIL,IAAI,CAAC;MACtB,CAAC;MAED3B,WAAW,CAACsC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEkB,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnC,MAAME,YAAyB,GAAG;QAChCjC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,KAAK;QACjCC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,wEAAwE;QACjFC,SAAS,EAAE,IAAIL,IAAI,CAAC;MACtB,CAAC;MACD3B,WAAW,CAACsC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEqB,YAAY,CAAC,CAAC;IAC9C,CAAC,SAAS;MACRvD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMwD,cAAc,GAAIC,CAAsB,IAAK;IACjD,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClB5B,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAED,IAAI,CAAC5C,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,oBACEJ,OAAA,CAAAE,SAAA;IAAA2E,QAAA,gBAEE7E,OAAA;MAAA6E,QAAA,EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAKVjF,OAAA;MACEkF,SAAS,EAAC,sBAAsB;MAChCC,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,GAAG,EAAE,MAAM;QACXC,MAAM,EAAE,OAAO;QAAE;QACjBC,SAAS,EAAE,MAAM;QAAE;QACnBC,SAAS,EAAE,QAAQ;QAAE;QACrBC,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE,KAAK;QACnBC,eAAe,EAAE;MACnB,CAAE;MAAAhB,QAAA,GACDlE,QAAQ,CAACa,MAAM,KAAK,CAAC,gBACpBxB,OAAA;QAAKmF,KAAK,EAAE;UACVW,SAAS,EAAE,QAAQ;UACnBJ,OAAO,EAAE,WAAW;UACpBK,KAAK,EAAE;QACT,CAAE;QAAAlB,QAAA,gBACA7E,OAAA;UAAKmF,KAAK,EAAE;YACVa,QAAQ,EAAE,MAAM;YAChBC,YAAY,EAAE,MAAM;YACpBC,OAAO,EAAE;UACX,CAAE;UAAArB,QAAA,EAAC;QAEH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNjF,OAAA;UAAKmF,KAAK,EAAE;YACVa,QAAQ,EAAE,MAAM;YAChBG,UAAU,EAAE,KAAK;YACjBF,YAAY,EAAE;UAChB,CAAE;UAAApB,QAAA,EAAC;QAEH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNjF,OAAA;UAAKmF,KAAK,EAAE;YACVa,QAAQ,EAAE,MAAM;YAChBD,KAAK,EAAE;UACT,CAAE;UAAAlB,QAAA,EAAC;QAEH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,GAENtE,QAAQ,CAACuB,GAAG,CAAEkE,OAAO,iBACnBpG,OAAA;QAEEmF,KAAK,EAAE;UACLC,OAAO,EAAE,MAAM;UACfiB,cAAc,EAAED,OAAO,CAAC1D,IAAI,KAAK,MAAM,GAAG,UAAU,GAAG,YAAY;UACnEuD,YAAY,EAAE;QAChB,CAAE;QAAApB,QAAA,eAEF7E,OAAA;UACEmF,KAAK,EAAE;YACLmB,QAAQ,EAAE,KAAK;YACfZ,OAAO,EAAE,WAAW;YACpBE,YAAY,EAAE,MAAM;YACpBC,eAAe,EAAEO,OAAO,CAAC1D,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;YAChEqD,KAAK,EAAEK,OAAO,CAAC1D,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,SAAS;YACpDsD,QAAQ,EAAE,MAAM;YAChBO,UAAU,EAAE,KAAK;YACjBC,UAAU,EAAE,UAAU;YACtBC,QAAQ,EAAE;UACZ,CAAE;UAAA5B,QAAA,EAEDuB,OAAO,CAACzD;QAAO;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC,GArBDmB,OAAO,CAAC9D,EAAE;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBZ,CACN,CACF,EAEAlE,SAAS,iBACRf,OAAA;QAAKmF,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEiB,cAAc,EAAE;QAAa,CAAE;QAAAxB,QAAA,eAC5D7E,OAAA;UAAKmF,KAAK,EAAE;YACVO,OAAO,EAAE,WAAW;YACpBE,YAAY,EAAE,MAAM;YACpBC,eAAe,EAAE,SAAS;YAC1BE,KAAK,EAAE,SAAS;YAChBC,QAAQ,EAAE;UACZ,CAAE;UAAAnB,QAAA,eACA7E,OAAA;YAAKmF,KAAK,EAAE;cACVC,OAAO,EAAE,MAAM;cACfE,GAAG,EAAE,KAAK;cACVoB,UAAU,EAAE;YACd,CAAE;YAAA7B,QAAA,gBACA7E,OAAA;cAAA6E,QAAA,EAAM;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrBjF,OAAA;cAAKmF,KAAK,EAAE;gBACVC,OAAO,EAAE,aAAa;gBACtBE,GAAG,EAAE;cACP,CAAE;cAAAT,QAAA,gBACA7E,OAAA;gBAAKmF,KAAK,EAAE;kBACVwB,KAAK,EAAE,KAAK;kBACZpB,MAAM,EAAE,KAAK;kBACbK,YAAY,EAAE,KAAK;kBACnBC,eAAe,EAAE,SAAS;kBAC1Be,SAAS,EAAE,sCAAsC;kBACjDC,cAAc,EAAE;gBAClB;cAAE;gBAAA/B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACTjF,OAAA;gBAAKmF,KAAK,EAAE;kBACVwB,KAAK,EAAE,KAAK;kBACZpB,MAAM,EAAE,KAAK;kBACbK,YAAY,EAAE,KAAK;kBACnBC,eAAe,EAAE,SAAS;kBAC1Be,SAAS,EAAE,sCAAsC;kBACjDC,cAAc,EAAE;gBAClB;cAAE;gBAAA/B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACTjF,OAAA;gBAAKmF,KAAK,EAAE;kBACVwB,KAAK,EAAE,KAAK;kBACZpB,MAAM,EAAE,KAAK;kBACbK,YAAY,EAAE,KAAK;kBACnBC,eAAe,EAAE,SAAS;kBAC1Be,SAAS,EAAE,sCAAsC;kBACjDC,cAAc,EAAE;gBAClB;cAAE;gBAAA/B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAEDjF,OAAA;QAAK8G,GAAG,EAAE7F;MAAe;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAGNjF,OAAA;MAAKmF,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfE,GAAG,EAAE,KAAK;QACVoB,UAAU,EAAE,QAAQ;QACpBK,SAAS,EAAE;MACb,CAAE;MAAAlC,QAAA,gBACA7E,OAAA;QACE8G,GAAG,EAAE5F,QAAS;QACdwB,IAAI,EAAC,MAAM;QACXsE,KAAK,EAAEnG,UAAW;QAClBoG,QAAQ,EAAGxC,CAAC,IAAK3D,aAAa,CAAC2D,CAAC,CAACyC,MAAM,CAACF,KAAK,CAAE;QAC/CG,UAAU,EAAE3C,cAAe;QAC3B4C,WAAW,EAAC,6BAA6B;QACzCC,QAAQ,EAAEtG,SAAU;QACpBoE,KAAK,EAAE;UACLmC,IAAI,EAAE,CAAC;UACP5B,OAAO,EAAE,UAAU;UACnBC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,MAAM;UACpBI,QAAQ,EAAE,MAAM;UAChBuB,OAAO,EAAE,MAAM;UACf1B,eAAe,EAAE9E,SAAS,GAAG,SAAS,GAAG;QAC3C;MAAE;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFjF,OAAA;QACEwH,OAAO,EAAExE,iBAAkB;QAC3BqE,QAAQ,EAAE,CAACxG,UAAU,CAACkB,IAAI,CAAC,CAAC,IAAIhB,SAAU;QAC1CoE,KAAK,EAAE;UACLO,OAAO,EAAE,UAAU;UACnBG,eAAe,EAAG,CAAChF,UAAU,CAACkB,IAAI,CAAC,CAAC,IAAIhB,SAAS,GAAI,SAAS,GAAG,SAAS;UAC1EgF,KAAK,EAAE,OAAO;UACdJ,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,MAAM;UACpB6B,MAAM,EAAG,CAAC5G,UAAU,CAACkB,IAAI,CAAC,CAAC,IAAIhB,SAAS,GAAI,aAAa,GAAG,SAAS;UACrEiF,QAAQ,EAAE,MAAM;UAChBG,UAAU,EAAE;QACd,CAAE;QAAAtB,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eAEN,CAAC;AAEP,CAAC;AAACvE,EAAA,CA5WIP,UAAqC;AAAAuH,EAAA,GAArCvH,UAAqC;AA8W3C,eAAeA,UAAU;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}