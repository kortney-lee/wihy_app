{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { DecodeHintType, MultiFormatReader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\nvar BrowserMultiFormatReader = /** @class */function (_super) {\n  __extends(BrowserMultiFormatReader, _super);\n  function BrowserMultiFormatReader(hints, options) {\n    var _this = this;\n    var reader = new MultiFormatReader();\n    reader.setHints(hints);\n    _this = _super.call(this, reader, hints, options) || this;\n    _this.reader = reader;\n    return _this;\n  }\n  Object.defineProperty(BrowserMultiFormatReader.prototype, \"possibleFormats\", {\n    set: function (formats) {\n      this.hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\n      this.reader.setHints(this.hints);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Overwrite decodeBitmap to call decodeWithState, which will pay\n   * attention to the hints set in the constructor function\n   */\n  BrowserMultiFormatReader.prototype.decodeBitmap = function (binaryBitmap) {\n    return this.reader.decodeWithState(binaryBitmap);\n  };\n  /**\n   * Allows to change hints in runtime.\n   */\n  BrowserMultiFormatReader.prototype.setHints = function (hints) {\n    this.hints = hints;\n    this.reader.setHints(this.hints);\n  };\n  return BrowserMultiFormatReader;\n}(BrowserCodeReader);\nexport { BrowserMultiFormatReader };","map":{"version":3,"names":["DecodeHintType","MultiFormatReader","BrowserCodeReader","BrowserMultiFormatReader","_super","__extends","hints","options","_this","reader","setHints","call","Object","defineProperty","prototype","set","formats","POSSIBLE_FORMATS","decodeBitmap","binaryBitmap","decodeWithState"],"sources":["../../../src/readers/BrowserMultiFormatReader.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAGEA,cAAc,EACdC,iBAAiB,QAEZ,gBAAgB;AACvB,SAASC,iBAAiB,QAAQ,qBAAqB;AAGvD,IAAAC,wBAAA,0BAAAC,MAAA;EAA8CC,SAAA,CAAAF,wBAAA,EAAAC,MAAA;EAS5C,SAAAD,yBACEG,KAAgC,EAChCC,OAAmC;IAFrC,IAAAC,KAAA;IAIE,IAAMC,MAAM,GAAG,IAAIR,iBAAiB,EAAE;IACtCQ,MAAM,CAACC,QAAQ,CAACJ,KAAK,CAAC;IACtBE,KAAA,GAAAJ,MAAA,CAAAO,IAAA,OAAMF,MAAM,EAAEH,KAAK,EAAEC,OAAO,CAAC;IAC7BC,KAAI,CAACC,MAAM,GAAGA,MAAM;;EACtB;EAfAG,MAAA,CAAAC,cAAA,CAAIV,wBAAA,CAAAW,SAAA,mBAAe;SAAnB,SAAAC,CAAoBC,OAAwB;MAC1C,IAAI,CAACV,KAAK,CAACS,GAAG,CAACf,cAAc,CAACiB,gBAAgB,EAAED,OAAO,CAAC;MACxD,IAAI,CAACP,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACJ,KAAK,CAAC;IAClC,CAAC;;;;EAcD;;;;EAIOH,wBAAA,CAAAW,SAAA,CAAAI,YAAY,GAAnB,UAAoBC,YAA0B;IAC5C,OAAO,IAAI,CAACV,MAAM,CAACW,eAAe,CAACD,YAAY,CAAC;EAClD,CAAC;EAED;;;EAGOhB,wBAAA,CAAAW,SAAA,CAAAJ,QAAQ,GAAf,UAAgBJ,KAA+B;IAC7C,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACG,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACJ,KAAK,CAAC;EAClC,CAAC;EACH,OAAAH,wBAAC;AAAD,CAAC,CAlC6CD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}