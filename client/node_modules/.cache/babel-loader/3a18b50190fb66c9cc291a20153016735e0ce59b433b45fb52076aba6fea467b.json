{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\charts\\\\DopamineChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst DopamineChart = ({\n  period = 'week',\n  chartType = 'levels'\n}) => {\n  const generateData = () => {\n    switch (period) {\n      case 'day':\n        return {\n          labels: ['6am', '9am', '12pm', '3pm', '6pm', '9pm'],\n          dopamineLevels: [3.2, 5.8, 7.2, 6.1, 8.4, 4.6],\n          // 1-10 scale\n          triggers: ['Exercise', 'Social', 'Work', 'Music', 'Food', 'Rest'],\n          activities: [45, 30, 120, 25, 15, 90] // minutes spent\n        };\n      case 'month':\n        return {\n          labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n          dopamineLevels: [6.2, 6.8, 5.9, 7.1],\n          triggers: ['Exercise', 'Social', 'Achievement', 'Recreation'],\n          activities: [180, 210, 165, 195] // average minutes per week\n        };\n      default:\n        // week\n        return {\n          labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          dopamineLevels: [5.5, 6.2, 5.8, 7.1, 6.9, 8.2, 6.4],\n          triggers: ['Exercise', 'Social', 'Work', 'Music', 'Recreation', 'Achievement', 'Rest'],\n          activities: [45, 60, 30, 75, 90, 120, 40] // minutes per day\n        };\n    }\n  };\n  const {\n    labels,\n    dopamineLevels,\n    triggers,\n    activities\n  } = generateData();\n\n  // Dopamine Triggers Distribution\n  if (chartType === 'triggers') {\n    const triggersData = {\n      labels: triggers,\n      datasets: [{\n        label: 'Trigger Frequency',\n        data: [8, 6, 9, 5, 7, 4, 3],\n        // frequency per week\n        backgroundColor: ['#10b981',\n        // Exercise - Green\n        '#3b82f6',\n        // Social - Blue  \n        '#f59e0b',\n        // Work - Orange\n        '#8b5cf6',\n        // Music - Purple\n        '#ef4444',\n        // Recreation - Red\n        '#06b6d4',\n        // Achievement - Cyan\n        '#6b7280' // Rest - Gray\n        ],\n        borderColor: ['#059669', '#2563eb', '#d97706', '#7c3aed', '#dc2626', '#0891b2', '#4b5563'],\n        borderWidth: 2,\n        borderRadius: 4\n      }]\n    };\n    const triggersOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          titleColor: '#fff',\n          bodyColor: '#fff',\n          borderWidth: 1,\n          cornerRadius: 8,\n          callbacks: {\n            label: function (context) {\n              return `${context.label}: ${context.parsed.y} times this week`;\n            }\n          }\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            display: false\n          },\n          ticks: {\n            color: '#64748b',\n            font: {\n              size: 10\n            },\n            maxRotation: 45\n          }\n        },\n        y: {\n          beginAtZero: true,\n          title: {\n            display: true,\n            text: 'Frequency',\n            color: '#64748b',\n            font: {\n              size: 12,\n              weight: 'bold'\n            }\n          },\n          grid: {\n            color: 'rgba(148, 163, 184, 0.1)'\n          },\n          ticks: {\n            color: '#64748b',\n            font: {\n              size: 11\n            }\n          }\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '220px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: triggersData,\n        options: triggersOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Activity Time Distribution\n  if (chartType === 'activities') {\n    const activitiesData = {\n      labels: triggers,\n      datasets: [{\n        label: 'Time Spent (minutes)',\n        data: activities,\n        backgroundColor: 'rgba(139, 92, 246, 0.6)',\n        borderColor: '#8b5cf6',\n        borderWidth: 2,\n        borderRadius: 4\n      }]\n    };\n    const activitiesOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          titleColor: '#fff',\n          bodyColor: '#fff',\n          borderColor: '#8b5cf6',\n          borderWidth: 1,\n          cornerRadius: 8,\n          callbacks: {\n            label: function (context) {\n              return `${context.label}: ${context.parsed.y} minutes`;\n            }\n          }\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            display: false\n          },\n          ticks: {\n            color: '#64748b',\n            font: {\n              size: 10\n            },\n            maxRotation: 45\n          }\n        },\n        y: {\n          beginAtZero: true,\n          title: {\n            display: true,\n            text: 'Minutes',\n            color: '#8b5cf6',\n            font: {\n              size: 12,\n              weight: 'bold'\n            }\n          },\n          grid: {\n            color: 'rgba(148, 163, 184, 0.1)'\n          },\n          ticks: {\n            color: '#8b5cf6',\n            font: {\n              size: 11\n            }\n          }\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '220px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: activitiesData,\n        options: activitiesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Default: Dopamine Levels Over Time\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Dopamine Level',\n      data: dopamineLevels,\n      borderColor: '#8b5cf6',\n      backgroundColor: 'rgba(139, 92, 246, 0.1)',\n      tension: 0.4,\n      pointRadius: 6,\n      pointHoverRadius: 8,\n      fill: true,\n      pointBackgroundColor: '#8b5cf6',\n      pointBorderColor: '#ffffff',\n      pointBorderWidth: 2\n    }, {\n      label: 'Optimal Range (6-8)',\n      data: Array(labels.length).fill(7),\n      borderColor: '#10b981',\n      backgroundColor: 'rgba(16, 185, 129, 0.1)',\n      borderDash: [5, 5],\n      pointRadius: 0,\n      fill: false\n    }, {\n      label: 'Low Threshold (4)',\n      data: Array(labels.length).fill(4),\n      borderColor: '#ef4444',\n      backgroundColor: 'transparent',\n      borderDash: [3, 3],\n      pointRadius: 0,\n      fill: false\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        align: 'end',\n        labels: {\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderColor: '#8b5cf6',\n        borderWidth: 1,\n        cornerRadius: 8,\n        displayColors: true,\n        callbacks: {\n          label: function (context) {\n            if (context.datasetIndex === 0) {\n              return `${context.dataset.label}: ${context.parsed.y}/10`;\n            }\n            return `${context.dataset.label}: ${context.parsed.y}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          color: '#64748b',\n          font: {\n            size: 11\n          }\n        }\n      },\n      y: {\n        min: 0,\n        max: 10,\n        title: {\n          display: true,\n          text: 'Dopamine Level (1-10)',\n          color: '#8b5cf6',\n          font: {\n            size: 12,\n            weight: 'bold'\n          }\n        },\n        grid: {\n          color: 'rgba(148, 163, 184, 0.1)'\n        },\n        ticks: {\n          color: '#8b5cf6',\n          font: {\n            size: 11\n          },\n          stepSize: 1\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '220px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n};\n_c = DopamineChart;\nexport default DopamineChart;\nvar _c;\n$RefreshReg$(_c, \"DopamineChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","Line","Bar","jsxDEV","_jsxDEV","register","DopamineChart","period","chartType","generateData","labels","dopamineLevels","triggers","activities","triggersData","datasets","label","data","backgroundColor","borderColor","borderWidth","borderRadius","triggersOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","titleColor","bodyColor","cornerRadius","callbacks","context","parsed","y","scales","x","grid","ticks","color","font","size","maxRotation","beginAtZero","title","text","weight","style","height","width","children","options","fileName","_jsxFileName","lineNumber","columnNumber","activitiesData","activitiesOptions","tension","pointRadius","pointHoverRadius","fill","pointBackgroundColor","pointBorderColor","pointBorderWidth","Array","length","borderDash","position","align","usePointStyle","pointStyle","padding","displayColors","datasetIndex","dataset","min","max","stepSize","interaction","intersect","mode","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/charts/DopamineChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ChartOptions,\r\n} from 'chart.js';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface DopamineChartProps {\r\n  period?: 'day' | 'week' | 'month';\r\n  chartType?: 'levels' | 'triggers' | 'activities';\r\n}\r\n\r\nconst DopamineChart: React.FC<DopamineChartProps> = ({ \r\n  period = 'week', \r\n  chartType = 'levels' \r\n}) => {\r\n  const generateData = () => {\r\n    switch (period) {\r\n      case 'day':\r\n        return {\r\n          labels: ['6am', '9am', '12pm', '3pm', '6pm', '9pm'],\r\n          dopamineLevels: [3.2, 5.8, 7.2, 6.1, 8.4, 4.6], // 1-10 scale\r\n          triggers: ['Exercise', 'Social', 'Work', 'Music', 'Food', 'Rest'],\r\n          activities: [45, 30, 120, 25, 15, 90], // minutes spent\r\n        };\r\n      case 'month':\r\n        return {\r\n          labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\r\n          dopamineLevels: [6.2, 6.8, 5.9, 7.1],\r\n          triggers: ['Exercise', 'Social', 'Achievement', 'Recreation'],\r\n          activities: [180, 210, 165, 195], // average minutes per week\r\n        };\r\n      default: // week\r\n        return {\r\n          labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n          dopamineLevels: [5.5, 6.2, 5.8, 7.1, 6.9, 8.2, 6.4],\r\n          triggers: ['Exercise', 'Social', 'Work', 'Music', 'Recreation', 'Achievement', 'Rest'],\r\n          activities: [45, 60, 30, 75, 90, 120, 40], // minutes per day\r\n        };\r\n    }\r\n  };\r\n\r\n  const { labels, dopamineLevels, triggers, activities } = generateData();\r\n\r\n  // Dopamine Triggers Distribution\r\n  if (chartType === 'triggers') {\r\n    const triggersData = {\r\n      labels: triggers,\r\n      datasets: [\r\n        {\r\n          label: 'Trigger Frequency',\r\n          data: [8, 6, 9, 5, 7, 4, 3], // frequency per week\r\n          backgroundColor: [\r\n            '#10b981', // Exercise - Green\r\n            '#3b82f6', // Social - Blue  \r\n            '#f59e0b', // Work - Orange\r\n            '#8b5cf6', // Music - Purple\r\n            '#ef4444', // Recreation - Red\r\n            '#06b6d4', // Achievement - Cyan\r\n            '#6b7280', // Rest - Gray\r\n          ],\r\n          borderColor: [\r\n            '#059669',\r\n            '#2563eb',\r\n            '#d97706',\r\n            '#7c3aed',\r\n            '#dc2626',\r\n            '#0891b2',\r\n            '#4b5563',\r\n          ],\r\n          borderWidth: 2,\r\n          borderRadius: 4,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const triggersOptions: ChartOptions<'bar'> = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        tooltip: {\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n          titleColor: '#fff',\r\n          bodyColor: '#fff',\r\n          borderWidth: 1,\r\n          cornerRadius: 8,\r\n          callbacks: {\r\n            label: function(context) {\r\n              return `${context.label}: ${context.parsed.y} times this week`;\r\n            }\r\n          }\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          grid: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            color: '#64748b',\r\n            font: {\r\n              size: 10,\r\n            },\r\n            maxRotation: 45,\r\n          },\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n          title: {\r\n            display: true,\r\n            text: 'Frequency',\r\n            color: '#64748b',\r\n            font: {\r\n              size: 12,\r\n              weight: 'bold',\r\n            },\r\n          },\r\n          grid: {\r\n            color: 'rgba(148, 163, 184, 0.1)',\r\n          },\r\n          ticks: {\r\n            color: '#64748b',\r\n            font: {\r\n              size: 11,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div style={{ height: '220px', width: '100%' }}>\r\n        <Bar data={triggersData} options={triggersOptions} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Activity Time Distribution\r\n  if (chartType === 'activities') {\r\n    const activitiesData = {\r\n      labels: triggers,\r\n      datasets: [\r\n        {\r\n          label: 'Time Spent (minutes)',\r\n          data: activities,\r\n          backgroundColor: 'rgba(139, 92, 246, 0.6)',\r\n          borderColor: '#8b5cf6',\r\n          borderWidth: 2,\r\n          borderRadius: 4,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const activitiesOptions: ChartOptions<'bar'> = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        tooltip: {\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n          titleColor: '#fff',\r\n          bodyColor: '#fff',\r\n          borderColor: '#8b5cf6',\r\n          borderWidth: 1,\r\n          cornerRadius: 8,\r\n          callbacks: {\r\n            label: function(context) {\r\n              return `${context.label}: ${context.parsed.y} minutes`;\r\n            }\r\n          }\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          grid: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            color: '#64748b',\r\n            font: {\r\n              size: 10,\r\n            },\r\n            maxRotation: 45,\r\n          },\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n          title: {\r\n            display: true,\r\n            text: 'Minutes',\r\n            color: '#8b5cf6',\r\n            font: {\r\n              size: 12,\r\n              weight: 'bold',\r\n            },\r\n          },\r\n          grid: {\r\n            color: 'rgba(148, 163, 184, 0.1)',\r\n          },\r\n          ticks: {\r\n            color: '#8b5cf6',\r\n            font: {\r\n              size: 11,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div style={{ height: '220px', width: '100%' }}>\r\n        <Bar data={activitiesData} options={activitiesOptions} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Default: Dopamine Levels Over Time\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Dopamine Level',\r\n        data: dopamineLevels,\r\n        borderColor: '#8b5cf6',\r\n        backgroundColor: 'rgba(139, 92, 246, 0.1)',\r\n        tension: 0.4,\r\n        pointRadius: 6,\r\n        pointHoverRadius: 8,\r\n        fill: true,\r\n        pointBackgroundColor: '#8b5cf6',\r\n        pointBorderColor: '#ffffff',\r\n        pointBorderWidth: 2,\r\n      },\r\n      {\r\n        label: 'Optimal Range (6-8)',\r\n        data: Array(labels.length).fill(7),\r\n        borderColor: '#10b981',\r\n        backgroundColor: 'rgba(16, 185, 129, 0.1)',\r\n        borderDash: [5, 5],\r\n        pointRadius: 0,\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Low Threshold (4)',\r\n        data: Array(labels.length).fill(4),\r\n        borderColor: '#ef4444',\r\n        backgroundColor: 'transparent',\r\n        borderDash: [3, 3],\r\n        pointRadius: 0,\r\n        fill: false,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const options: ChartOptions<'line'> = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n        align: 'end' as const,\r\n        labels: {\r\n          usePointStyle: true,\r\n          pointStyle: 'circle',\r\n          padding: 15,\r\n          font: {\r\n            size: 11,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        titleColor: '#fff',\r\n        bodyColor: '#fff',\r\n        borderColor: '#8b5cf6',\r\n        borderWidth: 1,\r\n        cornerRadius: 8,\r\n        displayColors: true,\r\n        callbacks: {\r\n          label: function(context) {\r\n            if (context.datasetIndex === 0) {\r\n              return `${context.dataset.label}: ${context.parsed.y}/10`;\r\n            }\r\n            return `${context.dataset.label}: ${context.parsed.y}`;\r\n          }\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          color: '#64748b',\r\n          font: {\r\n            size: 11,\r\n          },\r\n        },\r\n      },\r\n      y: {\r\n        min: 0,\r\n        max: 10,\r\n        title: {\r\n          display: true,\r\n          text: 'Dopamine Level (1-10)',\r\n          color: '#8b5cf6',\r\n          font: {\r\n            size: 12,\r\n            weight: 'bold',\r\n          },\r\n        },\r\n        grid: {\r\n          color: 'rgba(148, 163, 184, 0.1)',\r\n        },\r\n        ticks: {\r\n          color: '#8b5cf6',\r\n          font: {\r\n            size: 11,\r\n          },\r\n          stepSize: 1,\r\n        },\r\n      },\r\n    },\r\n    interaction: {\r\n      intersect: false,\r\n      mode: 'index',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '220px', width: '100%' }}>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DopamineChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QAED,UAAU;AACjB,SAASC,IAAI,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5CZ,OAAO,CAACa,QAAQ,CACdZ,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAOD,MAAMM,aAA2C,GAAGA,CAAC;EACnDC,MAAM,GAAG,MAAM;EACfC,SAAS,GAAG;AACd,CAAC,KAAK;EACJ,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,QAAQF,MAAM;MACZ,KAAK,KAAK;QACR,OAAO;UACLG,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;UACnDC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;UAAE;UAChDC,QAAQ,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;UACjEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAE;QACzC,CAAC;MACH,KAAK,OAAO;QACV,OAAO;UACLH,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;UAChDC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;UACpCC,QAAQ,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,YAAY,CAAC;UAC7DC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAE;QACpC,CAAC;MACH;QAAS;QACP,OAAO;UACLH,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;UACzDC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;UACnDC,QAAQ,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,CAAC;UACtFC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAE;QAC7C,CAAC;IACL;EACF,CAAC;EAED,MAAM;IAAEH,MAAM;IAAEC,cAAc;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGJ,YAAY,CAAC,CAAC;;EAEvE;EACA,IAAID,SAAS,KAAK,UAAU,EAAE;IAC5B,MAAMM,YAAY,GAAG;MACnBJ,MAAM,EAAEE,QAAQ;MAChBG,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,mBAAmB;QAC1BC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAAE;QAC7BC,eAAe,EAAE,CACf,SAAS;QAAE;QACX,SAAS;QAAE;QACX,SAAS;QAAE;QACX,SAAS;QAAE;QACX,SAAS;QAAE;QACX,SAAS;QAAE;QACX,SAAS,CAAE;QAAA,CACZ;QACDC,WAAW,EAAE,CACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;QACDC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE;MAChB,CAAC;IAEL,CAAC;IAED,MAAMC,eAAoC,GAAG;MAC3CC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,OAAO,EAAE;QACX,CAAC;QACDC,OAAO,EAAE;UACPV,eAAe,EAAE,oBAAoB;UACrCW,UAAU,EAAE,MAAM;UAClBC,SAAS,EAAE,MAAM;UACjBV,WAAW,EAAE,CAAC;UACdW,YAAY,EAAE,CAAC;UACfC,SAAS,EAAE;YACThB,KAAK,EAAE,SAAAA,CAASiB,OAAO,EAAE;cACvB,OAAO,GAAGA,OAAO,CAACjB,KAAK,KAAKiB,OAAO,CAACC,MAAM,CAACC,CAAC,kBAAkB;YAChE;UACF;QACF;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE;YACJX,OAAO,EAAE;UACX,CAAC;UACDY,KAAK,EAAE;YACLC,KAAK,EAAE,SAAS;YAChBC,IAAI,EAAE;cACJC,IAAI,EAAE;YACR,CAAC;YACDC,WAAW,EAAE;UACf;QACF,CAAC;QACDR,CAAC,EAAE;UACDS,WAAW,EAAE,IAAI;UACjBC,KAAK,EAAE;YACLlB,OAAO,EAAE,IAAI;YACbmB,IAAI,EAAE,WAAW;YACjBN,KAAK,EAAE,SAAS;YAChBC,IAAI,EAAE;cACJC,IAAI,EAAE,EAAE;cACRK,MAAM,EAAE;YACV;UACF,CAAC;UACDT,IAAI,EAAE;YACJE,KAAK,EAAE;UACT,CAAC;UACDD,KAAK,EAAE;YACLC,KAAK,EAAE,SAAS;YAChBC,IAAI,EAAE;cACJC,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF,CAAC;IAED,oBACEtC,OAAA;MAAK4C,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,eAC7C/C,OAAA,CAACF,GAAG;QAACe,IAAI,EAAEH,YAAa;QAACsC,OAAO,EAAE9B;MAAgB;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEV;;EAEA;EACA,IAAIhD,SAAS,KAAK,YAAY,EAAE;IAC9B,MAAMiD,cAAc,GAAG;MACrB/C,MAAM,EAAEE,QAAQ;MAChBG,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,sBAAsB;QAC7BC,IAAI,EAAEJ,UAAU;QAChBK,eAAe,EAAE,yBAAyB;QAC1CC,WAAW,EAAE,SAAS;QACtBC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE;MAChB,CAAC;IAEL,CAAC;IAED,MAAMqC,iBAAsC,GAAG;MAC7CnC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,OAAO,EAAE;QACX,CAAC;QACDC,OAAO,EAAE;UACPV,eAAe,EAAE,oBAAoB;UACrCW,UAAU,EAAE,MAAM;UAClBC,SAAS,EAAE,MAAM;UACjBX,WAAW,EAAE,SAAS;UACtBC,WAAW,EAAE,CAAC;UACdW,YAAY,EAAE,CAAC;UACfC,SAAS,EAAE;YACThB,KAAK,EAAE,SAAAA,CAASiB,OAAO,EAAE;cACvB,OAAO,GAAGA,OAAO,CAACjB,KAAK,KAAKiB,OAAO,CAACC,MAAM,CAACC,CAAC,UAAU;YACxD;UACF;QACF;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE;YACJX,OAAO,EAAE;UACX,CAAC;UACDY,KAAK,EAAE;YACLC,KAAK,EAAE,SAAS;YAChBC,IAAI,EAAE;cACJC,IAAI,EAAE;YACR,CAAC;YACDC,WAAW,EAAE;UACf;QACF,CAAC;QACDR,CAAC,EAAE;UACDS,WAAW,EAAE,IAAI;UACjBC,KAAK,EAAE;YACLlB,OAAO,EAAE,IAAI;YACbmB,IAAI,EAAE,SAAS;YACfN,KAAK,EAAE,SAAS;YAChBC,IAAI,EAAE;cACJC,IAAI,EAAE,EAAE;cACRK,MAAM,EAAE;YACV;UACF,CAAC;UACDT,IAAI,EAAE;YACJE,KAAK,EAAE;UACT,CAAC;UACDD,KAAK,EAAE;YACLC,KAAK,EAAE,SAAS;YAChBC,IAAI,EAAE;cACJC,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF,CAAC;IAED,oBACEtC,OAAA;MAAK4C,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,eAC7C/C,OAAA,CAACF,GAAG;QAACe,IAAI,EAAEwC,cAAe;QAACL,OAAO,EAAEM;MAAkB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAEV;;EAEA;EACA,MAAMvC,IAAI,GAAG;IACXP,MAAM;IACNK,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,gBAAgB;MACvBC,IAAI,EAAEN,cAAc;MACpBQ,WAAW,EAAE,SAAS;MACtBD,eAAe,EAAE,yBAAyB;MAC1CyC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE,CAAC;MACdC,gBAAgB,EAAE,CAAC;MACnBC,IAAI,EAAE,IAAI;MACVC,oBAAoB,EAAE,SAAS;MAC/BC,gBAAgB,EAAE,SAAS;MAC3BC,gBAAgB,EAAE;IACpB,CAAC,EACD;MACEjD,KAAK,EAAE,qBAAqB;MAC5BC,IAAI,EAAEiD,KAAK,CAACxD,MAAM,CAACyD,MAAM,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;MAClC3C,WAAW,EAAE,SAAS;MACtBD,eAAe,EAAE,yBAAyB;MAC1CkD,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBR,WAAW,EAAE,CAAC;MACdE,IAAI,EAAE;IACR,CAAC,EACD;MACE9C,KAAK,EAAE,mBAAmB;MAC1BC,IAAI,EAAEiD,KAAK,CAACxD,MAAM,CAACyD,MAAM,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;MAClC3C,WAAW,EAAE,SAAS;MACtBD,eAAe,EAAE,aAAa;MAC9BkD,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBR,WAAW,EAAE,CAAC;MACdE,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,MAAMV,OAA6B,GAAG;IACpC7B,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MACPC,MAAM,EAAE;QACN2C,QAAQ,EAAE,KAAc;QACxBC,KAAK,EAAE,KAAc;QACrB5D,MAAM,EAAE;UACN6D,aAAa,EAAE,IAAI;UACnBC,UAAU,EAAE,QAAQ;UACpBC,OAAO,EAAE,EAAE;UACXhC,IAAI,EAAE;YACJC,IAAI,EAAE;UACR;QACF;MACF,CAAC;MACDd,OAAO,EAAE;QACPV,eAAe,EAAE,oBAAoB;QACrCW,UAAU,EAAE,MAAM;QAClBC,SAAS,EAAE,MAAM;QACjBX,WAAW,EAAE,SAAS;QACtBC,WAAW,EAAE,CAAC;QACdW,YAAY,EAAE,CAAC;QACf2C,aAAa,EAAE,IAAI;QACnB1C,SAAS,EAAE;UACThB,KAAK,EAAE,SAAAA,CAASiB,OAAO,EAAE;YACvB,IAAIA,OAAO,CAAC0C,YAAY,KAAK,CAAC,EAAE;cAC9B,OAAO,GAAG1C,OAAO,CAAC2C,OAAO,CAAC5D,KAAK,KAAKiB,OAAO,CAACC,MAAM,CAACC,CAAC,KAAK;YAC3D;YACA,OAAO,GAAGF,OAAO,CAAC2C,OAAO,CAAC5D,KAAK,KAAKiB,OAAO,CAACC,MAAM,CAACC,CAAC,EAAE;UACxD;QACF;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE;UACJX,OAAO,EAAE;QACX,CAAC;QACDY,KAAK,EAAE;UACLC,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE;YACJC,IAAI,EAAE;UACR;QACF;MACF,CAAC;MACDP,CAAC,EAAE;QACD0C,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,EAAE;QACPjC,KAAK,EAAE;UACLlB,OAAO,EAAE,IAAI;UACbmB,IAAI,EAAE,uBAAuB;UAC7BN,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE;YACJC,IAAI,EAAE,EAAE;YACRK,MAAM,EAAE;UACV;QACF,CAAC;QACDT,IAAI,EAAE;UACJE,KAAK,EAAE;QACT,CAAC;QACDD,KAAK,EAAE;UACLC,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE;YACJC,IAAI,EAAE;UACR,CAAC;UACDqC,QAAQ,EAAE;QACZ;MACF;IACF,CAAC;IACDC,WAAW,EAAE;MACXC,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE;IACR;EACF,CAAC;EAED,oBACE9E,OAAA;IAAK4C,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC7C/C,OAAA,CAACH,IAAI;MAACgB,IAAI,EAAEA,IAAK;MAACmC,OAAO,EAAEA;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAAC2B,EAAA,GAxUI7E,aAA2C;AA0UjD,eAAeA,aAAa;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}