{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\components\\\\HealthNewsFeed.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { NewsService } from '../services/newsService';\nimport openaiAPI from '../services/openaiAPI'; // Use your existing OpenAI service\nimport './HealthNewsFeed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthNewsFeed = ({\n  maxArticles = 6\n}) => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const categories = [{\n    id: 'all',\n    label: 'All Health News'\n  }, {\n    id: 'nutrition',\n    label: 'Nutrition'\n  }, {\n    id: 'fitness',\n    label: 'Fitness'\n  }, {\n    id: 'mental-health',\n    label: 'Mental Health'\n  }, {\n    id: 'medical',\n    label: 'Medical Research'\n  }, {\n    id: 'wellness',\n    label: 'Wellness'\n  }];\n  useEffect(() => {\n    fetchHealthNews();\n  }, [selectedCategory, maxArticles]);\n  const fetchHealthNews = async () => {\n    setLoading(true);\n    try {\n      console.log('Fetching health news for category:', selectedCategory);\n\n      // Use NewsService to fetch real data\n      const newsData = await NewsService.fetchHealthNews(selectedCategory, maxArticles);\n      if (newsData && newsData.length > 0) {\n        // Use real API data\n        setArticles(newsData);\n      } else {\n        // Fallback to OpenAI if API fails or returns no data\n        console.log('NewsService returned no data, trying OpenAI...');\n        await fetchNewsWithOpenAI();\n      }\n    } catch (error) {\n      console.error('Error fetching health news:', error);\n      // Try OpenAI as fallback\n      await fetchNewsWithOpenAI();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchNewsWithOpenAI = async () => {\n    try {\n      const categoryText = selectedCategory === 'all' ? 'general health' : selectedCategory;\n      const prompt = `Generate ${maxArticles} recent health news articles about ${categoryText}. \n      Please provide realistic, informative health news with titles, summaries, and sources.\n      Include current health trends, research findings, and wellness tips.\n      Format your response as a structured list with clear titles and summaries.`;\n      const response = await openaiAPI.searchHealthInfo(prompt);\n      console.log('OpenAI response for news:', response);\n      if (response && (response.details || response.response)) {\n        // Parse the OpenAI response and convert to articles\n        const responseText = response.details || response.response || '';\n        const generatedArticles = parseOpenAINewsResponse(responseText);\n        setArticles(generatedArticles);\n        console.log('Using OpenAI generated articles:', generatedArticles.length);\n      } else {\n        // Final fallback to mock data\n        console.log('Using fallback mock data');\n        const mockArticles = [{\n          id: '1',\n          title: 'New Study Reveals Benefits of Mediterranean Diet for Heart Health',\n          summary: 'Researchers found that following a Mediterranean diet can reduce cardiovascular disease risk by up to 30%.',\n          url: '#',\n          source: 'Yahoo Health',\n          publishedAt: '2025-01-22T10:30:00Z',\n          imageUrl: '/assets/mediterranean-diet.jpg',\n          category: 'nutrition'\n        }, {\n          id: '2',\n          title: 'Exercise and Mental Health: The Connection You Need to Know',\n          summary: 'New research shows that just 30 minutes of exercise daily can significantly improve mental well-being.',\n          url: '#',\n          source: 'MSN Health',\n          publishedAt: '2025-01-22T08:15:00Z',\n          imageUrl: '/assets/exercise-mental-health.jpg',\n          category: 'fitness'\n        }, {\n          id: '3',\n          title: 'Breakthrough in Cancer Research: Early Detection Methods',\n          summary: 'Scientists develop new blood test that can detect multiple types of cancer in early stages.',\n          url: '#',\n          source: 'Bing News',\n          publishedAt: '2025-01-22T06:45:00Z',\n          imageUrl: '/assets/cancer-research.jpg',\n          category: 'medical'\n        }, {\n          id: '4',\n          title: 'Sleep Quality: How It Affects Your Immune System',\n          summary: 'Poor sleep quality can weaken your immune response and increase susceptibility to infections.',\n          url: '#',\n          source: 'Yahoo Health',\n          publishedAt: '2025-01-21T20:30:00Z',\n          imageUrl: '/assets/sleep-health.jpg',\n          category: 'wellness'\n        }, {\n          id: '5',\n          title: 'Mindfulness and Stress Reduction Techniques That Actually Work',\n          summary: 'Evidence-based mindfulness practices shown to reduce stress hormones and improve overall health.',\n          url: '#',\n          source: 'MSN Health',\n          publishedAt: '2025-01-21T18:20:00Z',\n          imageUrl: '/assets/mindfulness.jpg',\n          category: 'mental-health'\n        }, {\n          id: '6',\n          title: 'Superfoods That Boost Your Energy Naturally',\n          summary: 'Discover nutrient-dense foods that can help increase energy levels without caffeine crashes.',\n          url: '#',\n          source: 'Bing News',\n          publishedAt: '2025-01-21T15:10:00Z',\n          imageUrl: '/assets/superfoods.jpg',\n          category: 'nutrition'\n        }];\n\n        // Filter by category if not 'all'\n        const filteredArticles = selectedCategory === 'all' ? mockArticles : mockArticles.filter(article => article.category === selectedCategory);\n        setArticles(filteredArticles.slice(0, maxArticles));\n      }\n    } catch (openaiError) {\n      console.error('OpenAI error:', openaiError);\n      // Use empty array if everything fails\n      setArticles([]);\n    }\n  };\n  const parseOpenAINewsResponse = responseText => {\n    try {\n      // Try to extract structured information from OpenAI response\n      const lines = responseText.split('\\n').filter(line => line.trim());\n      const articles = [];\n      let currentArticle = {};\n      let articleIndex = 0;\n      for (const line of lines) {\n        const trimmedLine = line.trim();\n\n        // Look for title patterns (starting with numbers, bullets, or \"Title:\")\n        if (trimmedLine.match(/^\\d+\\./) || trimmedLine.toLowerCase().startsWith('title:') || trimmedLine.match(/^[-*•]/)) {\n          // Save previous article if it exists\n          if (currentArticle.title) {\n            articles.push({\n              id: `openai-${Date.now()}-${articleIndex}`,\n              title: currentArticle.title || 'Health News Update',\n              summary: currentArticle.summary || 'Stay informed with the latest health developments.',\n              url: '#',\n              source: 'AI Health News',\n              publishedAt: new Date().toISOString(),\n              imageUrl: `/assets/health-news-${articleIndex % 6 + 1}.jpg`,\n              category: selectedCategory === 'all' ? 'wellness' : selectedCategory\n            });\n            articleIndex++;\n          }\n\n          // Start new article\n          currentArticle = {\n            title: trimmedLine.replace(/^\\d+\\.\\s*/, '').replace(/^title:\\s*/i, '').replace(/^[-*•]\\s*/, '')\n          };\n        }\n        // Look for summary/description\n        else if (trimmedLine && !trimmedLine.match(/^(source|published|category):/i)) {\n          if (currentArticle.title && !currentArticle.summary) {\n            currentArticle.summary = trimmedLine;\n          }\n        }\n      }\n\n      // Add the last article\n      if (currentArticle.title) {\n        articles.push({\n          id: `openai-${Date.now()}-${articleIndex}`,\n          title: currentArticle.title,\n          summary: currentArticle.summary || 'Stay informed with the latest health developments.',\n          url: '#',\n          source: 'AI Health News',\n          publishedAt: new Date().toISOString(),\n          imageUrl: `/assets/health-news-${articleIndex % 6 + 1}.jpg`,\n          category: selectedCategory === 'all' ? 'wellness' : selectedCategory\n        });\n      }\n      return articles.slice(0, maxArticles);\n    } catch (error) {\n      console.error('Error parsing OpenAI response:', error);\n      return [];\n    }\n  };\n  const generateFreshNewsWithAI = async () => {\n    setLoading(true);\n    try {\n      const categoryText = selectedCategory === 'all' ? 'general health and wellness' : selectedCategory;\n      const prompt = `Generate ${maxArticles} fresh, current health news articles specifically about ${categoryText}. \n      Focus on recent developments, latest research, trending health topics, and practical wellness advice.\n      Make each article informative and engaging with clear titles and detailed summaries.\n      Include variety in topics within the ${categoryText} category.`;\n      const response = await openaiAPI.searchHealthInfo(prompt);\n      if (response && (response.details || response.response)) {\n        const responseText = response.details || response.response || '';\n        const generatedArticles = parseOpenAINewsResponse(responseText);\n        if (generatedArticles.length > 0) {\n          setArticles(generatedArticles);\n          console.log('Generated fresh AI articles:', generatedArticles.length);\n        } else {\n          // Fallback to regular fetch\n          await fetchHealthNews();\n        }\n      }\n    } catch (error) {\n      console.error('Error generating fresh news with AI:', error);\n      // Fallback to regular fetch\n      await fetchHealthNews();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatTimeAgo = dateString => {\n    const now = new Date();\n    const publishedDate = new Date(dateString);\n    const diffInHours = Math.floor((now.getTime() - publishedDate.getTime()) / (1000 * 60 * 60));\n    if (diffInHours < 1) return 'Just now';\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    const diffInDays = Math.floor(diffInHours / 24);\n    return `${diffInDays}d ago`;\n  };\n  const getSourceIcon = source => {\n    switch (source.toLowerCase()) {\n      case 'yahoo health':\n        return '🟣';\n      case 'msn health':\n        return '🔵';\n      case 'bing news':\n        return '🟢';\n      default:\n        return '📰';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-feed-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-feed-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Latest Health News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-news\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading latest health news...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-feed-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Latest Health News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Stay updated with the latest health and wellness news from trusted sources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ai-refresh-btn\",\n        onClick: generateFreshNewsWithAI,\n        disabled: loading,\n        children: \"\\uD83E\\uDD16 Generate AI Health News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-categories\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `category-btn ${selectedCategory === category.id ? 'active' : ''}`,\n        onClick: () => setSelectedCategory(category.id),\n        children: category.label\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-grid\",\n      children: articles.map(article => /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"news-card\",\n        children: [article.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: article.imageUrl,\n            alt: article.title,\n            onError: e => {\n              e.target.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"news-source\",\n              children: [getSourceIcon(article.source), \" \", article.source]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"news-time\",\n              children: formatTimeAgo(article.publishedAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"news-title\",\n            children: article.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"news-summary\",\n            children: article.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: article.url,\n            className: \"read-more-btn\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Read Full Article \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, article.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"load-more-btn\",\n        onClick: fetchHealthNews,\n        children: \"Load More Articles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ai-generate-btn\",\n        onClick: generateFreshNewsWithAI,\n        children: \"\\uD83E\\uDD16 Generate with AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthNewsFeed, \"kktUbVx0z1iRAhAquNn2nVk+6To=\");\n_c = HealthNewsFeed;\nexport default HealthNewsFeed;\nvar _c;\n$RefreshReg$(_c, \"HealthNewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","NewsService","openaiAPI","jsxDEV","_jsxDEV","HealthNewsFeed","maxArticles","_s","articles","setArticles","loading","setLoading","selectedCategory","setSelectedCategory","categories","id","label","fetchHealthNews","console","log","newsData","length","fetchNewsWithOpenAI","error","categoryText","prompt","response","searchHealthInfo","details","responseText","generatedArticles","parseOpenAINewsResponse","mockArticles","title","summary","url","source","publishedAt","imageUrl","category","filteredArticles","filter","article","slice","openaiError","lines","split","line","trim","currentArticle","articleIndex","trimmedLine","match","toLowerCase","startsWith","push","Date","now","toISOString","replace","generateFreshNewsWithAI","formatTimeAgo","dateString","publishedDate","diffInHours","Math","floor","getTime","diffInDays","getSourceIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","src","alt","onError","e","target","style","display","href","rel","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/components/HealthNewsFeed.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NewsService } from '../services/newsService';\r\nimport openaiAPI from '../services/openaiAPI'; // Use your existing OpenAI service\r\nimport './HealthNewsFeed.css';\r\n\r\ninterface NewsArticle {\r\n  id: string;\r\n  title: string;\r\n  summary: string;\r\n  url: string;\r\n  source: string;\r\n  publishedAt: string;\r\n  imageUrl?: string;\r\n  category: string;\r\n}\r\n\r\ninterface NewsFeedProps {\r\n  maxArticles?: number;\r\n}\r\n\r\nconst HealthNewsFeed: React.FC<NewsFeedProps> = ({ maxArticles = 6 }) => {\r\n  const [articles, setArticles] = useState<NewsArticle[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n\r\n  const categories = [\r\n    { id: 'all', label: 'All Health News' },\r\n    { id: 'nutrition', label: 'Nutrition' },\r\n    { id: 'fitness', label: 'Fitness' },\r\n    { id: 'mental-health', label: 'Mental Health' },\r\n    { id: 'medical', label: 'Medical Research' },\r\n    { id: 'wellness', label: 'Wellness' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchHealthNews();\r\n  }, [selectedCategory, maxArticles]);\r\n\r\n  const fetchHealthNews = async () => {\r\n    setLoading(true);\r\n    try {\r\n      console.log('Fetching health news for category:', selectedCategory);\r\n      \r\n      // Use NewsService to fetch real data\r\n      const newsData = await NewsService.fetchHealthNews(selectedCategory, maxArticles);\r\n      \r\n      if (newsData && newsData.length > 0) {\r\n        // Use real API data\r\n        setArticles(newsData);\r\n      } else {\r\n        // Fallback to OpenAI if API fails or returns no data\r\n        console.log('NewsService returned no data, trying OpenAI...');\r\n        await fetchNewsWithOpenAI();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching health news:', error);\r\n      // Try OpenAI as fallback\r\n      await fetchNewsWithOpenAI();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchNewsWithOpenAI = async () => {\r\n    try {\r\n      const categoryText = selectedCategory === 'all' ? 'general health' : selectedCategory;\r\n      const prompt = `Generate ${maxArticles} recent health news articles about ${categoryText}. \r\n      Please provide realistic, informative health news with titles, summaries, and sources.\r\n      Include current health trends, research findings, and wellness tips.\r\n      Format your response as a structured list with clear titles and summaries.`;\r\n      \r\n      const response = await openaiAPI.searchHealthInfo(prompt);\r\n      console.log('OpenAI response for news:', response);\r\n      \r\n      if (response && (response.details || response.response)) {\r\n        // Parse the OpenAI response and convert to articles\r\n        const responseText = response.details || response.response || '';\r\n        const generatedArticles = parseOpenAINewsResponse(responseText);\r\n        setArticles(generatedArticles);\r\n        console.log('Using OpenAI generated articles:', generatedArticles.length);\r\n      } else {\r\n        // Final fallback to mock data\r\n        console.log('Using fallback mock data');\r\n        const mockArticles: NewsArticle[] = [\r\n          {\r\n            id: '1',\r\n            title: 'New Study Reveals Benefits of Mediterranean Diet for Heart Health',\r\n            summary: 'Researchers found that following a Mediterranean diet can reduce cardiovascular disease risk by up to 30%.',\r\n            url: '#',\r\n            source: 'Yahoo Health',\r\n            publishedAt: '2025-01-22T10:30:00Z',\r\n            imageUrl: '/assets/mediterranean-diet.jpg',\r\n            category: 'nutrition'\r\n          },\r\n          {\r\n            id: '2', \r\n            title: 'Exercise and Mental Health: The Connection You Need to Know',\r\n            summary: 'New research shows that just 30 minutes of exercise daily can significantly improve mental well-being.',\r\n            url: '#',\r\n            source: 'MSN Health',\r\n            publishedAt: '2025-01-22T08:15:00Z',\r\n            imageUrl: '/assets/exercise-mental-health.jpg',\r\n            category: 'fitness'\r\n          },\r\n          {\r\n            id: '3',\r\n            title: 'Breakthrough in Cancer Research: Early Detection Methods',\r\n            summary: 'Scientists develop new blood test that can detect multiple types of cancer in early stages.',\r\n            url: '#',\r\n            source: 'Bing News',\r\n            publishedAt: '2025-01-22T06:45:00Z',\r\n            imageUrl: '/assets/cancer-research.jpg',\r\n            category: 'medical'\r\n          },\r\n          {\r\n            id: '4',\r\n            title: 'Sleep Quality: How It Affects Your Immune System',\r\n            summary: 'Poor sleep quality can weaken your immune response and increase susceptibility to infections.',\r\n            url: '#',\r\n            source: 'Yahoo Health',\r\n            publishedAt: '2025-01-21T20:30:00Z',\r\n            imageUrl: '/assets/sleep-health.jpg',\r\n            category: 'wellness'\r\n          },\r\n          {\r\n            id: '5',\r\n            title: 'Mindfulness and Stress Reduction Techniques That Actually Work',\r\n            summary: 'Evidence-based mindfulness practices shown to reduce stress hormones and improve overall health.',\r\n            url: '#',\r\n            source: 'MSN Health',\r\n            publishedAt: '2025-01-21T18:20:00Z',\r\n            imageUrl: '/assets/mindfulness.jpg',\r\n            category: 'mental-health'\r\n          },\r\n          {\r\n            id: '6',\r\n            title: 'Superfoods That Boost Your Energy Naturally',\r\n            summary: 'Discover nutrient-dense foods that can help increase energy levels without caffeine crashes.',\r\n            url: '#',\r\n            source: 'Bing News',\r\n            publishedAt: '2025-01-21T15:10:00Z',\r\n            imageUrl: '/assets/superfoods.jpg',\r\n            category: 'nutrition'\r\n          }\r\n        ];\r\n\r\n        // Filter by category if not 'all'\r\n        const filteredArticles = selectedCategory === 'all' \r\n          ? mockArticles \r\n          : mockArticles.filter(article => article.category === selectedCategory);\r\n\r\n        setArticles(filteredArticles.slice(0, maxArticles));\r\n      }\r\n    } catch (openaiError) {\r\n      console.error('OpenAI error:', openaiError);\r\n      // Use empty array if everything fails\r\n      setArticles([]);\r\n    }\r\n  };\r\n\r\n  const parseOpenAINewsResponse = (responseText: string): NewsArticle[] => {\r\n    try {\r\n      // Try to extract structured information from OpenAI response\r\n      const lines = responseText.split('\\n').filter(line => line.trim());\r\n      const articles: NewsArticle[] = [];\r\n      \r\n      let currentArticle: Partial<NewsArticle> = {};\r\n      let articleIndex = 0;\r\n      \r\n      for (const line of lines) {\r\n        const trimmedLine = line.trim();\r\n        \r\n        // Look for title patterns (starting with numbers, bullets, or \"Title:\")\r\n        if (trimmedLine.match(/^\\d+\\./) || trimmedLine.toLowerCase().startsWith('title:') || \r\n            trimmedLine.match(/^[-*•]/)) {\r\n          \r\n          // Save previous article if it exists\r\n          if (currentArticle.title) {\r\n            articles.push({\r\n              id: `openai-${Date.now()}-${articleIndex}`,\r\n              title: currentArticle.title || 'Health News Update',\r\n              summary: currentArticle.summary || 'Stay informed with the latest health developments.',\r\n              url: '#',\r\n              source: 'AI Health News',\r\n              publishedAt: new Date().toISOString(),\r\n              imageUrl: `/assets/health-news-${(articleIndex % 6) + 1}.jpg`,\r\n              category: selectedCategory === 'all' ? 'wellness' : selectedCategory\r\n            });\r\n            articleIndex++;\r\n          }\r\n          \r\n          // Start new article\r\n          currentArticle = {\r\n            title: trimmedLine.replace(/^\\d+\\.\\s*/, '').replace(/^title:\\s*/i, '').replace(/^[-*•]\\s*/, '')\r\n          };\r\n        } \r\n        // Look for summary/description\r\n        else if (trimmedLine && !trimmedLine.match(/^(source|published|category):/i)) {\r\n          if (currentArticle.title && !currentArticle.summary) {\r\n            currentArticle.summary = trimmedLine;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Add the last article\r\n      if (currentArticle.title) {\r\n        articles.push({\r\n          id: `openai-${Date.now()}-${articleIndex}`,\r\n          title: currentArticle.title,\r\n          summary: currentArticle.summary || 'Stay informed with the latest health developments.',\r\n          url: '#',\r\n          source: 'AI Health News',\r\n          publishedAt: new Date().toISOString(),\r\n          imageUrl: `/assets/health-news-${(articleIndex % 6) + 1}.jpg`,\r\n          category: selectedCategory === 'all' ? 'wellness' : selectedCategory\r\n        });\r\n      }\r\n      \r\n      return articles.slice(0, maxArticles);\r\n    } catch (error) {\r\n      console.error('Error parsing OpenAI response:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const generateFreshNewsWithAI = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const categoryText = selectedCategory === 'all' ? 'general health and wellness' : selectedCategory;\r\n      const prompt = `Generate ${maxArticles} fresh, current health news articles specifically about ${categoryText}. \r\n      Focus on recent developments, latest research, trending health topics, and practical wellness advice.\r\n      Make each article informative and engaging with clear titles and detailed summaries.\r\n      Include variety in topics within the ${categoryText} category.`;\r\n      \r\n      const response = await openaiAPI.searchHealthInfo(prompt);\r\n      \r\n      if (response && (response.details || response.response)) {\r\n        const responseText = response.details || response.response || '';\r\n        const generatedArticles = parseOpenAINewsResponse(responseText);\r\n        \r\n        if (generatedArticles.length > 0) {\r\n          setArticles(generatedArticles);\r\n          console.log('Generated fresh AI articles:', generatedArticles.length);\r\n        } else {\r\n          // Fallback to regular fetch\r\n          await fetchHealthNews();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating fresh news with AI:', error);\r\n      // Fallback to regular fetch\r\n      await fetchHealthNews();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatTimeAgo = (dateString: string) => {\r\n    const now = new Date();\r\n    const publishedDate = new Date(dateString);\r\n    const diffInHours = Math.floor((now.getTime() - publishedDate.getTime()) / (1000 * 60 * 60));\r\n    \r\n    if (diffInHours < 1) return 'Just now';\r\n    if (diffInHours < 24) return `${diffInHours}h ago`;\r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    return `${diffInDays}d ago`;\r\n  };\r\n\r\n  const getSourceIcon = (source: string) => {\r\n    switch (source.toLowerCase()) {\r\n      case 'yahoo health':\r\n        return '🟣';\r\n      case 'msn health':\r\n        return '🔵';\r\n      case 'bing news':\r\n        return '🟢';\r\n      default:\r\n        return '📰';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"news-feed-container\">\r\n        <div className=\"news-feed-header\">\r\n          <h2>Latest Health News</h2>\r\n        </div>\r\n        <div className=\"loading-news\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading latest health news...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"news-feed-container\">\r\n      <div className=\"news-feed-header\">\r\n        <h2>Latest Health News</h2>\r\n        <p>Stay updated with the latest health and wellness news from trusted sources</p>\r\n        <button \r\n          className=\"ai-refresh-btn\" \r\n          onClick={generateFreshNewsWithAI}\r\n          disabled={loading}\r\n        >\r\n          🤖 Generate AI Health News\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"news-categories\">\r\n        {categories.map(category => (\r\n          <button\r\n            key={category.id}\r\n            className={`category-btn ${selectedCategory === category.id ? 'active' : ''}`}\r\n            onClick={() => setSelectedCategory(category.id)}\r\n          >\r\n            {category.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"news-grid\">\r\n        {articles.map((article) => (\r\n          <article key={article.id} className=\"news-card\">\r\n            {article.imageUrl && (\r\n              <div className=\"news-image\">\r\n                <img \r\n                  src={article.imageUrl} \r\n                  alt={article.title}\r\n                  onError={(e) => {\r\n                    (e.target as HTMLImageElement).style.display = 'none';\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"news-content\">\r\n              <div className=\"news-meta\">\r\n                <span className=\"news-source\">\r\n                  {getSourceIcon(article.source)} {article.source}\r\n                </span>\r\n                <span className=\"news-time\">{formatTimeAgo(article.publishedAt)}</span>\r\n              </div>\r\n              <h3 className=\"news-title\">{article.title}</h3>\r\n              <p className=\"news-summary\">{article.summary}</p>\r\n              <a \r\n                href={article.url} \r\n                className=\"read-more-btn\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Read Full Article →\r\n              </a>\r\n            </div>\r\n          </article>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"news-footer\">\r\n        <button className=\"load-more-btn\" onClick={fetchHealthNews}>\r\n          Load More Articles\r\n        </button>\r\n        <button className=\"ai-generate-btn\" onClick={generateFreshNewsWithAI}>\r\n          🤖 Generate with AI\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthNewsFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}