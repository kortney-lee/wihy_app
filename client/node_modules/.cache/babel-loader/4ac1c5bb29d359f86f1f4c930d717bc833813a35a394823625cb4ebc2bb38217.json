{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\ChatWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { wihyAPI } from '../services/wihyAPI';\nimport Header from './shared/components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWidget = ({\n  isOpen,\n  onClose,\n  searchQuery,\n  searchResponse,\n  currentContext,\n  inline = false\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const chatThreadRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Cache measured heights so items retain size during prepend\n  const heightMap = useRef({});\n  const ro = useRef();\n  useEffect(() => {\n    ro.current = new ResizeObserver(entries => {\n      for (const e of entries) {\n        const id = e.target.dataset.id;\n        heightMap.current[id] = e.contentRect.height;\n      }\n    });\n    return () => {\n      var _ro$current;\n      return (_ro$current = ro.current) === null || _ro$current === void 0 ? void 0 : _ro$current.disconnect();\n    };\n  }, []);\n\n  // Attach observer to each rendered message\n  const observe = el => {\n    if (!el || !ro.current) return;\n    ro.current.observe(el);\n  };\n\n  // Keep auto-scrolling to bottom ONLY if user is near bottom\n  const scrollToBottomIfPinned = () => {\n    const el = chatThreadRef.current;\n    if (!el) return;\n    const nearBottom = el.scrollHeight - el.scrollTop - el.clientHeight < 120;\n    if (nearBottom) el.scrollTop = el.scrollHeight;\n  };\n\n  // Call this when appending a new message\n  const appendMessage = newMessage => {\n    setMessages(prev => [...prev, newMessage]);\n    requestAnimationFrame(scrollToBottomIfPinned);\n  };\n\n  // Scroll handler for loading older messages\n  const onScroll = () => {\n    const el = chatThreadRef.current;\n    if (!el) return;\n    if (el.scrollTop < 120) loadOlder();\n  };\n\n  // Load older messages with viewport anchoring\n  const loadOlder = async () => {\n    var _children$find, _anchor$getBoundingCl;\n    if (loadingMore || !hasMore || messages.length === 0) return;\n    const el = chatThreadRef.current;\n    if (!el) return;\n    setLoadingMore(true);\n\n    // 1) Pick an anchor element (first fully visible)\n    const children = Array.from(el.children);\n    const anchor = (_children$find = children.find(c => c.getBoundingClientRect().top >= el.getBoundingClientRect().top)) !== null && _children$find !== void 0 ? _children$find : children[0];\n    const anchorId = anchor === null || anchor === void 0 ? void 0 : anchor.dataset.id;\n    const anchorTopBefore = (_anchor$getBoundingCl = anchor === null || anchor === void 0 ? void 0 : anchor.getBoundingClientRect().top) !== null && _anchor$getBoundingCl !== void 0 ? _anchor$getBoundingCl : 0;\n\n    // 2) Freeze current heights so items \"retain their size\"\n    children.forEach(c => {\n      const id = c.dataset.id;\n      const h = heightMap.current[id] || c.getBoundingClientRect().height;\n      c.style.height = `${h}px`;\n    });\n\n    // 3) Simulate prepending older items (for now, just mark no more)\n    // In a real app, you'd fetch older messages here\n    setHasMore(false);\n\n    // 4) After DOM updates, restore the anchor position\n    requestAnimationFrame(() => {\n      var _newAnchor$getBoundin;\n      const newAnchor = anchorId ? Array.from(el.children).find(c => c.dataset.id === anchorId) : null;\n      const anchorTopAfter = (_newAnchor$getBoundin = newAnchor === null || newAnchor === void 0 ? void 0 : newAnchor.getBoundingClientRect().top) !== null && _newAnchor$getBoundin !== void 0 ? _newAnchor$getBoundin : 0;\n      const delta = anchorTopAfter - anchorTopBefore;\n      el.scrollTop += delta; // shift viewport up by the added height\n\n      // 5) Unfreeze heights (let new messages measure/observe)\n      Array.from(el.children).forEach(c => c.style.height = \"\");\n      setLoadingMore(false);\n    });\n  };\n\n  // Jump to bottom on first load\n  useEffect(() => {\n    if (messages.length > 0) {\n      requestAnimationFrame(() => {\n        const el = chatThreadRef.current;\n        if (el) el.scrollTop = el.scrollHeight;\n      });\n    }\n  }, [messages.length]);\n\n  // Initialize conversation with search results if provided\n  useEffect(() => {\n    if (searchQuery && searchResponse && messages.length === 0) {\n      // Create a conversational summary instead of full response\n      let conversationalSummary = searchResponse;\n\n      // Extract key points and make it conversational\n      if (searchResponse.includes('WIHY Health')) {\n        const lines = searchResponse.split('\\n').filter(line => line.trim());\n        const keyPoints = lines.filter(line => line.includes('â€¢') || line.includes('-')).slice(0, 2).map(line => line.replace(/[â€¢-]/g, '').trim()).join('. ');\n        conversationalSummary = keyPoints || 'I found some helpful information for you!';\n        conversationalSummary += ' What specific aspect would you like to explore further?';\n      }\n      const initialMessages = [{\n        id: Date.now().toString() + '-user',\n        type: 'user',\n        message: searchQuery,\n        timestamp: new Date()\n      }, {\n        id: Date.now().toString() + '-assistant',\n        type: 'assistant',\n        message: conversationalSummary,\n        timestamp: new Date()\n      }];\n      setMessages(initialMessages);\n    }\n  }, [searchQuery, searchResponse, messages.length]);\n\n  // Focus input when chat opens\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      setTimeout(() => {\n        var _inputRef$current;\n        return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 100);\n    }\n  }, [isOpen]);\n  const handleSendMessage = async messageText => {\n    const messageToSend = messageText || inputMessage;\n    if (!messageToSend.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now().toString() + '-user',\n      type: 'user',\n      message: messageToSend.trim(),\n      timestamp: new Date(),\n      context: currentContext\n    };\n    appendMessage(userMessage);\n    setInputMessage('');\n    setIsLoading(true);\n    try {\n      // Build conversation context from previous messages\n      const conversationHistory = messages.slice(-4) // Last 4 messages for context\n      .map(msg => `${msg.type === 'user' ? 'User' : 'Assistant'}: ${msg.message}`).join('\\n');\n\n      // Create a focused query for conversational responses\n      const contextualQuery = `Please provide a brief, conversational response (2-3 sentences max) to: ${userMessage.message}${conversationHistory ? `\\n\\nContext from our conversation: ${conversationHistory}` : ''}`;\n      const response = await wihyAPI.askAnything({\n        query: contextualQuery,\n        user_context: {\n          conversation_mode: true,\n          response_style: 'concise',\n          conversation_context: conversationHistory,\n          current_context: currentContext,\n          is_followup: messages.length > 0\n        }\n      });\n\n      // Extract just the main response without full formatting\n      let aiResponse = '';\n      if ('success' in response && 'data' in response && response.data && 'response' in response.data) {\n        const healthResp = response;\n        aiResponse = healthResp.data.response;\n\n        // Clean up the response to be more conversational\n        aiResponse = aiResponse.replace(/ðŸ¥—.*?\\*\\*/g, '') // Remove emoji headers\n        .replace(/\\*\\*.*?\\*\\*/g, '') // Remove bold formatting\n        .replace(/ðŸ“‹.*?:/g, '') // Remove section headers\n        .replace(/â€¢/g, '-') // Replace bullets\n        .split('\\n').filter(line => line.trim() && !line.includes('Biblical') && !line.includes('Corinthians')).slice(0, 3) // Take first 3 meaningful lines\n        .join(' ').trim();\n\n        // If response is too long, truncate and add follow-up prompt\n        if (aiResponse.length > 200) {\n          aiResponse = aiResponse.substring(0, 200).trim() + '... What would you like to know more about?';\n        }\n      } else {\n        aiResponse = wihyAPI.formatWihyResponse(response);\n      }\n      const aiMessage = {\n        id: Date.now().toString() + '-assistant',\n        type: 'assistant',\n        message: aiResponse,\n        timestamp: new Date()\n      };\n      appendMessage(aiMessage);\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage = {\n        id: Date.now().toString() + '-assistant',\n        type: 'assistant',\n        message: \"I'm having trouble connecting right now. Please try again in a moment.\",\n        timestamp: new Date()\n      };\n      appendMessage(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  if (!isOpen) {\n    return null;\n  }\n  const formatTime = date => {\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      backgroundColor: 'white',\n      fontFamily: 'system-ui, -apple-system, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '20px 16px 16px 16px',\n        borderBottom: '1px solid #f3f4f6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 0,\n          fontSize: '20px',\n          fontWeight: '600',\n          color: '#1f2937'\n        },\n        children: \"WiHy Health Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '12px',\n          color: '#6b7280',\n          backgroundColor: '#f3f4f6',\n          padding: '4px 8px',\n          borderRadius: '4px'\n        },\n        children: \"AI-Powered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatThreadRef,\n      className: \"chat-thread\",\n      onScroll: onScroll,\n      style: {\n        height: 'calc(100vh - 240px)',\n        // Fixed height based on viewport\n        overflowY: 'auto',\n        overscrollBehavior: 'contain',\n        // Prevent body scroll chaining\n        scrollBehavior: 'smooth',\n        // Nice bottom scroll on new msg\n        padding: '12px 16px',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: [loadingMore && hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          padding: \"6px 0\"\n        },\n        children: \"Loading\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px 20px',\n          color: '#64748b'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '48px',\n            marginBottom: '16px',\n            opacity: 0.3\n          },\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            fontWeight: '500',\n            marginBottom: '8px'\n          },\n          children: \"Start a health conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#94a3b8'\n          },\n          children: \"Ask any health question to begin learning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-id\": message.id,\n        className: \"chat-message\",\n        ref: observe,\n        style: {\n          flex: '0 0 auto',\n          // Don't shrink or stretch\n          overflow: 'visible',\n          // Important: no nested scrollbars\n          maxHeight: 'none',\n          // Remove any fixed max-height\n          display: 'flex',\n          flexDirection: message.type === 'user' ? 'row-reverse' : 'row',\n          gap: '10px',\n          padding: '10px 0',\n          alignItems: 'flex-start',\n          contain: 'content' // Micro-optimization\n        },\n        children: [message.type === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '28px',\n            height: '28px',\n            borderRadius: '50%',\n            backgroundColor: '#10b981',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: 'white',\n            fontSize: '12px',\n            fontWeight: 'bold',\n            flexShrink: 0\n          },\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/wihyfavicon.png\",\n          alt: \"WiHy\",\n          style: {\n            width: '28px',\n            height: '28px',\n            borderRadius: '50%',\n            border: '1px solid #e5e7eb',\n            backgroundColor: 'white',\n            padding: '2px',\n            flexShrink: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: '75%',\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bubble\",\n            style: {\n              backgroundColor: message.type === 'user' ? '#10b981' : '#f3f4f6',\n              color: message.type === 'user' ? 'white' : '#1f2937',\n              padding: '12px 16px',\n              borderRadius: message.type === 'user' ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\n              fontSize: '14px',\n              lineHeight: '1.4',\n              overflow: 'visible',\n              // Clean pattern: no bubble scrolling\n              whiteSpace: 'pre-wrap',\n              overflowWrap: 'anywhere' // Handle super-long tokens/URLs\n            },\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '11px',\n              color: '#9ca3af',\n              textAlign: message.type === 'user' ? 'right' : 'left',\n              paddingLeft: message.type === 'user' ? '0' : '16px',\n              paddingRight: message.type === 'user' ? '16px' : '0'\n            },\n            children: [formatTime(message.timestamp), message.context && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '8px',\n                fontStyle: 'italic'\n              },\n              children: [\"\\u2022 viewing \", message.context]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/wihyfavicon.png\",\n          alt: \"WiHy\",\n          style: {\n            width: '28px',\n            height: '28px',\n            borderRadius: '50%',\n            border: '1px solid #e5e7eb',\n            backgroundColor: 'white',\n            padding: '2px',\n            flexShrink: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f3f4f6',\n            padding: '12px 16px',\n            borderRadius: '18px 18px 18px 4px',\n            display: 'flex',\n            gap: '4px',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '6px',\n              height: '6px',\n              borderRadius: '50%',\n              backgroundColor: '#9ca3af',\n              animation: 'typing 1.5s ease-in-out infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '6px',\n              height: '6px',\n              borderRadius: '50%',\n              backgroundColor: '#9ca3af',\n              animation: 'typing 1.5s ease-in-out infinite 0.2s'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '6px',\n              height: '6px',\n              borderRadius: '50%',\n              backgroundColor: '#9ca3af',\n              animation: 'typing 1.5s ease-in-out infinite 0.4s'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        searchQuery: inputMessage,\n        onSearchSubmit: query => {\n          setInputMessage('');\n          handleSendMessage(query);\n        },\n        showSearchInput: true,\n        variant: \"results\",\n        showLogin: false,\n        className: \"chat-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes typing {\n          0%, 60%, 100% {\n            transform: translateY(0);\n            opacity: 0.4;\n          }\n          30% {\n            transform: translateY(-10px);\n            opacity: 1;\n          }\n        }\n\n        /* The ONLY scroller */\n        .chat-thread {\n          height: calc(100vh - 240px);    /* adjust for your header/input */\n          overflow-y: auto;\n          overscroll-behavior: contain;\n        }\n\n        /* Each message keeps its size and never creates its own scrollbar */\n        .chat-message {\n          flex: 0 0 auto;                 /* don't shrink or stretch */\n          overflow: visible;              /* prevent inner scrollbars */\n          max-height: none;\n          padding: 10px 0;\n        }\n\n        /* Long text wraps (no overflow) */\n        .chat-message .bubble {\n          white-space: pre-wrap;\n          overflow-wrap: anywhere;\n        }\n\n        /* Kill any legacy scrollbars on messages */\n        .chat-message::-webkit-scrollbar { \n          display: none; \n        }\n        \n        .chat-message {\n          scrollbar-width: none;\n          -ms-overflow-style: none;\n        }\n\n        /* Chat-specific input area styling */\n        .chat-input-area {\n          padding: 16px;\n          border-top: 1px solid #ffffff;\n          background-color: #ffffff; /* Pure white background */\n        }\n\n        /* Wrapper for input and button positioning */\n        .chat-input-wrapper {\n          display: block; /* Simple block layout */\n        }\n\n        /* Chat input container - REMOVE ALL OVERRIDES to let external CSS work */\n        .chat-input-container {\n          /* Let search-components.css handle everything */\n        }\n\n        /* Chat input overrides */\n        .chat-input-container .search-input {\n          resize: none;\n          min-height: 20px;\n          max-height: 80px;\n          padding-right: 16px;\n          background-color: #ffffff !important; /* Ensure pure white background */\n        }\n\n        /* Send button styling - now positioned outside animated container */\n        .send-button {\n          position: relative;\n          right: auto;\n          top: auto;\n          transform: none;\n          color: white;\n          border: none;\n          border-radius: 12px;\n          padding: 12px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: background-color 0.2s ease;\n          flex-shrink: 0;\n          min-width: 44px;\n          height: 44px;\n        }\n\n        .send-button.active {\n          background-color: #1a73e8;\n          cursor: pointer;\n        }\n\n        .send-button.disabled {\n          background-color: #d1d5db;\n          cursor: not-allowed;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWidget, \"hlMb+Oq9nMyCexWOKDaAYZEDop4=\");\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","useRef","useEffect","wihyAPI","Header","jsxDEV","_jsxDEV","ChatWidget","isOpen","onClose","searchQuery","searchResponse","currentContext","inline","_s","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","hasMore","setHasMore","loadingMore","setLoadingMore","chatThreadRef","inputRef","heightMap","ro","current","ResizeObserver","entries","e","id","target","dataset","contentRect","height","_ro$current","disconnect","observe","el","scrollToBottomIfPinned","nearBottom","scrollHeight","scrollTop","clientHeight","appendMessage","newMessage","prev","requestAnimationFrame","onScroll","loadOlder","_children$find","_anchor$getBoundingCl","length","children","Array","from","anchor","find","c","getBoundingClientRect","top","anchorId","anchorTopBefore","forEach","h","style","_newAnchor$getBoundin","newAnchor","anchorTopAfter","delta","conversationalSummary","includes","lines","split","filter","line","trim","keyPoints","slice","map","replace","join","initialMessages","Date","now","toString","type","message","timestamp","setTimeout","_inputRef$current","focus","handleSendMessage","messageText","messageToSend","userMessage","context","conversationHistory","msg","contextualQuery","response","askAnything","query","user_context","conversation_mode","response_style","conversation_context","current_context","is_followup","aiResponse","data","healthResp","substring","formatWihyResponse","aiMessage","error","console","errorMessage","handleKeyPress","key","shiftKey","preventDefault","formatTime","date","toLocaleTimeString","hour","minute","display","flexDirection","backgroundColor","fontFamily","alignItems","justifyContent","padding","borderBottom","margin","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","borderRadius","ref","className","overflowY","overscrollBehavior","scrollBehavior","gap","textAlign","marginBottom","opacity","flex","overflow","maxHeight","contain","width","flexShrink","src","alt","border","maxWidth","lineHeight","whiteSpace","overflowWrap","paddingLeft","paddingRight","marginLeft","fontStyle","animation","onSearchSubmit","showSearchInput","variant","showLogin","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/ChatWidget.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { wihyAPI } from '../services/wihyAPI';\r\nimport Header from './shared/components/Header';\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  type: 'user' | 'assistant';\r\n  message: string;\r\n  timestamp: Date;\r\n  context?: string;\r\n}\r\n\r\ninterface ChatWidgetProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  searchQuery?: string;\r\n  searchResponse?: string;\r\n  currentContext?: string; // Current dashboard section being viewed\r\n  inline?: boolean; // Whether to render inline or as fixed overlay\r\n}\r\n\r\nconst ChatWidget: React.FC<ChatWidgetProps> = ({ isOpen, onClose, searchQuery, searchResponse, currentContext, inline = false }) => {\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const chatThreadRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLTextAreaElement>(null);\r\n  \r\n  // Cache measured heights so items retain size during prepend\r\n  const heightMap = useRef<Record<string, number>>({});\r\n  const ro = useRef<ResizeObserver>();\r\n\r\n  useEffect(() => {\r\n    ro.current = new ResizeObserver(entries => {\r\n      for (const e of entries) {\r\n        const id = (e.target as HTMLElement).dataset.id!;\r\n        heightMap.current[id] = e.contentRect.height;\r\n      }\r\n    });\r\n    return () => ro.current?.disconnect();\r\n  }, []);\r\n\r\n  // Attach observer to each rendered message\r\n  const observe = (el: HTMLDivElement | null) => {\r\n    if (!el || !ro.current) return;\r\n    ro.current.observe(el);\r\n  };\r\n\r\n  // Keep auto-scrolling to bottom ONLY if user is near bottom\r\n  const scrollToBottomIfPinned = () => {\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n    const nearBottom = el.scrollHeight - el.scrollTop - el.clientHeight < 120;\r\n    if (nearBottom) el.scrollTop = el.scrollHeight;\r\n  };\r\n\r\n  // Call this when appending a new message\r\n  const appendMessage = (newMessage: ChatMessage) => {\r\n    setMessages(prev => [...prev, newMessage]);\r\n    requestAnimationFrame(scrollToBottomIfPinned);\r\n  };\r\n\r\n  // Scroll handler for loading older messages\r\n  const onScroll = () => {\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n    if (el.scrollTop < 120) loadOlder();\r\n  };\r\n\r\n  // Load older messages with viewport anchoring\r\n  const loadOlder = async () => {\r\n    if (loadingMore || !hasMore || messages.length === 0) return;\r\n    const el = chatThreadRef.current;\r\n    if (!el) return;\r\n\r\n    setLoadingMore(true);\r\n\r\n    // 1) Pick an anchor element (first fully visible)\r\n    const children = Array.from(el.children) as HTMLElement[];\r\n    const anchor =\r\n      children.find(c => c.getBoundingClientRect().top >= el.getBoundingClientRect().top) ??\r\n      (children[0] as HTMLElement);\r\n\r\n    const anchorId = anchor?.dataset.id;\r\n    const anchorTopBefore = anchor?.getBoundingClientRect().top ?? 0;\r\n\r\n    // 2) Freeze current heights so items \"retain their size\"\r\n    children.forEach(c => {\r\n      const id = (c as HTMLElement).dataset.id!;\r\n      const h = heightMap.current[id] || c.getBoundingClientRect().height;\r\n      (c as HTMLElement).style.height = `${h}px`;\r\n    });\r\n\r\n    // 3) Simulate prepending older items (for now, just mark no more)\r\n    // In a real app, you'd fetch older messages here\r\n    setHasMore(false);\r\n\r\n    // 4) After DOM updates, restore the anchor position\r\n    requestAnimationFrame(() => {\r\n      const newAnchor = anchorId\r\n        ? (Array.from(el.children).find(c => (c as HTMLElement).dataset.id === anchorId) as HTMLElement)\r\n        : null;\r\n\r\n      const anchorTopAfter = newAnchor?.getBoundingClientRect().top ?? 0;\r\n      const delta = anchorTopAfter - anchorTopBefore;\r\n      el.scrollTop += delta; // shift viewport up by the added height\r\n\r\n      // 5) Unfreeze heights (let new messages measure/observe)\r\n      Array.from(el.children).forEach(c => ((c as HTMLElement).style.height = \"\"));\r\n      setLoadingMore(false);\r\n    });\r\n  };\r\n\r\n  // Jump to bottom on first load\r\n  useEffect(() => {\r\n    if (messages.length > 0) {\r\n      requestAnimationFrame(() => {\r\n        const el = chatThreadRef.current;\r\n        if (el) el.scrollTop = el.scrollHeight;\r\n      });\r\n    }\r\n  }, [messages.length]);\r\n\r\n  // Initialize conversation with search results if provided\r\n  useEffect(() => {\r\n    if (searchQuery && searchResponse && messages.length === 0) {\r\n      // Create a conversational summary instead of full response\r\n      let conversationalSummary = searchResponse;\r\n      \r\n      // Extract key points and make it conversational\r\n      if (searchResponse.includes('WIHY Health')) {\r\n        const lines = searchResponse.split('\\n').filter(line => line.trim());\r\n        const keyPoints = lines\r\n          .filter(line => line.includes('â€¢') || line.includes('-'))\r\n          .slice(0, 2)\r\n          .map(line => line.replace(/[â€¢-]/g, '').trim())\r\n          .join('. ');\r\n          \r\n        conversationalSummary = keyPoints || 'I found some helpful information for you!';\r\n        conversationalSummary += ' What specific aspect would you like to explore further?';\r\n      }\r\n      \r\n      const initialMessages: ChatMessage[] = [\r\n        {\r\n          id: Date.now().toString() + '-user',\r\n          type: 'user',\r\n          message: searchQuery,\r\n          timestamp: new Date()\r\n        },\r\n        {\r\n          id: Date.now().toString() + '-assistant',\r\n          type: 'assistant',\r\n          message: conversationalSummary,\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n      setMessages(initialMessages);\r\n    }\r\n  }, [searchQuery, searchResponse, messages.length]);\r\n\r\n  // Focus input when chat opens\r\n  useEffect(() => {\r\n    if (isOpen && inputRef.current) {\r\n      setTimeout(() => inputRef.current?.focus(), 100);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSendMessage = async (messageText?: string) => {\r\n    const messageToSend = messageText || inputMessage;\r\n    if (!messageToSend.trim() || isLoading) return;\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString() + '-user',\r\n      type: 'user',\r\n      message: messageToSend.trim(),\r\n      timestamp: new Date(),\r\n      context: currentContext\r\n    };\r\n\r\n    appendMessage(userMessage);\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Build conversation context from previous messages\r\n      const conversationHistory = messages.slice(-4) // Last 4 messages for context\r\n        .map(msg => `${msg.type === 'user' ? 'User' : 'Assistant'}: ${msg.message}`)\r\n        .join('\\n');\r\n      \r\n      // Create a focused query for conversational responses\r\n      const contextualQuery = `Please provide a brief, conversational response (2-3 sentences max) to: ${userMessage.message}${conversationHistory ? `\\n\\nContext from our conversation: ${conversationHistory}` : ''}`;\r\n\r\n      const response = await wihyAPI.askAnything({\r\n        query: contextualQuery,\r\n        user_context: {\r\n          conversation_mode: true,\r\n          response_style: 'concise',\r\n          conversation_context: conversationHistory,\r\n          current_context: currentContext,\r\n          is_followup: messages.length > 0\r\n        }\r\n      });\r\n\r\n      // Extract just the main response without full formatting\r\n      let aiResponse = '';\r\n      if ('success' in response && 'data' in response && response.data && 'response' in response.data) {\r\n        const healthResp = response as any;\r\n        aiResponse = healthResp.data.response;\r\n        \r\n        // Clean up the response to be more conversational\r\n        aiResponse = aiResponse\r\n          .replace(/ðŸ¥—.*?\\*\\*/g, '') // Remove emoji headers\r\n          .replace(/\\*\\*.*?\\*\\*/g, '') // Remove bold formatting\r\n          .replace(/ðŸ“‹.*?:/g, '') // Remove section headers\r\n          .replace(/â€¢/g, '-') // Replace bullets\r\n          .split('\\n')\r\n          .filter(line => line.trim() && !line.includes('Biblical') && !line.includes('Corinthians'))\r\n          .slice(0, 3) // Take first 3 meaningful lines\r\n          .join(' ')\r\n          .trim();\r\n          \r\n        // If response is too long, truncate and add follow-up prompt\r\n        if (aiResponse.length > 200) {\r\n          aiResponse = aiResponse.substring(0, 200).trim() + '... What would you like to know more about?';\r\n        }\r\n      } else {\r\n        aiResponse = wihyAPI.formatWihyResponse(response);\r\n      }\r\n      \r\n      const aiMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-assistant',\r\n        type: 'assistant',\r\n        message: aiResponse,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      appendMessage(aiMessage);\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      const errorMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-assistant',\r\n        type: 'assistant',\r\n        message: \"I'm having trouble connecting right now. Please try again in a moment.\",\r\n        timestamp: new Date()\r\n      };\r\n      appendMessage(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n  \r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const formatTime = (date: Date) => {\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%',\r\n      backgroundColor: 'white',\r\n      fontFamily: 'system-ui, -apple-system, sans-serif'\r\n    }}>\r\n      {/* Header - now inside the component */}\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '20px 16px 16px 16px',\r\n        borderBottom: '1px solid #f3f4f6'\r\n      }}>\r\n        <h2 style={{\r\n          margin: 0,\r\n          fontSize: '20px',\r\n          fontWeight: '600',\r\n          color: '#1f2937'\r\n        }}>\r\n          WiHy Health Response\r\n        </h2>\r\n        <span style={{\r\n          fontSize: '12px',\r\n          color: '#6b7280',\r\n          backgroundColor: '#f3f4f6',\r\n          padding: '4px 8px',\r\n          borderRadius: '4px'\r\n        }}>\r\n          AI-Powered\r\n        </span>\r\n      </div>\r\n\r\n      {/* Messages - Clean scroll pattern with viewport anchoring */}\r\n      <div \r\n        ref={chatThreadRef}\r\n        className=\"chat-thread\"\r\n        onScroll={onScroll}\r\n        style={{\r\n          height: 'calc(100vh - 240px)', // Fixed height based on viewport\r\n          overflowY: 'auto',\r\n          overscrollBehavior: 'contain', // Prevent body scroll chaining\r\n          scrollBehavior: 'smooth',      // Nice bottom scroll on new msg\r\n          padding: '12px 16px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: '10px'\r\n        }}>\r\n        \r\n        {/* Loading indicator for older messages */}\r\n        {loadingMore && hasMore && (\r\n          <div style={{ textAlign: \"center\", padding: \"6px 0\" }}>Loadingâ€¦</div>\r\n        )}\r\n        \r\n        {messages.length === 0 ? (\r\n          <div style={{\r\n            textAlign: 'center',\r\n            padding: '40px 20px',\r\n            color: '#64748b'\r\n          }}>\r\n            <div style={{\r\n              fontSize: '48px',\r\n              marginBottom: '16px',\r\n              opacity: 0.3\r\n            }}>\r\n              ðŸ’¬\r\n            </div>\r\n            <div style={{\r\n              fontSize: '14px',\r\n              fontWeight: '500',\r\n              marginBottom: '8px'\r\n            }}>\r\n              Start a health conversation\r\n            </div>\r\n            <div style={{\r\n              fontSize: '12px',\r\n              color: '#94a3b8'\r\n            }}>\r\n              Ask any health question to begin learning\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              data-id={message.id}\r\n              className=\"chat-message\"\r\n              ref={observe}\r\n              style={{\r\n                flex: '0 0 auto',         // Don't shrink or stretch\r\n                overflow: 'visible',      // Important: no nested scrollbars\r\n                maxHeight: 'none',        // Remove any fixed max-height\r\n                display: 'flex',\r\n                flexDirection: message.type === 'user' ? 'row-reverse' : 'row',\r\n                gap: '10px',\r\n                padding: '10px 0',\r\n                alignItems: 'flex-start',\r\n                contain: 'content'        // Micro-optimization\r\n              }}\r\n            >\r\n              {message.type === 'user' ? (\r\n                <div style={{\r\n                  width: '28px',\r\n                  height: '28px',\r\n                  borderRadius: '50%',\r\n                  backgroundColor: '#10b981',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  color: 'white',\r\n                  fontSize: '12px',\r\n                  fontWeight: 'bold',\r\n                  flexShrink: 0\r\n                }}>\r\n                  U\r\n                </div>\r\n              ) : (\r\n                <img \r\n                  src=\"/assets/wihyfavicon.png\" \r\n                  alt=\"WiHy\"\r\n                  style={{\r\n                    width: '28px',\r\n                    height: '28px',\r\n                    borderRadius: '50%',\r\n                    border: '1px solid #e5e7eb',\r\n                    backgroundColor: 'white',\r\n                    padding: '2px',\r\n                    flexShrink: 0\r\n                  }}\r\n                />\r\n              )}\r\n              <div style={{\r\n                maxWidth: '75%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '4px'\r\n              }}>\r\n                <div \r\n                  className=\"bubble\"\r\n                  style={{\r\n                    backgroundColor: message.type === 'user' ? '#10b981' : '#f3f4f6',\r\n                    color: message.type === 'user' ? 'white' : '#1f2937',\r\n                    padding: '12px 16px',\r\n                    borderRadius: message.type === 'user' ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\r\n                    fontSize: '14px',\r\n                    lineHeight: '1.4',\r\n                    overflow: 'visible',        // Clean pattern: no bubble scrolling\r\n                    whiteSpace: 'pre-wrap',\r\n                    overflowWrap: 'anywhere'    // Handle super-long tokens/URLs\r\n                  }}>\r\n                  {message.message}\r\n                </div>\r\n                <div style={{\r\n                  fontSize: '11px',\r\n                  color: '#9ca3af',\r\n                  textAlign: message.type === 'user' ? 'right' : 'left',\r\n                  paddingLeft: message.type === 'user' ? '0' : '16px',\r\n                  paddingRight: message.type === 'user' ? '16px' : '0'\r\n                }}>\r\n                  {formatTime(message.timestamp)}\r\n                  {message.context && (\r\n                    <span style={{ marginLeft: '8px', fontStyle: 'italic' }}>\r\n                      â€¢ viewing {message.context}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        \r\n        {isLoading && (\r\n          <div style={{\r\n            display: 'flex',\r\n            gap: '8px',\r\n            alignItems: 'flex-start'\r\n          }}>\r\n            <img \r\n              src=\"/assets/wihyfavicon.png\" \r\n              alt=\"WiHy\"\r\n              style={{\r\n                width: '28px',\r\n                height: '28px',\r\n                borderRadius: '50%',\r\n                border: '1px solid #e5e7eb',\r\n                backgroundColor: 'white',\r\n                padding: '2px',\r\n                flexShrink: 0\r\n              }}\r\n            />\r\n            <div style={{\r\n              backgroundColor: '#f3f4f6',\r\n              padding: '12px 16px',\r\n              borderRadius: '18px 18px 18px 4px',\r\n              display: 'flex',\r\n              gap: '4px',\r\n              alignItems: 'center'\r\n            }}>\r\n              <div style={{\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#9ca3af',\r\n                animation: 'typing 1.5s ease-in-out infinite'\r\n              }} />\r\n              <div style={{\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#9ca3af',\r\n                animation: 'typing 1.5s ease-in-out infinite 0.2s'\r\n              }} />\r\n              <div style={{\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#9ca3af',\r\n                animation: 'typing 1.5s ease-in-out infinite 0.4s'\r\n              }} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input - Use reusable Header component */}\r\n      <div className=\"chat-input-area\">\r\n        <Header \r\n          searchQuery={inputMessage}\r\n          onSearchSubmit={(query) => {\r\n            setInputMessage('');\r\n            handleSendMessage(query);\r\n          }}\r\n          showSearchInput={true}\r\n          variant=\"results\"\r\n          showLogin={false}\r\n          className=\"chat-header\"\r\n        />\r\n      </div>\r\n      \r\n      <style>{`\r\n        @keyframes typing {\r\n          0%, 60%, 100% {\r\n            transform: translateY(0);\r\n            opacity: 0.4;\r\n          }\r\n          30% {\r\n            transform: translateY(-10px);\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        /* The ONLY scroller */\r\n        .chat-thread {\r\n          height: calc(100vh - 240px);    /* adjust for your header/input */\r\n          overflow-y: auto;\r\n          overscroll-behavior: contain;\r\n        }\r\n\r\n        /* Each message keeps its size and never creates its own scrollbar */\r\n        .chat-message {\r\n          flex: 0 0 auto;                 /* don't shrink or stretch */\r\n          overflow: visible;              /* prevent inner scrollbars */\r\n          max-height: none;\r\n          padding: 10px 0;\r\n        }\r\n\r\n        /* Long text wraps (no overflow) */\r\n        .chat-message .bubble {\r\n          white-space: pre-wrap;\r\n          overflow-wrap: anywhere;\r\n        }\r\n\r\n        /* Kill any legacy scrollbars on messages */\r\n        .chat-message::-webkit-scrollbar { \r\n          display: none; \r\n        }\r\n        \r\n        .chat-message {\r\n          scrollbar-width: none;\r\n          -ms-overflow-style: none;\r\n        }\r\n\r\n        /* Chat-specific input area styling */\r\n        .chat-input-area {\r\n          padding: 16px;\r\n          border-top: 1px solid #ffffff;\r\n          background-color: #ffffff; /* Pure white background */\r\n        }\r\n\r\n        /* Wrapper for input and button positioning */\r\n        .chat-input-wrapper {\r\n          display: block; /* Simple block layout */\r\n        }\r\n\r\n        /* Chat input container - REMOVE ALL OVERRIDES to let external CSS work */\r\n        .chat-input-container {\r\n          /* Let search-components.css handle everything */\r\n        }\r\n\r\n        /* Chat input overrides */\r\n        .chat-input-container .search-input {\r\n          resize: none;\r\n          min-height: 20px;\r\n          max-height: 80px;\r\n          padding-right: 16px;\r\n          background-color: #ffffff !important; /* Ensure pure white background */\r\n        }\r\n\r\n        /* Send button styling - now positioned outside animated container */\r\n        .send-button {\r\n          position: relative;\r\n          right: auto;\r\n          top: auto;\r\n          transform: none;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 12px;\r\n          padding: 12px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          transition: background-color 0.2s ease;\r\n          flex-shrink: 0;\r\n          min-width: 44px;\r\n          height: 44px;\r\n        }\r\n\r\n        .send-button.active {\r\n          background-color: #1a73e8;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .send-button.disabled {\r\n          background-color: #d1d5db;\r\n          cursor: not-allowed;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWidget;"],"mappings":"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AC1B,CAAE;QACFsE,eAAe,EAAE,IAAK;QACtBC,OAAO,EAAC,SAAS;QACjBC,SAAS,EAAE,KAAM;QACjB7B,SAAS,EAAC;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3I,OAAA;MAAAkD,QAAA,EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAsF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACnI,EAAA,CAhlBIP,UAAqC;AAAA2K,EAAA,GAArC3K,UAAqC;AAklB3C,eAAeA,UAAU;AAAC,IAAA2K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}