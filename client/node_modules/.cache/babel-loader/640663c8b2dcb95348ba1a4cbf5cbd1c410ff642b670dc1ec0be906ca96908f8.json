{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { searchCache } from './services/searchCache';\nimport { foodAnalysisService } from './components/foodAnalysisService';\nimport ImageUploadModal from './components/ImageUploadModal';\nimport LoginButton from './components/LoginButton/LoginButton';\nimport ResultQualityPie from './components/ResultQualityPie';\nimport NutritionChart from './components/NutritionChart';\nimport NovaChart from './components/NovaChart';\nimport './VHealthSearch.css';\nimport Spinner from './components/Spinner';\n\n/* Define default topics and resources */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRelatedTopics = [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"];\nconst defaultResources = [{\n  text: \"🩺 mHealth - Mobile Health Solutions\",\n  url: \"https://mhealth.com\"\n}, {\n  text: \"🏥 CDC - Health Guidelines\",\n  url: \"https://cdc.gov/healthliving\"\n}, {\n  text: \"🌍 WHO - Global Health Information\",\n  url: \"https://who.int/health-topics\"\n}];\n\n// Define the dummy data for \"test\" queries\nconst dummyTestData = {\n  query: \"test\",\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\n\n**Recommendations:**\n• Consult healthcare professionals for personalized medical advice\n• Verify information with your doctor or medical provider\n• Follow evidence-based medical guidelines\n• Seek regular medical check-ups and screenings\n\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\n\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\n  relatedTopics: [\"Nutrition and Diet Guidelines\", \"Exercise and Physical Activity\", \"Mental Health and Wellness\", \"Preventive Care and Screenings\", \"Chronic Disease Management\", \"Healthy Lifestyle Choices\"],\n  resources: [{\n    text: \"🩺 mHealth - Mobile Health Solutions\",\n    url: \"#\"\n  }, {\n    text: \"🏥 CDC - Health Guidelines\",\n    url: \"#\"\n  }, {\n    text: \"🌍 WHO - Global Health Information\",\n    url: \"#\"\n  }]\n};\n\n// --- Add above SearchResults component (same file) ---------------------------\n\n/** Lightweight domain trust map (adjust anytime). */\nconst TRUSTED_DOMAINS = {\n  'nih.gov': 1.0,\n  'ncbi.nlm.nih.gov': 1.0,\n  // PubMed\n  'who.int': 0.95,\n  'cdc.gov': 0.95,\n  'fda.gov': 0.9,\n  'usda.gov': 0.85,\n  'nature.com': 0.85,\n  'science.org': 0.85,\n  'thelancet.com': 0.85,\n  'bmj.com': 0.8,\n  'jamanetwork.com': 0.9,\n  'nejm.org': 0.9,\n  'mayoclinic.org': 0.8,\n  'harvard.edu': 0.8,\n  'ox.ac.uk': 0.8,\n  'stanford.edu': 0.8,\n  'clevelandclinic.org': 0.75,\n  'uptodate.com': 0.8\n};\n\n/** Extract all URLs from text. */\nconst extractUrls = text => {\n  const urlRegex = /(https?:\\/\\/[^\\s)]+)(?=\\)|\\s|$)/g;\n  return [...text.matchAll(urlRegex)].map(m => m[1]);\n};\n\n/** Get eTLD+1 (very rough) for trust mapping. */\nconst getDomainKey = url => {\n  try {\n    const u = new URL(url);\n    const parts = u.hostname.split('.').slice(-2); // naive eTLD+1\n    return parts.join('.');\n  } catch {\n    return null;\n  }\n};\n\n/** Count presence of evidence-y phrases. */\nconst evidenceSignals = lower => {\n  const positives = ['systematic review', 'meta-analysis', 'randomized', 'randomised', 'controlled trial', 'cohort study', 'case-control', 'guideline', 'consensus statement', 'grade recommendations', 'confidence interval', 'relative risk', 'odds ratio', 'hazard ratio', 'pmid', 'doi', 'pubmed'];\n  const negatives = ['miracle', 'cure-all', '100% guaranteed', 'secret', 'detox scam', 'instantly', 'no evidence', 'not supported', 'debunked'];\n  const pos = positives.reduce((n, p) => n + (lower.includes(p) ? 1 : 0), 0);\n  const neg = negatives.reduce((n, p) => n + (lower.includes(p) ? 1 : 0), 0);\n  return {\n    pos,\n    neg\n  };\n};\n\n/** Numeric + unit density (specificity proxy). */\nconst numericSpecificity = lower => {\n  const unitRegex = /\\b\\d+(\\.\\d+)?\\s?(mg|g|mcg|iu|kcal|calories|%)\\b/g;\n  const nUnits = (lower.match(unitRegex) || []).length;\n  const nPerc = (lower.match(/\\b\\d+(\\.\\d+)?%/g) || []).length;\n  return nUnits + nPerc;\n};\n\n/** Simple recency: look for a 4-digit year; decay older items gently. */\nconst recencyBoost = lower => {\n  const yearMatches = lower.match(/\\b(20\\d{2}|19\\d{2})\\b/g) || [];\n  if (yearMatches.length === 0) return 0;\n  const years = yearMatches.map(y => parseInt(y, 10));\n  const mostRecent = Math.max(...years);\n  const NOW = new Date().getFullYear();\n  const age = Math.max(0, NOW - mostRecent); // years\n  if (age <= 2) return 0.12;\n  if (age <= 5) return 0.06;\n  if (age <= 10) return 0.02;\n  return 0;\n};\n\n/** Penalize hollow disclaimers if there is no substance. */\nconst hollowDisclaimerPenalty = lower => {\n  const hasDisclaimer = lower.includes('consult') && (lower.includes('doctor') || lower.includes('healthcare'));\n  const hasSubstance = numericSpecificity(lower) > 0 || evidenceSignals(lower).pos > 0 || extractUrls(lower).length > 0;\n  return hasDisclaimer && !hasSubstance ? 0.08 : 0;\n};\n\n/** Soft-penalize contradiction language / uncertainty without references. */\nconst contradictionPenalty = lower => {\n  const flags = ['contradictory', 'unclear', 'no consensus', 'insufficient evidence'];\n  const mentions = flags.some(f => lower.includes(f));\n  const hasRefs = extractUrls(lower).length > 0 || evidenceSignals(lower).pos > 0;\n  return mentions && !hasRefs ? 0.06 : 0;\n};\n\n/** Aggregate domain trust from links + citations[] prop. */\nconst domainTrustScore = (text, citations) => {\n  const urls = new Set([...extractUrls(text), ...(citations || [])]);\n  if (urls.size === 0) return {\n    score: 0,\n    count: 0,\n    strongIds: 0\n  };\n  let acc = 0;\n  let strongIds = 0;\n  urls.forEach(u => {\n    if (/doi\\.org\\/10\\./i.test(u) || /pubmed\\.ncbi\\.nlm\\.nih\\.gov\\/\\d+/.test(u)) {\n      acc += 1.0;\n      strongIds += 1;\n      return;\n    }\n    const key = getDomainKey(u);\n    if (key && TRUSTED_DOMAINS[key] != null) acc += TRUSTED_DOMAINS[key];\n  });\n\n  // Normalize by link count but keep some benefit to more links\n  const base = acc / Math.max(1, urls.size);\n  const quantityBoost = Math.min(0.08, urls.size * 0.01);\n  return {\n    score: Math.min(1, base + quantityBoost),\n    count: urls.size,\n    strongIds\n  };\n};\n\n/** BS/hype penalty */\nconst hypePenalty = lower => {\n  const hype = ['revolutionary', 'breakthrough', 'unbelievable', 'shocking', 'click here'];\n  const hits = hype.reduce((n, h) => n + (lower.includes(h) ? 1 : 0), 0);\n  return Math.min(0.06, hits * 0.02);\n};\n\n// Update the SearchResultsProps interface to include the new properties\n\n// Add this function before the SearchResults component\nconst convertLinksToClickable = text => {\n  // Handle non-string inputs\n  if (!text) return null;\n\n  // If text is not a string, convert it to string first\n  if (typeof text !== 'string') {\n    // If it's an object, try to stringify it or extract meaningful content\n    if (typeof text === 'object') {\n      // If it has specific properties we can use\n      if (text.content) {\n        text = text.content;\n      } else if (text.message) {\n        text = text.message;\n      } else if (text.details) {\n        text = text.details;\n      } else {\n        // Last resort - stringify the object\n        text = JSON.stringify(text);\n      }\n    } else {\n      // Convert other types to string\n      text = String(text);\n    }\n  }\n\n  // Now we're sure text is a string, proceed with original logic\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  const parts = text.split(urlRegex);\n  return parts.map((part, index) => {\n    if (part.match(urlRegex)) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: part,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          color: '#2563eb',\n          textDecoration: 'underline'\n        },\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this);\n    }\n    return part;\n  });\n};\nconst SearchResults = ({\n  query,\n  results,\n  onBackToSearch,\n  onNewSearch,\n  isLoading = false,\n  dataSource,\n  citations\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentPhotoId, setCurrentPhotoId] = useState(null);\n  const [newQuery, setNewQuery] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [isUploadLoading, setUploadLoading] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Cache results when they change\n  useEffect(() => {\n    if (query && results && !isLoading) {\n      searchCache.setCachedResult(query, results, window.location.href);\n    }\n  }, [query, results, isLoading]);\n\n  // Add effect to manage body class when modal opens/closes\n  useEffect(() => {\n    if (isUploadModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [isUploadModalOpen]);\n\n  // Add cleanup effect\n  useEffect(() => {\n    return () => {\n      if (typeof image === 'string' && image.startsWith('blob:')) {\n        URL.revokeObjectURL(image);\n      }\n    };\n  }, [image]);\n\n  // Add this effect\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Handle new search submission\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const trimmedQuery = input.trim();\n\n    // Check for test query - return fake data without API call\n    if (trimmedQuery.toLowerCase() === 'test') {\n      console.log('Test query detected in SearchResults - avoiding API call');\n      onNewSearch(trimmedQuery); // This will trigger the test logic in parent\n      return;\n    }\n    onNewSearch(trimmedQuery);\n  };\n\n  // Handle voice input\n  const handleVoiceInput = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser');\n      return;\n    }\n    if (!recognitionRef.current) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setNewQuery(transcript); // Update the input field\n        setIsListening(false);\n      };\n      recognition.onerror = () => {\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n    }\n    if (!isListening) {\n      recognitionRef.current.start();\n    } else {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      setImage(file);\n      console.log(`Image uploaded: ${file.name}`);\n    }\n  };\n\n  // Clear all search items\n  const handleClearAll = () => {\n    setInput('');\n    setNewQuery(''); // <-- Add this line\n    setImage(null);\n    setCurrentPhotoId(null);\n    setIsListening(false);\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n\n    // Remove CSS class\n    const searchInput = document.querySelector('.results-search-input');\n    if (searchInput) {\n      searchInput.classList.remove('with-image');\n    }\n  };\n\n  // Handle Enter key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleTextSubmit(e);\n    }\n  };\n\n  // Photo modal handlers\n  const handleCameraClick = () => {\n    setIsUploadModalOpen(true);\n  };\n\n  // Fix the handleFileSelect function:\n  const handleFileSelect = async file => {\n    setUploadLoading(true);\n    setImage(URL.createObjectURL(file));\n    try {\n      // Use the existing foodAnalysisService instead of the undefined function\n      const result = await foodAnalysisService.analyzeFoodImage(file);\n      console.log(\"File analysis result:\", result);\n      let searchTerm = '';\n      if (typeof result === 'string') {\n        searchTerm = result;\n      } else if (result && typeof result === 'object') {\n        searchTerm = result.name || result.foodName || result.food || 'food item';\n      }\n      if (searchTerm) {\n        setNewQuery(searchTerm);\n        onNewSearch(searchTerm); // Only one call now\n      } else {\n        setNotification({\n          message: 'Could not identify food in image',\n          type: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error processing image:', error);\n      setNotification({\n        message: 'Error analyzing image. Please try again.',\n        type: 'error'\n      });\n    } finally {\n      setUploadLoading(false);\n      setIsUploadModalOpen(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const files = Array.from(e.dataTransfer.files);\n    const imageFile = files.find(file => file.type.startsWith('image/'));\n    if (imageFile) {\n      handleFileSelect(imageFile);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleNewSearchSubmit = e => {\n    e.preventDefault();\n    if (!newQuery.trim()) return;\n    onNewSearch(newQuery);\n    setNewQuery(''); // Reset after search\n  };\n\n  // Check if current query is \"test\" to show dummy data styles\n  const isTestQuery = query.toLowerCase().trim() === 'test';\n\n  // --- Replace your calculateQualityScore with this version --------------------\n\n  const calculateQualityScore = (query, results, dataSource, citations) => {\n    // Guard rails for \"bad query/answer\"\n    if (!results || /please (provide|clarify)/i.test(results)) return 0;\n    if (/not (a|the) recognized|could not find|no information found|doesn'?t seem/i.test(results)) return 0;\n\n    // Gibberish queries drop to zero (except common abbreviations)\n    if (/^[a-z0-9]{1,7}$/i.test(query) && !/^(hiv|flu|cold|covid|bp|bmi|gerd|ibs|std|uti)$/i.test(query)) {\n      return 0;\n    }\n    const lower = results.toLowerCase();\n\n    // Baseline by data source (can tune later)\n    let score = dataSource === 'vnutrition' ? 0.65 : dataSource === 'local' ? 0.50 : dataSource === 'openai' ? 0.40 : /* error */0.10;\n\n    // Evidence language\n    const ev = evidenceSignals(lower);\n    score += Math.min(0.18, ev.pos * 0.04);\n    score -= Math.min(0.10, ev.neg * 0.05);\n\n    // Numeric specificity\n    const spec = numericSpecificity(lower);\n    score += Math.min(0.16, spec * 0.02);\n\n    // Domains & identifiers\n    const trust = domainTrustScore(results, citations);\n    score += trust.score * 0.35; // heavy weight for good sources\n    if (trust.strongIds > 0) score += 0.06; // bonus for DOI/PMID/PubMed\n\n    // Recency\n    score += recencyBoost(lower);\n\n    // Structure helps (lists, headings, tables)\n    if (/\\n[-*]\\s|\\n\\d+\\.\\s|^\\s*#{1,6}\\s|\\*\\*.+\\*\\*/m.test(results)) score += 0.04;\n\n    // Penalize hollow disclaimers & contradictions without refs\n    score -= hollowDisclaimerPenalty(lower);\n    score -= contradictionPenalty(lower);\n\n    // Penalize hype\n    score -= hypePenalty(lower);\n\n    // Clamp\n    return Math.max(0, Math.min(0.98, score));\n  };\n\n  // Move extractNutritionData function inside the component but before it's used\n  const extractNutritionData = () => {\n    console.log('=== EXTRACTING NUTRITION DATA ===');\n    console.log('Query:', query);\n    console.log('DataSource:', dataSource);\n    console.log('Results type:', typeof results);\n    if (dataSource === 'vnutrition') {\n      try {\n        var _nutrition, _nutrition2, _nutrition3, _nutrition4, _nutrition5;\n        console.log('Processing vnutrition data source');\n        let nutrition;\n        if (typeof results === 'string') {\n          console.log('Parsing string results');\n          nutrition = JSON.parse(results);\n        } else {\n          console.log('Using object results directly');\n          nutrition = results;\n        }\n        console.log('=== RAW NUTRITION OBJECT ===');\n        console.log('Full object:', nutrition);\n        console.log('Object keys:', Object.keys(nutrition || {}));\n\n        // Log each field we're looking for\n        console.log('=== FIELD ANALYSIS ===');\n        console.log('nova_classification:', (_nutrition = nutrition) === null || _nutrition === void 0 ? void 0 : _nutrition.nova_classification);\n        console.log('nova_description:', (_nutrition2 = nutrition) === null || _nutrition2 === void 0 ? void 0 : _nutrition2.nova_description);\n        console.log('calories_per_serving:', (_nutrition3 = nutrition) === null || _nutrition3 === void 0 ? void 0 : _nutrition3.calories_per_serving);\n        console.log('protein_g:', (_nutrition4 = nutrition) === null || _nutrition4 === void 0 ? void 0 : _nutrition4.protein_g);\n        console.log('found status:', (_nutrition5 = nutrition) === null || _nutrition5 === void 0 ? void 0 : _nutrition5.found);\n        if (nutrition && nutrition.found !== false) {\n          const extractedData = {\n            calories: nutrition.calories_per_serving || 0,\n            protein: nutrition.protein_g || 0,\n            carbs: nutrition.carbs_g || 0,\n            fat: nutrition.fat_g || 0,\n            fiber: nutrition.fiber_g || 0,\n            sugar: nutrition.sugar_g || 0,\n            sodium: nutrition.sodium_mg || 0,\n            novaScore: nutrition.nova_classification || 1,\n            processedLevel: nutrition.nova_description || nutrition.processed_level || 'Unknown'\n          };\n          console.log('=== EXTRACTED DATA ===');\n          console.log('Final extracted data:', extractedData);\n          console.log('NOVA Score:', extractedData.novaScore);\n          return extractedData;\n        } else {\n          var _nutrition6;\n          console.log('No valid nutrition data - found:', (_nutrition6 = nutrition) === null || _nutrition6 === void 0 ? void 0 : _nutrition6.found);\n          return null;\n        }\n      } catch (error) {\n        console.error('Error parsing nutrition data:', error);\n        return null;\n      }\n    }\n    console.log('Not vnutrition source');\n    return null;\n  };\n  const resultQualityScore = calculateQualityScore(query, results, dataSource, citations);\n  const nutritionData = extractNutritionData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(LoginButton, {\n      position: \"top-right\",\n      className: \"results-login-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-search-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNewSearchSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Ask anything about health...\",\n            value: newQuery,\n            onChange: e => setNewQuery(e.target.value),\n            className: \"search-input results-search-input\",\n            \"data-query\": isTestQuery ? 'test' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"image-name\",\n            children: typeof image === 'object' && image !== null ? image.name : 'Uploaded image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setImage(null);\n              setCurrentPhotoId(null);\n              const searchInput = document.querySelector('.results-search-input');\n              if (searchInput) {\n                searchInput.classList.remove('with-image');\n              }\n            },\n            className: \"remove-image\",\n            \"aria-label\": \"Remove image\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-icons\",\n          children: [(newQuery || image) && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleClearAll,\n            className: \"icon-button clear-button\",\n            \"aria-label\": \"Clear all\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCameraClick,\n            className: \"icon-button\",\n            \"aria-label\": \"Upload image\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVoiceInput,\n            className: `icon-button ${isListening ? 'listening' : ''}`,\n            \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"results-header\",\n        children: [\"Search Results for: \\\"\", query, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health-info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-info-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"markdown-content\",\n              children: dataSource === 'vnutrition' ? (() => {\n                const nutritionData = extractNutritionData();\n                console.log('Nutrition data in JSX:', nutritionData);\n                if (nutritionData) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Nutrition Information\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 713,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Calories per serving: \", nutritionData.calories]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 715,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Protein: \", nutritionData.protein, \"g\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 716,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Carbs: \", nutritionData.carbs, \"g\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 717,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Fat: \", nutritionData.fat, \"g\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 718,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"NOVA Score: \", nutritionData.novaScore]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 719,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Processing Level: \", nutritionData.processedLevel]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 720,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 714,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 712,\n                    columnNumber: 25\n                  }, this);\n                } else {\n                  // Try to parse and display raw data for debugging\n                  let nutrition;\n                  try {\n                    nutrition = typeof results === 'string' ? JSON.parse(results) : results;\n                    console.log('Raw nutrition object for debugging:', nutrition);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        children: \"Raw Database Data (Debug)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 733,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                        style: {\n                          fontSize: '12px',\n                          background: '#f5f5f5',\n                          padding: '10px'\n                        },\n                        children: JSON.stringify(nutrition, null, 2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 734,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 27\n                    }, this);\n                  } catch {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Error parsing nutrition data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 740,\n                      columnNumber: 32\n                    }, this);\n                  }\n                }\n              })() : convertLinksToClickable(results)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-source-indicator\",\n            children: dataSource === 'openai' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Powered by AI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this) : dataSource === 'error' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-source\",\n              children: \"Error retrieving data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"From health database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-chart-container\",\n            style: {\n              marginBottom: \"2rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ResultQualityPie, {\n              qualityScore: resultQualityScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), nutritionData && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nutrition-chart-container\",\n              style: {\n                marginBottom: \"2rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  fontSize: \"1.1rem\",\n                  marginBottom: \"1rem\",\n                  color: \"#374151\"\n                },\n                children: \"Nutrition Breakdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NutritionChart, {\n                nutritionData: nutritionData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nova-chart-container\",\n              style: {\n                marginBottom: \"2rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  fontSize: \"1.1rem\",\n                  marginBottom: \"1rem\",\n                  color: \"#374151\"\n                },\n                children: \"Processing Level (NOVA Score)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NovaChart, {\n                novaScore: nutritionData.novaScore,\n                processedLevel: nutritionData.processedLevel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"related-topics-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Related Health Topics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"related-topics-list\",\n              children: isTestQuery ? dummyTestData.relatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onNewSearch(topic),\n                  className: \"topic-button\",\n                  children: topic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 21\n              }, this)) : defaultRelatedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onNewSearch(topic),\n                  className: \"topic-button\",\n                  children: topic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resources-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Useful Resources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"resources-list\",\n              children: isTestQuery ? dummyTestData.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: resource.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: resource.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 824,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 21\n              }, this)) : defaultResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: resource.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: resource.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 832,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          message: \"Searching for health information...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploadModal, {\n        isOpen: isUploadModalOpen,\n        onClose: () => setIsUploadModalOpen(false),\n        onFileSelect: handleFileSelect,\n        title: \"Upload Health Image\",\n        subtitle: \"Upload food, medical, or health-related images for AI analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 611,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"AanjdCSQDekMdS6+gTWhT5m9iRM=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","searchCache","foodAnalysisService","ImageUploadModal","LoginButton","ResultQualityPie","NutritionChart","NovaChart","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRelatedTopics","defaultResources","text","url","dummyTestData","query","healthInfo","relatedTopics","resources","TRUSTED_DOMAINS","extractUrls","urlRegex","matchAll","map","m","getDomainKey","u","URL","parts","hostname","split","slice","join","evidenceSignals","lower","positives","negatives","pos","reduce","n","p","includes","neg","numericSpecificity","unitRegex","nUnits","match","length","nPerc","recencyBoost","yearMatches","years","y","parseInt","mostRecent","Math","max","NOW","Date","getFullYear","age","hollowDisclaimerPenalty","hasDisclaimer","hasSubstance","contradictionPenalty","flags","mentions","some","f","hasRefs","domainTrustScore","citations","urls","Set","size","score","count","strongIds","acc","forEach","test","key","base","quantityBoost","min","hypePenalty","hype","hits","h","convertLinksToClickable","content","message","details","JSON","stringify","String","part","index","href","target","rel","style","color","textDecoration","children","fileName","_jsxFileName","lineNumber","columnNumber","SearchResults","results","onBackToSearch","onNewSearch","isLoading","dataSource","_s","input","setInput","image","setImage","currentPhotoId","setCurrentPhotoId","newQuery","setNewQuery","isListening","setIsListening","isUploadModalOpen","setIsUploadModalOpen","notification","setNotification","isUploadLoading","setUploadLoading","recognitionRef","setCachedResult","window","location","document","body","classList","add","remove","startsWith","revokeObjectURL","timer","setTimeout","clearTimeout","handleTextSubmit","e","preventDefault","trim","trimmedQuery","toLowerCase","console","log","handleVoiceInput","alert","current","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","transcript","onerror","onend","start","stop","handleImageUpload","_e$target$files","file","files","name","handleClearAll","searchInput","querySelector","handleKeyPress","handleCameraClick","handleFileSelect","createObjectURL","result","analyzeFoodImage","searchTerm","foodName","food","type","error","handleDrop","Array","from","dataTransfer","imageFile","find","handleDragOver","handleNewSearchSubmit","isTestQuery","calculateQualityScore","ev","spec","trust","extractNutritionData","_nutrition","_nutrition2","_nutrition3","_nutrition4","_nutrition5","nutrition","parse","Object","keys","nova_classification","nova_description","calories_per_serving","protein_g","found","extractedData","calories","protein","carbs","carbs_g","fat","fat_g","fiber","fiber_g","sugar","sugar_g","sodium","sodium_mg","novaScore","processedLevel","processed_level","_nutrition6","resultQualityScore","nutritionData","className","position","onSubmit","placeholder","value","onChange","onClick","viewBox","fill","d","fontSize","background","padding","marginBottom","qualityScore","topic","resource","isOpen","onClose","onFileSelect","title","subtitle","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/SearchResults.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { searchCache } from './services/searchCache';\r\nimport { photoStorageService } from './services/photoStorageService';\r\nimport { foodAnalysisService } from './components/foodAnalysisService';\r\nimport ImageUploadModal from './components/ImageUploadModal';\r\nimport LoginButton from './components/LoginButton/LoginButton';\r\nimport ResultQualityPie from './components/ResultQualityPie';\r\nimport NutritionChart from './components/NutritionChart';\r\nimport NovaChart from './components/NovaChart';\r\nimport './VHealthSearch.css';\r\nimport Spinner from './components/Spinner';\r\n\r\n/* Define default topics and resources */\r\nconst defaultRelatedTopics = [\r\n  \"Nutrition and Diet Guidelines\",\r\n  \"Exercise and Physical Activity\", \r\n  \"Mental Health and Wellness\",\r\n  \"Preventive Care and Screenings\",\r\n  \"Chronic Disease Management\",\r\n  \"Healthy Lifestyle Choices\"\r\n];\r\n\r\nconst defaultResources = [\r\n  { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"https://mhealth.com\" },\r\n  { text: \"🏥 CDC - Health Guidelines\", url: \"https://cdc.gov/healthliving\" },\r\n  { text: \"🌍 WHO - Global Health Information\", url: \"https://who.int/health-topics\" }\r\n];\r\n\r\n// Define the dummy data for \"test\" queries\r\nconst dummyTestData = {\r\n  query: \"test\",\r\n  healthInfo: `I'm sorry, but your query \"test\" is too vague. Could you please provide more details or specify the type of test you are interested in? It could be a medical test, a psychological test, or a physical fitness test, among others. Please provide more context so I can give you a more accurate and helpful response.\r\n\r\n**Recommendations:**\r\n• Consult healthcare professionals for personalized medical advice\r\n• Verify information with your doctor or medical provider\r\n• Follow evidence-based medical guidelines\r\n• Seek regular medical check-ups and screenings\r\n\r\n**Sources:** NIH Guidelines, CDC & WHO Publications, PubMed and peer-reviewed studies, Academic Medical Journals, Evidence-Based Clinical Reviews\r\n\r\nThis information is based on research from reputable medical institutions and peer-reviewed journals including NIH, CDC, WHO, JAMA, NEJM, and other academic publications. It is for educational purposes only and should not replace professional medical advice, diagnosis, or treatment. Always consult with qualified healthcare providers for medical concerns.`,\r\n  relatedTopics: [\r\n    \"Nutrition and Diet Guidelines\",\r\n    \"Exercise and Physical Activity\", \r\n    \"Mental Health and Wellness\",\r\n    \"Preventive Care and Screenings\",\r\n    \"Chronic Disease Management\",\r\n    \"Healthy Lifestyle Choices\"\r\n  ],\r\n  resources: [\r\n    { text: \"🩺 mHealth - Mobile Health Solutions\", url: \"#\" },\r\n    { text: \"🏥 CDC - Health Guidelines\", url: \"#\" },\r\n    { text: \"🌍 WHO - Global Health Information\", url: \"#\" }\r\n  ]\r\n};\r\n\r\n// --- Add above SearchResults component (same file) ---------------------------\r\n\r\n/** Lightweight domain trust map (adjust anytime). */\r\nconst TRUSTED_DOMAINS: Record<string, number> = {\r\n  'nih.gov': 1.0,\r\n  'ncbi.nlm.nih.gov': 1.0, // PubMed\r\n  'who.int': 0.95,\r\n  'cdc.gov': 0.95,\r\n  'fda.gov': 0.9,\r\n  'usda.gov': 0.85,\r\n  'nature.com': 0.85,\r\n  'science.org': 0.85,\r\n  'thelancet.com': 0.85,\r\n  'bmj.com': 0.8,\r\n  'jamanetwork.com': 0.9,\r\n  'nejm.org': 0.9,\r\n  'mayoclinic.org': 0.8,\r\n  'harvard.edu': 0.8,\r\n  'ox.ac.uk': 0.8,\r\n  'stanford.edu': 0.8,\r\n  'clevelandclinic.org': 0.75,\r\n  'uptodate.com': 0.8,\r\n};\r\n\r\n/** Extract all URLs from text. */\r\nconst extractUrls = (text: string): string[] => {\r\n  const urlRegex = /(https?:\\/\\/[^\\s)]+)(?=\\)|\\s|$)/g;\r\n  return [...text.matchAll(urlRegex)].map(m => m[1]);\r\n};\r\n\r\n/** Get eTLD+1 (very rough) for trust mapping. */\r\nconst getDomainKey = (url: string): string | null => {\r\n  try {\r\n    const u = new URL(url);\r\n    const parts = u.hostname.split('.').slice(-2); // naive eTLD+1\r\n    return parts.join('.');\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\n/** Count presence of evidence-y phrases. */\r\nconst evidenceSignals = (lower: string) => {\r\n  const positives = [\r\n    'systematic review',\r\n    'meta-analysis',\r\n    'randomized',\r\n    'randomised',\r\n    'controlled trial',\r\n    'cohort study',\r\n    'case-control',\r\n    'guideline',\r\n    'consensus statement',\r\n    'grade recommendations',\r\n    'confidence interval',\r\n    'relative risk',\r\n    'odds ratio',\r\n    'hazard ratio',\r\n    'pmid',\r\n    'doi',\r\n    'pubmed',\r\n  ];\r\n  const negatives = [\r\n    'miracle', 'cure-all', '100% guaranteed', 'secret', 'detox scam',\r\n    'instantly', 'no evidence', 'not supported', 'debunked',\r\n  ];\r\n  const pos = positives.reduce((n, p) => n + (lower.includes(p) ? 1 : 0), 0);\r\n  const neg = negatives.reduce((n, p) => n + (lower.includes(p) ? 1 : 0), 0);\r\n  return { pos, neg };\r\n};\r\n\r\n/** Numeric + unit density (specificity proxy). */\r\nconst numericSpecificity = (lower: string) => {\r\n  const unitRegex = /\\b\\d+(\\.\\d+)?\\s?(mg|g|mcg|iu|kcal|calories|%)\\b/g;\r\n  const nUnits = (lower.match(unitRegex) || []).length;\r\n  const nPerc  = (lower.match(/\\b\\d+(\\.\\d+)?%/g) || []).length;\r\n  return nUnits + nPerc;\r\n};\r\n\r\n/** Simple recency: look for a 4-digit year; decay older items gently. */\r\nconst recencyBoost = (lower: string) => {\r\n  const yearMatches = lower.match(/\\b(20\\d{2}|19\\d{2})\\b/g) || [];\r\n  if (yearMatches.length === 0) return 0;\r\n  const years = yearMatches.map(y => parseInt(y, 10));\r\n  const mostRecent = Math.max(...years);\r\n  const NOW = new Date().getFullYear();\r\n  const age = Math.max(0, NOW - mostRecent); // years\r\n  if (age <= 2) return 0.12;\r\n  if (age <= 5) return 0.06;\r\n  if (age <= 10) return 0.02;\r\n  return 0;\r\n};\r\n\r\n/** Penalize hollow disclaimers if there is no substance. */\r\nconst hollowDisclaimerPenalty = (lower: string) => {\r\n  const hasDisclaimer =\r\n    lower.includes('consult') && (lower.includes('doctor') || lower.includes('healthcare'));\r\n  const hasSubstance =\r\n    numericSpecificity(lower) > 0 ||\r\n    evidenceSignals(lower).pos > 0 ||\r\n    extractUrls(lower).length > 0;\r\n  return hasDisclaimer && !hasSubstance ? 0.08 : 0;\r\n};\r\n\r\n/** Soft-penalize contradiction language / uncertainty without references. */\r\nconst contradictionPenalty = (lower: string) => {\r\n  const flags = ['contradictory', 'unclear', 'no consensus', 'insufficient evidence'];\r\n  const mentions = flags.some(f => lower.includes(f));\r\n  const hasRefs = extractUrls(lower).length > 0 || evidenceSignals(lower).pos > 0;\r\n  return mentions && !hasRefs ? 0.06 : 0;\r\n};\r\n\r\n/** Aggregate domain trust from links + citations[] prop. */\r\nconst domainTrustScore = (text: string, citations?: string[]) => {\r\n  const urls = new Set<string>([\r\n    ...extractUrls(text),\r\n    ...(citations || []),\r\n  ]);\r\n  if (urls.size === 0) return { score: 0, count: 0, strongIds: 0 };\r\n\r\n  let acc = 0;\r\n  let strongIds = 0;\r\n  urls.forEach(u => {\r\n    if (/doi\\.org\\/10\\./i.test(u) || /pubmed\\.ncbi\\.nlm\\.nih\\.gov\\/\\d+/.test(u)) {\r\n      acc += 1.0;\r\n      strongIds += 1;\r\n      return;\r\n    }\r\n    const key = getDomainKey(u);\r\n    if (key && TRUSTED_DOMAINS[key] != null) acc += TRUSTED_DOMAINS[key];\r\n  });\r\n\r\n  // Normalize by link count but keep some benefit to more links\r\n  const base = acc / Math.max(1, urls.size);\r\n  const quantityBoost = Math.min(0.08, urls.size * 0.01);\r\n  return { score: Math.min(1, base + quantityBoost), count: urls.size, strongIds };\r\n};\r\n\r\n/** BS/hype penalty */\r\nconst hypePenalty = (lower: string) => {\r\n  const hype = ['revolutionary', 'breakthrough', 'unbelievable', 'shocking', 'click here'];\r\n  const hits = hype.reduce((n, h) => n + (lower.includes(h) ? 1 : 0), 0);\r\n  return Math.min(0.06, hits * 0.02);\r\n};\r\n\r\n// Update the SearchResultsProps interface to include the new properties\r\ninterface SearchResultsProps {\r\n  query: string;\r\n  results: string;\r\n  onBackToSearch: () => void;\r\n  onNewSearch: (query: string) => void;\r\n  isLoading: boolean;\r\n  dataSource: \"error\" | \"openai\" | \"local\" | \"vnutrition\";\r\n  citations?: string[];\r\n  recommendations?: string[];\r\n  disclaimer?: string;\r\n}\r\n\r\n// Add this function before the SearchResults component\r\nconst convertLinksToClickable = (text: any): React.ReactNode => {\r\n  // Handle non-string inputs\r\n  if (!text) return null;\r\n  \r\n  // If text is not a string, convert it to string first\r\n  if (typeof text !== 'string') {\r\n    // If it's an object, try to stringify it or extract meaningful content\r\n    if (typeof text === 'object') {\r\n      // If it has specific properties we can use\r\n      if (text.content) {\r\n        text = text.content;\r\n      } else if (text.message) {\r\n        text = text.message;\r\n      } else if (text.details) {\r\n        text = text.details;\r\n      } else {\r\n        // Last resort - stringify the object\r\n        text = JSON.stringify(text);\r\n      }\r\n    } else {\r\n      // Convert other types to string\r\n      text = String(text);\r\n    }\r\n  }\r\n\r\n  // Now we're sure text is a string, proceed with original logic\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  const parts = text.split(urlRegex);\r\n  \r\n  return parts.map((part: string, index: number) => {\r\n    if (part.match(urlRegex)) {\r\n      return (\r\n        <a \r\n          key={index} \r\n          href={part} \r\n          target=\"_blank\" \r\n          rel=\"noopener noreferrer\"\r\n          style={{ color: '#2563eb', textDecoration: 'underline' }}\r\n        >\r\n          {part}\r\n        </a>\r\n      );\r\n    }\r\n    return part;\r\n  });\r\n};\r\n\r\nconst SearchResults: React.FC<SearchResultsProps> = ({ \r\n  query, \r\n  results, \r\n  onBackToSearch,\r\n  onNewSearch,\r\n  isLoading = false,\r\n  dataSource,\r\n  citations\r\n}) => {\r\n  const [input, setInput] = useState('');\r\n  const [image, setImage] = useState<File | string | null>(null);\r\n  const [currentPhotoId, setCurrentPhotoId] = useState<string | null>(null);\r\n  const [newQuery, setNewQuery] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [notification, setNotification] = useState<{message: string, type: string} | null>(null);\r\n  const [isUploadLoading, setUploadLoading] = useState(false);\r\n  const recognitionRef = useRef<any>(null);\r\n\r\n  // Cache results when they change\r\n  useEffect(() => {\r\n    if (query && results && !isLoading) {\r\n      searchCache.setCachedResult(query, results, window.location.href);\r\n    }\r\n  }, [query, results, isLoading]);\r\n\r\n  // Add effect to manage body class when modal opens/closes\r\n  useEffect(() => {\r\n    if (isUploadModalOpen) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      document.body.classList.remove('modal-open');\r\n    };\r\n  }, [isUploadModalOpen]);\r\n\r\n  // Add cleanup effect\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typeof image === 'string' && image.startsWith('blob:')) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [image]);\r\n\r\n  // Add this effect\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Handle new search submission\r\n  const handleTextSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    \r\n    const trimmedQuery = input.trim();\r\n    \r\n    // Check for test query - return fake data without API call\r\n    if (trimmedQuery.toLowerCase() === 'test') {\r\n      console.log('Test query detected in SearchResults - avoiding API call');\r\n      onNewSearch(trimmedQuery); // This will trigger the test logic in parent\r\n      return;\r\n    }\r\n    \r\n    onNewSearch(trimmedQuery);\r\n  };\r\n\r\n  // Handle voice input\r\n  const handleVoiceInput = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (!recognitionRef.current) {\r\n      const recognition = new (window as any).webkitSpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      recognition.lang = 'en-US';\r\n\r\n      recognition.onstart = () => {\r\n        setIsListening(true);\r\n      };\r\n\r\n      recognition.onresult = (event: any) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setNewQuery(transcript); // Update the input field\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onerror = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    }\r\n\r\n    if (!isListening) {\r\n      recognitionRef.current.start();\r\n    } else {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setImage(file);\r\n      console.log(`Image uploaded: ${file.name}`);\r\n    }\r\n  };\r\n\r\n  // Clear all search items\r\n  const handleClearAll = () => {\r\n    setInput('');\r\n    setNewQuery(''); // <-- Add this line\r\n    setImage(null);\r\n    setCurrentPhotoId(null);\r\n    setIsListening(false);\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n    }\r\n    \r\n    // Remove CSS class\r\n    const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n    if (searchInput) {\r\n      searchInput.classList.remove('with-image');\r\n    }\r\n  };\r\n\r\n  // Handle Enter key press\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleTextSubmit(e as any);\r\n    }\r\n  };\r\n\r\n  // Photo modal handlers\r\n  const handleCameraClick = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  // Fix the handleFileSelect function:\r\n  const handleFileSelect = async (file: File) => {\r\n    setUploadLoading(true);\r\n    setImage(URL.createObjectURL(file));\r\n    \r\n    try {\r\n      // Use the existing foodAnalysisService instead of the undefined function\r\n      const result = await foodAnalysisService.analyzeFoodImage(file);\r\n      console.log(\"File analysis result:\", result);\r\n      \r\n      let searchTerm = '';\r\n      \r\n      if (typeof result === 'string') {\r\n        searchTerm = result;\r\n      } else if (result && typeof result === 'object') {\r\n        searchTerm = (result as any).name || \r\n                    (result as any).foodName || \r\n                    (result as any).food || \r\n                    'food item';\r\n      }\r\n      \r\n      if (searchTerm) {\r\n        setNewQuery(searchTerm);\r\n        onNewSearch(searchTerm); // Only one call now\r\n      } else {\r\n        setNotification({\r\n          message: 'Could not identify food in image',\r\n          type: 'error'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing image:', error);\r\n      setNotification({\r\n        message: 'Error analyzing image. Please try again.',\r\n        type: 'error'\r\n      });\r\n    } finally {\r\n      setUploadLoading(false);\r\n      setIsUploadModalOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    const imageFile = files.find(file => file.type.startsWith('image/'));\r\n    if (imageFile) {\r\n      handleFileSelect(imageFile);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewSearchSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newQuery.trim()) return;\r\n    onNewSearch(newQuery);\r\n    setNewQuery(''); // Reset after search\r\n  };\r\n\r\n  // Check if current query is \"test\" to show dummy data styles\r\n  const isTestQuery = query.toLowerCase().trim() === 'test';\r\n\r\n  // --- Replace your calculateQualityScore with this version --------------------\r\n\r\n  const calculateQualityScore = (\r\n    query: string,\r\n    results: string,\r\n    dataSource: SearchResultsProps['dataSource'],\r\n    citations?: string[]\r\n  ): number => {\r\n    // Guard rails for \"bad query/answer\"\r\n    if (!results || /please (provide|clarify)/i.test(results)) return 0;\r\n    if (/not (a|the) recognized|could not find|no information found|doesn'?t seem/i.test(results)) return 0;\r\n\r\n    // Gibberish queries drop to zero (except common abbreviations)\r\n    if (/^[a-z0-9]{1,7}$/i.test(query) && !/^(hiv|flu|cold|covid|bp|bmi|gerd|ibs|std|uti)$/i.test(query)) {\r\n      return 0;\r\n    }\r\n\r\n    const lower = results.toLowerCase();\r\n\r\n    // Baseline by data source (can tune later)\r\n    let score =\r\n      dataSource === 'vnutrition' ? 0.65 :\r\n      dataSource === 'local'      ? 0.50 :\r\n      dataSource === 'openai'     ? 0.40 :\r\n      /* error */                   0.10;\r\n\r\n    // Evidence language\r\n    const ev = evidenceSignals(lower);\r\n    score += Math.min(0.18, ev.pos * 0.04);\r\n    score -= Math.min(0.10, ev.neg * 0.05);\r\n\r\n    // Numeric specificity\r\n    const spec = numericSpecificity(lower);\r\n    score += Math.min(0.16, spec * 0.02);\r\n\r\n    // Domains & identifiers\r\n    const trust = domainTrustScore(results, citations);\r\n    score += trust.score * 0.35;                // heavy weight for good sources\r\n    if (trust.strongIds > 0) score += 0.06;     // bonus for DOI/PMID/PubMed\r\n\r\n    // Recency\r\n    score += recencyBoost(lower);\r\n\r\n    // Structure helps (lists, headings, tables)\r\n    if (/\\n[-*]\\s|\\n\\d+\\.\\s|^\\s*#{1,6}\\s|\\*\\*.+\\*\\*/m.test(results)) score += 0.04;\r\n\r\n    // Penalize hollow disclaimers & contradictions without refs\r\n    score -= hollowDisclaimerPenalty(lower);\r\n    score -= contradictionPenalty(lower);\r\n\r\n    // Penalize hype\r\n    score -= hypePenalty(lower);\r\n\r\n    // Clamp\r\n    return Math.max(0, Math.min(0.98, score));\r\n  };\r\n\r\n  // Move extractNutritionData function inside the component but before it's used\r\n  const extractNutritionData = () => {\r\n    console.log('=== EXTRACTING NUTRITION DATA ===');\r\n    console.log('Query:', query);\r\n    console.log('DataSource:', dataSource);\r\n    console.log('Results type:', typeof results);\r\n    \r\n    if (dataSource === 'vnutrition') {\r\n      try {\r\n        console.log('Processing vnutrition data source');\r\n        let nutrition;\r\n        \r\n        if (typeof results === 'string') {\r\n          console.log('Parsing string results');\r\n          nutrition = JSON.parse(results);\r\n        } else {\r\n          console.log('Using object results directly');\r\n          nutrition = results;\r\n        }\r\n        \r\n        console.log('=== RAW NUTRITION OBJECT ===');\r\n        console.log('Full object:', nutrition);\r\n        console.log('Object keys:', Object.keys(nutrition || {}));\r\n        \r\n        // Log each field we're looking for\r\n        console.log('=== FIELD ANALYSIS ===');\r\n        console.log('nova_classification:', nutrition?.nova_classification);\r\n        console.log('nova_description:', nutrition?.nova_description);\r\n        console.log('calories_per_serving:', nutrition?.calories_per_serving);\r\n        console.log('protein_g:', nutrition?.protein_g);\r\n        console.log('found status:', nutrition?.found);\r\n        \r\n        if (nutrition && nutrition.found !== false) {\r\n          const extractedData = {\r\n            calories: nutrition.calories_per_serving || 0,\r\n            protein: nutrition.protein_g || 0,\r\n            carbs: nutrition.carbs_g || 0,\r\n            fat: nutrition.fat_g || 0,\r\n            fiber: nutrition.fiber_g || 0,\r\n            sugar: nutrition.sugar_g || 0,\r\n            sodium: nutrition.sodium_mg || 0,\r\n            novaScore: nutrition.nova_classification || 1,\r\n            processedLevel: nutrition.nova_description || nutrition.processed_level || 'Unknown'\r\n          };\r\n          \r\n          console.log('=== EXTRACTED DATA ===');\r\n          console.log('Final extracted data:', extractedData);\r\n          console.log('NOVA Score:', extractedData.novaScore);\r\n          \r\n          return extractedData;\r\n        } else {\r\n          console.log('No valid nutrition data - found:', nutrition?.found);\r\n          return null;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing nutrition data:', error);\r\n        return null;\r\n      }\r\n    }\r\n    \r\n    console.log('Not vnutrition source');\r\n    return null;\r\n  };\r\n\r\n  const resultQualityScore = calculateQualityScore(query, results, dataSource, citations);\r\n  const nutritionData = extractNutritionData();\r\n\r\n  return (\r\n    <div className={`results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`}>\r\n      <LoginButton \r\n        position=\"top-right\"\r\n        className=\"results-login-button\"\r\n      />\r\n\r\n      {/* Always show header */}\r\n      <div className=\"results-search-header\">\r\n        <div className=\"search-input-container\">\r\n          <form onSubmit={handleNewSearchSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ask anything about health...\"\r\n              value={newQuery}\r\n              onChange={(e) => setNewQuery(e.target.value)}\r\n              className=\"search-input results-search-input\"\r\n              data-query={isTestQuery ? 'test' : ''}\r\n            />\r\n          </form>\r\n          \r\n          {/* Show image chip when image is uploaded */}\r\n          {image && (\r\n            <div className=\"image-preview\">\r\n              <div className=\"image-icon\">📷</div>\r\n              <span className=\"image-name\">\r\n                {typeof image === 'object' && image !== null ? image.name : 'Uploaded image'}\r\n              </span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setImage(null);\r\n                  setCurrentPhotoId(null);\r\n                  const searchInput = document.querySelector('.results-search-input') as HTMLInputElement;\r\n                  if (searchInput) {\r\n                    searchInput.classList.remove('with-image');\r\n                  }\r\n                }}\r\n                className=\"remove-image\"\r\n                aria-label=\"Remove image\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"search-icons\">\r\n            {(newQuery || image) && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleClearAll}\r\n                className=\"icon-button clear-button\"\r\n                aria-label=\"Clear all\"\r\n              >\r\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n                </svg>\r\n              </button>\r\n            )}\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCameraClick}\r\n              className=\"icon-button\"\r\n              aria-label=\"Upload image\"\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n              </svg>\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleVoiceInput}\r\n              className={`icon-button ${isListening ? 'listening' : ''}`}\r\n              aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n                <path d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.28c3.39-.49 6-3.3 6-6.72h-2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Always show Results Content */}\r\n      <div className=\"results-container\">\r\n        <h1 className=\"results-header\">Search Results for: \"{query}\"</h1>\r\n        \r\n        <div className=\"results-content\">\r\n          <div className=\"health-info-card\">\r\n            <div className=\"health-info-content\">\r\n              {/* Use the link conversion function */}\r\n              <div className=\"markdown-content\">\r\n                {dataSource === 'vnutrition' ? (\r\n                  (() => {\r\n                    const nutritionData = extractNutritionData();\r\n                    console.log('Nutrition data in JSX:', nutritionData);\r\n                    \r\n                    if (nutritionData) {\r\n                      return (\r\n                        <div>\r\n                          <h3>Nutrition Information</h3>\r\n                          <ul>\r\n                            <li>Calories per serving: {nutritionData.calories}</li>\r\n                            <li>Protein: {nutritionData.protein}g</li>\r\n                            <li>Carbs: {nutritionData.carbs}g</li>\r\n                            <li>Fat: {nutritionData.fat}g</li>\r\n                            <li>NOVA Score: {nutritionData.novaScore}</li>\r\n                            <li>Processing Level: {nutritionData.processedLevel}</li>\r\n                          </ul>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      // Try to parse and display raw data for debugging\r\n                      let nutrition;\r\n                      try {\r\n                        nutrition = typeof results === 'string' ? JSON.parse(results) : results;\r\n                        console.log('Raw nutrition object for debugging:', nutrition);\r\n                        \r\n                        return (\r\n                          <div>\r\n                            <h3>Raw Database Data (Debug)</h3>\r\n                            <pre style={{ fontSize: '12px', background: '#f5f5f5', padding: '10px' }}>\r\n                              {JSON.stringify(nutrition, null, 2)}\r\n                            </pre>\r\n                          </div>\r\n                        );\r\n                      } catch {\r\n                        return <div>Error parsing nutrition data</div>;\r\n                      }\r\n                    }\r\n                  })()\r\n                ) : (\r\n                  convertLinksToClickable(results)\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"data-source-indicator\">\r\n              {dataSource === 'openai' ? (\r\n                <span>Powered by AI</span>\r\n              ) : dataSource === 'error' ? (\r\n                <span className=\"error-source\">Error retrieving data</span>\r\n              ) : (\r\n                <span>From health database</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"sidebar\">\r\n            {/* Quality Chart */}\r\n            <div className=\"quality-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n              <ResultQualityPie qualityScore={resultQualityScore} />\r\n            </div>\r\n\r\n            {/* Nutrition Charts - Only show when we have nutrition data */}\r\n            {nutritionData && (\r\n              <>\r\n                <div className=\"nutrition-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                  <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                    Nutrition Breakdown\r\n                  </h3>\r\n                  <NutritionChart nutritionData={nutritionData} />\r\n                </div>\r\n\r\n                <div className=\"nova-chart-container\" style={{ marginBottom: \"2rem\" }}>\r\n                  <h3 style={{ fontSize: \"1.1rem\", marginBottom: \"1rem\", color: \"#374151\" }}>\r\n                    Processing Level (NOVA Score)\r\n                  </h3>\r\n                  <NovaChart \r\n                    novaScore={nutritionData.novaScore} \r\n                    processedLevel={nutritionData.processedLevel}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n            \r\n            <div className=\"related-topics-card\">\r\n              <h3>Related Health Topics</h3>\r\n              <ul className=\"related-topics-list\">\r\n                {isTestQuery ? (\r\n                  dummyTestData.relatedTopics.map((topic, index) => (\r\n                    <li key={index}>\r\n                      <button \r\n                        onClick={() => onNewSearch(topic)}\r\n                        className=\"topic-button\"\r\n                      >\r\n                        {topic}\r\n                      </button>\r\n                    </li>\r\n                  ))\r\n                ) : \r\n                  defaultRelatedTopics.map((topic, index) => (\r\n                    <li key={index}>\r\n                      <button \r\n                        onClick={() => onNewSearch(topic)}\r\n                        className=\"topic-button\"\r\n                      >\r\n                        {topic}\r\n                      </button>\r\n                    </li>\r\n                  ))\r\n                }\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"resources-card\">\r\n              <h3>Useful Resources</h3>\r\n              <ul className=\"resources-list\">\r\n                {isTestQuery ? (\r\n                  dummyTestData.resources.map((resource, index) => (\r\n                    <li key={index}>\r\n                      <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {resource.text}\r\n                      </a>\r\n                    </li>\r\n                  ))\r\n                ) : (\r\n                  defaultResources.map((resource, index) => (\r\n                    <li key={index}>\r\n                      <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {resource.text}\r\n                      </a>\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Loading State Overlay - Only shows when loading */}\r\n        {isLoading && (\r\n          <div className=\"loading-container\">\r\n            <Spinner message=\"Searching for health information...\" />\r\n          </div>\r\n        )}\r\n\r\n        {/* ImageUploadModal - always available */}\r\n        <ImageUploadModal\r\n          isOpen={isUploadModalOpen}\r\n          onClose={() => setIsUploadModalOpen(false)}\r\n          onFileSelect={handleFileSelect}\r\n          title=\"Upload Health Image\"\r\n          subtitle=\"Upload food, medical, or health-related images for AI analysis\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}