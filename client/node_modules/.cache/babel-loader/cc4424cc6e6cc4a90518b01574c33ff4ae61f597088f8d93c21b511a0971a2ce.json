{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Update the BackendArticlesResponse interface to match the new schema\n\n// Update the BackendArticle interface to match the new schema\n\n// UPDATED: Backend API response types with all new fields\n\nexport const TRUSTED_DOMAINS = {\n  'nih.gov': 1,\n  'ncbi.nlm.nih.gov': 1,\n  'who.int': 1,\n  'cdc.gov': 1,\n  'fda.gov': 1,\n  'usda.gov': 1,\n  'jamanetwork.com': 1,\n  'nejm.org': 1,\n  'thelancet.com': 1,\n  'bmj.com': 1,\n  'nature.com': 1,\n  'science.org': 1,\n  'mayoclinic.org': 1,\n  'harvard.edu': 1,\n  'stanford.edu': 1,\n  'clevelandclinic.org': 1,\n  'uptodate.com': 1,\n  'cochranelibrary.com': 1,\n  'pubmed.ncbi.nlm.nih.gov': 1,\n  'medlineplus.gov': 1,\n  'livemint.com': 0.8,\n  // ADDED: LiveMint as trusted source\n  'npr.org': 0.9,\n  'reuters.com': 0.9,\n  'cnn.com': 0.8,\n  'cbsnews.com': 0.8,\n  'abcnews.com': 0.8,\n  'washingtonpost.com': 0.8,\n  'nytimes.com': 0.8\n};\nexport const NEWS_CATEGORIES = {\n  NUTRITION: 'nutrition',\n  MEDICAL: 'medical',\n  PUBLIC_HEALTH: 'health',\n  CLINICAL: 'clinical',\n  PREVENTION: 'prevention',\n  MENTAL_HEALTH: 'mental',\n  GENERAL: 'general',\n  SCIENCE: 'science',\n  TECH: 'tech',\n  POLITICAL: 'political',\n  SPORTS: 'sports',\n  ENTERTAINMENT: 'entertainment',\n  BUSINESS: 'business',\n  NATURE: 'nature'\n};\n\n// UPDATED: Enhanced article conversion with better image field mapping\nexport const fetchNewsFeed = async (categories, limit, page = 1) => {\n  try {\n    var _data$articles;\n    console.log('🔍 Fetching health news from backend API...', {\n      categories,\n      limit,\n      page\n    });\n    const params = {\n      limit: limit || 50,\n      flat: 'true',\n      page: page\n    };\n    if (categories && categories.length > 0 && categories[0] !== 'all') {\n      params.category = categories[0];\n    }\n    console.log('📡 Making request to:', `${API_URL}/news/articles`, 'with params:', params);\n    const response = await axios.get(`${API_URL}/news/articles`, {\n      params,\n      timeout: 10000\n    });\n    const data = response.data;\n    console.log('✅ Backend API response:', {\n      success: data.success,\n      articleCount: ((_data$articles = data.articles) === null || _data$articles === void 0 ? void 0 : _data$articles.length) || 0,\n      count: data.count,\n      pagination: data.pagination,\n      filters: data.filters_applied\n    });\n\n    // Convert backend article format to our format\n    const articles = (data.articles || []).filter(article => article.title && article.title.trim() !== '').map(article => {\n      // Better image URL handling\n      const thumbnailUrl = article.thumbnail || article.media_thumb_url || '';\n      const imageUrl = article.image_url || article.media_url || '';\n      return {\n        id: article.id || article.guid || `article_${Date.now()}`,\n        title: article.title || 'No title',\n        summary: article.description || 'No summary available',\n        url: article.link || '#',\n        source: article.source || article.feed_title || 'Unknown Source',\n        domain: article.domain || extractDomain(article.link || ''),\n        category: article.category || 'general',\n        publishedDate: article.published_date || article.pubDate || new Date().toISOString(),\n        relevanceScore: article.feed_priority ? article.feed_priority / 10 : 0.5,\n        tags: extractTags(article.title, article.description),\n        // Image fields\n        thumbnailUrl,\n        imageUrl,\n        mediaType: article.media_type || (article.has_image ? 'image' : ''),\n        // Author info\n        author: article.author || '',\n        hasAuthor: article.has_author || !!article.author,\n        // Media info\n        hasMedia: article.has_image || !!(thumbnailUrl || imageUrl),\n        // Content metrics\n        wordCount: article.word_count || 0,\n        readingTime: article.reading_time || 0,\n        contentLength: article.word_count ? article.word_count * 5 : 0,\n        // Additional metadata\n        feedTitle: article.feed_title || article.source || '',\n        extractedAt: article.extracted_at || '',\n        // Quality indicators\n        contentQuality: article.content_quality || 'medium',\n        completeness: article.completeness || 'partial'\n      };\n    });\n    console.log('📰 Processed articles:', articles.length);\n\n    // Add pagination information to the response\n    return {\n      success: true,\n      articles: articles,\n      count: articles.length,\n      pagination: data.pagination,\n      filtersApplied: data.filters_applied,\n      lastUpdated: new Date().toISOString(),\n      message: data.message || 'Health news fetched successfully'\n    };\n  } catch (error) {\n    console.error('❌ Error fetching news feed from backend:', error);\n    const fallback = await getFallbackNews();\n    return {\n      ...fallback,\n      message: `Backend error (${error.message}). Showing sample news.`\n    };\n  }\n};\n\n// Helper function to map backend categories to frontend categories\nconst mapBackendCategory = backendCategory => {\n  if (!backendCategory) return 'General Health';\n  const categoryMap = {\n    'nutrition': 'Nutrition & Diet',\n    'diet': 'Nutrition & Diet',\n    'medical': 'Medical Research',\n    'health': 'Public Health',\n    'mental': 'Mental Health',\n    'prevention': 'Disease Prevention',\n    'clinical': 'Clinical Studies',\n    'science': 'Medical Research',\n    'tech': 'Medical Technology',\n    'political': 'Health Policy',\n    'sports': 'Fitness & Sports',\n    'entertainment': 'Wellness',\n    'business': 'Health Business',\n    'nature': 'Environmental Health'\n  };\n  const lowerCategory = backendCategory.toLowerCase();\n  for (const [key, value] of Object.entries(categoryMap)) {\n    if (lowerCategory.includes(key)) {\n      return value;\n    }\n  }\n  return 'General Health';\n};\n\n// ENHANCED: Updated fallback news with image URLs\nconst getFallbackNews = async () => {\n  const fallbackArticles = [{\n    id: 'fallback_1',\n    title: \"New Study Reveals Benefits of Mediterranean Diet for Heart Health\",\n    summary: \"Researchers found that following a Mediterranean diet can reduce cardiovascular disease risk by up to 30%. The study tracked over 7,000 participants for 5 years.\",\n    url: \"https://www.nih.gov/news-events/news-releases/mediterranean-diet-heart-health\",\n    source: \"NIH Health News\",\n    domain: \"nih.gov\",\n    category: \"Nutrition & Diet\",\n    publishedDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.95,\n    tags: ['nutrition', 'heart-health', 'mediterranean-diet', 'cardiovascular'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Sarah Johnson\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 150,\n    readingTime: 1,\n    contentLength: 750\n  }, {\n    id: 'fallback_2',\n    title: \"Exercise and Mental Health: The Connection You Need to Know\",\n    summary: \"New research shows that just 30 minutes of exercise daily can significantly improve mental well-being and reduce symptoms of depression and anxiety.\",\n    url: \"https://www.cdc.gov/mental-health/exercise-connection\",\n    source: \"CDC Health Updates\",\n    domain: \"cdc.gov\",\n    category: \"Mental Health\",\n    publishedDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.90,\n    tags: ['mental-health', 'exercise', 'wellness', 'depression'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Michael Chen\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 180,\n    readingTime: 1,\n    contentLength: 900\n  }, {\n    id: 'fallback_3',\n    title: \"The Importance of Sleep for Immune System Function\",\n    summary: \"Studies demonstrate that quality sleep is crucial for maintaining a strong immune system. Adults need 7-9 hours of sleep per night for optimal health.\",\n    url: \"https://www.nih.gov/news-events/sleep-immune-system\",\n    source: \"Sleep Health Research\",\n    domain: \"nih.gov\",\n    category: \"General Health\",\n    publishedDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.85,\n    tags: ['sleep', 'immune-system', 'health', 'wellness'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1541781774459-bb2af2f05b55?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1541781774459-bb2af2f05b55?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Lisa Rodriguez\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 200,\n    readingTime: 1,\n    contentLength: 1000\n  }, {\n    id: 'fallback_4',\n    title: \"Breakthrough in Cancer Research: New Treatment Shows Promise\",\n    summary: \"Scientists have developed a new immunotherapy approach that shows remarkable results in clinical trials, offering hope for difficult-to-treat cancers.\",\n    url: \"https://www.nih.gov/news-events/cancer-breakthrough-2024\",\n    source: \"Medical Research Today\",\n    domain: \"nih.gov\",\n    category: \"Medical Research\",\n    publishedDate: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.98,\n    tags: ['cancer', 'research', 'immunotherapy', 'clinical-trials'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Robert Kim\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 250,\n    readingTime: 2,\n    contentLength: 1250\n  }, {\n    id: 'fallback_5',\n    title: \"Preventive Care: Early Detection Saves Lives\",\n    summary: \"Regular health screenings can detect potential health issues before they become serious problems. Learn what screenings you need by age.\",\n    url: \"https://www.cdc.gov/prevention/early-detection\",\n    source: \"CDC Prevention Guidelines\",\n    domain: \"cdc.gov\",\n    category: \"Disease Prevention\",\n    publishedDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n    relevanceScore: 0.80,\n    tags: ['prevention', 'screening', 'early-detection', 'health-checkup'],\n    thumbnailUrl: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=400&q=80\",\n    imageUrl: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&q=80\",\n    mediaType: \"image\",\n    author: \"Dr. Amanda White\",\n    hasMedia: true,\n    hasAuthor: true,\n    wordCount: 160,\n    readingTime: 1,\n    contentLength: 800\n  }];\n\n  // Categorize fallback articles\n  const categorizedArticles = {};\n  fallbackArticles.forEach(article => {\n    if (!categorizedArticles[article.category]) {\n      categorizedArticles[article.category] = [];\n    }\n    categorizedArticles[article.category].push(article);\n  });\n  return {\n    success: true,\n    articles: fallbackArticles,\n    categories: categorizedArticles,\n    lastUpdated: new Date().toISOString(),\n    count: fallbackArticles.length,\n    message: 'Using sample health news (backend unavailable)'\n  };\n};\n\n// Rest of helper functions remain the same but with enhanced logging...\nconst extractDomain = url => {\n  try {\n    return new URL(url).hostname.toLowerCase();\n  } catch {\n    return 'unknown';\n  }\n};\nconst calculateRelevanceScore = (title = '', description = '') => {\n  const content = `${title} ${description}`.toLowerCase();\n  const healthKeywords = ['health', 'medical', 'wellness', 'fitness', 'nutrition', 'diet', 'exercise', 'mental health', 'disease', 'treatment', 'research', 'study'];\n  const matchingKeywords = healthKeywords.filter(keyword => content.includes(keyword));\n  let score = 0.5;\n  score += matchingKeywords.length * 0.08;\n  return Math.min(score, 1.0);\n};\nconst extractTags = (title = '', description = '', existingTags) => {\n  const content = `${title} ${description}`.toLowerCase();\n  const tags = [];\n  if (existingTags) {\n    try {\n      const parsedTags = existingTags.split(',').map(tag => tag.trim()).filter(tag => tag.length > 0);\n      tags.push(...parsedTags);\n    } catch (e) {\n      // Continue with keyword extraction\n    }\n  }\n  const tagKeywords = ['health', 'medical', 'nutrition', 'diet', 'fitness', 'exercise', 'mental-health', 'wellness', 'prevention', 'treatment', 'research', 'study', 'clinical', 'vaccine', 'medicine', 'hospital', 'doctor', 'heart', 'cancer', 'diabetes', 'sleep', 'immune', 'therapy'];\n  tagKeywords.forEach(keyword => {\n    if (content.includes(keyword.replace('-', ' ')) && !tags.includes(keyword)) {\n      tags.push(keyword);\n    }\n  });\n  return tags.slice(0, 5);\n};\n\n// ENHANCED: Updated utility functions with image support\nexport const formatArticleForDisplay = article => {\n  return {\n    ...article,\n    formattedDate: formatTimeAgo(article.publishedDate),\n    isTrusted: isTrustedDomain(article.url),\n    relevancePercentage: Math.round(article.relevanceScore * 100),\n    shortSummary: article.summary.length > 150 ? article.summary.substring(0, 150) + '...' : article.summary,\n    // ADDED: Image display helpers\n    displayImage: article.thumbnailUrl || article.imageUrl || article.feedThumbnailUrl || article.feedImageUrl || '',\n    hasValidImage: !!(article.thumbnailUrl || article.imageUrl),\n    // ADDED: Content quality indicators\n    qualityScore: calculateQualityScore(article),\n    readingTimeText: article.readingTime ? `${article.readingTime} min read` : 'Quick read'\n  };\n};\n\n// ADDED: Calculate article quality score\nconst calculateQualityScore = article => {\n  let score = 0;\n  if (article.hasAuthor) score += 0.2;\n  if (article.hasMedia) score += 0.2;\n  if (article.wordCount && article.wordCount > 100) score += 0.2;\n  if (article.contentLength && article.contentLength > 500) score += 0.2;\n  if (isTrustedDomain(article.url)) score += 0.2;\n  return Math.min(score, 1.0);\n};\n\n// Rest of the functions remain the same...\nexport const getArticlesByCategory = async (category, limit) => {\n  try {\n    console.log('📂 Fetching articles for category:', category);\n    return await fetchNewsFeed([category], limit);\n  } catch (error) {\n    console.error('❌ Error fetching articles by category:', error);\n    return {\n      success: false,\n      message: 'Error fetching articles by category'\n    };\n  }\n};\nexport const searchNewsArticles = async (query, category, limit) => {\n  try {\n    console.log('🔎 Searching articles:', {\n      query,\n      category,\n      limit\n    });\n    if (!query.trim()) {\n      return {\n        success: false,\n        message: 'Search query cannot be empty'\n      };\n    }\n    const feedResponse = await fetchNewsFeed(category ? [category] : undefined, 100);\n    if (!feedResponse.success || !feedResponse.articles) {\n      return {\n        success: false,\n        message: 'No articles available to search'\n      };\n    }\n    const searchTerm = query.toLowerCase();\n    const matchingArticles = feedResponse.articles.filter(article => article.title.toLowerCase().includes(searchTerm) || article.summary.toLowerCase().includes(searchTerm) || article.tags.some(tag => tag.includes(searchTerm)) || article.author && article.author.toLowerCase().includes(searchTerm)).slice(0, limit || 10);\n    return {\n      success: true,\n      articles: matchingArticles,\n      lastUpdated: new Date().toISOString(),\n      count: matchingArticles.length,\n      message: `Search results for \"${query}\"`\n    };\n  } catch (error) {\n    console.error('❌ Error searching articles:', error);\n    return {\n      success: false,\n      message: 'Error searching articles'\n    };\n  }\n};\nexport const refreshNewsFeed = async () => {\n  try {\n    console.log('🔄 Refreshing news feed...');\n    try {\n      await axios.post(`${API_URL}/news/fetch`, {}, {\n        timeout: 5000\n      });\n      console.log('✅ Triggered backend refresh');\n    } catch (fetchError) {\n      console.log('⚠️ Could not trigger backend refresh, getting current data');\n    }\n    return await fetchNewsFeed();\n  } catch (error) {\n    console.error('❌ Error refreshing news feed:', error);\n    return {\n      success: false,\n      message: 'Error refreshing news feed'\n    };\n  }\n};\nexport const getNewsFeedStats = async () => {\n  try {\n    const feedResponse = await fetchNewsFeed();\n    if (!feedResponse.success || !feedResponse.articles) {\n      return {\n        success: false,\n        message: 'No articles available for stats'\n      };\n    }\n    const categoryCounts = {};\n    const sourcesCounts = {};\n    let totalWordCount = 0;\n    let totalReadingTime = 0;\n    let articlesWithImages = 0;\n    let articlesWithAuthors = 0;\n    let trustedSources = 0;\n    feedResponse.articles.forEach(article => {\n      categoryCounts[article.category] = (categoryCounts[article.category] || 0) + 1;\n      sourcesCounts[article.source] = (sourcesCounts[article.source] || 0) + 1;\n      if (article.hasMedia) articlesWithImages++;\n      if (article.hasAuthor) articlesWithAuthors++;\n      if (isTrustedDomain(article.url)) trustedSources++;\n      if (article.wordCount) totalWordCount += article.wordCount;\n      if (article.readingTime) totalReadingTime += article.readingTime;\n    });\n    return {\n      success: true,\n      stats: {\n        totalArticles: feedResponse.articles.length,\n        categoryCounts,\n        lastUpdated: feedResponse.lastUpdated || new Date().toISOString(),\n        sourcesCounts,\n        articlesWithImages,\n        articlesWithAuthors,\n        averageWordCount: Math.round(totalWordCount / feedResponse.articles.length) || 0,\n        averageReadingTime: Math.round(totalReadingTime / feedResponse.articles.length) || 0,\n        trustedSources\n      }\n    };\n  } catch (error) {\n    console.error('❌ Error fetching stats:', error);\n    return {\n      success: false,\n      message: 'Error fetching news feed statistics'\n    };\n  }\n};\n\n// Utility functions remain the same...\nexport const isTrustedDomain = url => {\n  try {\n    const domain = new URL(url).hostname.toLowerCase();\n    return Object.keys(TRUSTED_DOMAINS).some(trustedDomain => domain.includes(trustedDomain.toLowerCase()));\n  } catch {\n    return false;\n  }\n};\nexport const formatTimeAgo = dateString => {\n  try {\n    const now = new Date();\n    const publishedDate = new Date(dateString);\n    const diffInHours = Math.floor((now.getTime() - publishedDate.getTime()) / (1000 * 60 * 60));\n    if (diffInHours < 1) return 'Just now';\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays < 7) return `${diffInDays}d ago`;\n    const diffInWeeks = Math.floor(diffInDays / 7);\n    if (diffInWeeks < 4) return `${diffInWeeks}w ago`;\n    const diffInMonths = Math.floor(diffInDays / 30);\n    return `${diffInMonths}mo ago`;\n  } catch {\n    return 'Unknown';\n  }\n};\nexport const getAvailableCategories = () => {\n  return [{\n    id: 'all',\n    label: 'All Health News'\n  }, {\n    id: 'nutrition',\n    label: 'Nutrition & Diet'\n  }, {\n    id: 'medical',\n    label: 'Medical Research'\n  }, {\n    id: 'health',\n    label: 'Public Health'\n  }, {\n    id: 'clinical',\n    label: 'Clinical Studies'\n  }, {\n    id: 'prevention',\n    label: 'Disease Prevention'\n  }, {\n    id: 'mental',\n    label: 'Mental Health'\n  }, {\n    id: 'science',\n    label: 'Science Research'\n  }, {\n    id: 'general',\n    label: 'General Health'\n  }];\n};\n\n// Legacy compatibility\n\nexport class NewsService {\n  async fetchNews() {\n    var _response$articles;\n    const response = await fetchNewsFeed();\n    return ((_response$articles = response.articles) === null || _response$articles === void 0 ? void 0 : _response$articles.map(article => ({\n      title: article.title,\n      link: article.url,\n      description: article.summary,\n      pubDate: article.publishedDate,\n      source: article.source,\n      category: article.category,\n      thumbnailUrl: article.thumbnailUrl,\n      imageUrl: article.imageUrl,\n      author: article.author,\n      hasMedia: article.hasMedia\n    }))) || [];\n  }\n}\nexport const newsService = new NewsService();","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","TRUSTED_DOMAINS","NEWS_CATEGORIES","NUTRITION","MEDICAL","PUBLIC_HEALTH","CLINICAL","PREVENTION","MENTAL_HEALTH","GENERAL","SCIENCE","TECH","POLITICAL","SPORTS","ENTERTAINMENT","BUSINESS","NATURE","fetchNewsFeed","categories","limit","page","_data$articles","console","log","params","flat","length","category","response","get","timeout","data","success","articleCount","articles","count","pagination","filters","filters_applied","filter","article","title","trim","map","thumbnailUrl","thumbnail","media_thumb_url","imageUrl","image_url","media_url","id","guid","Date","now","summary","description","url","link","source","feed_title","domain","extractDomain","publishedDate","published_date","pubDate","toISOString","relevanceScore","feed_priority","tags","extractTags","mediaType","media_type","has_image","author","hasAuthor","has_author","hasMedia","wordCount","word_count","readingTime","reading_time","contentLength","feedTitle","extractedAt","extracted_at","contentQuality","content_quality","completeness","filtersApplied","lastUpdated","message","error","fallback","getFallbackNews","mapBackendCategory","backendCategory","categoryMap","lowerCategory","toLowerCase","key","value","Object","entries","includes","fallbackArticles","categorizedArticles","forEach","push","URL","hostname","calculateRelevanceScore","content","healthKeywords","matchingKeywords","keyword","score","Math","min","existingTags","parsedTags","split","tag","e","tagKeywords","replace","slice","formatArticleForDisplay","formattedDate","formatTimeAgo","isTrusted","isTrustedDomain","relevancePercentage","round","shortSummary","substring","displayImage","feedThumbnailUrl","feedImageUrl","hasValidImage","qualityScore","calculateQualityScore","readingTimeText","getArticlesByCategory","searchNewsArticles","query","feedResponse","undefined","searchTerm","matchingArticles","some","refreshNewsFeed","post","fetchError","getNewsFeedStats","categoryCounts","sourcesCounts","totalWordCount","totalReadingTime","articlesWithImages","articlesWithAuthors","trustedSources","stats","totalArticles","averageWordCount","averageReadingTime","keys","trustedDomain","dateString","diffInHours","floor","getTime","diffInDays","diffInWeeks","diffInMonths","getAvailableCategories","label","NewsService","fetchNews","_response$articles","newsService"],"sources":["C:/vHealth/vhealth/client/src/services/newsService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nexport interface NewsArticle {\r\n  id: string;\r\n  title: string;\r\n  summary: string;\r\n  url: string;\r\n  source: string;\r\n  domain: string;\r\n  category: string;\r\n  publishedDate: string;\r\n  relevanceScore: number;\r\n  tags: string[];\r\n  // ADDED: New image and media fields\r\n  thumbnailUrl?: string;\r\n  imageUrl?: string;\r\n  mediaType?: string;\r\n  mediaDescription?: string;\r\n  // ADDED: Enhanced content fields\r\n  author?: string;\r\n  fullContent?: string;\r\n  wordCount?: number;\r\n  readingTime?: number;\r\n  // ADDED: Quality indicators\r\n  hasMedia: boolean;\r\n  hasAuthor: boolean;\r\n  contentLength?: number;\r\n  // ADDED: Source metadata\r\n  feedTitle?: string;\r\n  feedImageUrl?: string;\r\n  feedThumbnailUrl?: string;\r\n  // ADDED: Additional metadata\r\n  guid?: string;\r\n  commentsUrl?: string;\r\n  language?: string;\r\n  rights?: string;\r\n  extractedAt?: string;\r\n  lastModified?: string;\r\n}\r\n\r\nexport interface NewsFeedResponse {\r\n  success: boolean;\r\n  message?: string;\r\n  articles?: NewsArticle[];\r\n  categories?: Record<string, NewsArticle[]>;\r\n  lastUpdated?: string;\r\n  count?: number;\r\n  pagination?: {\r\n    total_items: number;\r\n    total_pages: number;\r\n    current_page: number;\r\n    per_page: number;\r\n    has_next_page: boolean;\r\n    has_prev_page: boolean;\r\n  };\r\n  filtersApplied?: {\r\n    category: string | null;\r\n    country: string | null;\r\n    feed_id: number | null;\r\n    limit: number;\r\n  };\r\n}\r\n\r\n// Update the BackendArticlesResponse interface to match the new schema\r\ninterface BackendArticlesResponse {\r\n  success: boolean;\r\n  message?: string;\r\n  articles: BackendArticle[];\r\n  count: number;\r\n  pagination?: {\r\n    total_items: number;\r\n    total_pages: number;\r\n    current_page: number;\r\n    per_page: number;\r\n    has_next_page: boolean;\r\n    has_prev_page: boolean;\r\n  };\r\n  filters_applied?: {\r\n    category: string | null;\r\n    country: string | null;\r\n    feed_id: number | null;\r\n    limit: number;\r\n  };\r\n}\r\n\r\n// Update the BackendArticle interface to match the new schema\r\ninterface BackendArticle {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  link: string;\r\n  author?: string;\r\n  published_date: string;\r\n  thumbnail?: string;\r\n  image_url?: string;\r\n  has_image: boolean;\r\n  has_author: boolean;\r\n  category: string;\r\n  source: string;\r\n  feed_id: number;\r\n  feed_priority?: number;\r\n  reading_time?: number;\r\n  word_count?: number;\r\n  time_ago?: string;\r\n  is_recent?: boolean;\r\n  content_quality?: string;\r\n  completeness?: string;\r\n  domain: string;\r\n  extracted_at?: string;\r\n  // Keep backward compatibility with previous format\r\n  media_thumb_url?: string;\r\n  media_url?: string;\r\n  media_type?: string;\r\n  pubDate?: string;\r\n  feed_title?: string;\r\n  feed_image_url?: string;\r\n  feed_thumbnail_url?: string;\r\n  guid?: string;\r\n}\r\n\r\n// UPDATED: Backend API response types with all new fields\r\ninterface BackendArticleV2 {\r\n  // Feed metadata\r\n  feed_id?: number;\r\n  feed_title?: string;\r\n  feed_url?: string;\r\n  category?: string;\r\n  country_code?: string;\r\n  feed_image_url?: string;\r\n  feed_thumbnail_url?: string;\r\n  \r\n  // Article content\r\n  title?: string;\r\n  description?: string;\r\n  summary?: string;\r\n  link?: string;\r\n  author?: string;\r\n  pubDate?: string;\r\n  guid?: string;\r\n  article_category?: string;\r\n  tags?: string;\r\n  source?: string;\r\n  source_url?: string;\r\n  \r\n  // Media content\r\n  media_thumb_url?: string;\r\n  media_url?: string;\r\n  media_type?: string;\r\n  media_description?: string;\r\n  \r\n  // Enhanced content\r\n  content_encoded?: string;\r\n  extracted_at?: string;\r\n  word_count?: string;\r\n  reading_time?: string;\r\n  \r\n  // Quality indicators\r\n  has_media?: string | boolean;\r\n  has_author?: string | boolean;\r\n  has_content?: string | boolean;\r\n  content_length?: string;\r\n  \r\n  // Additional metadata\r\n  comments_url?: string;\r\n  language?: string;\r\n  rights?: string;\r\n  last_modified?: string;\r\n  last_checked?: string;\r\n  updated_at?: string;\r\n  feed_format?: string;\r\n  raw_item_keys?: string[];\r\n}\r\n\r\ninterface BackendArticlesResponseV2 {\r\n  success: boolean;\r\n  message?: string;\r\n  articles: BackendArticleV2[];\r\n  count: number;\r\n  debug?: any;\r\n}\r\n\r\nexport const TRUSTED_DOMAINS: Record<string, number> = {\r\n  'nih.gov': 1,\r\n  'ncbi.nlm.nih.gov': 1,\r\n  'who.int': 1,\r\n  'cdc.gov': 1,\r\n  'fda.gov': 1,\r\n  'usda.gov': 1,\r\n  'jamanetwork.com': 1,\r\n  'nejm.org': 1,\r\n  'thelancet.com': 1,\r\n  'bmj.com': 1,\r\n  'nature.com': 1,\r\n  'science.org': 1,\r\n  'mayoclinic.org': 1,\r\n  'harvard.edu': 1,\r\n  'stanford.edu': 1,\r\n  'clevelandclinic.org': 1,\r\n  'uptodate.com': 1,\r\n  'cochranelibrary.com': 1,\r\n  'pubmed.ncbi.nlm.nih.gov': 1,\r\n  'medlineplus.gov': 1,\r\n  'livemint.com': 0.8, // ADDED: LiveMint as trusted source\r\n  'npr.org': 0.9,\r\n  'reuters.com': 0.9,\r\n  'cnn.com': 0.8,\r\n  'cbsnews.com': 0.8,\r\n  'abcnews.com': 0.8,\r\n  'washingtonpost.com': 0.8,\r\n  'nytimes.com': 0.8\r\n};\r\n\r\nexport const NEWS_CATEGORIES = {\r\n  NUTRITION: 'nutrition',\r\n  MEDICAL: 'medical',\r\n  PUBLIC_HEALTH: 'health',\r\n  CLINICAL: 'clinical',\r\n  PREVENTION: 'prevention',\r\n  MENTAL_HEALTH: 'mental',\r\n  GENERAL: 'general',\r\n  SCIENCE: 'science',\r\n  TECH: 'tech',\r\n  POLITICAL: 'political',\r\n  SPORTS: 'sports',\r\n  ENTERTAINMENT: 'entertainment',\r\n  BUSINESS: 'business',\r\n  NATURE: 'nature'\r\n};\r\n\r\n// UPDATED: Enhanced article conversion with better image field mapping\r\nexport const fetchNewsFeed = async (categories?: string[], limit?: number, page: number = 1): Promise<NewsFeedResponse> => {\r\n  try {\r\n    console.log('🔍 Fetching health news from backend API...', { categories, limit, page });\r\n    \r\n    const params: any = {\r\n      limit: limit || 50,\r\n      flat: 'true',\r\n      page: page\r\n    };\r\n    \r\n    if (categories && categories.length > 0 && categories[0] !== 'all') {\r\n      params.category = categories[0];\r\n    }\r\n    \r\n    console.log('📡 Making request to:', `${API_URL}/news/articles`, 'with params:', params);\r\n    \r\n    const response = await axios.get<BackendArticlesResponse>(`${API_URL}/news/articles`, {\r\n      params,\r\n      timeout: 10000\r\n    });\r\n    \r\n    const data = response.data;\r\n    \r\n    console.log('✅ Backend API response:', {\r\n      success: data.success,\r\n      articleCount: data.articles?.length || 0,\r\n      count: data.count,\r\n      pagination: data.pagination,\r\n      filters: data.filters_applied\r\n    });\r\n\r\n    // Convert backend article format to our format\r\n    const articles: NewsArticle[] = (data.articles || [])\r\n      .filter(article => article.title && article.title.trim() !== '')\r\n      .map((article: BackendArticle) => {\r\n        \r\n        // Better image URL handling\r\n        const thumbnailUrl = article.thumbnail || article.media_thumb_url || '';\r\n        const imageUrl = article.image_url || article.media_url || '';\r\n        \r\n        return {\r\n          id: article.id || article.guid || `article_${Date.now()}`,\r\n          title: article.title || 'No title',\r\n          summary: article.description || 'No summary available',\r\n          url: article.link || '#',\r\n          source: article.source || article.feed_title || 'Unknown Source',\r\n          domain: article.domain || extractDomain(article.link || ''),\r\n          category: article.category || 'general',\r\n          publishedDate: article.published_date || article.pubDate || new Date().toISOString(),\r\n          relevanceScore: article.feed_priority ? article.feed_priority / 10 : 0.5,\r\n          tags: extractTags(article.title, article.description),\r\n          \r\n          // Image fields\r\n          thumbnailUrl,\r\n          imageUrl,\r\n          mediaType: article.media_type || (article.has_image ? 'image' : ''),\r\n          \r\n          // Author info\r\n          author: article.author || '',\r\n          hasAuthor: article.has_author || !!article.author,\r\n          \r\n          // Media info\r\n          hasMedia: article.has_image || !!(thumbnailUrl || imageUrl),\r\n          \r\n          // Content metrics\r\n          wordCount: article.word_count || 0,\r\n          readingTime: article.reading_time || 0,\r\n          contentLength: article.word_count ? article.word_count * 5 : 0,\r\n          \r\n          // Additional metadata\r\n          feedTitle: article.feed_title || article.source || '',\r\n          extractedAt: article.extracted_at || '',\r\n          \r\n          // Quality indicators\r\n          contentQuality: article.content_quality || 'medium',\r\n          completeness: article.completeness || 'partial'\r\n        };\r\n      });\r\n    \r\n    console.log('📰 Processed articles:', articles.length);\r\n    \r\n    // Add pagination information to the response\r\n    return {\r\n      success: true,\r\n      articles: articles,\r\n      count: articles.length,\r\n      pagination: data.pagination,\r\n      filtersApplied: data.filters_applied,\r\n      lastUpdated: new Date().toISOString(),\r\n      message: data.message || 'Health news fetched successfully'\r\n    };\r\n    \r\n  } catch (error: any) {\r\n    console.error('❌ Error fetching news feed from backend:', error);\r\n    \r\n    const fallback = await getFallbackNews();\r\n    return {\r\n      ...fallback,\r\n      message: `Backend error (${error.message}). Showing sample news.`\r\n    };\r\n  }\r\n};\r\n\r\n// Helper function to map backend categories to frontend categories\r\nconst mapBackendCategory = (backendCategory: string | undefined): string => {\r\n  if (!backendCategory) return 'General Health';\r\n  \r\n  const categoryMap: Record<string, string> = {\r\n    'nutrition': 'Nutrition & Diet',\r\n    'diet': 'Nutrition & Diet',\r\n    'medical': 'Medical Research',\r\n    'health': 'Public Health',\r\n    'mental': 'Mental Health',\r\n    'prevention': 'Disease Prevention',\r\n    'clinical': 'Clinical Studies',\r\n    'science': 'Medical Research',\r\n    'tech': 'Medical Technology',\r\n    'political': 'Health Policy',\r\n    'sports': 'Fitness & Sports',\r\n    'entertainment': 'Wellness',\r\n    'business': 'Health Business',\r\n    'nature': 'Environmental Health'\r\n  };\r\n  \r\n  const lowerCategory = backendCategory.toLowerCase();\r\n  for (const [key, value] of Object.entries(categoryMap)) {\r\n    if (lowerCategory.includes(key)) {\r\n      return value;\r\n    }\r\n  }\r\n  \r\n  return 'General Health';\r\n};\r\n\r\n// ENHANCED: Updated fallback news with image URLs\r\nconst getFallbackNews = async (): Promise<NewsFeedResponse> => {\r\n  const fallbackArticles: NewsArticle[] = [\r\n    {\r\n      id: 'fallback_1',\r\n      title: \"New Study Reveals Benefits of Mediterranean Diet for Heart Health\",\r\n      summary: \"Researchers found that following a Mediterranean diet can reduce cardiovascular disease risk by up to 30%. The study tracked over 7,000 participants for 5 years.\",\r\n      url: \"https://www.nih.gov/news-events/news-releases/mediterranean-diet-heart-health\",\r\n      source: \"NIH Health News\",\r\n      domain: \"nih.gov\",\r\n      category: \"Nutrition & Diet\",\r\n      publishedDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.95,\r\n      tags: ['nutrition', 'heart-health', 'mediterranean-diet', 'cardiovascular'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Sarah Johnson\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 150,\r\n      readingTime: 1,\r\n      contentLength: 750\r\n    },\r\n    {\r\n      id: 'fallback_2',\r\n      title: \"Exercise and Mental Health: The Connection You Need to Know\",\r\n      summary: \"New research shows that just 30 minutes of exercise daily can significantly improve mental well-being and reduce symptoms of depression and anxiety.\",\r\n      url: \"https://www.cdc.gov/mental-health/exercise-connection\",\r\n      source: \"CDC Health Updates\",\r\n      domain: \"cdc.gov\",\r\n      category: \"Mental Health\",\r\n      publishedDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.90,\r\n      tags: ['mental-health', 'exercise', 'wellness', 'depression'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Michael Chen\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 180,\r\n      readingTime: 1,\r\n      contentLength: 900\r\n    },\r\n    {\r\n      id: 'fallback_3',\r\n      title: \"The Importance of Sleep for Immune System Function\",\r\n      summary: \"Studies demonstrate that quality sleep is crucial for maintaining a strong immune system. Adults need 7-9 hours of sleep per night for optimal health.\",\r\n      url: \"https://www.nih.gov/news-events/sleep-immune-system\",\r\n      source: \"Sleep Health Research\",\r\n      domain: \"nih.gov\",\r\n      category: \"General Health\",\r\n      publishedDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.85,\r\n      tags: ['sleep', 'immune-system', 'health', 'wellness'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1541781774459-bb2af2f05b55?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1541781774459-bb2af2f05b55?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Lisa Rodriguez\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 200,\r\n      readingTime: 1,\r\n      contentLength: 1000\r\n    },\r\n    {\r\n      id: 'fallback_4',\r\n      title: \"Breakthrough in Cancer Research: New Treatment Shows Promise\",\r\n      summary: \"Scientists have developed a new immunotherapy approach that shows remarkable results in clinical trials, offering hope for difficult-to-treat cancers.\",\r\n      url: \"https://www.nih.gov/news-events/cancer-breakthrough-2024\",\r\n      source: \"Medical Research Today\",\r\n      domain: \"nih.gov\",\r\n      category: \"Medical Research\",\r\n      publishedDate: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.98,\r\n      tags: ['cancer', 'research', 'immunotherapy', 'clinical-trials'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Robert Kim\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 250,\r\n      readingTime: 2,\r\n      contentLength: 1250\r\n    },\r\n    {\r\n      id: 'fallback_5',\r\n      title: \"Preventive Care: Early Detection Saves Lives\",\r\n      summary: \"Regular health screenings can detect potential health issues before they become serious problems. Learn what screenings you need by age.\",\r\n      url: \"https://www.cdc.gov/prevention/early-detection\",\r\n      source: \"CDC Prevention Guidelines\",\r\n      domain: \"cdc.gov\",\r\n      category: \"Disease Prevention\",\r\n      publishedDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\r\n      relevanceScore: 0.80,\r\n      tags: ['prevention', 'screening', 'early-detection', 'health-checkup'],\r\n      thumbnailUrl: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=400&q=80\",\r\n      imageUrl: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&q=80\",\r\n      mediaType: \"image\",\r\n      author: \"Dr. Amanda White\",\r\n      hasMedia: true,\r\n      hasAuthor: true,\r\n      wordCount: 160,\r\n      readingTime: 1,\r\n      contentLength: 800\r\n    }\r\n  ];\r\n\r\n  // Categorize fallback articles\r\n  const categorizedArticles: Record<string, NewsArticle[]> = {};\r\n  fallbackArticles.forEach(article => {\r\n    if (!categorizedArticles[article.category]) {\r\n      categorizedArticles[article.category] = [];\r\n    }\r\n    categorizedArticles[article.category].push(article);\r\n  });\r\n\r\n  return {\r\n    success: true,\r\n    articles: fallbackArticles,\r\n    categories: categorizedArticles,\r\n    lastUpdated: new Date().toISOString(),\r\n    count: fallbackArticles.length,\r\n    message: 'Using sample health news (backend unavailable)'\r\n  };\r\n};\r\n\r\n// Rest of helper functions remain the same but with enhanced logging...\r\nconst extractDomain = (url: string): string => {\r\n  try {\r\n    return new URL(url).hostname.toLowerCase();\r\n  } catch {\r\n    return 'unknown';\r\n  }\r\n};\r\n\r\nconst calculateRelevanceScore = (title: string = '', description: string = ''): number => {\r\n  const content = `${title} ${description}`.toLowerCase();\r\n  \r\n  const healthKeywords = ['health', 'medical', 'wellness', 'fitness', 'nutrition', 'diet', 'exercise', 'mental health', 'disease', 'treatment', 'research', 'study'];\r\n  const matchingKeywords = healthKeywords.filter(keyword => content.includes(keyword));\r\n  \r\n  let score = 0.5;\r\n  score += (matchingKeywords.length * 0.08);\r\n  \r\n  return Math.min(score, 1.0);\r\n};\r\n\r\nconst extractTags = (title: string = '', description: string = '', existingTags?: string): string[] => {\r\n  const content = `${title} ${description}`.toLowerCase();\r\n  const tags: string[] = [];\r\n  \r\n  if (existingTags) {\r\n    try {\r\n      const parsedTags = existingTags.split(',').map(tag => tag.trim()).filter(tag => tag.length > 0);\r\n      tags.push(...parsedTags);\r\n    } catch (e) {\r\n      // Continue with keyword extraction\r\n    }\r\n  }\r\n  \r\n  const tagKeywords = [\r\n    'health', 'medical', 'nutrition', 'diet', 'fitness', 'exercise',\r\n    'mental-health', 'wellness', 'prevention', 'treatment', 'research',\r\n    'study', 'clinical', 'vaccine', 'medicine', 'hospital', 'doctor',\r\n    'heart', 'cancer', 'diabetes', 'sleep', 'immune', 'therapy'\r\n  ];\r\n  \r\n  tagKeywords.forEach(keyword => {\r\n    if (content.includes(keyword.replace('-', ' ')) && !tags.includes(keyword)) {\r\n      tags.push(keyword);\r\n    }\r\n  });\r\n  \r\n  return tags.slice(0, 5);\r\n};\r\n\r\n// ENHANCED: Updated utility functions with image support\r\nexport const formatArticleForDisplay = (article: NewsArticle) => {\r\n  return {\r\n    ...article,\r\n    formattedDate: formatTimeAgo(article.publishedDate),\r\n    isTrusted: isTrustedDomain(article.url),\r\n    relevancePercentage: Math.round(article.relevanceScore * 100),\r\n    shortSummary: article.summary.length > 150 \r\n      ? article.summary.substring(0, 150) + '...'\r\n      : article.summary,\r\n    // ADDED: Image display helpers\r\n    displayImage: article.thumbnailUrl || article.imageUrl || article.feedThumbnailUrl || article.feedImageUrl || '',\r\n    hasValidImage: !!(article.thumbnailUrl || article.imageUrl),\r\n    // ADDED: Content quality indicators\r\n    qualityScore: calculateQualityScore(article),\r\n    readingTimeText: article.readingTime ? `${article.readingTime} min read` : 'Quick read'\r\n  };\r\n};\r\n\r\n// ADDED: Calculate article quality score\r\nconst calculateQualityScore = (article: NewsArticle): number => {\r\n  let score = 0;\r\n  \r\n  if (article.hasAuthor) score += 0.2;\r\n  if (article.hasMedia) score += 0.2;\r\n  if (article.wordCount && article.wordCount > 100) score += 0.2;\r\n  if (article.contentLength && article.contentLength > 500) score += 0.2;\r\n  if (isTrustedDomain(article.url)) score += 0.2;\r\n  \r\n  return Math.min(score, 1.0);\r\n};\r\n\r\n// Rest of the functions remain the same...\r\nexport const getArticlesByCategory = async (category: string, limit?: number): Promise<NewsFeedResponse> => {\r\n  try {\r\n    console.log('📂 Fetching articles for category:', category);\r\n    return await fetchNewsFeed([category], limit);\r\n  } catch (error: any) {\r\n    console.error('❌ Error fetching articles by category:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Error fetching articles by category'\r\n    };\r\n  }\r\n};\r\n\r\nexport const searchNewsArticles = async (query: string, category?: string, limit?: number): Promise<NewsFeedResponse> => {\r\n  try {\r\n    console.log('🔎 Searching articles:', { query, category, limit });\r\n    \r\n    if (!query.trim()) {\r\n      return {\r\n        success: false,\r\n        message: 'Search query cannot be empty'\r\n      };\r\n    }\r\n    \r\n    const feedResponse = await fetchNewsFeed(category ? [category] : undefined, 100);\r\n    \r\n    if (!feedResponse.success || !feedResponse.articles) {\r\n      return {\r\n        success: false,\r\n        message: 'No articles available to search'\r\n      };\r\n    }\r\n    \r\n    const searchTerm = query.toLowerCase();\r\n    \r\n    const matchingArticles = feedResponse.articles\r\n      .filter(article => \r\n        article.title.toLowerCase().includes(searchTerm) ||\r\n        article.summary.toLowerCase().includes(searchTerm) ||\r\n        article.tags.some(tag => tag.includes(searchTerm)) ||\r\n        (article.author && article.author.toLowerCase().includes(searchTerm))\r\n      )\r\n      .slice(0, limit || 10);\r\n    \r\n    return {\r\n      success: true,\r\n      articles: matchingArticles,\r\n      lastUpdated: new Date().toISOString(),\r\n      count: matchingArticles.length,\r\n      message: `Search results for \"${query}\"`\r\n    };\r\n    \r\n  } catch (error: any) {\r\n    console.error('❌ Error searching articles:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Error searching articles'\r\n    };\r\n  }\r\n};\r\n\r\nexport const refreshNewsFeed = async (): Promise<NewsFeedResponse> => {\r\n  try {\r\n    console.log('🔄 Refreshing news feed...');\r\n    try {\r\n      await axios.post(`${API_URL}/news/fetch`, {}, { timeout: 5000 });\r\n      console.log('✅ Triggered backend refresh');\r\n    } catch (fetchError) {\r\n      console.log('⚠️ Could not trigger backend refresh, getting current data');\r\n    }\r\n    \r\n    return await fetchNewsFeed();\r\n  } catch (error: any) {\r\n    console.error('❌ Error refreshing news feed:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Error refreshing news feed'\r\n    };\r\n  }\r\n};\r\n\r\nexport const getNewsFeedStats = async (): Promise<{\r\n  success: boolean;\r\n  message?: string;\r\n  stats?: {\r\n    totalArticles: number;\r\n    categoryCounts: Record<string, number>;\r\n    lastUpdated: string;\r\n    sourcesCounts: Record<string, number>;\r\n    // ADDED: Enhanced stats\r\n    articlesWithImages: number;\r\n    articlesWithAuthors: number;\r\n    averageWordCount: number;\r\n    averageReadingTime: number;\r\n    trustedSources: number;\r\n  };\r\n}> => {\r\n  try {\r\n    const feedResponse = await fetchNewsFeed();\r\n    \r\n    if (!feedResponse.success || !feedResponse.articles) {\r\n      return {\r\n        success: false,\r\n        message: 'No articles available for stats'\r\n      };\r\n    }\r\n    \r\n    const categoryCounts: Record<string, number> = {};\r\n    const sourcesCounts: Record<string, number> = {};\r\n    \r\n    let totalWordCount = 0;\r\n    let totalReadingTime = 0;\r\n    let articlesWithImages = 0;\r\n    let articlesWithAuthors = 0;\r\n    let trustedSources = 0;\r\n    \r\n    feedResponse.articles.forEach(article => {\r\n      categoryCounts[article.category] = (categoryCounts[article.category] || 0) + 1;\r\n      sourcesCounts[article.source] = (sourcesCounts[article.source] || 0) + 1;\r\n      \r\n      if (article.hasMedia) articlesWithImages++;\r\n      if (article.hasAuthor) articlesWithAuthors++;\r\n      if (isTrustedDomain(article.url)) trustedSources++;\r\n      if (article.wordCount) totalWordCount += article.wordCount;\r\n      if (article.readingTime) totalReadingTime += article.readingTime;\r\n    });\r\n\r\n    return {\r\n      success: true,\r\n      stats: {\r\n        totalArticles: feedResponse.articles.length,\r\n        categoryCounts,\r\n        lastUpdated: feedResponse.lastUpdated || new Date().toISOString(),\r\n        sourcesCounts,\r\n        articlesWithImages,\r\n        articlesWithAuthors,\r\n        averageWordCount: Math.round(totalWordCount / feedResponse.articles.length) || 0,\r\n        averageReadingTime: Math.round(totalReadingTime / feedResponse.articles.length) || 0,\r\n        trustedSources\r\n      }\r\n    };\r\n  } catch (error: any) {\r\n    console.error('❌ Error fetching stats:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Error fetching news feed statistics'\r\n    };\r\n  }\r\n};\r\n\r\n// Utility functions remain the same...\r\nexport const isTrustedDomain = (url: string): boolean => {\r\n  try {\r\n    const domain = new URL(url).hostname.toLowerCase();\r\n    return Object.keys(TRUSTED_DOMAINS).some(trustedDomain => \r\n      domain.includes(trustedDomain.toLowerCase())\r\n    );\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const formatTimeAgo = (dateString: string): string => {\r\n  try {\r\n    const now = new Date();\r\n    const publishedDate = new Date(dateString);\r\n    const diffInHours = Math.floor((now.getTime() - publishedDate.getTime()) / (1000 * 60 * 60));\r\n    \r\n    if (diffInHours < 1) return 'Just now';\r\n    if (diffInHours < 24) return `${diffInHours}h ago`;\r\n    \r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    if (diffInDays < 7) return `${diffInDays}d ago`;\r\n    \r\n    const diffInWeeks = Math.floor(diffInDays / 7);\r\n    if (diffInWeeks < 4) return `${diffInWeeks}w ago`;\r\n    \r\n    const diffInMonths = Math.floor(diffInDays / 30);\r\n    return `${diffInMonths}mo ago`;\r\n  } catch {\r\n    return 'Unknown';\r\n  }\r\n};\r\n\r\nexport const getAvailableCategories = (): Array<{id: string, label: string}> => {\r\n  return [\r\n    { id: 'all', label: 'All Health News' },\r\n    { id: 'nutrition', label: 'Nutrition & Diet' },\r\n    { id: 'medical', label: 'Medical Research' },\r\n    { id: 'health', label: 'Public Health' },\r\n    { id: 'clinical', label: 'Clinical Studies' },\r\n    { id: 'prevention', label: 'Disease Prevention' },\r\n    { id: 'mental', label: 'Mental Health' },\r\n    { id: 'science', label: 'Science Research' },\r\n    { id: 'general', label: 'General Health' }\r\n  ];\r\n};\r\n\r\n// Legacy compatibility\r\nexport interface NewsItem {\r\n  title: string;\r\n  link: string;\r\n  description: string;\r\n  pubDate: string;\r\n  source: string;\r\n  category: string;\r\n  // ADDED: Legacy support for new fields\r\n  thumbnailUrl?: string;\r\n  imageUrl?: string;\r\n  author?: string;\r\n  hasMedia?: boolean;\r\n}\r\n\r\nexport class NewsService {\r\n  async fetchNews(): Promise<NewsItem[]> {\r\n    const response = await fetchNewsFeed();\r\n    \r\n    return response.articles?.map(article => ({\r\n      title: article.title,\r\n      link: article.url,\r\n      description: article.summary,\r\n      pubDate: article.publishedDate,\r\n      source: article.source,\r\n      category: article.category,\r\n      thumbnailUrl: article.thumbnailUrl,\r\n      imageUrl: article.imageUrl,\r\n      author: article.author,\r\n      hasMedia: article.hasMedia\r\n    })) || [];\r\n  }\r\n}\r\n\r\nexport const newsService = new NewsService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}