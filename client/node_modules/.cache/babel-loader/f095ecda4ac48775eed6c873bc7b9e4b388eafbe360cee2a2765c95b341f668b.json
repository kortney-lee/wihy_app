{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{wihyAPI}from'../services/wihyAPI';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChatWidget=_ref=>{let{isOpen,onClose,searchQuery,searchResponse,currentContext,inline=false}=_ref;const[messages,setMessages]=useState([]);const[inputValue,setInputValue]=useState('');const[isLoading,setIsLoading]=useState(false);const messagesEndRef=useRef(null);const inputRef=useRef(null);// Auto-scroll to bottom when new messages are added\nconst scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);// Initialize conversation with search results if provided\nuseEffect(()=>{if(searchQuery&&searchResponse&&messages.length===0){// Create a conversational summary instead of full response\nlet conversationalSummary=searchResponse;// Extract key points and make it conversational\nif(searchResponse.includes('WIHY Health')){const lines=searchResponse.split('\\n').filter(line=>line.trim());const keyPoints=lines.filter(line=>line.includes('â€¢')||line.includes('-')).slice(0,2).map(line=>line.replace(/[â€¢-]/g,'').trim()).join('. ');conversationalSummary=keyPoints||'I found some helpful information for you!';conversationalSummary+=' What specific aspect would you like to explore further?';}const initialMessages=[{id:Date.now().toString()+'-user',type:'user',content:searchQuery,timestamp:new Date()},{id:Date.now().toString()+'-ai',type:'ai',content:conversationalSummary,timestamp:new Date()}];setMessages(initialMessages);}},[searchQuery,searchResponse,messages.length]);// Focus input when chat opens\nuseEffect(()=>{if(isOpen&&inputRef.current){setTimeout(()=>{var _inputRef$current;return(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();},100);}},[isOpen]);const handleSendMessage=async()=>{if(!inputValue.trim()||isLoading)return;const userMessage={id:Date.now().toString()+'-user',type:'user',content:inputValue.trim(),timestamp:new Date()};setMessages(prev=>[...prev,userMessage]);setInputValue('');setIsLoading(true);try{// Build conversation context from previous messages\nconst conversationHistory=messages.slice(-4)// Last 4 messages for context\n.map(msg=>\"\".concat(msg.type==='user'?'User':'AI',\": \").concat(msg.content)).join('\\n');// Create a focused query for conversational responses\nconst contextualQuery=\"Please provide a brief, conversational response (2-3 sentences max) to: \".concat(userMessage.content).concat(conversationHistory?\"\\n\\nContext from our conversation: \".concat(conversationHistory):'');const response=await wihyAPI.askAnything({query:contextualQuery,user_context:{conversation_mode:true,response_style:'concise',conversation_context:conversationHistory,current_context:currentContext,is_followup:messages.length>0}});// Extract just the main response without full formatting\nlet aiResponse='';if('success'in response&&'data'in response&&response.data&&'response'in response.data){const healthResp=response;aiResponse=healthResp.data.response;// Clean up the response to be more conversational\naiResponse=aiResponse.replace(/ðŸ¥—.*?\\*\\*/g,'')// Remove emoji headers\n.replace(/\\*\\*.*?\\*\\*/g,'')// Remove bold formatting\n.replace(/ðŸ“‹.*?:/g,'')// Remove section headers\n.replace(/â€¢/g,'-')// Replace bullets\n.split('\\n').filter(line=>line.trim()&&!line.includes('Biblical')&&!line.includes('Corinthians')).slice(0,3)// Take first 3 meaningful lines\n.join(' ').trim();// If response is too long, truncate and add follow-up prompt\nif(aiResponse.length>200){aiResponse=aiResponse.substring(0,200).trim()+'... What would you like to know more about?';}}else{aiResponse=wihyAPI.formatWihyResponse(response);}const aiMessage={id:Date.now().toString()+'-ai',type:'ai',content:aiResponse,timestamp:new Date()};setMessages(prev=>[...prev,aiMessage]);}catch(error){console.error('Chat error:',error);const errorMessage={id:Date.now().toString()+'-ai',type:'ai',content:\"I'm having trouble connecting right now. Please try again in a moment.\",timestamp:new Date()};setMessages(prev=>[...prev,errorMessage]);}finally{setIsLoading(false);}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};if(!isOpen){return null;}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"style\",{children:\"\\n        .chat-messages-scroll::-webkit-scrollbar {\\n          width: 6px;\\n        }\\n        .chat-messages-scroll::-webkit-scrollbar-track {\\n          background: #f1f1f1;\\n          border-radius: 3px;\\n        }\\n        .chat-messages-scroll::-webkit-scrollbar-thumb {\\n          background: #c1c1c1;\\n          border-radius: 3px;\\n        }\\n        .chat-messages-scroll::-webkit-scrollbar-thumb:hover {\\n          background: #a8a8a8;\\n        }\\n        \\n        /* Hide scrollbar on mobile devices */\\n        @media (max-width: 768px) {\\n          .chat-messages-scroll::-webkit-scrollbar {\\n            display: none;\\n          }\\n          .chat-messages-scroll {\\n            -ms-overflow-style: none;  /* IE and Edge */\\n            scrollbar-width: none;  /* Firefox */\\n          }\\n        }\\n      \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages-scroll\",style:{display:'flex',flexDirection:'column',gap:'12px',height:'300px',// Fixed height\noverflowY:'auto',// Enable vertical scrolling\noverflowX:'hidden',// Prevent horizontal scroll\npadding:'8px',border:'1px solid #e2e8f0',borderRadius:'8px',backgroundColor:'#fafafa'},children:[messages.length===0?/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'40px 20px',color:'#64748b'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'48px',marginBottom:'16px',opacity:0.3},children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'14px',fontWeight:'500',marginBottom:'8px'},children:\"Start a health conversation\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#94a3b8'},children:\"Ask any health question to begin learning\"})]}):messages.map(message=>/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:message.type==='user'?'flex-end':'flex-start',marginBottom:'8px'},children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:'80%',padding:'12px 16px',borderRadius:'18px',backgroundColor:message.type==='user'?'#3b82f6':'#f1f5f9',color:message.type==='user'?'white':'#334155',fontSize:'14px',lineHeight:'1.5',whiteSpace:'pre-wrap',wordWrap:'break-word'},children:message.content})},message.id)),isLoading&&/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'flex-start'},children:/*#__PURE__*/_jsx(\"div\",{style:{padding:'12px 16px',borderRadius:'18px',backgroundColor:'#f1f5f9',color:'#64748b',fontSize:'14px'},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'4px',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Thinking\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-flex',gap:'2px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'4px',height:'4px',borderRadius:'50%',backgroundColor:'#64748b',animation:'pulse 1.4s ease-in-out infinite both',animationDelay:'0s'}}),/*#__PURE__*/_jsx(\"div\",{style:{width:'4px',height:'4px',borderRadius:'50%',backgroundColor:'#64748b',animation:'pulse 1.4s ease-in-out infinite both',animationDelay:'0.2s'}}),/*#__PURE__*/_jsx(\"div\",{style:{width:'4px',height:'4px',borderRadius:'50%',backgroundColor:'#64748b',animation:'pulse 1.4s ease-in-out infinite both',animationDelay:'0.4s'}})]})]})})}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'8px',alignItems:'center',marginTop:'16px'},children:[/*#__PURE__*/_jsx(\"input\",{ref:inputRef,type:\"text\",value:inputValue,onChange:e=>setInputValue(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Ask a follow-up question...\",disabled:isLoading,style:{flex:1,padding:'8px 12px',border:'1px solid #d1d5db',borderRadius:'16px',fontSize:'14px',outline:'none',backgroundColor:isLoading?'#f9fafb':'white'}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:!inputValue.trim()||isLoading,style:{padding:'8px 16px',backgroundColor:!inputValue.trim()||isLoading?'#d1d5db':'#3b82f6',color:'white',border:'none',borderRadius:'16px',cursor:!inputValue.trim()||isLoading?'not-allowed':'pointer',fontSize:'14px',fontWeight:'500'},children:\"Send\"})]})]});};export default ChatWidget;","map":{"version":3,"names":["React","useState","useRef","useEffect","wihyAPI","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatWidget","_ref","isOpen","onClose","searchQuery","searchResponse","currentContext","inline","messages","setMessages","inputValue","setInputValue","isLoading","setIsLoading","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","length","conversationalSummary","includes","lines","split","filter","line","trim","keyPoints","slice","map","replace","join","initialMessages","id","Date","now","toString","type","content","timestamp","setTimeout","_inputRef$current","focus","handleSendMessage","userMessage","prev","conversationHistory","msg","concat","contextualQuery","response","askAnything","query","user_context","conversation_mode","response_style","conversation_context","current_context","is_followup","aiResponse","data","healthResp","substring","formatWihyResponse","aiMessage","error","console","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","children","className","style","display","flexDirection","gap","height","overflowY","overflowX","padding","border","borderRadius","backgroundColor","textAlign","color","fontSize","marginBottom","opacity","fontWeight","message","justifyContent","maxWidth","lineHeight","whiteSpace","wordWrap","alignItems","width","animation","animationDelay","ref","marginTop","value","onChange","target","onKeyPress","placeholder","disabled","flex","outline","onClick","cursor"],"sources":["C:/repo/wihy_ui/client/src/components/ChatWidget.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { wihyAPI } from '../services/wihyAPI';\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  type: 'user' | 'ai';\r\n  content: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface ChatWidgetProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  searchQuery?: string;\r\n  searchResponse?: string;\r\n  currentContext?: string; // Current dashboard section being viewed\r\n  inline?: boolean; // Whether to render inline or as fixed overlay\r\n}\r\n\r\nconst ChatWidget: React.FC<ChatWidgetProps> = ({ isOpen, onClose, searchQuery, searchResponse, currentContext, inline = false }) => {\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Auto-scroll to bottom when new messages are added\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Initialize conversation with search results if provided\r\n  useEffect(() => {\r\n    if (searchQuery && searchResponse && messages.length === 0) {\r\n      // Create a conversational summary instead of full response\r\n      let conversationalSummary = searchResponse;\r\n      \r\n      // Extract key points and make it conversational\r\n      if (searchResponse.includes('WIHY Health')) {\r\n        const lines = searchResponse.split('\\n').filter(line => line.trim());\r\n        const keyPoints = lines\r\n          .filter(line => line.includes('â€¢') || line.includes('-'))\r\n          .slice(0, 2)\r\n          .map(line => line.replace(/[â€¢-]/g, '').trim())\r\n          .join('. ');\r\n          \r\n        conversationalSummary = keyPoints || 'I found some helpful information for you!';\r\n        conversationalSummary += ' What specific aspect would you like to explore further?';\r\n      }\r\n      \r\n      const initialMessages: ChatMessage[] = [\r\n        {\r\n          id: Date.now().toString() + '-user',\r\n          type: 'user',\r\n          content: searchQuery,\r\n          timestamp: new Date()\r\n        },\r\n        {\r\n          id: Date.now().toString() + '-ai',\r\n          type: 'ai',\r\n          content: conversationalSummary,\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n      setMessages(initialMessages);\r\n    }\r\n  }, [searchQuery, searchResponse, messages.length]);\r\n\r\n  // Focus input when chat opens\r\n  useEffect(() => {\r\n    if (isOpen && inputRef.current) {\r\n      setTimeout(() => inputRef.current?.focus(), 100);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim() || isLoading) return;\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString() + '-user',\r\n      type: 'user',\r\n      content: inputValue.trim(),\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Build conversation context from previous messages\r\n      const conversationHistory = messages.slice(-4) // Last 4 messages for context\r\n        .map(msg => `${msg.type === 'user' ? 'User' : 'AI'}: ${msg.content}`)\r\n        .join('\\n');\r\n      \r\n      // Create a focused query for conversational responses\r\n      const contextualQuery = `Please provide a brief, conversational response (2-3 sentences max) to: ${userMessage.content}${conversationHistory ? `\\n\\nContext from our conversation: ${conversationHistory}` : ''}`;\r\n\r\n      const response = await wihyAPI.askAnything({\r\n        query: contextualQuery,\r\n        user_context: {\r\n          conversation_mode: true,\r\n          response_style: 'concise',\r\n          conversation_context: conversationHistory,\r\n          current_context: currentContext,\r\n          is_followup: messages.length > 0\r\n        }\r\n      });\r\n\r\n      // Extract just the main response without full formatting\r\n      let aiResponse = '';\r\n      if ('success' in response && 'data' in response && response.data && 'response' in response.data) {\r\n        const healthResp = response as any;\r\n        aiResponse = healthResp.data.response;\r\n        \r\n        // Clean up the response to be more conversational\r\n        aiResponse = aiResponse\r\n          .replace(/ðŸ¥—.*?\\*\\*/g, '') // Remove emoji headers\r\n          .replace(/\\*\\*.*?\\*\\*/g, '') // Remove bold formatting\r\n          .replace(/ðŸ“‹.*?:/g, '') // Remove section headers\r\n          .replace(/â€¢/g, '-') // Replace bullets\r\n          .split('\\n')\r\n          .filter(line => line.trim() && !line.includes('Biblical') && !line.includes('Corinthians'))\r\n          .slice(0, 3) // Take first 3 meaningful lines\r\n          .join(' ')\r\n          .trim();\r\n          \r\n        // If response is too long, truncate and add follow-up prompt\r\n        if (aiResponse.length > 200) {\r\n          aiResponse = aiResponse.substring(0, 200).trim() + '... What would you like to know more about?';\r\n        }\r\n      } else {\r\n        aiResponse = wihyAPI.formatWihyResponse(response);\r\n      }\r\n      \r\n      const aiMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-ai',\r\n        type: 'ai',\r\n        content: aiResponse,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      setMessages(prev => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      const errorMessage: ChatMessage = {\r\n        id: Date.now().toString() + '-ai',\r\n        type: 'ai',\r\n        content: \"I'm having trouble connecting right now. Please try again in a moment.\",\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n  \r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Add custom scrollbar styles */}\r\n      <style>{`\r\n        .chat-messages-scroll::-webkit-scrollbar {\r\n          width: 6px;\r\n        }\r\n        .chat-messages-scroll::-webkit-scrollbar-track {\r\n          background: #f1f1f1;\r\n          border-radius: 3px;\r\n        }\r\n        .chat-messages-scroll::-webkit-scrollbar-thumb {\r\n          background: #c1c1c1;\r\n          border-radius: 3px;\r\n        }\r\n        .chat-messages-scroll::-webkit-scrollbar-thumb:hover {\r\n          background: #a8a8a8;\r\n        }\r\n        \r\n        /* Hide scrollbar on mobile devices */\r\n        @media (max-width: 768px) {\r\n          .chat-messages-scroll::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n          .chat-messages-scroll {\r\n            -ms-overflow-style: none;  /* IE and Edge */\r\n            scrollbar-width: none;  /* Firefox */\r\n          }\r\n        }\r\n      `}</style>\r\n\r\n      {/* Just render the messages without outer container */}\r\n\r\n      {/* Messages Area - render directly without container */}\r\n      <div \r\n        className=\"chat-messages-scroll\"\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: '12px',\r\n          height: '300px', // Fixed height\r\n          overflowY: 'auto', // Enable vertical scrolling\r\n          overflowX: 'hidden', // Prevent horizontal scroll\r\n          padding: '8px',\r\n          border: '1px solid #e2e8f0',\r\n          borderRadius: '8px',\r\n          backgroundColor: '#fafafa'\r\n        }}>\r\n        {messages.length === 0 ? (\r\n          <div style={{\r\n            textAlign: 'center',\r\n            padding: '40px 20px',\r\n            color: '#64748b'\r\n          }}>\r\n            <div style={{\r\n              fontSize: '48px',\r\n              marginBottom: '16px',\r\n              opacity: 0.3\r\n            }}>\r\n              ðŸ’¬\r\n            </div>\r\n            <div style={{\r\n              fontSize: '14px',\r\n              fontWeight: '500',\r\n              marginBottom: '8px'\r\n            }}>\r\n              Start a health conversation\r\n            </div>\r\n            <div style={{\r\n              fontSize: '12px',\r\n              color: '#94a3b8'\r\n            }}>\r\n              Ask any health question to begin learning\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: message.type === 'user' ? 'flex-end' : 'flex-start',\r\n                marginBottom: '8px'\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  maxWidth: '80%',\r\n                  padding: '12px 16px',\r\n                  borderRadius: '18px',\r\n                  backgroundColor: message.type === 'user' ? '#3b82f6' : '#f1f5f9',\r\n                  color: message.type === 'user' ? 'white' : '#334155',\r\n                  fontSize: '14px',\r\n                  lineHeight: '1.5',\r\n                  whiteSpace: 'pre-wrap',\r\n                  wordWrap: 'break-word'\r\n                }}\r\n              >\r\n                {message.content}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        \r\n        {isLoading && (\r\n          <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\r\n            <div style={{\r\n              padding: '12px 16px',\r\n              borderRadius: '18px',\r\n              backgroundColor: '#f1f5f9',\r\n              color: '#64748b',\r\n              fontSize: '14px'\r\n            }}>\r\n              <div style={{\r\n                display: 'flex',\r\n                gap: '4px',\r\n                alignItems: 'center'\r\n              }}>\r\n                <span>Thinking</span>\r\n                <div style={{\r\n                  display: 'inline-flex',\r\n                  gap: '2px'\r\n                }}>\r\n                  <div style={{\r\n                    width: '4px',\r\n                    height: '4px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: '#64748b',\r\n                    animation: 'pulse 1.4s ease-in-out infinite both',\r\n                    animationDelay: '0s'\r\n                  }}></div>\r\n                  <div style={{\r\n                    width: '4px',\r\n                    height: '4px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: '#64748b',\r\n                    animation: 'pulse 1.4s ease-in-out infinite both',\r\n                    animationDelay: '0.2s'\r\n                  }}></div>\r\n                  <div style={{\r\n                    width: '4px',\r\n                    height: '4px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: '#64748b',\r\n                    animation: 'pulse 1.4s ease-in-out infinite both',\r\n                    animationDelay: '0.4s'\r\n                  }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div style={{\r\n        display: 'flex',\r\n        gap: '8px',\r\n        alignItems: 'center',\r\n        marginTop: '16px'\r\n      }}>\r\n        <input\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Ask a follow-up question...\"\r\n          disabled={isLoading}\r\n          style={{\r\n            flex: 1,\r\n            padding: '8px 12px',\r\n            border: '1px solid #d1d5db',\r\n            borderRadius: '16px',\r\n            fontSize: '14px',\r\n            outline: 'none',\r\n            backgroundColor: isLoading ? '#f9fafb' : 'white'\r\n          }}\r\n        />\r\n        <button\r\n          onClick={handleSendMessage}\r\n          disabled={!inputValue.trim() || isLoading}\r\n          style={{\r\n            padding: '8px 16px',\r\n            backgroundColor: (!inputValue.trim() || isLoading) ? '#d1d5db' : '#3b82f6',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '16px',\r\n            cursor: (!inputValue.trim() || isLoading) ? 'not-allowed' : 'pointer',\r\n            fontSize: '14px',\r\n            fontWeight: '500'\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}