{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { ApiKeyCredentials } from \"./apiKeyCredentials\";\nvar TopicCredentials = /** @class */function (_super) {\n  __extends(TopicCredentials, _super);\n  /**\n   * Creates a new EventGrid TopicCredentials object.\n   *\n   * @constructor\n   * @param {string} topicKey   The EventGrid topic key\n   */\n  function TopicCredentials(topicKey) {\n    var _this = this;\n    if (!topicKey || topicKey && typeof topicKey !== \"string\") {\n      throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n    }\n    var options = {\n      inHeader: {\n        \"aeg-sas-key\": topicKey\n      }\n    };\n    _this = _super.call(this, options) || this;\n    return _this;\n  }\n  return TopicCredentials;\n}(ApiKeyCredentials);\nexport { TopicCredentials };","map":{"version":3,"names":["ApiKeyCredentials","TopicCredentials","_super","__extends","topicKey","_this","Error","options","inHeader","call"],"sources":["C:\\repo\\wihy_ui\\client\\node_modules\\@azure\\ms-rest-js\\lib\\credentials\\topicCredentials.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { ApiKeyCredentials, ApiKeyCredentialOptions } from \"./apiKeyCredentials\";\n\nexport class TopicCredentials extends ApiKeyCredentials {\n  /**\n   * Creates a new EventGrid TopicCredentials object.\n   *\n   * @constructor\n   * @param {string} topicKey   The EventGrid topic key\n   */\n  constructor(topicKey: string) {\n    if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n      throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n    }\n    const options: ApiKeyCredentialOptions = {\n      inHeader: {\n        \"aeg-sas-key\": topicKey,\n      },\n    };\n    super(options);\n  }\n}\n"],"mappings":"AAAA;AACA;;AAEA,SAASA,iBAAiB,QAAiC,qBAAqB;AAEhF,IAAAC,gBAAA,0BAAAC,MAAA;EAAsCC,SAAA,CAAAF,gBAAA,EAAAC,MAAA;EACpC;;;;;;EAMA,SAAAD,iBAAYG,QAAgB;IAA5B,IAAAC,KAAA;IACE,IAAI,CAACD,QAAQ,IAAKA,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAS,EAAE;MAC3D,MAAM,IAAIE,KAAK,CAAC,kEAAkE,CAAC;;IAErF,IAAMC,OAAO,GAA4B;MACvCC,QAAQ,EAAE;QACR,aAAa,EAAEJ;;KAElB;IACDC,KAAA,GAAAH,MAAA,CAAAO,IAAA,OAAMF,OAAO,CAAC;;EAChB;EACF,OAAAN,gBAAC;AAAD,CAAC,CAlBqCD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}