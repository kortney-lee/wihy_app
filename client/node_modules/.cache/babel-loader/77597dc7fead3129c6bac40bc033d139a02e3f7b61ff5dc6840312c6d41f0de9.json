{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport VHealthSearch from './VHealthSearch';\nimport SearchResults from './SearchResults';\nimport { searchHealth } from './services/healthSearchService';\nimport './styles/VHealthSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('search');\n  const [searchResults, setSearchResults] = useState(null);\n  const [currentQuery, setCurrentQuery] = useState('');\n  const [dataSource, setDataSource] = useState('openai');\n  const [citations, setCitations] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleBackToSearch = () => {\n    setCurrentPage('search');\n    setSearchResults(null);\n    setCurrentQuery('');\n  };\n  const handleNewSearch = async newQuery => {\n    setIsLoading(true);\n    setCurrentQuery(newQuery);\n    try {\n      console.log('App: Starting new search for:', newQuery);\n      const results = await searchHealth(newQuery);\n      console.log('App: Search results received:', results);\n      if (results && (results.summary || results.details)) {\n        setSearchResults(results);\n        setDataSource('openai');\n        setCitations(results.sources || []);\n        setCurrentPage('results');\n\n        // Update URL\n        window.history.pushState({}, '', `/results?q=${encodeURIComponent(newQuery)}`);\n      }\n    } catch (error) {\n      console.error('App: Search error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle URL changes\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const query = urlParams.get('q');\n    if (query && query !== currentQuery && !isLoading) {\n      handleNewSearch(query);\n    }\n  }, [window.location.search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currentPage === 'search' && /*#__PURE__*/_jsxDEV(VHealthSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), currentPage === 'results' && /*#__PURE__*/_jsxDEV(SearchResults, {\n      query: currentQuery,\n      results: searchResults,\n      onBackToSearch: handleBackToSearch,\n      onNewSearch: handleNewSearch,\n      isLoading: isLoading,\n      dataSource: dataSource,\n      citations: citations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"t6g+H29Z4cvsddDbTDE25MdhnD0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","VHealthSearch","SearchResults","searchHealth","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","searchResults","setSearchResults","currentQuery","setCurrentQuery","dataSource","setDataSource","citations","setCitations","isLoading","setIsLoading","handleBackToSearch","handleNewSearch","newQuery","console","log","results","summary","details","sources","window","history","pushState","encodeURIComponent","error","urlParams","URLSearchParams","location","search","query","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onBackToSearch","onNewSearch","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\nimport VHealthSearch from './VHealthSearch';\r\nimport SearchResults from './SearchResults';\r\nimport { searchHealth } from './services/healthSearchService';\r\nimport './styles/VHealthSearch.css';\r\n\r\nconst App: React.FC = () => {\r\n  const [currentPage, setCurrentPage] = useState('search');\r\n  const [searchResults, setSearchResults] = useState<any>(null);\r\n  const [currentQuery, setCurrentQuery] = useState('');\r\n  const [dataSource, setDataSource] = useState<'error' | 'openai' | 'local' | 'vnutrition'>('openai');\r\n  const [citations, setCitations] = useState<any[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleBackToSearch = () => {\r\n    setCurrentPage('search');\r\n    setSearchResults(null);\r\n    setCurrentQuery('');\r\n  };\r\n\r\n  const handleNewSearch = async (newQuery: string) => {\r\n    setIsLoading(true);\r\n    setCurrentQuery(newQuery);\r\n    \r\n    try {\r\n      console.log('App: Starting new search for:', newQuery);\r\n      const results = await searchHealth(newQuery);\r\n      console.log('App: Search results received:', results);\r\n      \r\n      if (results && (results.summary || results.details)) {\r\n        setSearchResults(results);\r\n        setDataSource('openai');\r\n        setCitations(results.sources || []);\r\n        setCurrentPage('results');\r\n        \r\n        // Update URL\r\n        window.history.pushState({}, '', `/results?q=${encodeURIComponent(newQuery)}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('App: Search error:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle URL changes\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const query = urlParams.get('q');\r\n    \r\n    if (query && query !== currentQuery && !isLoading) {\r\n      handleNewSearch(query);\r\n    }\r\n  }, [window.location.search]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {currentPage === 'search' && (\r\n        <VHealthSearch />\r\n      )}\r\n      \r\n      {currentPage === 'results' && (\r\n        <SearchResults\r\n          query={currentQuery}\r\n          results={searchResults}\r\n          onBackToSearch={handleBackToSearch}\r\n          onNewSearch={handleNewSearch}\r\n          isLoading={isLoading}\r\n          dataSource={dataSource}\r\n          citations={citations}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}