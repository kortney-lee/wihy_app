{"ast":null,"code":"/**\r\n * Production console override\r\n * Disables console.log in production to clean up output\r\n * while keeping warnings and errors for debugging\r\n */// Only apply in production environment\nif(process.env.NODE_ENV==='production'&&process.env.REACT_APP_DEBUG_MODE!=='true'){// Override console.log to be a no-op in production\nconst originalLog=console.log;console.log=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}// Only log if it contains error or warning keywords\nconst message=args.join(' ').toLowerCase();if(message.includes('error')||message.includes('warning')||message.includes('failed')){originalLog.apply(console,args);}// Otherwise, do nothing (suppress the log)\n};// Keep console.warn and console.error unchanged for debugging\n// These are important for production troubleshooting\n}export{};// Make this a module","map":{"version":3,"names":["process","env","NODE_ENV","REACT_APP_DEBUG_MODE","originalLog","console","log","_len","arguments","length","args","Array","_key","message","join","toLowerCase","includes","apply"],"sources":["C:/repo/wihy_ui/client/src/utils/productionConsole.ts"],"sourcesContent":["/**\r\n * Production console override\r\n * Disables console.log in production to clean up output\r\n * while keeping warnings and errors for debugging\r\n */\r\n\r\n// Only apply in production environment\r\nif (process.env.NODE_ENV === 'production' && process.env.REACT_APP_DEBUG_MODE !== 'true') {\r\n  // Override console.log to be a no-op in production\r\n  const originalLog = console.log;\r\n  \r\n  console.log = (...args: any[]) => {\r\n    // Only log if it contains error or warning keywords\r\n    const message = args.join(' ').toLowerCase();\r\n    if (message.includes('error') || message.includes('warning') || message.includes('failed')) {\r\n      originalLog.apply(console, args);\r\n    }\r\n    // Otherwise, do nothing (suppress the log)\r\n  };\r\n  \r\n  // Keep console.warn and console.error unchanged for debugging\r\n  // These are important for production troubleshooting\r\n}\r\n\r\nexport {}; // Make this a module"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GAEA;AACA,GAAIA,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,EAAIF,OAAO,CAACC,GAAG,CAACE,oBAAoB,GAAK,MAAM,CAAE,CACxF;AACA,KAAM,CAAAC,WAAW,CAAGC,OAAO,CAACC,GAAG,CAE/BD,OAAO,CAACC,GAAG,CAAG,UAAoB,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAAhBC,IAAI,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAJF,IAAI,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GACpB;AACA,KAAM,CAAAC,OAAO,CAAGH,IAAI,CAACI,IAAI,CAAC,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC,CAC5C,GAAIF,OAAO,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAIH,OAAO,CAACG,QAAQ,CAAC,SAAS,CAAC,EAAIH,OAAO,CAACG,QAAQ,CAAC,QAAQ,CAAC,CAAE,CAC1FZ,WAAW,CAACa,KAAK,CAACZ,OAAO,CAAEK,IAAI,CAAC,CAClC,CACA;AACF,CAAC,CAED;AACA;AACF,CAEA,SAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}