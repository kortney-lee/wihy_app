{"ast":null,"code":"/**\r\n * Production console override\r\n * Disables console.log in production to clean up output\r\n * while keeping warnings and errors for debugging\r\n */\n\n// Only apply in production environment\nif (process.env.NODE_ENV === 'production' && process.env.REACT_APP_DEBUG_MODE !== 'true') {\n  // Override console.log to be a no-op in production\n  const originalLog = console.log;\n  console.log = (...args) => {\n    // Only log if it contains error or warning keywords\n    const message = args.join(' ').toLowerCase();\n    if (message.includes('error') || message.includes('warning') || message.includes('failed')) {\n      originalLog.apply(console, args);\n    }\n    // Otherwise, do nothing (suppress the log)\n  };\n\n  // Keep console.warn and console.error unchanged for debugging\n  // These are important for production troubleshooting\n}\nexport {}; // Make this a module","map":{"version":3,"names":["process","env","NODE_ENV","REACT_APP_DEBUG_MODE","originalLog","console","log","args","message","join","toLowerCase","includes","apply"],"sources":["C:/repo/wihy_ui/client/src/utils/productionConsole.ts"],"sourcesContent":["/**\r\n * Production console override\r\n * Disables console.log in production to clean up output\r\n * while keeping warnings and errors for debugging\r\n */\r\n\r\n// Only apply in production environment\r\nif (process.env.NODE_ENV === 'production' && process.env.REACT_APP_DEBUG_MODE !== 'true') {\r\n  // Override console.log to be a no-op in production\r\n  const originalLog = console.log;\r\n  \r\n  console.log = (...args: any[]) => {\r\n    // Only log if it contains error or warning keywords\r\n    const message = args.join(' ').toLowerCase();\r\n    if (message.includes('error') || message.includes('warning') || message.includes('failed')) {\r\n      originalLog.apply(console, args);\r\n    }\r\n    // Otherwise, do nothing (suppress the log)\r\n  };\r\n  \r\n  // Keep console.warn and console.error unchanged for debugging\r\n  // These are important for production troubleshooting\r\n}\r\n\r\nexport {}; // Make this a module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAIA,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIF,OAAO,CAACC,GAAG,CAACE,oBAAoB,KAAK,MAAM,EAAE;EACxF;EACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG;EAE/BD,OAAO,CAACC,GAAG,GAAG,CAAC,GAAGC,IAAW,KAAK;IAChC;IACA,MAAMC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAAC,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC;IAC5C,IAAIF,OAAO,CAACG,QAAQ,CAAC,OAAO,CAAC,IAAIH,OAAO,CAACG,QAAQ,CAAC,SAAS,CAAC,IAAIH,OAAO,CAACG,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC1FP,WAAW,CAACQ,KAAK,CAACP,OAAO,EAAEE,IAAI,CAAC;IAClC;IACA;EACF,CAAC;;EAED;EACA;AACF;AAEA,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}