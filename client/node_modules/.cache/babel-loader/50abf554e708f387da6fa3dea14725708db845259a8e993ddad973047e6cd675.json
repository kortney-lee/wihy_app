{"ast":null,"code":"// Mobile-friendly API configuration\nconst getWihyApiUrl = () => {\n  // Check for explicit environment variable first\n  if (process.env.REACT_APP_WIHY_API_URL) {\n    return process.env.REACT_APP_WIHY_API_URL;\n  }\n\n  // Detect mobile browser or remote access\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n\n  // If accessing from mobile or non-localhost, try to use the current host\n  if (isMobile || !isLocalhost) {\n    // Try to use the same host as the frontend with port 8000\n    const currentHost = window.location.hostname;\n    return `http://${currentHost}:8000`;\n  }\n\n  // Default to localhost for desktop development\n  return 'http://localhost:8000';\n};\n\n// Environment configuration for API endpoints\nexport const API_CONFIG = {\n  // WIHY API - Dynamic based on environment and device\n  WIHY_API_URL: getWihyApiUrl()\n};\n\n// Debug logging with enhanced information\nconsole.log('🔍 API CONFIG DEBUG:', {\n  NODE_ENV: process.env.NODE_ENV,\n  REACT_APP_WIHY_API_URL: process.env.REACT_APP_WIHY_API_URL,\n  FINAL_URL: API_CONFIG.WIHY_API_URL,\n  USER_AGENT: navigator.userAgent,\n  HOSTNAME: window.location.hostname,\n  FULL_URL: window.location.href,\n  IS_MOBILE: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n  IS_LOCALHOST: window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1',\n  DETECTION_REASON: process.env.REACT_APP_WIHY_API_URL ? 'ENV_VAR' : /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.location.hostname !== 'localhost' && window.location.hostname !== '127.0.0.1' ? 'MOBILE_OR_REMOTE' : 'DESKTOP_LOCALHOST'\n});\n\n// Dynamic endpoint helper functions\nexport const getApiEndpoint = (path = '') => {\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\n  const fullUrl = `${API_CONFIG.WIHY_API_URL}${cleanPath}`;\n  console.log('🔍 API ENDPOINT DEBUG:', {\n    path,\n    cleanPath,\n    baseURL: API_CONFIG.WIHY_API_URL,\n    fullUrl\n  });\n  return fullUrl;\n};\nexport const getWihyEndpoint = (path = '') => {\n  return getApiEndpoint(path);\n};\nexport default API_CONFIG;","map":{"version":3,"names":["getWihyApiUrl","process","env","REACT_APP_WIHY_API_URL","isMobile","test","navigator","userAgent","isLocalhost","window","location","hostname","currentHost","API_CONFIG","WIHY_API_URL","console","log","NODE_ENV","FINAL_URL","USER_AGENT","HOSTNAME","FULL_URL","href","IS_MOBILE","IS_LOCALHOST","DETECTION_REASON","getApiEndpoint","path","cleanPath","startsWith","fullUrl","baseURL","getWihyEndpoint"],"sources":["C:/repo/wihy_ui/client/src/config/apiConfig.ts"],"sourcesContent":["// Mobile-friendly API configuration\r\nconst getWihyApiUrl = () => {\r\n  // Check for explicit environment variable first\r\n  if (process.env.REACT_APP_WIHY_API_URL) {\r\n    return process.env.REACT_APP_WIHY_API_URL;\r\n  }\r\n  \r\n  // Detect mobile browser or remote access\r\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n  const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n  \r\n  // If accessing from mobile or non-localhost, try to use the current host\r\n  if (isMobile || !isLocalhost) {\r\n    // Try to use the same host as the frontend with port 8000\r\n    const currentHost = window.location.hostname;\r\n    return `http://${currentHost}:8000`;\r\n  }\r\n  \r\n  // Default to localhost for desktop development\r\n  return 'http://localhost:8000';\r\n};\r\n\r\n// Environment configuration for API endpoints\r\nexport const API_CONFIG = {\r\n  // WIHY API - Dynamic based on environment and device\r\n  WIHY_API_URL: getWihyApiUrl(),\r\n} as const;\r\n\r\n// Debug logging with enhanced information\r\nconsole.log('🔍 API CONFIG DEBUG:', {\r\n  NODE_ENV: process.env.NODE_ENV,\r\n  REACT_APP_WIHY_API_URL: process.env.REACT_APP_WIHY_API_URL,\r\n  FINAL_URL: API_CONFIG.WIHY_API_URL,\r\n  USER_AGENT: navigator.userAgent,\r\n  HOSTNAME: window.location.hostname,\r\n  FULL_URL: window.location.href,\r\n  IS_MOBILE: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\r\n  IS_LOCALHOST: window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1',\r\n  DETECTION_REASON: process.env.REACT_APP_WIHY_API_URL ? 'ENV_VAR' : \r\n    (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || \r\n     (window.location.hostname !== 'localhost' && window.location.hostname !== '127.0.0.1')) ? 'MOBILE_OR_REMOTE' : 'DESKTOP_LOCALHOST'\r\n});\r\n\r\n// Dynamic endpoint helper functions\r\nexport const getApiEndpoint = (path: string = '') => {\r\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\r\n  const fullUrl = `${API_CONFIG.WIHY_API_URL}${cleanPath}`;\r\n  console.log('🔍 API ENDPOINT DEBUG:', { path, cleanPath, baseURL: API_CONFIG.WIHY_API_URL, fullUrl });\r\n  return fullUrl;\r\n};\r\n\r\nexport const getWihyEndpoint = (path: string = '') => {\r\n  return getApiEndpoint(path);\r\n};\r\n\r\nexport default API_CONFIG;"],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAGA,CAAA,KAAM;EAC1B;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAE;IACtC,OAAOF,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC3C;;EAEA;EACA,MAAMC,QAAQ,GAAG,gEAAgE,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;EAC3G,MAAMC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW;;EAExG;EACA,IAAIP,QAAQ,IAAI,CAACI,WAAW,EAAE;IAC5B;IACA,MAAMI,WAAW,GAAGH,MAAM,CAACC,QAAQ,CAACC,QAAQ;IAC5C,OAAO,UAAUC,WAAW,OAAO;EACrC;;EAEA;EACA,OAAO,uBAAuB;AAChC,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,YAAY,EAAEd,aAAa,CAAC;AAC9B,CAAU;;AAEV;AACAe,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE;EAClCC,QAAQ,EAAEhB,OAAO,CAACC,GAAG,CAACe,QAAQ;EAC9Bd,sBAAsB,EAAEF,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC1De,SAAS,EAAEL,UAAU,CAACC,YAAY;EAClCK,UAAU,EAAEb,SAAS,CAACC,SAAS;EAC/Ba,QAAQ,EAAEX,MAAM,CAACC,QAAQ,CAACC,QAAQ;EAClCU,QAAQ,EAAEZ,MAAM,CAACC,QAAQ,CAACY,IAAI;EAC9BC,SAAS,EAAE,gEAAgE,CAAClB,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;EACrGiB,YAAY,EAAEf,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW;EAClGc,gBAAgB,EAAExB,OAAO,CAACC,GAAG,CAACC,sBAAsB,GAAG,SAAS,GAC7D,gEAAgE,CAACE,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IACzFE,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAY,GAAI,kBAAkB,GAAG;AACpH,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMe,cAAc,GAAGA,CAACC,IAAY,GAAG,EAAE,KAAK;EACnD,MAAMC,SAAS,GAAGD,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,GAAGF,IAAI,GAAG,IAAIA,IAAI,EAAE;EAC1D,MAAMG,OAAO,GAAG,GAAGjB,UAAU,CAACC,YAAY,GAAGc,SAAS,EAAE;EACxDb,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE;IAAEW,IAAI;IAAEC,SAAS;IAAEG,OAAO,EAAElB,UAAU,CAACC,YAAY;IAAEgB;EAAQ,CAAC,CAAC;EACrG,OAAOA,OAAO;AAChB,CAAC;AAED,OAAO,MAAME,eAAe,GAAGA,CAACL,IAAY,GAAG,EAAE,KAAK;EACpD,OAAOD,cAAc,CAACC,IAAI,CAAC;AAC7B,CAAC;AAED,eAAed,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}