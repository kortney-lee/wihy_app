{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\charts\\\\ResultQualityPie.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport '../../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\n/* ====================== Evidence Confidence (Gated) ====================== */\n\n/** Trusted domains for quick credibility checks. Tune anytime. */\nconst TRUSTED_DOMAINS = {\n  'nih.gov': 1,\n  'ncbi.nlm.nih.gov': 1,\n  // PubMed\n  'who.int': 1,\n  'cdc.gov': 1,\n  'fda.gov': 1,\n  'usda.gov': 1,\n  'jamanetwork.com': 1,\n  'nejm.org': 1,\n  'thelancet.com': 1,\n  'bmj.com': 1,\n  'nature.com': 1,\n  'science.org': 1,\n  'mayoclinic.org': 1,\n  'harvard.edu': 1,\n  'stanford.edu': 1,\n  'clevelandclinic.org': 1,\n  'uptodate.com': 1\n};\nconst extractUrls = text => {\n  const urlRegex = /(https?:\\/\\/[^\\s)]+)(?=\\)|\\s|$)/g;\n  return [...text.matchAll(urlRegex)].map(m => m[1]);\n};\nconst domainKey = url => {\n  try {\n    const u = new URL(url);\n    const parts = u.hostname.split('.');\n    return parts.slice(-2).join('.');\n  } catch {\n    return null;\n  }\n};\nconst hasStrongId = text => /doi\\.org\\/10\\./i.test(text) || /pubmed\\.ncbi\\.nlm\\.nih\\.gov\\/\\d+/i.test(text);\nconst hasSpecificNumbers = lower => /\\b\\d+(\\.\\d+)?\\s?(mg|g|mcg|iu|kcal|calories|%)\\b/.test(lower) || /\\b\\d+(\\.\\d+)?%/.test(lower);\nconst hypeOrBS = lower => /(miracle|cure-all|100% guaranteed|secret|instantly|revolutionary|breakthrough|detox scam|shocking)/i.test(lower);\nconst contradictionWithoutRefs = lower => /(contradictory|no consensus|insufficient evidence)/i.test(lower) && !hasStrongId(lower) && extractUrls(lower).length === 0;\nconst recencyOK = lower => {\n  const years = (lower.match(/\\b(20\\d{2}|19\\d{2})\\b/g) || []).map(y => parseInt(y, 10));\n  if (years.length === 0) return true; // no year mentioned: don't punish\n  const mostRecent = Math.max(...years);\n  return new Date().getFullYear() - mostRecent <= 5;\n};\nconst sourceGate = (text, dataSource) => {\n  // Database sources and WiHy count as trusted.\n  if (dataSource === 'vnutrition' || dataSource === 'local' || dataSource === 'wihy') return true;\n\n  // Otherwise require a strong id or a trusted domain link.\n  if (hasStrongId(text)) return true;\n  const urls = extractUrls(text);\n  for (const u of urls) {\n    const key = domainKey(u);\n    if (key && TRUSTED_DOMAINS[key]) return true;\n  }\n  return false;\n};\n\n/* Legacy evaluation function removed - now using unified API response */\n\n/* ====================== Component ====================== */\n\nconst ResultQualityPie = ({\n  apiResponse,\n  query,\n  results,\n  dataSource,\n  citations\n}) => {\n  _s();\n  const [evaluation, setEvaluation] = useState({\n    score: 0.20,\n    verdict: 'BAD',\n    reasons: ['Loading...']\n  });\n\n  // Debug logging to see what props are being received\n  useEffect(() => {\n    console.log('ResultQualityPie received props:', {\n      apiResponse,\n      query,\n      results: (results === null || results === void 0 ? void 0 : results.substring(0, 100)) + '...',\n      dataSource,\n      citations,\n      hasResults: !!results && results.trim() !== ''\n    });\n  }, [query, results, dataSource, citations, apiResponse]);\n\n  // Evaluate when props change and we have valid data\n  useEffect(() => {\n    // Handle unified API response first\n    if (apiResponse && apiResponse.success && apiResponse.data) {\n      var _apiResponse$data$hea, _apiResponse$data$nut, _apiResponse$data$nut2;\n      console.log('Using unified API response for quality evaluation...');\n\n      // Use health_analysis if available\n      if ((_apiResponse$data$hea = apiResponse.data.health_analysis) !== null && _apiResponse$data$hea !== void 0 && _apiResponse$data$hea.safety_score) {\n        var _apiResponse$data$hea2, _apiResponse$data$hea3;\n        const safetyScore = apiResponse.data.health_analysis.safety_score / 100; // Convert to 0-1 scale\n        const verdict = safetyScore >= 0.8 ? 'GOOD' : safetyScore >= 0.6 ? 'REVIEW' : 'BAD';\n        const reasons = [`Safety Score: ${apiResponse.data.health_analysis.safety_score}%`, `Processing Level: ${apiResponse.data.health_analysis.processing_level}`, ...(((_apiResponse$data$hea2 = apiResponse.data.health_analysis.carcinogen_alerts) === null || _apiResponse$data$hea2 === void 0 ? void 0 : _apiResponse$data$hea2.map(alert => `⚠️ ${alert}`)) || []), ...(((_apiResponse$data$hea3 = apiResponse.data.health_analysis.toxic_additives) === null || _apiResponse$data$hea3 === void 0 ? void 0 : _apiResponse$data$hea3.map(additive => `⚠️ Toxic: ${additive}`)) || [])];\n        setEvaluation({\n          score: safetyScore,\n          verdict,\n          reasons\n        });\n        return;\n      }\n\n      // Use nutrition nourish_score if available\n      if ((_apiResponse$data$nut = apiResponse.data.nutrition) !== null && _apiResponse$data$nut !== void 0 && (_apiResponse$data$nut2 = _apiResponse$data$nut.nourish_score) !== null && _apiResponse$data$nut2 !== void 0 && _apiResponse$data$nut2.score) {\n        var _nourish$breakdown, _nourish$breakdown2, _nourish$breakdown3;\n        const nourish = apiResponse.data.nutrition.nourish_score;\n        const score = nourish.score / 100; // Convert to 0-1 scale\n        const verdict = score >= 0.8 ? 'GOOD' : score >= 0.6 ? 'REVIEW' : 'BAD';\n        const reasons = [`Nourish Score: ${nourish.score}% (${nourish.category})`, `Nutrient Density: ${((_nourish$breakdown = nourish.breakdown) === null || _nourish$breakdown === void 0 ? void 0 : _nourish$breakdown.nutrient_density) || 'N/A'}%`, `Processing Level: ${((_nourish$breakdown2 = nourish.breakdown) === null || _nourish$breakdown2 === void 0 ? void 0 : _nourish$breakdown2.processing_level) || 'N/A'}%`, `Ingredient Quality: ${((_nourish$breakdown3 = nourish.breakdown) === null || _nourish$breakdown3 === void 0 ? void 0 : _nourish$breakdown3.ingredient_quality) || 'N/A'}%`];\n        setEvaluation({\n          score,\n          verdict,\n          reasons\n        });\n        return;\n      }\n    }\n\n    // No API response available - set default evaluation\n    console.log('No unified API response available for evaluation');\n    setEvaluation({\n      score: 0.20,\n      verdict: 'BAD',\n      reasons: ['Waiting for results...']\n    });\n  }, [query, results, dataSource, citations, apiResponse]);\n  const {\n    score,\n    verdict,\n    reasons\n  } = evaluation;\n  const percentage = Math.round(score * 100);\n  const remaining = 100 - percentage;\n\n  // Colors by verdict (lock to clear categories)\n  const colorByVerdict = v => v === 'GOOD' ? '#10B981' : v === 'REVIEW' ? '#F59E0B' : '#EF4444';\n  const labelByVerdict = v => v === 'GOOD' ? 'Good' : v === 'REVIEW' ? 'Needs review' : 'Poor';\n  const ringColor = colorByVerdict(verdict);\n  const verdictLabel = labelByVerdict(verdict);\n  const data = {\n    datasets: [{\n      data: [percentage, remaining],\n      backgroundColor: [ringColor, '#E5E7EB'],\n      borderWidth: 0,\n      cutout: '70%'\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: false\n      }\n    }\n  };\n  const legendGoodColor = verdict === 'BAD' ? '#E5E7EB' : '#10B981';\n  const legendBadColor = verdict === 'BAD' ? '#EF4444' : '#E5E7EB';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section-card\",\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        height: '200px',\n        width: '200px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insight-value\",\n          style: {\n            fontSize: '2rem',\n            marginBottom: '0'\n          },\n          children: [percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-text\",\n          children: \"Evidence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginBottom: '0.5rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 500,\n            color: ringColor,\n            fontSize: '1rem'\n          },\n          children: verdictLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: '1rem',\n          fontSize: '0.875rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.25rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '12px',\n              height: '12px',\n              backgroundColor: legendGoodColor,\n              borderRadius: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Good: \", percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.25rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '12px',\n              height: '12px',\n              backgroundColor: legendBadColor,\n              borderRadius: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Bad: \", remaining, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), reasons.length > 0 && reasons[0] !== 'Loading...' && reasons[0] !== 'Waiting for results...' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '0.5rem',\n          fontSize: '0.85rem',\n          color: '#6B7280'\n        },\n        children: reasons.slice(0, 2).join(' • ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultQualityPie, \"4ZpACWiXKs7Y5K33lFPOci4Lphs=\");\n_c = ResultQualityPie;\nexport default ResultQualityPie;\nvar _c;\n$RefreshReg$(_c, \"ResultQualityPie\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsxDEV","_jsxDEV","register","TRUSTED_DOMAINS","extractUrls","text","urlRegex","matchAll","map","m","domainKey","url","u","URL","parts","hostname","split","slice","join","hasStrongId","test","hasSpecificNumbers","lower","hypeOrBS","contradictionWithoutRefs","length","recencyOK","years","match","y","parseInt","mostRecent","Math","max","Date","getFullYear","sourceGate","dataSource","urls","key","ResultQualityPie","apiResponse","query","results","citations","_s","evaluation","setEvaluation","score","verdict","reasons","console","log","substring","hasResults","trim","success","data","_apiResponse$data$hea","_apiResponse$data$nut","_apiResponse$data$nut2","health_analysis","safety_score","_apiResponse$data$hea2","_apiResponse$data$hea3","safetyScore","processing_level","carcinogen_alerts","alert","toxic_additives","additive","nutrition","nourish_score","_nourish$breakdown","_nourish$breakdown2","_nourish$breakdown3","nourish","category","breakdown","nutrient_density","ingredient_quality","percentage","round","remaining","colorByVerdict","v","labelByVerdict","ringColor","verdictLabel","datasets","backgroundColor","borderWidth","cutout","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","legendGoodColor","legendBadColor","className","style","textAlign","children","position","height","width","margin","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","fontSize","marginBottom","marginTop","alignItems","justifyContent","fontWeight","color","gap","borderRadius","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/charts/ResultQualityPie.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { UnifiedResponse } from '../../services/wihyAPI';\r\nimport '../../styles/Dashboard.css';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\ninterface ResultQualityPieProps {\r\n  apiResponse?: UnifiedResponse | any;\r\n  query?: string;\r\n  results?: string;\r\n  dataSource?: \"error\" | \"openai\" | \"local\" | \"vnutrition\" | \"wihy\";\r\n  citations?: string[];\r\n}\r\n\r\n/* ====================== Evidence Confidence (Gated) ====================== */\r\n\r\ntype Verdict = 'GOOD' | 'REVIEW' | 'BAD';\r\n\r\n/** Trusted domains for quick credibility checks. Tune anytime. */\r\nconst TRUSTED_DOMAINS: Record<string, number> = {\r\n  'nih.gov': 1,\r\n  'ncbi.nlm.nih.gov': 1,  // PubMed\r\n  'who.int': 1,\r\n  'cdc.gov': 1,\r\n  'fda.gov': 1,\r\n  'usda.gov': 1,\r\n  'jamanetwork.com': 1,\r\n  'nejm.org': 1,\r\n  'thelancet.com': 1,\r\n  'bmj.com': 1,\r\n  'nature.com': 1,\r\n  'science.org': 1,\r\n  'mayoclinic.org': 1,\r\n  'harvard.edu': 1,\r\n  'stanford.edu': 1,\r\n  'clevelandclinic.org': 1,\r\n  'uptodate.com': 1,\r\n};\r\n\r\nconst extractUrls = (text: string): string[] => {\r\n  const urlRegex = /(https?:\\/\\/[^\\s)]+)(?=\\)|\\s|$)/g;\r\n  return [...text.matchAll(urlRegex)].map(m => m[1]);\r\n};\r\n\r\nconst domainKey = (url: string): string | null => {\r\n  try {\r\n    const u = new URL(url);\r\n    const parts = u.hostname.split('.');\r\n    return parts.slice(-2).join('.');\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst hasStrongId = (text: string) =>\r\n  /doi\\.org\\/10\\./i.test(text) || /pubmed\\.ncbi\\.nlm\\.nih\\.gov\\/\\d+/i.test(text);\r\n\r\nconst hasSpecificNumbers = (lower: string) =>\r\n  /\\b\\d+(\\.\\d+)?\\s?(mg|g|mcg|iu|kcal|calories|%)\\b/.test(lower) || /\\b\\d+(\\.\\d+)?%/.test(lower);\r\n\r\nconst hypeOrBS = (lower: string) =>\r\n  /(miracle|cure-all|100% guaranteed|secret|instantly|revolutionary|breakthrough|detox scam|shocking)/i.test(lower);\r\n\r\nconst contradictionWithoutRefs = (lower: string) =>\r\n  /(contradictory|no consensus|insufficient evidence)/i.test(lower) &&\r\n  !hasStrongId(lower) &&\r\n  extractUrls(lower).length === 0;\r\n\r\nconst recencyOK = (lower: string) => {\r\n  const years = (lower.match(/\\b(20\\d{2}|19\\d{2})\\b/g) || []).map(y => parseInt(y, 10));\r\n  if (years.length === 0) return true; // no year mentioned: don't punish\r\n  const mostRecent = Math.max(...years);\r\n  return new Date().getFullYear() - mostRecent <= 5;\r\n};\r\n\r\nconst sourceGate = (text: string, dataSource: ResultQualityPieProps['dataSource']) => {\r\n  // Database sources and WiHy count as trusted.\r\n  if (dataSource === 'vnutrition' || dataSource === 'local' || dataSource === 'wihy') return true;\r\n\r\n  // Otherwise require a strong id or a trusted domain link.\r\n  if (hasStrongId(text)) return true;\r\n  const urls = extractUrls(text);\r\n  for (const u of urls) {\r\n    const key = domainKey(u);\r\n    if (key && TRUSTED_DOMAINS[key]) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n/* Legacy evaluation function removed - now using unified API response */\r\n\r\n/* ====================== Component ====================== */\r\n\r\nconst ResultQualityPie: React.FC<ResultQualityPieProps> = ({\r\n  apiResponse,\r\n  query,\r\n  results,\r\n  dataSource,\r\n  citations\r\n}) => {\r\n  const [evaluation, setEvaluation] = useState<{\r\n    score: number;\r\n    verdict: Verdict;\r\n    reasons: string[];\r\n  }>({ score: 0.20, verdict: 'BAD', reasons: ['Loading...'] });\r\n\r\n  // Debug logging to see what props are being received\r\n  useEffect(() => {\r\n    console.log('ResultQualityPie received props:', {\r\n      apiResponse,\r\n      query,\r\n      results: results?.substring(0, 100) + '...',\r\n      dataSource,\r\n      citations,\r\n      hasResults: !!results && results.trim() !== ''\r\n    });\r\n  }, [query, results, dataSource, citations, apiResponse]);\r\n\r\n  // Evaluate when props change and we have valid data\r\n  useEffect(() => {\r\n    // Handle unified API response first\r\n    if (apiResponse && apiResponse.success && apiResponse.data) {\r\n      console.log('Using unified API response for quality evaluation...');\r\n      \r\n      // Use health_analysis if available\r\n      if (apiResponse.data.health_analysis?.safety_score) {\r\n        const safetyScore = apiResponse.data.health_analysis.safety_score / 100; // Convert to 0-1 scale\r\n        const verdict: Verdict = safetyScore >= 0.8 ? 'GOOD' : safetyScore >= 0.6 ? 'REVIEW' : 'BAD';\r\n        const reasons = [\r\n          `Safety Score: ${apiResponse.data.health_analysis.safety_score}%`,\r\n          `Processing Level: ${apiResponse.data.health_analysis.processing_level}`,\r\n          ...(apiResponse.data.health_analysis.carcinogen_alerts?.map(alert => `⚠️ ${alert}`) || []),\r\n          ...(apiResponse.data.health_analysis.toxic_additives?.map(additive => `⚠️ Toxic: ${additive}`) || [])\r\n        ];\r\n        \r\n        setEvaluation({ score: safetyScore, verdict, reasons });\r\n        return;\r\n      }\r\n      \r\n      // Use nutrition nourish_score if available\r\n      if (apiResponse.data.nutrition?.nourish_score?.score) {\r\n        const nourish = apiResponse.data.nutrition.nourish_score;\r\n        const score = nourish.score / 100; // Convert to 0-1 scale\r\n        const verdict: Verdict = score >= 0.8 ? 'GOOD' : score >= 0.6 ? 'REVIEW' : 'BAD';\r\n        const reasons = [\r\n          `Nourish Score: ${nourish.score}% (${nourish.category})`,\r\n          `Nutrient Density: ${nourish.breakdown?.nutrient_density || 'N/A'}%`,\r\n          `Processing Level: ${nourish.breakdown?.processing_level || 'N/A'}%`,\r\n          `Ingredient Quality: ${nourish.breakdown?.ingredient_quality || 'N/A'}%`\r\n        ];\r\n        \r\n        setEvaluation({ score, verdict, reasons });\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // No API response available - set default evaluation\r\n    console.log('No unified API response available for evaluation');\r\n    setEvaluation({\r\n      score: 0.20,\r\n      verdict: 'BAD',\r\n      reasons: ['Waiting for results...']\r\n    });\r\n  }, [query, results, dataSource, citations, apiResponse]);\r\n\r\n  const { score, verdict, reasons } = evaluation;\r\n  const percentage = Math.round(score * 100);\r\n  const remaining = 100 - percentage;\r\n\r\n  // Colors by verdict (lock to clear categories)\r\n  const colorByVerdict = (v: Verdict) =>\r\n    v === 'GOOD' ? '#10B981' : v === 'REVIEW' ? '#F59E0B' : '#EF4444';\r\n\r\n  const labelByVerdict = (v: Verdict) =>\r\n    v === 'GOOD' ? 'Good' : v === 'REVIEW' ? 'Needs review' : 'Poor';\r\n\r\n  const ringColor = colorByVerdict(verdict);\r\n  const verdictLabel = labelByVerdict(verdict);\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [percentage, remaining],\r\n        backgroundColor: [ringColor, '#E5E7EB'],\r\n        borderWidth: 0,\r\n        cutout: '70%',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { display: false },\r\n      tooltip: { enabled: false },\r\n    },\r\n  };\r\n\r\n  const legendGoodColor = verdict === 'BAD' ? '#E5E7EB' : '#10B981';\r\n  const legendBadColor = verdict === 'BAD' ? '#EF4444' : '#E5E7EB';\r\n\r\n  return (\r\n    <div className=\"chart-section-card\" style={{ textAlign: 'center' }}>\r\n      <div style={{ position: 'relative', height: '200px', width: '200px', margin: '0 auto' }}>\r\n        <Doughnut data={data} options={options} />\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <div className=\"insight-value\" style={{ fontSize: '2rem', marginBottom: '0' }}>\r\n            {percentage}%\r\n          </div>\r\n          <div className=\"legend-text\">\r\n            Evidence\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '1rem' }}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            marginBottom: '0.5rem'\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              fontWeight: 500,\r\n              color: ringColor,\r\n              fontSize: '1rem'\r\n            }}\r\n          >\r\n            {verdictLabel}\r\n          </span>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            gap: '1rem',\r\n            fontSize: '0.875rem'\r\n          }}\r\n        >\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: '0.25rem' }}>\r\n            <div\r\n              style={{\r\n                width: '12px',\r\n                height: '12px',\r\n                backgroundColor: legendGoodColor,\r\n                borderRadius: '2px',\r\n              }}\r\n            />\r\n            <span>Good: {percentage}%</span>\r\n          </div>\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: '0.25rem' }}>\r\n            <div\r\n              style={{\r\n                width: '12px',\r\n                height: '12px',\r\n                backgroundColor: legendBadColor,\r\n                borderRadius: '2px',\r\n              }}\r\n            />\r\n            <span>Bad: {remaining}%</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tiny rationale (first 1–2 reasons) */}\r\n        {reasons.length > 0 && reasons[0] !== 'Loading...' && reasons[0] !== 'Waiting for results...' && (\r\n          <div\r\n            style={{\r\n              marginTop: '0.5rem',\r\n              fontSize: '0.85rem',\r\n              color: '#6B7280'\r\n            }}\r\n          >\r\n            {reasons.slice(0, 2).join(' • ')}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultQualityPie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}