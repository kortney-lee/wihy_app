{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\client\\\\src\\\\components\\\\HealthNewsFeed.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { fetchNewsFeed } from '../services/newsService';\nimport { useNavigate } from 'react-router-dom';\nimport { getApiEndpoint } from '../config/apiConfig';\nimport './HealthNewsFeed.css';\n\n// Update the props interface to receive the search functions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Define placeholder images by category\nconst PLACEHOLDER_IMAGES = {\n  'Nutrition': ['https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&q=80', 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&q=80', 'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80', 'https://images.unsplash.com/photo-1547592180-85f173990554?w=800&q=80'],\n  'Medical Research': ['https://images.unsplash.com/photo-1582719508461-905c673771fd?w=800&q=80', 'https://images.unsplash.com/photo-1579154204601-01588f351e67?w=800&q=80', 'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80', 'https://images.unsplash.com/photo-1581093588401-fbb62a02f120?w=800&q=80'],\n  'Public Health': ['https://images.unsplash.com/photo-1585435557343-3b092031a831?w=800&q=80', 'https://images.unsplash.com/photo-1530497610245-94d3c16cda28?w=800&q=80', 'https://images.unsplash.com/photo-1584017911766-d451b3d0e843?w=800&q=80', 'https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80'],\n  'Clinical Studies': ['https://images.unsplash.com/photo-1579684385127-1ef15d508118?w=800&q=80', 'https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?w=800&q=80', 'https://images.unsplash.com/photo-1624727828489-a1e03b79bba8?w=800&q=80', 'https://images.unsplash.com/photo-1516069677022-53fe679c7ccb?w=800&q=80'],\n  'Prevention': ['https://images.unsplash.com/photo-1584982751601-97dcc096659c?w=800&q=80', 'https://images.unsplash.com/photo-1598256989800-fe5f95da9787?w=800&q=80', 'https://images.unsplash.com/photo-1576091160550-2173dba999ef?w=800&q=80', 'https://images.unsplash.com/photo-1603398938378-e54eab446dde?w=800&q=80'],\n  'Mental Health': ['https://images.unsplash.com/photo-1493836512294-502baa1986e2?w=800&q=80', 'https://images.unsplash.com/photo-1527736947477-2790e28f3443?w=800&q=80', 'https://images.unsplash.com/photo-1546290581-22fe67c7bd0e?w=800&q=80', 'https://images.unsplash.com/photo-1569893033503-9204c3ab911c?w=800&q=80'],\n  'General Health': ['https://images.unsplash.com/photo-1498837167922-ddd27525d352?w=800&q=80', 'https://images.unsplash.com/photo-1511688878353-3a2f5be94cd7?w=800&q=80', 'https://images.unsplash.com/photo-1571019613576-2b22c76fd955?w=800&q=80', 'https://images.unsplash.com/photo-1579126038374-6064e9370f0f?w=800&q=80'],\n  'Environment': ['https://images.unsplash.com/photo-1569163139394-de44cb7c15d9?w=800&q=80', 'https://images.unsplash.com/photo-1542223189-67a03fa0f0c9?w=800&q=80', 'https://images.unsplash.com/photo-1476820865390-c52aeebb9891?w=800&q=80', 'https://images.unsplash.com/photo-1611273426858-450d8e3c9fce?w=800&q=80'],\n  'default': ['https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80', 'https://images.unsplash.com/photo-1538108149393-fbbd81895907?w=800&q=80', 'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80', 'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80']\n};\n\n// Helper function to get a random placeholder image for a category\nconst getRandomPlaceholderImage = category => {\n  // Default to 'default' category if the category doesn't exist or is not provided\n  const categoryImages = PLACEHOLDER_IMAGES[category || ''] || PLACEHOLDER_IMAGES['default'];\n\n  // Get a random image from the array\n  const randomIndex = Math.floor(Math.random() * categoryImages.length);\n  return categoryImages[randomIndex];\n};\n\n// Helper function to get a color based on category\nconst getCategoryColor = category => {\n  if (!category) return '#94a3b8';\n  const colors = {\n    'Nutrition': '#4caf50',\n    'Medical Research': '#2196f3',\n    'Public Health': '#ff9800',\n    'Clinical Studies': '#9c27b0',\n    'Prevention': '#f44336',\n    'Mental Health': '#03a9f4',\n    'General Health': '#ffeb3b',\n    'Environment': '#22c55e'\n  };\n  return colors[category] || '#94a3b8';\n};\nconst formatTimeAgo = dateString => {\n  if (!dateString) return 'Recently';\n  const now = new Date();\n  const date = new Date(dateString);\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n  if (diffInSeconds < 60) return 'Just now';\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} days ago`;\n  return date.toLocaleDateString();\n};\nconst HealthNewsFeed = ({\n  maxArticles = 6,\n  onAnalyzeArticle = query => {\n    // Default implementation that will ensure the button always appears\n    console.log('Article analysis requested:', query);\n    // You could show a toast notification here or redirect to the analysis page\n    window.open(`/analyze?query=${encodeURIComponent(query)}`, '_blank');\n  },\n  setSearchQuery,\n  triggerSearch\n}) => {\n  _s();\n  // Mobile detection\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Check if device is mobile on mount and window resize\n  useEffect(() => {\n    const checkMobile = () => {\n      const mobile = window.innerWidth <= 768;\n      setIsMobile(mobile);\n      console.log(`Device detection: ${mobile ? 'Mobile' : 'Desktop'} (width: ${window.innerWidth}px)`);\n    };\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [analyzingArticle, setAnalyzingArticle] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMorePages, setHasMorePages] = useState(true);\n  const navigate = useNavigate();\n  const prevFetchParamsRef = useRef({\n    max: 0\n  });\n  const observerTarget = useRef(null);\n\n  // Fetch initial articles when component mounts or maxArticles changes\n  useEffect(() => {\n    console.log('useEffect triggered - maxArticles:', maxArticles);\n\n    // Only fetch if maxArticles actually changed\n    const prevParams = prevFetchParamsRef.current;\n    if (prevParams.max !== maxArticles) {\n      console.log('Fetching due to parameter change - prev:', prevParams, 'new:', {\n        max: maxArticles\n      });\n      prevFetchParamsRef.current = {\n        max: maxArticles\n      };\n      setCurrentPage(1); // Reset to first page when changing parameters\n      setHasMorePages(true); // Reset pagination state\n      fetchHealthNews(true); // true means reset (first page)\n    } else {\n      console.log('No fetch needed - parameters unchanged');\n    }\n  }, [maxArticles]);\n\n  // Ensure news loads on mobile immediately\n  useEffect(() => {\n    // Always ensure news loads immediately if no articles\n    if (articles.length === 0 && !loading) {\n      fetchHealthNews(true);\n    }\n  }, [isMobile]);\n\n  // Set up intersection observer for infinite scroll\n  const handleObserver = useCallback(entries => {\n    const [target] = entries;\n    if (target.isIntersecting && !loading && !loadingMore && hasMorePages) {\n      fetchHealthNews(false); // false means don't reset, load more\n    }\n  }, [loading, loadingMore, hasMorePages]);\n  useEffect(() => {\n    const element = observerTarget.current;\n    const option = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.1\n    };\n    const observer = new IntersectionObserver(handleObserver, option);\n    if (element) observer.observe(element);\n    return () => {\n      if (element) observer.unobserve(element);\n    };\n  }, [handleObserver, observerTarget]);\n\n  // Update the fetchHealthNews function with priority handling\n\n  const fetchHealthNews = async (resetPage = true) => {\n    if (resetPage) {\n      setLoading(true);\n      setCurrentPage(1);\n    } else {\n      setLoadingMore(true);\n      setCurrentPage(prev => prev + 1);\n    }\n    try {\n      const page = resetPage ? 1 : currentPage + 1;\n      console.log('Fetching latest health news, page:', page);\n\n      // Always fetch latest news without category filters\n      const effectiveMaxArticles = isMobile ? Math.max(maxArticles, 12) : maxArticles; // Show more articles on mobile\n      const response = await fetchNewsFeed([], effectiveMaxArticles * 2);\n      console.log('Fetching latest news with no category filters');\n      if (response.success && response.articles && response.articles.length > 0) {\n        let processedArticles = response.articles;\n        console.log(`Received ${processedArticles.length} articles from API`);\n\n        // Debug: Log first few articles and their image data\n        console.log('Sample articles with image data:');\n        processedArticles.slice(0, 3).forEach((article, index) => {\n          console.log(`Article ${index + 1}: \"${article.title}\"`);\n          console.log(`  - image_url: ${article.image_url || 'none'}`);\n          console.log(`  - media_url: ${article.media_url || 'none'}`);\n          console.log(`  - media_thumb_url: ${article.media_thumb_url || 'none'}`);\n          console.log(`  - category: ${article.category || article.ai_category || 'none'}`);\n        });\n\n        // Define health categories for priority sorting\n        const healthCategories = ['Nutrition', 'Medical Research', 'Public Health', 'Clinical Studies', 'Prevention', 'Mental Health', 'General Health', 'Environment'];\n\n        // Sort articles by category priority\n        processedArticles = sortArticlesByPriority(response.articles, healthCategories);\n\n        // Diversify sources\n        processedArticles = diversifySources(processedArticles);\n\n        // Limit to maxArticles if we're on the first page\n        if (resetPage) {\n          processedArticles = processedArticles.slice(0, effectiveMaxArticles);\n        } else {\n          // For subsequent pages, limit to maxArticles more\n          processedArticles = processedArticles.slice(0, effectiveMaxArticles);\n        }\n        if (resetPage) {\n          setArticles(processedArticles);\n        } else {\n          // Append new articles to existing ones\n          setArticles(prev => [...prev, ...processedArticles]);\n        }\n\n        // If API doesn't provide pagination info, infer it from response length\n        if ('pagination' in response && response.pagination && typeof response.pagination === 'object' && 'has_next_page' in response.pagination) {\n          setHasMorePages(response.pagination.has_next_page);\n        } else {\n          // If we received at least as many articles as we requested, assume there are more\n          setHasMorePages(response.articles.length >= maxArticles);\n        }\n      } else {\n        console.log('No articles found on page', page);\n        // Try fallback approach\n        try {\n          const fallbackResponse = await fetch(getApiEndpoint(`/news/articles?limit=${maxArticles}`));\n          const fallbackData = await fallbackResponse.json();\n          if (fallbackData.success && fallbackData.articles && fallbackData.articles.length > 0) {\n            console.log('Fallback succeeded, got articles');\n            if (resetPage) {\n              setArticles(fallbackData.articles);\n            } else {\n              setArticles(prev => [...prev, ...fallbackData.articles]);\n            }\n            setHasMorePages(fallbackData.articles.length >= maxArticles);\n          } else {\n            if (resetPage) {\n              setArticles([]);\n            }\n            setHasMorePages(false);\n          }\n        } catch (fallbackError) {\n          console.error('Fallback failed:', fallbackError);\n          if (resetPage) {\n            setArticles([]);\n          }\n          setHasMorePages(false);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching health news:', error);\n      if (resetPage) {\n        setArticles([]);\n      }\n      setHasMorePages(false);\n    } finally {\n      setLoading(false);\n      setLoadingMore(false);\n    }\n  };\n\n  // Replace your current sortArticlesByPriority function with this one\n\n  const sortArticlesByPriority = (articles, priorityCategories) => {\n    // Create a copy of the articles array\n    const sortedArticles = [...articles];\n\n    // Define a function to get priority score (lower is higher priority)\n    const getPriorityScore = article => {\n      const category = article.category || article.ai_category || '';\n\n      // 1. Exact match with priority categories (in order)\n      for (let i = 0; i < priorityCategories.length; i++) {\n        if (category === priorityCategories[i]) {\n          return i; // Return the exact index position (0, 1, 2, etc.)\n        }\n      }\n\n      // 2. Partial match with priority categories\n      for (let i = 0; i < priorityCategories.length; i++) {\n        if (category.includes(priorityCategories[i])) {\n          return i + 20; // Still keep order but with lower priority than exact matches\n        }\n      }\n\n      // 3. Check for health-related keywords in title/description\n      const title = article.title || '';\n      const description = article.summary || '';\n      const content = title + ' ' + description;\n      const contentLower = content.toLowerCase();\n      const healthKeywords = ['health', 'medical', 'medicine', 'doctor', 'patient', 'hospital', 'disease', 'treatment', 'cure', 'wellness', 'fitness', 'diet', 'nutrition', 'mental', 'therapy', 'clinical', 'drug', 'vaccine', 'symptom', 'diagnosis', 'cancer', 'heart', 'diabetes', 'covid'];\n      if (healthKeywords.some(keyword => contentLower.includes(keyword))) {\n        return 100; // All health-related content after categorized content\n      }\n\n      // 4. Tech content goes last\n      const techKeywords = ['tech', 'technology', 'computing', 'software', 'hardware', 'ai', 'artificial intelligence'];\n      if (techKeywords.some(keyword => category.toLowerCase().includes(keyword) || contentLower.includes(keyword))) {\n        return 1000; // Tech content at the bottom\n      }\n\n      // 5. Everything else\n      return 500; // Other content in the middle\n    };\n\n    // Debug the categories before sorting\n    console.log('Priority order:', priorityCategories);\n\n    // Sort articles by priority score\n    sortedArticles.sort((a, b) => {\n      const priorityA = getPriorityScore(a);\n      const priorityB = getPriorityScore(b);\n\n      // First sort by priority category\n      if (priorityA !== priorityB) {\n        return priorityA - priorityB;\n      }\n\n      // If same priority category, sort by date (newest first)\n      const dateA = a.pubDate || a.publishedDate;\n      const dateB = b.pubDate || b.publishedDate;\n      if (dateA && dateB) {\n        return new Date(dateB).getTime() - new Date(dateA).getTime();\n      }\n      return 0;\n    });\n\n    // Log the first few articles to debug the sorting\n    console.log('Articles after sorting:');\n    sortedArticles.slice(0, 5).forEach((article, i) => {\n      const score = getPriorityScore(article);\n      console.log(`  ${i + 1}. [${score}] ${article.category || article.ai_category || 'uncategorized'}: ${article.title}`);\n    });\n    return sortedArticles;\n  };\n\n  // Function to ensure diversity of sources\n  const diversifySources = articles => {\n    if (!articles || articles.length <= 4) return articles;\n\n    // Group articles by source\n    const sourceMap = {};\n    articles.forEach(article => {\n      const source = article.source || 'unknown';\n      if (!sourceMap[source]) {\n        sourceMap[source] = [];\n      }\n      sourceMap[source].push(article);\n    });\n\n    // Get all unique sources\n    const sources = Object.keys(sourceMap);\n    console.log('Available sources:', sources);\n\n    // If we only have one source, return original articles\n    if (sources.length <= 1) return articles;\n\n    // Build a diversified list by alternating between sources\n    const diversified = [];\n    let remainingArticles = [...articles];\n\n    // Limit articles per source based on how many sources we have\n    const maxPerSource = Math.max(2, Math.ceil(articles.length / sources.length));\n\n    // First pass: Take up to the limit from each source\n    sources.forEach(source => {\n      const sourceArticles = sourceMap[source].slice(0, maxPerSource);\n      diversified.push(...sourceArticles);\n\n      // Remove the ones we've taken\n      remainingArticles = remainingArticles.filter(article => !sourceArticles.includes(article));\n    });\n\n    // Add any remaining articles up to the original length\n    if (remainingArticles.length > 0) {\n      const neededCount = articles.length - diversified.length;\n      diversified.push(...remainingArticles.slice(0, neededCount));\n    }\n    console.log(`Source diversity: from ${articles.length} articles with ${sources.length} sources, created ${diversified.length} diversified articles`);\n    return diversified;\n  };\n\n  // Replace the handleAnalyzeWithWihy function (lines 471-493)\n\n  const handleAnalyzeWithWihy = (article, e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (analyzingArticle === article.id) return;\n    setAnalyzingArticle(article.id);\n    const searchQuery = `Analyze this health article: ${article.title}. \nSummary: ${article.summary || article.description || 'No description available'}.\nSource: ${article.source || 'Unknown source'}\nCategory: ${article.category || article.ai_category || 'Uncategorized'}`;\n    console.log('Starting article analysis:', article.title);\n\n    // Try the new direct approach first\n    if (triggerSearch) {\n      console.log('Using triggerSearch with custom query');\n      // Also update the search input for visual feedback\n      if (setSearchQuery) {\n        setSearchQuery(searchQuery);\n      }\n      // Pass the query directly to triggerSearch\n      triggerSearch(searchQuery);\n    } else {\n      // FALLBACK: Directly manipulate DOM and submit the form\n      const searchElement = document.querySelector('.search-input');\n      if (searchElement) {\n        // Direct DOM update for immediate effect\n        searchElement.value = searchQuery;\n        searchElement.focus();\n\n        // Find the form and submit it directly\n        const form = searchElement.closest('form');\n        if (form) {\n          console.log('Found form, submitting directly');\n\n          // Also update React state\n          if (setSearchQuery) {\n            setSearchQuery(searchQuery);\n          }\n\n          // Submit the form\n          setTimeout(() => {\n            form.dispatchEvent(new Event('submit', {\n              bubbles: true,\n              cancelable: true\n            }));\n          }, 10);\n        } else {\n          // No form found, fall back to setSearchQuery\n          console.log('No form found, using setSearchQuery only');\n          if (setSearchQuery) {\n            setSearchQuery(searchQuery);\n          }\n        }\n      } else {\n        // Can't find search element, use the props approach\n        console.log('No search input found, using prop methods');\n        if (setSearchQuery) {\n          setSearchQuery(searchQuery);\n        }\n\n        // Last resort - use the onAnalyzeArticle function\n        if (onAnalyzeArticle) {\n          onAnalyzeArticle(searchQuery);\n        }\n      }\n    }\n\n    // Reset analyzing state after delay\n    setTimeout(() => setAnalyzingArticle(null), 2000);\n  };\n  if (loading && currentPage === 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-feed-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-news\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/whatishealthyspinner.gif\",\n          alt: \"Loading...\",\n          style: {\n            width: '48px',\n            height: '48px',\n            objectFit: 'contain',\n            marginBottom: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading latest health news...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-grid\",\n      children: articles.map(article => {\n        var _article$tags;\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"news-card\",\n          \"data-category\": article.category || article.ai_category,\n          onClick: () => window.open(article.link || article.url, '_blank'),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-image\",\n            children: (() => {\n              // Debug: Log available image URLs\n              const imageUrl = article.image_url || article.media_url || article.media_thumb_url;\n              if (imageUrl) {\n                console.log(`Article \"${article.title}\" has image:`, imageUrl);\n              } else {\n                console.log(`Article \"${article.title}\" has no image, using placeholder`);\n              }\n\n              // Use API image if available, otherwise placeholder\n              if (imageUrl) {\n                return /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imageUrl,\n                  alt: article.title,\n                  onError: e => {\n                    console.log('API image failed to load:', imageUrl);\n                    console.log('Falling back to placeholder for article:', article.title);\n                    // Use category-specific random placeholder as fallback\n                    e.target.src = getRandomPlaceholderImage(article.category || article.ai_category);\n                    // Add placeholder class for styling\n                    e.target.classList.add('placeholder-image');\n                  },\n                  onLoad: () => {\n                    console.log('API image loaded successfully:', imageUrl);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: getRandomPlaceholderImage(article.category || article.ai_category),\n                  alt: article.title || 'Health article',\n                  className: \"placeholder-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 21\n                }, this);\n              }\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-meta\",\n              children: [onAnalyzeArticle && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wihy-btn-wrapper\",\n                style: {\n                  display: 'inline-block',\n                  animation: analyzingArticle === article.id ? 'none' : 'wiH-border-sweep 2.2s linear infinite',\n                  background: analyzingArticle === article.id ? 'linear-gradient(#f3f4f6, #f3f4f6)' : 'linear-gradient(#fff, #fff) padding-box, linear-gradient(90deg, #fa5f06, #ffffff, #C0C0C0, #4cbb17) border-box',\n                  backgroundSize: '100% 100%, 200% 100%',\n                  border: '2px solid transparent',\n                  borderRadius: '16px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"analyze-wihy-btn\",\n                  onClick: e => handleAnalyzeWithWihy(article, e),\n                  disabled: analyzingArticle === article.id,\n                  style: {\n                    background: 'transparent',\n                    border: 'none',\n                    borderRadius: '16px',\n                    padding: '6px 12px',\n                    fontSize: '11px',\n                    fontWeight: '600',\n                    cursor: analyzingArticle === article.id ? 'not-allowed' : 'pointer',\n                    boxShadow: 'none',\n                    transform: 'none'\n                  },\n                  children: analyzingArticle === article.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"analyze-spinner\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 640,\n                      columnNumber: 27\n                    }, this), \"Analyzing...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: \"Analyze with WiHy\"\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"news-category\",\n                style: {\n                  backgroundColor: getCategoryColor(article.category || article.ai_category)\n                },\n                children: article.category || article.ai_category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"news-time\",\n                children: formatTimeAgo(article.pubDate || article.publishedDate || article.published_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"news-title\",\n              children: article.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"news-summary\",\n              children: article.summary || article.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-tags\",\n              children: (_article$tags = article.tags) === null || _article$tags === void 0 ? void 0 : _article$tags.slice(0, 3).map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"news-tag\",\n                children: [\"#\", tag]\n              }, tag, true, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"relevance-score\",\n                children: [\"Relevance: \", Math.round((article.relevanceScore || 0) * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"read-more-btn\",\n                children: \"Read Full Article \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)]\n        }, article.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this), articles.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-articles\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No health news articles available at the moment. Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 9\n    }, this), loadingMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-more\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading more articles...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 9\n    }, this), hasMorePages && !loadingMore && articles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: observerTarget,\n      className: \"intersection-observer-target\",\n      style: {\n        height: '20px',\n        margin: '20px 0',\n        visibility: 'hidden'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 555,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthNewsFeed, \"xBTDs8iZjgbX8gQOQoyp/76MpvI=\", false, function () {\n  return [useNavigate];\n});\n_c = HealthNewsFeed;\nexport default HealthNewsFeed;\nvar _c;\n$RefreshReg$(_c, \"HealthNewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","fetchNewsFeed","useNavigate","getApiEndpoint","jsxDEV","_jsxDEV","Fragment","_Fragment","PLACEHOLDER_IMAGES","getRandomPlaceholderImage","category","categoryImages","randomIndex","Math","floor","random","length","getCategoryColor","colors","formatTimeAgo","dateString","now","Date","date","diffInSeconds","getTime","toLocaleDateString","HealthNewsFeed","maxArticles","onAnalyzeArticle","query","console","log","window","open","encodeURIComponent","setSearchQuery","triggerSearch","_s","isMobile","setIsMobile","checkMobile","mobile","innerWidth","addEventListener","removeEventListener","articles","setArticles","loading","setLoading","loadingMore","setLoadingMore","analyzingArticle","setAnalyzingArticle","currentPage","setCurrentPage","hasMorePages","setHasMorePages","navigate","prevFetchParamsRef","max","observerTarget","prevParams","current","fetchHealthNews","handleObserver","entries","target","isIntersecting","element","option","root","rootMargin","threshold","observer","IntersectionObserver","observe","unobserve","resetPage","prev","page","effectiveMaxArticles","response","success","processedArticles","slice","forEach","article","index","title","image_url","media_url","media_thumb_url","ai_category","healthCategories","sortArticlesByPriority","diversifySources","pagination","has_next_page","fallbackResponse","fetch","fallbackData","json","fallbackError","error","priorityCategories","sortedArticles","getPriorityScore","i","includes","description","summary","content","contentLower","toLowerCase","healthKeywords","some","keyword","techKeywords","sort","a","b","priorityA","priorityB","dateA","pubDate","publishedDate","dateB","score","sourceMap","source","push","sources","Object","keys","diversified","remainingArticles","maxPerSource","ceil","sourceArticles","filter","neededCount","handleAnalyzeWithWihy","e","stopPropagation","preventDefault","id","searchQuery","searchElement","document","querySelector","value","focus","form","closest","setTimeout","dispatchEvent","Event","bubbles","cancelable","className","children","src","alt","style","width","height","objectFit","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","_article$tags","onClick","link","url","imageUrl","onError","classList","add","onLoad","display","animation","background","backgroundSize","border","borderRadius","disabled","padding","fontSize","fontWeight","cursor","boxShadow","transform","backgroundColor","published_at","tags","tag","round","relevanceScore","ref","margin","visibility","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/client/src/components/HealthNewsFeed.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { fetchNewsFeed, getArticlesByCategory, NewsArticle } from '../services/newsService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getApiEndpoint } from '../config/apiConfig';\r\nimport './HealthNewsFeed.css';\r\n\r\n// Update the props interface to receive the search functions\r\ninterface NewsFeedProps {\r\n  maxArticles?: number;\r\n  onAnalyzeArticle?: (query: string) => void;\r\n  setSearchQuery?: (query: string) => void;\r\n  triggerSearch?: (customQuery?: string) => void;\r\n}\r\n\r\n// Define placeholder images by category\r\nconst PLACEHOLDER_IMAGES: Record<string, string[]> = {\r\n  'Nutrition': [\r\n    'https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1547592180-85f173990554?w=800&q=80'\r\n  ],\r\n  'Medical Research': [\r\n    'https://images.unsplash.com/photo-1582719508461-905c673771fd?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1579154204601-01588f351e67?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1581093588401-fbb62a02f120?w=800&q=80'\r\n  ],\r\n  'Public Health': [\r\n    'https://images.unsplash.com/photo-1585435557343-3b092031a831?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1530497610245-94d3c16cda28?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1584017911766-d451b3d0e843?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80'\r\n  ],\r\n  'Clinical Studies': [\r\n    'https://images.unsplash.com/photo-1579684385127-1ef15d508118?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1624727828489-a1e03b79bba8?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1516069677022-53fe679c7ccb?w=800&q=80'\r\n  ],\r\n  'Prevention': [\r\n    'https://images.unsplash.com/photo-1584982751601-97dcc096659c?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1598256989800-fe5f95da9787?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1576091160550-2173dba999ef?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1603398938378-e54eab446dde?w=800&q=80'\r\n  ],\r\n  'Mental Health': [\r\n    'https://images.unsplash.com/photo-1493836512294-502baa1986e2?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1527736947477-2790e28f3443?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1546290581-22fe67c7bd0e?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1569893033503-9204c3ab911c?w=800&q=80'\r\n  ],\r\n  'General Health': [\r\n    'https://images.unsplash.com/photo-1498837167922-ddd27525d352?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1511688878353-3a2f5be94cd7?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1571019613576-2b22c76fd955?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1579126038374-6064e9370f0f?w=800&q=80'\r\n  ],\r\n  'Environment': [\r\n    'https://images.unsplash.com/photo-1569163139394-de44cb7c15d9?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1542223189-67a03fa0f0c9?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1476820865390-c52aeebb9891?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1611273426858-450d8e3c9fce?w=800&q=80'\r\n  ],\r\n  'default': [\r\n    'https://images.unsplash.com/photo-1505751172876-fa1923c5c528?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1538108149393-fbbd81895907?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?w=800&q=80',\r\n    'https://images.unsplash.com/photo-1505253716362-afaea1d3d1af?w=800&q=80'\r\n  ]\r\n};\r\n\r\n// Helper function to get a random placeholder image for a category\r\nconst getRandomPlaceholderImage = (category?: string): string => {\r\n  // Default to 'default' category if the category doesn't exist or is not provided\r\n  const categoryImages = PLACEHOLDER_IMAGES[category || ''] || PLACEHOLDER_IMAGES['default'];\r\n  \r\n  // Get a random image from the array\r\n  const randomIndex = Math.floor(Math.random() * categoryImages.length);\r\n  return categoryImages[randomIndex];\r\n};\r\n\r\n// Helper function to get a color based on category\r\nconst getCategoryColor = (category?: string) => {\r\n  if (!category) return '#94a3b8';\r\n  \r\n  const colors: {[key: string]: string} = {\r\n    'Nutrition': '#4caf50',\r\n    'Medical Research': '#2196f3',\r\n    'Public Health': '#ff9800',\r\n    'Clinical Studies': '#9c27b0',\r\n    'Prevention': '#f44336',\r\n    'Mental Health': '#03a9f4',\r\n    'General Health': '#ffeb3b',\r\n    'Environment': '#22c55e'\r\n  };\r\n  \r\n  return colors[category] || '#94a3b8';\r\n};\r\n\r\nconst formatTimeAgo = (dateString?: string) => {\r\n  if (!dateString) return 'Recently';\r\n  \r\n  const now = new Date();\r\n  const date = new Date(dateString);\r\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\r\n  \r\n  if (diffInSeconds < 60) return 'Just now';\r\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;\r\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\r\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} days ago`;\r\n  \r\n  return date.toLocaleDateString();\r\n};\r\n\r\nconst HealthNewsFeed: React.FC<NewsFeedProps> = ({ \r\n  maxArticles = 6, \r\n  onAnalyzeArticle = (query: string) => {\r\n    // Default implementation that will ensure the button always appears\r\n    console.log('Article analysis requested:', query);\r\n    // You could show a toast notification here or redirect to the analysis page\r\n    window.open(`/analyze?query=${encodeURIComponent(query)}`, '_blank');\r\n  },\r\n  setSearchQuery,\r\n  triggerSearch\r\n}) => {\r\n  // Mobile detection\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  // Check if device is mobile on mount and window resize\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const mobile = window.innerWidth <= 768;\r\n      setIsMobile(mobile);\r\n      console.log(`Device detection: ${mobile ? 'Mobile' : 'Desktop'} (width: ${window.innerWidth}px)`);\r\n    };\r\n    \r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    \r\n    return () => window.removeEventListener('resize', checkMobile);\r\n  }, []);\r\n\r\n  const [articles, setArticles] = useState<NewsArticle[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [analyzingArticle, setAnalyzingArticle] = useState<string | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [hasMorePages, setHasMorePages] = useState(true);\r\n  const navigate = useNavigate();\r\n  \r\n  const prevFetchParamsRef = useRef<{max: number}>({max: 0});\r\n  const observerTarget = useRef<HTMLDivElement>(null);\r\n\r\n  // Fetch initial articles when component mounts or maxArticles changes\r\n  useEffect(() => {\r\n    console.log('useEffect triggered - maxArticles:', maxArticles);\r\n    \r\n    // Only fetch if maxArticles actually changed\r\n    const prevParams = prevFetchParamsRef.current;\r\n    if (prevParams.max !== maxArticles) {\r\n      console.log('Fetching due to parameter change - prev:', prevParams, 'new:', {max: maxArticles});\r\n      prevFetchParamsRef.current = {max: maxArticles};\r\n      setCurrentPage(1); // Reset to first page when changing parameters\r\n      setHasMorePages(true); // Reset pagination state\r\n      fetchHealthNews(true); // true means reset (first page)\r\n    } else {\r\n      console.log('No fetch needed - parameters unchanged');\r\n    }\r\n  }, [maxArticles]);\r\n\r\n  // Ensure news loads on mobile immediately\r\n  useEffect(() => {\r\n    // Always ensure news loads immediately if no articles\r\n    if (articles.length === 0 && !loading) {\r\n      fetchHealthNews(true);\r\n    }\r\n  }, [isMobile]);\r\n\r\n  // Set up intersection observer for infinite scroll\r\n  const handleObserver = useCallback((entries: IntersectionObserverEntry[]) => {\r\n    const [target] = entries;\r\n    if (target.isIntersecting && !loading && !loadingMore && hasMorePages) {\r\n      fetchHealthNews(false); // false means don't reset, load more\r\n    }\r\n  }, [loading, loadingMore, hasMorePages]);\r\n\r\n  useEffect(() => {\r\n    const element = observerTarget.current;\r\n    const option = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.1,\r\n    };\r\n    \r\n    const observer = new IntersectionObserver(handleObserver, option);\r\n    \r\n    if (element) observer.observe(element);\r\n    \r\n    return () => {\r\n      if (element) observer.unobserve(element);\r\n    };\r\n  }, [handleObserver, observerTarget]);\r\n\r\n  // Update the fetchHealthNews function with priority handling\r\n\r\n  const fetchHealthNews = async (resetPage: boolean = true) => {\r\n    if (resetPage) {\r\n      setLoading(true);\r\n      setCurrentPage(1);\r\n    } else {\r\n      setLoadingMore(true);\r\n      setCurrentPage(prev => prev + 1);\r\n    }\r\n\r\n    try {\r\n      const page = resetPage ? 1 : currentPage + 1;\r\n      console.log('Fetching latest health news, page:', page);\r\n      \r\n      // Always fetch latest news without category filters\r\n      const effectiveMaxArticles = isMobile ? Math.max(maxArticles, 12) : maxArticles; // Show more articles on mobile\r\n      const response = await fetchNewsFeed([], effectiveMaxArticles * 2);\r\n      console.log('Fetching latest news with no category filters');\r\n      \r\n      if (response.success && response.articles && response.articles.length > 0) {\r\n        let processedArticles = response.articles;\r\n        console.log(`Received ${processedArticles.length} articles from API`);\r\n        \r\n        // Debug: Log first few articles and their image data\r\n        console.log('Sample articles with image data:');\r\n        processedArticles.slice(0, 3).forEach((article, index) => {\r\n          console.log(`Article ${index + 1}: \"${article.title}\"`);\r\n          console.log(`  - image_url: ${article.image_url || 'none'}`);\r\n          console.log(`  - media_url: ${article.media_url || 'none'}`);\r\n          console.log(`  - media_thumb_url: ${article.media_thumb_url || 'none'}`);\r\n          console.log(`  - category: ${article.category || article.ai_category || 'none'}`);\r\n        });\r\n        \r\n        // Define health categories for priority sorting\r\n        const healthCategories = [\r\n          'Nutrition', \r\n          'Medical Research', \r\n          'Public Health', \r\n          'Clinical Studies', \r\n          'Prevention', \r\n          'Mental Health', \r\n          'General Health',\r\n          'Environment'\r\n        ];\r\n        \r\n        // Sort articles by category priority\r\n        processedArticles = sortArticlesByPriority(response.articles, healthCategories);\r\n        \r\n        // Diversify sources\r\n        processedArticles = diversifySources(processedArticles);\r\n        \r\n        // Limit to maxArticles if we're on the first page\r\n        if (resetPage) {\r\n          processedArticles = processedArticles.slice(0, effectiveMaxArticles);\r\n        } else {\r\n          // For subsequent pages, limit to maxArticles more\r\n          processedArticles = processedArticles.slice(0, effectiveMaxArticles);\r\n        }\r\n        \r\n        if (resetPage) {\r\n          setArticles(processedArticles);\r\n        } else {\r\n          // Append new articles to existing ones\r\n          setArticles(prev => [...prev, ...processedArticles]);\r\n        }\r\n        \r\n        // If API doesn't provide pagination info, infer it from response length\r\n        if ('pagination' in response && response.pagination && \r\n            typeof response.pagination === 'object' && \r\n            'has_next_page' in response.pagination) {\r\n          setHasMorePages(response.pagination.has_next_page as boolean);\r\n        } else {\r\n          // If we received at least as many articles as we requested, assume there are more\r\n          setHasMorePages(response.articles.length >= maxArticles);\r\n        }\r\n      } else {\r\n        console.log('No articles found on page', page);\r\n        // Try fallback approach\r\n        try {\r\n          const fallbackResponse = await fetch(getApiEndpoint(`/news/articles?limit=${maxArticles}`));\r\n          const fallbackData = await fallbackResponse.json();\r\n          \r\n          if (fallbackData.success && fallbackData.articles && fallbackData.articles.length > 0) {\r\n            console.log('Fallback succeeded, got articles');\r\n            if (resetPage) {\r\n              setArticles(fallbackData.articles);\r\n            } else {\r\n              setArticles(prev => [...prev, ...fallbackData.articles]);\r\n            }\r\n            setHasMorePages(fallbackData.articles.length >= maxArticles);\r\n          } else {\r\n            if (resetPage) {\r\n              setArticles([]);\r\n            }\r\n            setHasMorePages(false);\r\n          }\r\n        } catch (fallbackError) {\r\n          console.error('Fallback failed:', fallbackError);\r\n          if (resetPage) {\r\n            setArticles([]);\r\n          }\r\n          setHasMorePages(false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching health news:', error);\r\n      if (resetPage) {\r\n        setArticles([]);\r\n      }\r\n      setHasMorePages(false);\r\n    } finally {\r\n      setLoading(false);\r\n      setLoadingMore(false);\r\n    }\r\n  };\r\n  \r\n  // Replace your current sortArticlesByPriority function with this one\r\n\r\n  const sortArticlesByPriority = (articles: NewsArticle[], priorityCategories: string[]): NewsArticle[] => {\r\n    // Create a copy of the articles array\r\n    const sortedArticles = [...articles];\r\n    \r\n    // Define a function to get priority score (lower is higher priority)\r\n    const getPriorityScore = (article: NewsArticle): number => {\r\n      const category = article.category || article.ai_category || '';\r\n      \r\n      // 1. Exact match with priority categories (in order)\r\n      for (let i = 0; i < priorityCategories.length; i++) {\r\n        if (category === priorityCategories[i]) {\r\n          return i; // Return the exact index position (0, 1, 2, etc.)\r\n        }\r\n      }\r\n      \r\n      // 2. Partial match with priority categories\r\n      for (let i = 0; i < priorityCategories.length; i++) {\r\n        if (category.includes(priorityCategories[i])) {\r\n          return i + 20; // Still keep order but with lower priority than exact matches\r\n        }\r\n      }\r\n      \r\n      // 3. Check for health-related keywords in title/description\r\n      const title = article.title || '';\r\n      const description = article.summary || '';\r\n      const content = title + ' ' + description;\r\n      const contentLower = content.toLowerCase();\r\n      \r\n      const healthKeywords = [\r\n        'health', 'medical', 'medicine', 'doctor', 'patient', 'hospital',\r\n        'disease', 'treatment', 'cure', 'wellness', 'fitness', 'diet',\r\n        'nutrition', 'mental', 'therapy', 'clinical', 'drug', 'vaccine',\r\n        'symptom', 'diagnosis', 'cancer', 'heart', 'diabetes', 'covid'\r\n      ];\r\n      \r\n      if (healthKeywords.some(keyword => contentLower.includes(keyword))) {\r\n        return 100; // All health-related content after categorized content\r\n      }\r\n      \r\n      // 4. Tech content goes last\r\n      const techKeywords = ['tech', 'technology', 'computing', 'software', 'hardware', 'ai', 'artificial intelligence'];\r\n      if (techKeywords.some(keyword => \r\n        category.toLowerCase().includes(keyword) || \r\n        contentLower.includes(keyword)\r\n      )) {\r\n        return 1000; // Tech content at the bottom\r\n      }\r\n      \r\n      // 5. Everything else\r\n      return 500; // Other content in the middle\r\n    };\r\n    \r\n    // Debug the categories before sorting\r\n    console.log('Priority order:', priorityCategories);\r\n    \r\n    // Sort articles by priority score\r\n    sortedArticles.sort((a, b) => {\r\n      const priorityA = getPriorityScore(a);\r\n      const priorityB = getPriorityScore(b);\r\n      \r\n      // First sort by priority category\r\n      if (priorityA !== priorityB) {\r\n        return priorityA - priorityB;\r\n      }\r\n      \r\n      // If same priority category, sort by date (newest first)\r\n      const dateA = a.pubDate || a.publishedDate;\r\n      const dateB = b.pubDate || b.publishedDate;\r\n      \r\n      if (dateA && dateB) {\r\n        return new Date(dateB).getTime() - new Date(dateA).getTime();\r\n      }\r\n      \r\n      return 0;\r\n    });\r\n    \r\n    // Log the first few articles to debug the sorting\r\n    console.log('Articles after sorting:');\r\n    sortedArticles.slice(0, 5).forEach((article, i) => {\r\n      const score = getPriorityScore(article);\r\n      console.log(`  ${i+1}. [${score}] ${article.category || article.ai_category || 'uncategorized'}: ${article.title}`);\r\n    });\r\n    \r\n    return sortedArticles;\r\n  };\r\n  \r\n  // Function to ensure diversity of sources\r\n  const diversifySources = (articles: NewsArticle[]): NewsArticle[] => {\r\n    if (!articles || articles.length <= 4) return articles;\r\n    \r\n    // Group articles by source\r\n    const sourceMap: Record<string, NewsArticle[]> = {};\r\n    articles.forEach(article => {\r\n      const source = article.source || 'unknown';\r\n      if (!sourceMap[source]) {\r\n        sourceMap[source] = [];\r\n      }\r\n      sourceMap[source].push(article);\r\n    });\r\n    \r\n    // Get all unique sources\r\n    const sources = Object.keys(sourceMap);\r\n    console.log('Available sources:', sources);\r\n    \r\n    // If we only have one source, return original articles\r\n    if (sources.length <= 1) return articles;\r\n    \r\n    // Build a diversified list by alternating between sources\r\n    const diversified: NewsArticle[] = [];\r\n    let remainingArticles = [...articles];\r\n    \r\n    // Limit articles per source based on how many sources we have\r\n    const maxPerSource = Math.max(2, Math.ceil(articles.length / sources.length));\r\n    \r\n    // First pass: Take up to the limit from each source\r\n    sources.forEach(source => {\r\n      const sourceArticles = sourceMap[source].slice(0, maxPerSource);\r\n      diversified.push(...sourceArticles);\r\n      \r\n      // Remove the ones we've taken\r\n      remainingArticles = remainingArticles.filter(\r\n        article => !sourceArticles.includes(article)\r\n      );\r\n    });\r\n    \r\n    // Add any remaining articles up to the original length\r\n    if (remainingArticles.length > 0) {\r\n      const neededCount = articles.length - diversified.length;\r\n      diversified.push(...remainingArticles.slice(0, neededCount));\r\n    }\r\n    \r\n    console.log(`Source diversity: from ${articles.length} articles with ${sources.length} sources, created ${diversified.length} diversified articles`);\r\n    \r\n    return diversified;\r\n  };\r\n  \r\n  // Replace the handleAnalyzeWithWihy function (lines 471-493)\r\n\r\n  const handleAnalyzeWithWihy = (article: NewsArticle, e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    \r\n    if (analyzingArticle === article.id) return;\r\n    \r\n    setAnalyzingArticle(article.id);\r\n    \r\n    const searchQuery = `Analyze this health article: ${article.title}. \r\nSummary: ${article.summary || article.description || 'No description available'}.\r\nSource: ${article.source || 'Unknown source'}\r\nCategory: ${article.category || article.ai_category || 'Uncategorized'}`;\r\n\r\n    console.log('Starting article analysis:', article.title);\r\n    \r\n    // Try the new direct approach first\r\n    if (triggerSearch) {\r\n      console.log('Using triggerSearch with custom query');\r\n      // Also update the search input for visual feedback\r\n      if (setSearchQuery) {\r\n        setSearchQuery(searchQuery);\r\n      }\r\n      // Pass the query directly to triggerSearch\r\n      triggerSearch(searchQuery);\r\n    } else {\r\n      // FALLBACK: Directly manipulate DOM and submit the form\r\n      const searchElement = document.querySelector('.search-input') as HTMLInputElement;\r\n      if (searchElement) {\r\n        // Direct DOM update for immediate effect\r\n        searchElement.value = searchQuery;\r\n        searchElement.focus();\r\n        \r\n        // Find the form and submit it directly\r\n        const form = searchElement.closest('form');\r\n        if (form) {\r\n          console.log('Found form, submitting directly');\r\n          \r\n          // Also update React state\r\n          if (setSearchQuery) {\r\n            setSearchQuery(searchQuery);\r\n          }\r\n          \r\n          // Submit the form\r\n          setTimeout(() => {\r\n            form.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n          }, 10);\r\n        } else {\r\n          // No form found, fall back to setSearchQuery\r\n          console.log('No form found, using setSearchQuery only');\r\n          if (setSearchQuery) {\r\n            setSearchQuery(searchQuery);\r\n          }\r\n        }\r\n      } else {\r\n        // Can't find search element, use the props approach\r\n        console.log('No search input found, using prop methods');\r\n        \r\n        if (setSearchQuery) {\r\n          setSearchQuery(searchQuery);\r\n        }\r\n        \r\n        // Last resort - use the onAnalyzeArticle function\r\n        if (onAnalyzeArticle) {\r\n          onAnalyzeArticle(searchQuery);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Reset analyzing state after delay\r\n    setTimeout(() => setAnalyzingArticle(null), 2000);\r\n  };\r\n  \r\n  if (loading && currentPage === 1) {\r\n    return (\r\n      <div className=\"news-feed-container\">\r\n        <div className=\"loading-news\">\r\n          <img \r\n            src=\"/assets/whatishealthyspinner.gif\" \r\n            alt=\"Loading...\" \r\n            style={{\r\n              width: '48px',\r\n              height: '48px',\r\n              objectFit: 'contain',\r\n              marginBottom: '16px'\r\n            }}\r\n          />\r\n          <p>Loading latest health news...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"news-feed-container\">\r\n      <div className=\"news-grid\">\r\n        {articles.map((article) => (\r\n          <article \r\n            key={article.id} \r\n            className=\"news-card\"\r\n            data-category={article.category || article.ai_category}\r\n            onClick={() => window.open(article.link || article.url, '_blank')}\r\n          >\r\n            {/* Image Section - Using images from vHealth News API v2.0 */}\r\n            <div className=\"news-image\">\r\n              {(() => {\r\n                // Debug: Log available image URLs\r\n                const imageUrl = article.image_url || article.media_url || article.media_thumb_url;\r\n                if (imageUrl) {\r\n                  console.log(`Article \"${article.title}\" has image:`, imageUrl);\r\n                } else {\r\n                  console.log(`Article \"${article.title}\" has no image, using placeholder`);\r\n                }\r\n                \r\n                // Use API image if available, otherwise placeholder\r\n                if (imageUrl) {\r\n                  return (\r\n                    <img \r\n                      src={imageUrl} \r\n                      alt={article.title}\r\n                      onError={(e) => {\r\n                        console.log('API image failed to load:', imageUrl);\r\n                        console.log('Falling back to placeholder for article:', article.title);\r\n                        // Use category-specific random placeholder as fallback\r\n                        (e.target as HTMLImageElement).src = getRandomPlaceholderImage(article.category || article.ai_category);\r\n                        // Add placeholder class for styling\r\n                        (e.target as HTMLImageElement).classList.add('placeholder-image');\r\n                      }}\r\n                      onLoad={() => {\r\n                        console.log('API image loaded successfully:', imageUrl);\r\n                      }}\r\n                    />\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <img \r\n                      src={getRandomPlaceholderImage(article.category || article.ai_category)}\r\n                      alt={article.title || 'Health article'}\r\n                      className=\"placeholder-image\"\r\n                    />\r\n                  );\r\n                }\r\n              })()}\r\n            </div>\r\n            \r\n            {/* Content Section */}\r\n            <div className=\"news-content\">\r\n              {/* Meta Information */}\r\n              <div className=\"news-meta\">\r\n                {/* Analyze with WIHY Button - Updated with Wrapper */}\r\n                {onAnalyzeArticle && (\r\n                  <div className=\"wihy-btn-wrapper\" style={{\r\n                    display: 'inline-block',\r\n                    animation: analyzingArticle === article.id ? 'none' : 'wiH-border-sweep 2.2s linear infinite',\r\n                    background: analyzingArticle === article.id \r\n                      ? 'linear-gradient(#f3f4f6, #f3f4f6)' \r\n                      : 'linear-gradient(#fff, #fff) padding-box, linear-gradient(90deg, #fa5f06, #ffffff, #C0C0C0, #4cbb17) border-box',\r\n                    backgroundSize: '100% 100%, 200% 100%',\r\n                    border: '2px solid transparent',\r\n                    borderRadius: '16px'\r\n                  }}>\r\n                    <button \r\n                      className=\"analyze-wihy-btn\"\r\n                      onClick={(e) => handleAnalyzeWithWihy(article, e)}\r\n                      disabled={analyzingArticle === article.id}\r\n                      style={{\r\n                        background: 'transparent',\r\n                        border: 'none',\r\n                        borderRadius: '16px',\r\n                        padding: '6px 12px',\r\n                        fontSize: '11px',\r\n                        fontWeight: '600',\r\n                        cursor: analyzingArticle === article.id ? 'not-allowed' : 'pointer',\r\n                        boxShadow: 'none',\r\n                        transform: 'none'\r\n                      }}\r\n                    >\r\n                      {analyzingArticle === article.id ? (\r\n                        <>\r\n                          <div className=\"analyze-spinner\"></div>\r\n                          Analyzing...\r\n                        </>\r\n                      ) : (\r\n                        <>Analyze with WiHy</>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* Source Tag */}\r\n                <span \r\n                  className=\"news-category\"\r\n                  style={{ backgroundColor: getCategoryColor(article.category || article.ai_category) }}\r\n                >\r\n                  {article.category || article.ai_category}\r\n                </span>\r\n                <span className=\"news-time\">{formatTimeAgo(article.pubDate || article.publishedDate || article.published_at)}</span>\r\n              </div>\r\n              \r\n              <h3 className=\"news-title\">{article.title}</h3>\r\n              <p className=\"news-summary\">{article.summary || article.description}</p>\r\n              \r\n              <div className=\"news-tags\">\r\n                {article.tags?.slice(0, 3).map(tag => (\r\n                  <span key={tag} className=\"news-tag\">#{tag}</span>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"news-footer\">\r\n                <span className=\"relevance-score\">\r\n                  Relevance: {Math.round((article.relevanceScore || 0) * 100)}%\r\n                </span>\r\n                <span className=\"read-more-btn\">\r\n                  Read Full Article →\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Empty state */}\r\n      {articles.length === 0 && !loading && (\r\n        <div className=\"no-articles\">\r\n          <p>No health news articles available at the moment. Please try again later.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Loading more indicator */}\r\n      {loadingMore && (\r\n        <div className=\"loading-more\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading more articles...</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Intersection Observer Target - invisible element that triggers loading when scrolled into view */}\r\n      {hasMorePages && !loadingMore && articles.length > 0 && (\r\n        <div\r\n          ref={observerTarget} \r\n          className=\"intersection-observer-target\"\r\n          style={{ height: '20px', margin: '20px 0', visibility: 'hidden' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthNewsFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}