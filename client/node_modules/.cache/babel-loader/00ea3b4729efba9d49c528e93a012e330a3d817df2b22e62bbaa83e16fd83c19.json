{"ast":null,"code":"// Environment configuration for API endpoints\nexport const API_CONFIG = {\n  // WIHY API - Production endpoint (default)\n  WIHY_API_URL: process.env.REACT_APP_WIHY_API_URL || 'https://ml.wihy.ai',\n  // Local development endpoints\n  LOCAL_API_URL: 'http://localhost:8000',\n  // Force local development mode (for testing)\n  FORCE_LOCAL_DEV: process.env.REACT_APP_FORCE_LOCAL_DEV === 'true' || false\n};\n\n// Helper to determine if we should use local development\nexport const isLocalDevelopment = () => {\n  return API_CONFIG.FORCE_LOCAL_DEV || API_CONFIG.WIHY_API_URL.includes('localhost') || window.location.hostname === 'localhost';\n};\n\n// Dynamic endpoint helper functions\nexport const getApiEndpoint = (path = '') => {\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\n  const baseUrl = isLocalDevelopment() ? API_CONFIG.LOCAL_API_URL : API_CONFIG.WIHY_API_URL;\n\n  // Add logging for endpoint selection\n  console.log('🔍 API ENDPOINT SELECTION:', {\n    timestamp: new Date().toISOString(),\n    path: cleanPath,\n    isLocalDev: isLocalDevelopment(),\n    selectedBaseUrl: baseUrl,\n    finalEndpoint: `${baseUrl}${cleanPath}`\n  });\n  return `${baseUrl}${cleanPath}`;\n};\nexport const getWihyEndpoint = (path = '') => {\n  return getApiEndpoint(path);\n};\n\n// Add endpoint information display for development\nif (isLocalDevelopment()) {\n  console.log('%c🔧 LOCAL DEVELOPMENT MODE ACTIVE', 'color: cyan; font-weight: bold; font-size: 14px;');\n  console.log('%cAsk Endpoint: http://localhost:8000/ask', 'color: cyan;');\n  console.log('%cScan Endpoint: http://localhost:8000/scan', 'color: cyan;');\n}\nexport default API_CONFIG;","map":{"version":3,"names":["API_CONFIG","WIHY_API_URL","process","env","REACT_APP_WIHY_API_URL","LOCAL_API_URL","FORCE_LOCAL_DEV","REACT_APP_FORCE_LOCAL_DEV","isLocalDevelopment","includes","window","location","hostname","getApiEndpoint","path","cleanPath","startsWith","baseUrl","console","log","timestamp","Date","toISOString","isLocalDev","selectedBaseUrl","finalEndpoint","getWihyEndpoint"],"sources":["C:/repo/wihy_ui/client/src/config/apiConfig.ts"],"sourcesContent":["// Environment configuration for API endpoints\r\nexport const API_CONFIG = {\r\n  // WIHY API - Production endpoint (default)\r\n  WIHY_API_URL: process.env.REACT_APP_WIHY_API_URL || 'https://ml.wihy.ai',\r\n  \r\n  // Local development endpoints\r\n  LOCAL_API_URL: 'http://localhost:8000',\r\n  \r\n  // Force local development mode (for testing)\r\n  FORCE_LOCAL_DEV: process.env.REACT_APP_FORCE_LOCAL_DEV === 'true' || false,\r\n} as const;\r\n\r\n// Helper to determine if we should use local development\r\nexport const isLocalDevelopment = () => {\r\n  return API_CONFIG.FORCE_LOCAL_DEV || \r\n         API_CONFIG.WIHY_API_URL.includes('localhost') ||\r\n         window.location.hostname === 'localhost';\r\n};\r\n\r\n// Dynamic endpoint helper functions\r\nexport const getApiEndpoint = (path: string = '') => {\r\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\r\n  const baseUrl = isLocalDevelopment() ? API_CONFIG.LOCAL_API_URL : API_CONFIG.WIHY_API_URL;\r\n  \r\n  // Add logging for endpoint selection\r\n  console.log('🔍 API ENDPOINT SELECTION:', {\r\n    timestamp: new Date().toISOString(),\r\n    path: cleanPath,\r\n    isLocalDev: isLocalDevelopment(),\r\n    selectedBaseUrl: baseUrl,\r\n    finalEndpoint: `${baseUrl}${cleanPath}`\r\n  });\r\n  \r\n  return `${baseUrl}${cleanPath}`;\r\n};\r\n\r\nexport const getWihyEndpoint = (path: string = '') => {\r\n  return getApiEndpoint(path);\r\n};\r\n\r\n// Add endpoint information display for development\r\nif (isLocalDevelopment()) {\r\n  console.log('%c🔧 LOCAL DEVELOPMENT MODE ACTIVE', 'color: cyan; font-weight: bold; font-size: 14px;');\r\n  console.log('%cAsk Endpoint: http://localhost:8000/ask', 'color: cyan;');\r\n  console.log('%cScan Endpoint: http://localhost:8000/scan', 'color: cyan;');\r\n}\r\n\r\nexport default API_CONFIG;"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG;EACxB;EACAC,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,oBAAoB;EAExE;EACAC,aAAa,EAAE,uBAAuB;EAEtC;EACAC,eAAe,EAAEJ,OAAO,CAACC,GAAG,CAACI,yBAAyB,KAAK,MAAM,IAAI;AACvE,CAAU;;AAEV;AACA,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACtC,OAAOR,UAAU,CAACM,eAAe,IAC1BN,UAAU,CAACC,YAAY,CAACQ,QAAQ,CAAC,WAAW,CAAC,IAC7CC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW;AACjD,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGA,CAACC,IAAY,GAAG,EAAE,KAAK;EACnD,MAAMC,SAAS,GAAGD,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,GAAGF,IAAI,GAAG,IAAIA,IAAI,EAAE;EAC1D,MAAMG,OAAO,GAAGT,kBAAkB,CAAC,CAAC,GAAGR,UAAU,CAACK,aAAa,GAAGL,UAAU,CAACC,YAAY;;EAEzF;EACAiB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE;IACxCC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCR,IAAI,EAAEC,SAAS;IACfQ,UAAU,EAAEf,kBAAkB,CAAC,CAAC;IAChCgB,eAAe,EAAEP,OAAO;IACxBQ,aAAa,EAAE,GAAGR,OAAO,GAAGF,SAAS;EACvC,CAAC,CAAC;EAEF,OAAO,GAAGE,OAAO,GAAGF,SAAS,EAAE;AACjC,CAAC;AAED,OAAO,MAAMW,eAAe,GAAGA,CAACZ,IAAY,GAAG,EAAE,KAAK;EACpD,OAAOD,cAAc,CAACC,IAAI,CAAC;AAC7B,CAAC;;AAED;AACA,IAAIN,kBAAkB,CAAC,CAAC,EAAE;EACxBU,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE,kDAAkD,CAAC;EACrGD,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAE,cAAc,CAAC;EACxED,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAE,cAAc,CAAC;AAC5E;AAEA,eAAenB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}