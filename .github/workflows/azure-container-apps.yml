name: Deploy to Azure Container Apps

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build and Push to Azure Container Registry"]
    types:
      - completed
    branches: [ main ]

env:
  REGISTRY_LOGIN_SERVER: wihymlregistry-b6fdh5cmhzgwbbgy.azurecr.io
  CONTAINER_APP_NAME: wihy-ui
  CONTAINER_APP_ENVIRONMENT: wihy-ml-env
  RESOURCE_GROUP: vHealth
  IMAGE_NAME: wihy-ui
  LOCATION: westus2

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Debug Workflow Trigger
      run: |
        echo "üîç Workflow Debug Info:"
        echo "Event name: ${{ github.event_name }}"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref }}"
        echo "Workflow run: ${{ github.event.workflow_run.id || 'N/A' }}"
        echo "Workflow conclusion: ${{ github.event.workflow_run.conclusion || 'N/A' }}"
        
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check Azure credentials
      run: |
        if [ -z "${{ secrets.AZURE_CLIENT_ID }}" ] || [ -z "${{ secrets.AZURE_TENANT_ID }}" ]; then
          echo "‚ö†Ô∏è Azure credentials not configured"
          echo "Please see docs/AZURE_GITHUB_ACTIONS_SETUP.md for setup instructions"
          echo "Skipping Azure deployment..."
          exit 0
        fi
        echo "‚úÖ Azure credentials configured"

    - name: Set up Docker Buildx
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Debug Azure Container Registries
      run: |
        echo "üîç Listing Azure Container Registries..."
        az acr list --query "[].{Name:name, LoginServer:loginServer, ResourceGroup:resourceGroup}" -o table
        
        echo ""
        echo "üîç Looking for WIHY registries..."
        az acr list --query "[?contains(name, 'wihy')].{Name:name, LoginServer:loginServer}" -o table

    - name: Log in to Azure Container Registry
      run: |
        echo "üîç Attempting to find and login to registry..."
        
        # Get the actual registry name that contains 'wihy'
        REGISTRY_NAME=$(az acr list --query "[?contains(name, 'wihy')].name" -o tsv | head -1)
        REGISTRY_LOGIN_SERVER=$(az acr list --query "[?contains(name, 'wihy')].loginServer" -o tsv | head -1)
        
        if [ -z "$REGISTRY_NAME" ]; then
          echo "‚ùå No WIHY registry found!"
          exit 1
        fi
        
        echo "‚úÖ Found registry: $REGISTRY_NAME"
        echo "‚úÖ Login server: $REGISTRY_LOGIN_SERVER"
        
        # Export for later steps
        echo "ACTUAL_REGISTRY_NAME=$REGISTRY_NAME" >> $GITHUB_ENV
        echo "ACTUAL_REGISTRY_LOGIN_SERVER=$REGISTRY_LOGIN_SERVER" >> $GITHUB_ENV
        
        az acr login --name $REGISTRY_NAME

    - name: Build and push Docker image
      run: |
        echo "üîç Using discovered registry name..."
        REGISTRY_NAME="${ACTUAL_REGISTRY_NAME}"
        
        if [ -z "$REGISTRY_NAME" ]; then
          echo "‚ùå No registry name available!"
          exit 1
        fi
        
        echo "‚úÖ Building with registry: $REGISTRY_NAME"
        az acr build \
          --registry $REGISTRY_NAME \
          --image ${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --image ${{ env.IMAGE_NAME }}:latest \
          .

    - name: Deploy to Azure Container Apps
      run: |
        echo "üîç Using discovered registry for deployment..."
        REGISTRY_LOGIN_SERVER="${ACTUAL_REGISTRY_LOGIN_SERVER}"
        
        if [ -z "$REGISTRY_LOGIN_SERVER" ]; then
          echo "‚ùå No registry login server available!"
          exit 1
        fi
        
        echo "‚úÖ Deploying with registry: $REGISTRY_LOGIN_SERVER"
        
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image $REGISTRY_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${{ github.sha }} || \
        az containerapp create \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --environment ${{ env.CONTAINER_APP_ENVIRONMENT }} \
          --image $REGISTRY_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --target-port 80 \
          --ingress external \
          --min-replicas 1 \
          --max-replicas 5 \
          --cpu 0.5 \
          --memory 1Gi \
          --env-vars \
            REACT_APP_ENVIRONMENT="production" \
            REACT_APP_API_BASE_URL="${{ secrets.API_BASE_URL }}" \
          --registry-server $REGISTRY_LOGIN_SERVER \
          --registry-username ${{ secrets.REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.REGISTRY_PASSWORD }}

    - name: Verify Deployment and Get URL
      run: |
        echo "üåü WIHY UI Deployed Successfully!"
        echo "================================================"
        
        # Wait for deployment to be ready
        sleep 30
        
        UI_URL=$(az containerapp show --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --query 'properties.configuration.ingress.fqdn' -o tsv)
        
        echo "üìç WIHY UI: https://$UI_URL"
        echo "================================================"
        
        # Test endpoint
        echo "üß™ Testing deployed endpoint..."
        curl -f "https://$UI_URL" || echo "‚ùå UI health check failed"
        echo "‚úÖ Deployment verification completed"