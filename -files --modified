warning: in the working copy of 'services/node_modules/@types/node/buffer.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/child_process.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/crypto.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/dns.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/fs.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/fs/promises.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/globals.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/http.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/https.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/index.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/inspector.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/module.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/net.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/package.json', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/sqlite.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/tls.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/ts5.6/index.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/ts5.7/index.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/url.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/util.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/vm.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/wasi.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/@types/node/worker_threads.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/diagnostics-channel.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/dispatcher.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/env-http-proxy-agent.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/eventsource.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/fetch.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/handlers.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/mock-client.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/mock-interceptor.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/mock-pool.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/package.json', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/retry-handler.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/webidl.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'services/node_modules/undici-types/websocket.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'user/src/Dashboard.tsx', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/client/node_modules/.cache/.eslintcache b/client/node_modules/.cache/.eslintcache[m
[1mindex aa64f0d7..8ed3d70c 100644[m
[1m--- a/client/node_modules/.cache/.eslintcache[m
[1m+++ b/client/node_modules/.cache/.eslintcache[m
[36m@@ -1 +1 @@[m
[31m-[{"C:\\vHealth\\vhealth\\client\\src\\index.tsx":"1","C:\\vHealth\\vhealth\\client\\src\\VHealthSearch.tsx":"2","C:\\vHealth\\vhealth\\client\\src\\SearchResults.tsx":"3","C:\\vHealth\\vhealth\\client\\src\\services\\apiService.ts":"4","C:\\vHealth\\vhealth\\client\\src\\services\\searchCache.ts":"5","C:\\vHealth\\vhealth\\client\\src\\components\\ResultQualityPie.tsx":"6","C:\\vHealth\\vhealth\\client\\src\\components\\ImageUploadModal.tsx":"7","C:\\vHealth\\vhealth\\client\\src\\components\\LoginButton\\LoginButton.tsx":"8","C:\\vHealth\\vhealth\\client\\src\\components\\foodAnalysisService.tsx":"9","C:\\vHealth\\vhealth\\client\\src\\App.tsx":"10","C:\\vHealth\\vhealth\\client\\src\\services\\openaiAPI.ts":"11","C:\\vHealth\\vhealth\\client\\src\\components\\Spinner.tsx":"12","C:\\vHealth\\vhealth\\client\\src\\components\\NovaChart.tsx":"13","C:\\vHealth\\vhealth\\client\\src\\components\\NutritionChart.tsx":"14","C:\\vHealth\\vhealth\\client\\src\\hooks\\useChartData.ts":"15","C:\\vHealth\\vhealth\\client\\src\\services\\photoStorageService.ts":"16"},{"size":294,"mtime":1758038866316,"results":"17","hashOfConfig":"18"},{"size":8135,"mtime":1758323779084,"results":"19","hashOfConfig":"18"},{"size":20485,"mtime":1758316633927,"results":"20","hashOfConfig":"18"},{"size":3418,"mtime":1756942049153,"results":"21","hashOfConfig":"18"},{"size":3985,"mtime":1751571867080,"results":"22","hashOfConfig":"18"},{"size":9106,"mtime":1758216136842,"results":"23","hashOfConfig":"18"},{"size":7656,"mtime":1758297415297,"results":"24","hashOfConfig":"18"},{"size":3764,"mtime":1751639830623,"results":"25","hashOfConfig":"18"},{"size":2126,"mtime":1758232377104,"results":"26","hashOfConfig":"18"},{"size":6093,"mtime":1758208837145,"results":"27","hashOfConfig":"18"},{"size":10058,"mtime":1756790609266,"results":"28","hashOfConfig":"18"},{"size":833,"mtime":1758315211355,"results":"29","hashOfConfig":"18"},{"size":5160,"mtime":1758213440950,"results":"30","hashOfConfig":"18"},{"size":6449,"mtime":1758213410219,"results":"31","hashOfConfig":"18"},{"size":2494,"mtime":1758001932286,"results":"32","hashOfConfig":"18"},{"size":4721,"mtime":1751585364263,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14wdte6",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\vHealth\\vhealth\\client\\src\\index.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\VHealthSearch.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\SearchResults.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\apiService.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\searchCache.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\ResultQualityPie.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\ImageUploadModal.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\LoginButton\\LoginButton.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\foodAnalysisService.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\App.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\openaiAPI.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\Spinner.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\NovaChart.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\NutritionChart.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\hooks\\useChartData.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\photoStorageService.ts",[],[]][m
\ No newline at end of file[m
[32m+[m[32m[{"C:\\vHealth\\vhealth\\client\\src\\index.tsx":"1","C:\\vHealth\\vhealth\\client\\src\\VHealthSearch.tsx":"2","C:\\vHealth\\vhealth\\client\\src\\SearchResults.tsx":"3","C:\\vHealth\\vhealth\\client\\src\\services\\apiService.ts":"4","C:\\vHealth\\vhealth\\client\\src\\services\\searchCache.ts":"5","C:\\vHealth\\vhealth\\client\\src\\components\\ResultQualityPie.tsx":"6","C:\\vHealth\\vhealth\\client\\src\\components\\ImageUploadModal.tsx":"7","C:\\vHealth\\vhealth\\client\\src\\components\\foodAnalysisService.tsx":"8","C:\\vHealth\\vhealth\\client\\src\\App.tsx":"9","C:\\vHealth\\vhealth\\client\\src\\services\\openaiAPI.ts":"10","C:\\vHealth\\vhealth\\client\\src\\components\\Spinner.tsx":"11","C:\\vHealth\\vhealth\\client\\src\\components\\NovaChart.tsx":"12","C:\\vHealth\\vhealth\\client\\src\\components\\NutritionChart.tsx":"13","C:\\vHealth\\vhealth\\client\\src\\hooks\\useChartData.ts":"14","C:\\vHealth\\vhealth\\client\\src\\services\\photoStorageService.ts":"15","C:\\vHealth\\vhealth\\client\\src\\components\\MultiAuthLogin.tsx":"16","C:\\vHealth\\vhealth\\client\\src\\components\\shared\\components\\MultiAuthLogin.tsx":"17","C:\\vHealth\\vhealth\\client\\src\\services\\healthSearchService.ts":"18","C:\\vHealth\\vhealth\\client\\src\\services\\healthAPI.ts":"19","C:\\vHealth\\vhealth\\client\\src\\components\\HealthNewsFeed.tsx":"20","C:\\vHealth\\vhealth\\client\\src\\services\\newsService.ts":"21"},{"size":294,"mtime":1758520981306,"results":"22","hashOfConfig":"23"},{"size":20151,"mtime":1758564000842,"results":"24","hashOfConfig":"23"},{"size":20952,"mtime":1758508380770,"results":"25","hashOfConfig":"23"},{"size":3418,"mtime":1756942049153,"results":"26","hashOfConfig":"23"},{"size":3985,"mtime":1751571867080,"results":"27","hashOfConfig":"23"},{"size":9106,"mtime":1758216136842,"results":"28","hashOfConfig":"23"},{"size":7656,"mtime":1758297415297,"results":"29","hashOfConfig":"23"},{"size":2126,"mtime":1758232377104,"results":"30","hashOfConfig":"23"},{"size":6093,"mtime":1758521001546,"results":"31","hashOfConfig":"23"},{"size":10058,"mtime":1756790609266,"results":"32","hashOfConfig":"23"},{"size":3332,"mtime":1758564005063,"results":"33","hashOfConfig":"23"},{"size":5160,"mtime":1758213440950,"results":"34","hashOfConfig":"23"},{"size":6449,"mtime":1758213410219,"results":"35","hashOfConfig":"23"},{"size":2494,"mtime":1758001932286,"results":"36","hashOfConfig":"23"},{"size":4721,"mtime":1751585364263,"results":"37","hashOfConfig":"23"},{"size":10088,"mtime":1756759441198,"results":"38","hashOfConfig":"23"},{"size":11517,"mtime":1758489346215,"results":"39","hashOfConfig":"23"},{"size":6076,"mtime":1756790621031,"results":"40","hashOfConfig":"23"},{"size":12392,"mtime":1751573139841,"results":"41","hashOfConfig":"23"},{"size":8051,"mtime":1758558260001,"results":"42","hashOfConfig":"23"},{"size":1845,"mtime":1758521528495,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14wdte6",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\vHealth\\vhealth\\client\\src\\index.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\VHealthSearch.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\SearchResults.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\apiService.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\searchCache.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\ResultQualityPie.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\ImageUploadModal.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\foodAnalysisService.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\App.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\openaiAPI.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\Spinner.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\NovaChart.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\NutritionChart.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\hooks\\useChartData.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\photoStorageService.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\MultiAuthLogin.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\shared\\components\\MultiAuthLogin.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\healthSearchService.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\healthAPI.ts",[],[],"C:\\vHealth\\vhealth\\client\\src\\components\\HealthNewsFeed.tsx",[],[],"C:\\vHealth\\vhealth\\client\\src\\services\\newsService.ts",[],[]][m
\ No newline at end of file[m
[1mdiff --git a/client/node_modules/.cache/tsconfig.tsbuildinfo b/client/node_modules/.cache/tsconfig.tsbuildinfo[m
[1mindex 9900c71f..85d0e127 100644[m
[1m--- a/client/node_modules/.cache/tsconfig.tsbuildinfo[m
[1m+++ b/client/node_modules/.cache/tsconfig.tsbuildinfo[m
[36m@@ -1 +1 @@[m
[31m-{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.es2023.d.ts","../typescript/lib/lib.es2024.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2016.intl.d.ts","../typescript/lib/lib.es2017.arraybuffer.d.ts","../typescript/lib/lib.es2017.date.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.es2022.regexp.d.ts","../typescript/lib/lib.es2023.array.d.ts","../typescript/lib/lib.es2023.collection.d.ts","../typescript/lib/lib.es2023.intl.d.ts","../typescript/lib/lib.es2024.arraybuffer.d.ts","../typescript/lib/lib.es2024.collection.d.ts","../typescript/lib/lib.es2024.object.d.ts","../typescript/lib/lib.es2024.promise.d.ts","../typescript/lib/lib.es2024.regexp.d.ts","../typescript/lib/lib.es2024.sharedmemory.d.ts","../typescript/lib/lib.es2024.string.d.ts","../typescript/lib/lib.esnext.array.d.ts","../typescript/lib/lib.esnext.collection.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../typescript/lib/lib.esnext.disposable.d.ts","../typescript/lib/lib.esnext.promise.d.ts","../typescript/lib/lib.esnext.decorators.d.ts","../typescript/lib/lib.esnext.iterator.d.ts","../typescript/lib/lib.esnext.float16.d.ts","../typescript/lib/lib.esnext.error.d.ts","../typescript/lib/lib.esnext.sharedmemory.d.ts","../typescript/lib/lib.decorators.d.ts","../typescript/lib/lib.decorators.legacy.d.ts","../@types/react/global.d.ts","../csstype/index.d.ts","../@types/react/index.d.ts","../@types/react/jsx-runtime.d.ts","../react-router/dist/development/routeModules-DnUHijGz.d.ts","../react-router/dist/development/index-react-server-client-BYr9g50r.d.ts","../cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../../src/components/ImageUploadModal.tsx","../../src/components/LoginButton/LoginButton.tsx","../../src/VHealthSearch.tsx","../../src/services/searchCache.ts","../../src/services/photoStorageService.ts","../axios/index.d.ts","../../src/components/foodAnalysisService.tsx","../chart.js/dist/core/core.config.d.ts","../chart.js/dist/types/utils.d.ts","../chart.js/dist/types/basic.d.ts","../chart.js/dist/core/core.adapters.d.ts","../chart.js/dist/types/geometric.d.ts","../chart.js/dist/types/animation.d.ts","../chart.js/dist/core/core.element.d.ts","../chart.js/dist/elements/element.point.d.ts","../chart.js/dist/helpers/helpers.easing.d.ts","../chart.js/dist/types/color.d.ts","../chart.js/dist/types/layout.d.ts","../chart.js/dist/plugins/plugin.colors.d.ts","../chart.js/dist/elements/element.arc.d.ts","../chart.js/dist/types/index.d.ts","../chart.js/dist/core/core.plugins.d.ts","../chart.js/dist/core/core.defaults.d.ts","../chart.js/dist/core/core.typedRegistry.d.ts","../chart.js/dist/core/core.scale.d.ts","../chart.js/dist/core/core.registry.d.ts","../chart.js/dist/core/core.controller.d.ts","../chart.js/dist/core/core.datasetController.d.ts","../chart.js/dist/controllers/controller.bar.d.ts","../chart.js/dist/controllers/controller.bubble.d.ts","../chart.js/dist/controllers/controller.doughnut.d.ts","../chart.js/dist/controllers/controller.line.d.ts","../chart.js/dist/controllers/controller.polarArea.d.ts","../chart.js/dist/controllers/controller.pie.d.ts","../chart.js/dist/controllers/controller.radar.d.ts","../chart.js/dist/controllers/controller.scatter.d.ts","../chart.js/dist/controllers/index.d.ts","../chart.js/dist/core/core.animation.d.ts","../chart.js/dist/core/core.animations.d.ts","../chart.js/dist/core/core.animator.d.ts","../chart.js/dist/core/core.interaction.d.ts","../chart.js/dist/core/core.layouts.d.ts","../chart.js/dist/core/core.ticks.d.ts","../chart.js/dist/core/index.d.ts","../chart.js/dist/helpers/helpers.segment.d.ts","../chart.js/dist/elements/element.line.d.ts","../chart.js/dist/elements/element.bar.d.ts","../chart.js/dist/elements/index.d.ts","../chart.js/dist/platform/platform.base.d.ts","../chart.js/dist/platform/platform.basic.d.ts","../chart.js/dist/platform/platform.dom.d.ts","../chart.js/dist/platform/index.d.ts","../chart.js/dist/plugins/plugin.decimation.d.ts","../chart.js/dist/plugins/plugin.filler/index.d.ts","../chart.js/dist/plugins/plugin.legend.d.ts","../chart.js/dist/plugins/plugin.subtitle.d.ts","../chart.js/dist/plugins/plugin.title.d.ts","../chart.js/dist/helpers/helpers.core.d.ts","../chart.js/dist/plugins/plugin.tooltip.d.ts","../chart.js/dist/plugins/index.d.ts","../chart.js/dist/scales/scale.category.d.ts","../chart.js/dist/scales/scale.linearbase.d.ts","../chart.js/dist/scales/scale.linear.d.ts","../chart.js/dist/scales/scale.logarithmic.d.ts","../chart.js/dist/scales/scale.radialLinear.d.ts","../chart.js/dist/scales/scale.time.d.ts","../chart.js/dist/scales/scale.timeseries.d.ts","../chart.js/dist/scales/index.d.ts","../chart.js/dist/index.d.ts","../chart.js/dist/types.d.ts","../react-chartjs-2/dist/types.d.ts","../react-chartjs-2/dist/chart.d.ts","../react-chartjs-2/dist/typedCharts.d.ts","../react-chartjs-2/dist/utils.d.ts","../react-chartjs-2/dist/index.d.ts","../../src/components/ResultQualityPie.tsx","../../src/components/NutritionChart.tsx","../../src/components/NovaChart.tsx","../../src/components/Spinner.tsx","../../src/SearchResults.tsx","../../src/services/openaiAPI.ts","../../src/App.tsx","../@types/react-dom/client.d.ts","../../src/index.tsx","../../src/login.tsx","../../src/react-app-env.d.ts","../../src/services/healthAPI.ts","../../src/services/healthSearchService.ts","../../src/vHealthApp.tsx","../../src/components/App.tsx","../../src/components/MultiAuthLogin.tsx","../../src/components/vNutrition.tsx","../../src/config/dbConfig.ts","../../src/hooks/useChartData.ts","../../src/services/apiService.ts","../../src/services/foodAnalysisService.ts","../../src/services/nutritionService.ts","../../src/services/readabilityService.ts","../../src/services/searchService.ts","../../src/types/index.ts","../../src/types/jsx.d.ts","../@types/axios/index.d.ts","../moment/ts3.1-typings/moment.d.ts","../@types/chart.js/index.d.ts","../@types/history/DOMUtils.d.ts","../@types/history/createBrowserHistory.d.ts","../@types/history/createHashHistory.d.ts","../@types/history/createMemoryHistory.d.ts","../@types/history/LocationUtils.d.ts","../@types/history/PathUtils.d.ts","../@types/history/index.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/globals.typedarray.d.ts","../@types/node/buffer.buffer.d.ts","../@types/node/globals.d.ts","../@types/node/web-globals/abortcontroller.d.ts","../@types/node/web-globals/domexception.d.ts","../@types/node/web-globals/events.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client-stats.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/web-globals/fetch.d.ts","../@types/node/web-globals/navigator.d.ts","../@types/node/web-globals/storage.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/inspector.generated.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/index.d.ts","../@types/react-dom/index.d.ts","../@types/react-router/index.d.ts","../@types/react-router-dom/index.d.ts"],"fileIdsList":[[206,257,274,275],[195,206,257,274,275],[203,206,257,274,275],[197,203,206,257,274,275],[198,199,200,201,202,206,257,274,275],[206,254,257,274,275],[206,256,257,274,275],[257,274,275],[206,257,262,274,275,292],[206,257,258,263,268,274,275,277,289,300],[206,257,258,259,268,274,275,277],[206,257,260,274,275,301],[206,257,261,262,269,274,275,278],[206,257,262,274,275,289,297],[206,257,263,265,268,274,275,277],[206,256,257,264,274,275],[206,257,265,266,274,275],[206,257,267,268,274,275],[206,256,257,268,274,275],[206,257,268,269,270,274,275,289,300],[206,257,268,269,270,274,275,284,289,292],[206,250,257,265,268,271,274,275,277,289,300],[206,257,268,269,271,272,274,275,277,289,297,300],[206,257,271,273,274,275,289,297,300],[204,205,206,207,208,209,210,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],[206,257,268,274,275],[206,257,274,275,276,300],[206,257,265,268,274,275,277,289],[206,257,274,275,278],[206,257,274,275,279],[206,256,257,274,275,280],[206,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],[206,257,274,275,282],[206,257,274,275,283],[206,257,268,274,275,284,285],[206,257,274,275,284,286,301,303],[206,257,268,274,275,289,290,292],[206,257,274,275,291,292],[206,257,274,275,289,290],[206,257,274,275,292],[206,257,274,275,293],[206,254,257,274,275,289,294],[206,257,268,274,275,295,296],[206,257,274,275,295,296],[206,257,262,274,275,277,289,297],[206,257,274,275,298],[206,257,274,275,277,299],[206,257,271,274,275,283,300],[206,257,262,274,275,301],[206,257,274,275,289,302],[206,257,274,275,276,303],[206,257,274,275,304],[206,250,257,274,275],[206,257,274,275,305],[206,250,257,268,270,274,275,280,289,292,300,302,303,305],[206,257,274,275,289,306],[85,206,257,274,275],[85,91,203,206,257,274,275],[85,203,206,257,274,275],[83,84,206,257,274,275],[120,206,257,274,275],[119,120,206,257,274,275],[123,206,257,274,275],[121,122,123,124,125,126,127,128,206,257,274,275],[102,113,206,257,274,275],[119,130,206,257,274,275],[100,113,114,115,118,206,257,274,275],[117,119,206,257,274,275],[102,104,105,206,257,274,275],[106,113,119,206,257,274,275],[119,206,257,274,275],[113,119,206,257,274,275],[106,116,117,120,206,257,274,275],[102,106,113,162,206,257,274,275],[115,206,257,274,275],[103,106,114,115,117,118,119,120,130,131,132,133,134,135,206,257,274,275],[106,113,206,257,274,275],[102,106,206,257,274,275],[102,106,107,137,206,257,274,275],[107,112,138,139,206,257,274,275],[107,138,206,257,274,275],[129,136,140,144,152,160,206,257,274,275],[141,142,143,206,257,274,275],[100,119,206,257,274,275],[141,206,257,274,275],[119,141,206,257,274,275],[111,145,146,147,148,149,151,206,257,274,275],[162,206,257,274,275],[102,106,113,206,257,274,275],[102,106,162,206,257,274,275],[102,106,113,119,131,133,141,150,206,257,274,275],[153,155,156,157,158,159,206,257,274,275],[117,206,257,274,275],[154,206,257,274,275],[154,162,206,257,274,275],[103,117,206,257,274,275],[158,206,257,274,275],[113,161,206,257,274,275],[101,102,103,104,105,106,107,108,109,110,111,112,206,257,274,275],[104,206,257,274,275],[163,206,257,274,275],[163,164,165,166,206,257,274,275],[85,162,206,257,274,275],[85,162,163,206,257,274,275],[91,206,257,274,275],[85,87,206,257,274,275],[85,87,88,89,90,206,257,274,275],[206,217,220,223,224,257,274,275,300],[206,220,257,274,275,289,300],[206,220,224,257,274,275,300],[206,257,274,275,289],[206,214,257,274,275],[206,218,257,274,275],[206,216,217,220,257,274,275,300],[206,257,274,275,277,297],[206,257,274,275,307],[206,214,257,274,275,307],[206,216,220,257,274,275,277,300],[206,211,212,213,215,219,257,268,274,275,289,300],[206,220,228,235,257,274,275],[206,212,218,257,274,275],[206,220,244,245,257,274,275],[206,212,215,220,257,274,275,292,300,307],[206,220,257,274,275],[206,216,220,257,274,275,300],[206,211,257,274,275],[206,214,215,216,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,257,274,275],[206,220,237,240,257,265,274,275],[206,220,228,229,230,257,274,275],[206,218,220,229,231,257,274,275],[206,219,257,274,275],[206,212,214,220,257,274,275],[206,220,224,229,231,257,274,275],[206,224,257,274,275],[206,218,220,223,257,274,275,300],[206,212,216,220,228,257,274,275],[206,220,237,257,274,275],[206,214,220,244,257,274,275,292,305,307],[85,86,92,95,172,173,206,257,274,275],[85,86,93,94,96,97,99,168,169,170,171,206,257,274,275],[85,86,92,93,94,206,257,274,275],[85,86,95,206,257,274,275],[85,86,206,257,274,275],[85,86,162,167,206,257,274,275],[86,194,206,257,274,275],[86,206,257,274,275],[85,86,174,175,206,257,274,275],[86,173,179,194,206,257,274,275],[85,86,93,94,96,97,99,172,180,206,257,274,275]],"fileInfos":[{"version":"c430d44666289dae81f30fa7b2edebf186ecc91a2d4c71266ea6ae76388792e1","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","impliedFormat":1},{"version":"ee7bad0c15b58988daa84371e0b89d313b762ab83cb5b31b8a2d1162e8eb41c2","impliedFormat":1},{"version":"27bdc30a0e32783366a5abeda841bc22757c1797de8681bbe81fbc735eeb1c10","impliedFormat":1},{"version":"8fd575e12870e9944c7e1d62e1f5a73fcf23dd8d3a321f2a2c74c20d022283fe","impliedFormat":1},{"version":"2ab096661c711e4a81cc464fa1e6feb929a54f5340b46b0a07ac6bbf857471f0","impliedFormat":1},{"version":"080941d9f9ff9307f7e27a83bcd888b7c8270716c39af943532438932ec1d0b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2e80ee7a49e8ac312cc11b77f1475804bee36b3b2bc896bead8b6e1266befb43","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"fb0f136d372979348d59b3f5020b4cdb81b5504192b1cacff5d1fbba29378aa1","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"a680117f487a4d2f30ea46f1b4b7f58bef1480456e18ba53ee85c2746eeca012","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true,"impliedFormat":1},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true,"impliedFormat":1},{"version":"959d36cddf5e7d572a65045b876f2956c973a586da58e5d26cde519184fd9b8a","affectsGlobalScope":true,"impliedFormat":1},{"version":"965f36eae237dd74e6cca203a43e9ca801ce38824ead814728a2807b1910117d","affectsGlobalScope":true,"impliedFormat":1},{"version":"3925a6c820dcb1a06506c90b1577db1fdbf7705d65b62b99dce4be75c637e26b","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a3d63ef2b853447ec4f749d3f368ce642264246e02911fcb1590d8c161b8005","affectsGlobalScope":true,"impliedFormat":1},{"version":"8cdf8847677ac7d20486e54dd3fcf09eda95812ac8ace44b4418da1bbbab6eb8","affectsGlobalScope":true,"impliedFormat":1},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true,"impliedFormat":1},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true,"impliedFormat":1},{"version":"b4b67b1a91182421f5df999988c690f14d813b9850b40acd06ed44691f6727ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"df83c2a6c73228b625b0beb6669c7ee2a09c914637e2d35170723ad49c0f5cd4","affectsGlobalScope":true,"impliedFormat":1},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e3c06ea092138bf9fa5e874a1fdbc9d54805d074bee1de31b99a11e2fec239d","affectsGlobalScope":true,"impliedFormat":1},{"version":"87dc0f382502f5bbce5129bdc0aea21e19a3abbc19259e0b43ae038a9fc4e326","affectsGlobalScope":true,"impliedFormat":1},{"version":"b1cb28af0c891c8c96b2d6b7be76bd394fddcfdb4709a20ba05a7c1605eea0f9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2fef54945a13095fdb9b84f705f2b5994597640c46afeb2ce78352fab4cb3279","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac77cb3e8c6d3565793eb90a8373ee8033146315a3dbead3bde8db5eaf5e5ec6","affectsGlobalScope":true,"impliedFormat":1},{"version":"56e4ed5aab5f5920980066a9409bfaf53e6d21d3f8d020c17e4de584d29600ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ece9f17b3866cc077099c73f4983bddbcb1dc7ddb943227f1ec070f529dedd1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a6282c8827e4b9a95f4bf4f5c205673ada31b982f50572d27103df8ceb8013c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1c9319a09485199c1f7b0498f2988d6d2249793ef67edda49d1e584746be9032","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3a2a0cee0f03ffdde24d89660eba2685bfbdeae955a6c67e8c4c9fd28928eeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811c71eee4aa0ac5f7adf713323a5c41b0cf6c4e17367a34fbce379e12bbf0a4","affectsGlobalScope":true,"impliedFormat":1},{"version":"51ad4c928303041605b4d7ae32e0c1ee387d43a24cd6f1ebf4a2699e1076d4fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"60037901da1a425516449b9a20073aa03386cce92f7a1fd902d7602be3a7c2e9","affectsGlobalScope":true,"impliedFormat":1},{"version":"d4b1d2c51d058fc21ec2629fff7a76249dec2e36e12960ea056e3ef89174080f","affectsGlobalScope":true,"impliedFormat":1},{"version":"22adec94ef7047a6c9d1af3cb96be87a335908bf9ef386ae9fd50eeb37f44c47","affectsGlobalScope":true,"impliedFormat":1},{"version":"4245fee526a7d1754529d19227ecbf3be066ff79ebb6a380d78e41648f2f224d","affectsGlobalScope":true,"impliedFormat":1},{"version":"73f78680d4c08509933daf80947902f6ff41b6230f94dd002ae372620adb0f60","affectsGlobalScope":true,"impliedFormat":1},{"version":"c5239f5c01bcfa9cd32f37c496cf19c61d69d37e48be9de612b541aac915805b","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"170d4db14678c68178ee8a3d5a990d5afb759ecb6ec44dbd885c50f6da6204f6","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"bea6c0f5b819cf8cba6608bf3530089119294f949640714011d46ec8013b61c2","impliedFormat":1},{"version":"42c169fb8c2d42f4f668c624a9a11e719d5d07dacbebb63cbcf7ef365b0a75b3","impliedFormat":1},{"version":"553ea9c5b51debd5899c0c80e40155bd4e0a5e927aa6c4ed1bca3c2e6710d041","impliedFormat":1},{"version":"4fe49159bc9ef8c8d1ab6d9424aef4912a54fc8c25502597fa4ebb9b82d63a76","impliedFormat":1},{"version":"5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","impliedFormat":1},{"version":"b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd","impliedFormat":1},{"version":"55687179edfa9f83f02309529d82fc2db0271c2eb313b2d12a7d26d48a4a88ba","affectsGlobalScope":true,"impliedFormat":1},{"version":"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","impliedFormat":1},{"version":"bd303e6ec0cff7cb04e0edaf0e1d20a082fc4114a68f97abcdc26843eee43eb6","signature":"33a35d3246e5c2225262919f4ac6b419ac3bf9fd1cbf7131195df5f5df04a676"},{"version":"4228831f5fc5ea5fd2f9a06337319b2cc0b794d23956cd9409b2b681bef3812c","signature":"02846cf91f173c6a4457e028ddbcffd182692bd7a89aa48b548346af84094f52"},{"version":"01726bd13b57cb522d88cd013d37d2aecdbd5647b0d1f39a970618d892a5a08a","signature":"10fb7089d5f190a12696f2da3ce3a4716c8bc6d7dbaaff524d62ef442b6e5d52"},{"version":"09a3e3358f3e30f0ea746e144675d2883a2282eed61c414c434152be22aaf844","signature":"ceefa1950f1d243901748eb483946df288d57845a55ef17ff6c17c183ac15b87"},{"version":"2a9b1c500fe9080f24d1fd3dee48fe3e61b3a083efc956c0bc1f8da05d80d3f5","signature":"40caa82eaf9c450d88d359433b0198acf35af56d45d4d66af535d1a894e1f594"},{"version":"7584239b853f690c6629ae8bb683ded6ff33104e7835778bbca5ee1b1d9a0a91","impliedFormat":99},{"version":"f9827d88a36eb70903373cb996ed07e9eaecc43b696552f159523a31070621cd","signature":"cc1989b2f64ae3b5c9dbc33a6b2ba4c9bebbe2d93a8c2a0fa85d66fb1a672932"},{"version":"63f6312a4be1ec344baa7c5cdb831587ed5f737f35df2baa2d3db1d180b983ec","impliedFormat":99},{"version":"74c3a57d874889e2f042b89b9688716af704cb2366d757ead586988f6cc9a625","impliedFormat":99},{"version":"5ebf4476be92f000f00cb9fb79d69babe6f6ac2a39efdb04a8f370e110003e19","impliedFormat":99},{"version":"39bc8c363900ffa799f98eb2e4c7ddd52e09cfb9392082128ebe49379f999aa5","impliedFormat":99},{"version":"1a4cfb737223d523387f7afee7219fd2016f1d73ef885e9cb42183c911d07b4d","impliedFormat":99},{"version":"392b17a6ba3f687f19ba207f17841c99306701cc2882f3615a3b426686d854e6","impliedFormat":99},{"version":"2a9f82af6c7cf1e002d17153e10d758f685d085864f6c5f7d2b775ebcd6b2fc9","impliedFormat":99},{"version":"f65b6f12e264b6e22dcf888bc0c239aab27c1d1fa6560af64bcd450f864abab7","impliedFormat":99},{"version":"ecbac26c0c765e1da3e748a35ededfa4c7ed87f48399919cd952ae8bc32a1339","impliedFormat":99},{"version":"9c88eebb75b82b4ccb9412c7e3035e40e188ea3d7dcb010ff87986b7ff629555","impliedFormat":99},{"version":"154f87edab104ff00f36e95b36d01e014a4d74ac4fc219e124e2bf2627099267","impliedFormat":99},{"version":"30844ce073bb46b6908f55273063915629cd795bf7d83638bcb71e1507a494bb","impliedFormat":99},{"version":"0b616ee0814b25c7b231a73b57ad93a558a6b8cb5d3642776b92dca8e361dd9d","impliedFormat":99},{"version":"165c74085a9beb3c2bf69716e5e090449d7e9d4dc53084da6228206213d94939","impliedFormat":99},{"version":"b02604b3eb025af58b4c07c7ffce6d28a03948286cb5c4d5cdc46ffe21549524","impliedFormat":99},{"version":"ebd09f4071c53a42a09a20feb0b144b1f485f10a7d6190aba91c1714977d689f","impliedFormat":99},{"version":"345bf134b7c00954c1db3e011f029c066877a32256569c9d91b6ceb5bcca054c","impliedFormat":99},{"version":"2a1f7be668e3a95cdb683c6f755631bf19de9705c6d6c1c9e4ebc67e9db916d7","impliedFormat":99},{"version":"357acfb6822f15161214eb9e1848c767182750b67f9c2c6ac0fab52ce300ddbb","impliedFormat":99},{"version":"895ed044afb790fa06b64467688cb28436d87f46dcdc526a163915a962d55dca","impliedFormat":99},{"version":"646d66c423da6f036ecfda81da6f7d60a4748ddb0c58c85d261bb5c8e541cef2","impliedFormat":99},{"version":"93acb73e975b4fd741faf2e8fb2a5705aadcf8ca2df8fe354c9edb0b07622252","impliedFormat":99},{"version":"24bf4c3ab312b32e6f114adc2f4ce858a8a28af76abcbdc46a4a40655933f152","impliedFormat":99},{"version":"3b355d5bc20b716079980a0ed2d400180a15368db05888b3b858f90ae3ceac14","impliedFormat":99},{"version":"ff2c4a40bbde08390837443555b9ae201af54b527baf151555310782bd7bb8ef","impliedFormat":99},{"version":"0e9998684ca02c028170441f4c006e1caf425f9a9c3814cf8765a0002773fe30","impliedFormat":99},{"version":"1e647f80259d61974c8d0a89d9e3fd22416975c257d76f4f32d6ff38b9157f21","impliedFormat":99},{"version":"31e9f9b81179cdce4ee1cd1d6a427dc0c5fd15064307df8cad58237b0d96385b","impliedFormat":99},{"version":"7ba73e6476144ac4587b18bcc70349d2a8e7cede4e780815b53a057ca71f764d","impliedFormat":99},{"version":"fba690fc44b5c1db29fb472830df4cea1374642935a02c6302730bff37752498","impliedFormat":99},{"version":"2515daf0e2b05ec5a90349ea839cc1fad8e67135665747cd5f72b7b3d2ad49c3","impliedFormat":99},{"version":"7b4a756bb59248aeb831709239014a9850837727c2d6ec053f54eeaee95dda39","impliedFormat":99},{"version":"cde91ca23d14021aca53adba5977bebf7f72e4f18bbdcd2c6a689482c77dba07","impliedFormat":99},{"version":"191878041be6dae0b75974d1d28d55ae82a2896d5eb5004eb039e964e8140c00","impliedFormat":99},{"version":"7f4272fd567d065c1f5614ae3bed61b3dee47845267be0e41dd24f901985bf0f","impliedFormat":99},{"version":"0fe6cb0ec82fea8bb694d8335f8d470c8843600a277cf02d7dbfb84002666e8a","impliedFormat":99},{"version":"e43159089587768cc9e4b325488c546cec950602173b04a4f6cb9a615c4fc3b9","impliedFormat":99},{"version":"f3ebf0a71fb9e0d708c607d6448edae7a7893162532b560b3f361f48bacdbfca","impliedFormat":99},{"version":"053ed027d6ab656c53ee8dfc3fe842beff2a831831591f7f446c0ea1632f606e","impliedFormat":99},{"version":"79c5c3441a6786ce4804528aa560836e45cf855af4f25d6ca40f598cd6f1979a","impliedFormat":99},{"version":"bf235a40a595fe4c1c72ff72b50a9881a7279c4063029fc88e49237542797935","impliedFormat":99},{"version":"25627620692594a49b01a7192416e59a0fd94717c4f5c2800a3cdde58e28b39f","impliedFormat":99},{"version":"00f9b95c0741094ef69f8befa268077fb5dae5192149d99af5c7abf4cd20d5e5","impliedFormat":99},{"version":"89536ffee2ff5d49cd4c898a854a92a3d0812394f4ab6e1d48f9fb658f4abe48","impliedFormat":99},{"version":"0085bc39713819715d49b27bb64767dff1829179b0914ef0d4e1a852770f0136","impliedFormat":99},{"version":"9c6c451215eae6ae4ee0ebf8433f9d90494df7dba87718478c050bf5551da18f","impliedFormat":99},{"version":"a12d1a8f1b6e34597b9aef2757fdf4505362189c75b7f15266604a80bcffb42e","impliedFormat":99},{"version":"193f77fd99a5798127915516363958d227df9cb82e23f5890aa668409c1e6360","impliedFormat":99},{"version":"d8dc0c576c79c5069f4e87b0a15088e952043cb3df0ec487f81e6b98b174e503","impliedFormat":99},{"version":"84b69e8d4be7b1736536d1ab8c72c48318bbe6c677dab53a2d51058f9e68df71","impliedFormat":99},{"version":"97d3c4bd2a49a56f2cb63bb76c5880afe5c76098dcbb5598cd14e96bf572cb86","impliedFormat":99},{"version":"a493cd942f29c45c9befb1cf2f3e9a757300e1fa6b5a20cf939bf563c31f46a1","impliedFormat":99},{"version":"5300527e32de6eab286e5b70c3cca475380320a142ad54f234a34daadfc7bb1c","impliedFormat":99},{"version":"7476dbc814b46489fff760fd1f3d64248aedbf17e86fda8883c9bd0482d8bf73","impliedFormat":99},{"version":"8520b3f4c2c698bcef9c71d418a11c7cbe90d7b6d7deaed251a97ee5ef6b2068","impliedFormat":99},{"version":"8afc3d51f8ace0b6b9e89a2f7d8a6dffaca41d91733d235dea7c28364a3081a1","impliedFormat":99},{"version":"01cd58f2842ffec94a7cd86881fb5595df4b08399b99e817d2c25c2fb973fe09","impliedFormat":99},{"version":"d49f5458be59a10cc60ad003bebafa22eb37e15492020b2be9ca07055b6c8b10","impliedFormat":99},{"version":"0aa491d56a8011fcf95247f81cc4e09b40cfd5a96e80221038347da3931e8ba6","impliedFormat":99},{"version":"814971944c21b19105949c552a7dd5b35235a17a2eb8092b809e2fcaa54ea4e4","impliedFormat":99},{"version":"70f1528dd7d2131386fdcf6223ac1c56f2d7726c7977bd5eddcdfd22cd24f7f6","impliedFormat":99},{"version":"87f41340a0cac5b54e499b3ea6e6d0cb2e7abb9abf5feaedc6c4cc608cdfdc54","impliedFormat":99},{"version":"d0a8b3701edaddb7db2935bb134439272b46201384579eb0b53d66e4ac83bbfc","impliedFormat":99},{"version":"06d3bd1652d7a961bee709bce34b2cbcd6725ab7de8e0cbbb3353927a347a2b0","impliedFormat":99},{"version":"4166eb28a4170609b107205a614bfc6936bb18348e3d37408835cb9d49c4634d","impliedFormat":99},{"version":"e21552b6c0c6c1aa2edfb55d949511fa055b2d94ee60731cbc8e6a5d3edc63e9","impliedFormat":99},{"version":"61547fc99d5410765d51588931a1e910aaa76a452480795268345d461dec9b01","impliedFormat":99},{"version":"e71c443455caa4f5e047db65adf9e3a9d5d5c075ec348f52dcf749bf594aaab2","impliedFormat":99},{"version":"10e24a464b819f296cdf55064d55aa0291e52a394f63c697913f0ed8f12ced1f","signature":"284913febb53f4fb40083d790b0f2f53e020577043031b67e66d15c22e07bf98"},{"version":"ef30f09018d6d125eef5362b4ced2a3fec318379f02e38cbc048a18fa03de1bb","signature":"51891247d71525ed3641745d2223eb44a54ab3801d29cc8fdc12fbfec12a0abe"},{"version":"8f36c65753d640adfa33b0e146bc8d579e59a4188a23060ff26b3f307361bfc4","signature":"82a1222eeb60a05b80a9b51f215e5eb5100eaa4352e8d95fd104b5c6ff2937bc"},{"version":"947d8e534964900addd04e52646356a26b7f83573b76aa396ab807af560f789e","signature":"c4462c0be5b00de07b7f5fe20a5b05b5304c482684f413bec325314f0b69eb4f"},{"version":"1275a881a04b94e450c65213e33a2f0e6d40d250026b50a09b9cd149b3dd9738","signature":"eeee7623d33b08252713821f285cbb043120d83f8523aee1249ffb064b67bc08"},{"version":"83650727e659850952b699220b5b80c7f01213cef5b70b31f669b0259e255504","signature":"f97c32dfc50f4b98c096b5ca96f763393769129ad6436920da8fd62268cfa534"},{"version":"419e2565e9faef4bbc1c0dc06c721aea5b3bb8f5f1943b75609ef46b56b5c5af","signature":"6b39ba85995f84df5d7f5635c34e9b9fe738fe06bb20a8460d1fed2787bf181d"},{"version":"88e9caa9c5d2ba629240b5913842e7c57c5c0315383b8dc9d436ef2b60f1c391","impliedFormat":1},{"version":"1b19aead703f98140389ab9a8034eda65590cd414d6090b1252136a0f8c8df9f","signature":"fd6514df20e9c4bdc884ffd4a9674f90400c74baec98ee1f9053ffda13c0d4e8"},{"version":"1d75e8c3a7336bc302caf6ccbe2d6525eae3de71e7cf4fa773f96eb9233f4778","signature":"f2509ab79cfb9567d3fd87c05d816d5167a4cddab3d57f1a024f84c1ad4f457d"},"ba027b6f18800b0303aa700e73d8cbffeefd5df864df6be460f5bad437fdc61c",{"version":"a292f4558c0464e002612f6d91a58c4060707007fb6b0e93d51a61d9c9c3ffa6","signature":"c4e4d8e5cee55ca1183d8ee5232f1180e0785e1af78d38565dec5c5ab94eeeaf"},{"version":"fa115899f1b418e67c21e9c063453a1cde1aaa8440169c8c7d2213d16885e127","signature":"4f4ea846f2440dc1aa661d7aa3dc785347ea2b14dd8e75550eb3dad2de472135"},{"version":"7685a0634b82b2b760ff96c579f2ad815dfe955a010aa8197b3c68210dfc0ef1","signature":"22585bc00d59e04890fef08f052b68e7585f885175c2e336b6ceea06d00ece6b","affectsGlobalScope":true},{"version":"e762b570e00b482f6d0ecce98ce37034542301e3efb5f8d1a2c22d7317313fee","signature":"46028ecd6ee362a7f84654749b4143531b7ec6ce352670ee73387e70128d2d12"},{"version":"45fcd236c2462766d7afe86ba387fa746fae48e35183f5028d763c82bc7eef27","signature":"f2509ab79cfb9567d3fd87c05d816d5167a4cddab3d57f1a024f84c1ad4f457d"},{"version":"b6e28fc9f40a6505a47154b6d3f3754b58a9655f13eb2dec2956aaf35ed2cff7","signature":"d70190401049707bc8bef5200d71dd5428a786bce0350a8ec34af064d05fe0be"},{"version":"bd4db52def8051f1c7e463202dd878957d36aa92d40a213e480d5bb6b187df2d","signature":"ed487bb1acbe0c087fa776e822f1626d3f6eff2b3179c27a08d1a94bc3fa8cde"},{"version":"7815525b1d2eb0b25ccc863324e9bb917be5f982069b7fa21a4004e210a0cb25","signature":"af5d179d25392674db0e3b4828d316110b0de2ee549cfd5e215d1ae087609fe0"},{"version":"ab423c0bfcd91985a3480cbc24cd465552b94c2a8c95602d2c20448f6ece887d","signature":"02225072e030f01ca9f4cee26b8faa4ae541941227abf7f3dd5e9cf25a24ee7a"},{"version":"bb183b0dc04feb17c2c5cbed3ca62837991d42c5f5e71f3e17d3f456b9d62db7","signature":"3a690970a660809d8931355ef4014c6fa13cd244858c32ca36694c0852c2a30f"},{"version":"9af87f130e804ee0eae6fcbe2ded3031652ca5c84d521940e445014489964d62","signature":"e36827a8f8a6e0a79b4478e32b97434248e9e14147349894fd287300ba5fa212"},{"version":"bd3a6c6d0284264e0b6b0abdefbbc82a24abd8dca8be4937ef3e30ba4ebb2b25","signature":"1048d8d0d5c8a782b1e556ed5e450e016fab455f7f4ae5fa1c384202d848a481"},{"version":"d236c31c313057c88e0313cb879ad82cc953292ae9be42909e55b6b7e66b8409","signature":"eac671a2d1a64e3b6abecad097f8b64c1ebcf57ddd3c0c55b222e846d3a07776"},{"version":"415be6a6c60012dddc5b03148bfec1a6df4cc849f73aae9a51967bb9a48822de","signature":"c23ddb8cf3ae81ee2c3eb8429e4f2899f82d6cf37962cf13e2c6363c671de1ba"},{"version":"df8caf0423ea5db34e4b78f70533baffde68c5ccb9b6d2e4c671ddc0668f4ba6","affectsGlobalScope":true},{"version":"519392f9725d2d8a6fc17f60590682b17c6a099120faa312363c13213cf60aeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"4051f6311deb0ce6052329eeb1cd4b1b104378fe52f882f483130bea75f92197","impliedFormat":1},{"version":"ee8bee0eb75f88221d2d6e5aeab2ea893f7798aab3416627ad86a0c73937b82a","impliedFormat":1},{"version":"271cde49dfd9b398ccc91bb3aaa43854cf76f4d14e10fed91cbac649aa6cbc63","affectsGlobalScope":true,"impliedFormat":1},{"version":"2bcecd31f1b4281710c666843fc55133a0ee25b143e59f35f49c62e168123f4b","impliedFormat":1},{"version":"a6273756fa05f794b64fe1aff45f4371d444f51ed0257f9364a8b25f3501915d","impliedFormat":1},{"version":"9c4e644fe9bf08d93c93bd892705842189fe345163f8896849d5964d21b56b78","impliedFormat":1},{"version":"25d91fb9ed77a828cc6c7a863236fb712dafcd52f816eec481bd0c1f589f4404","impliedFormat":1},{"version":"4cd14cea22eed1bfb0dc76183e56989f897ac5b14c0e2a819e5162eafdcfe243","impliedFormat":1},{"version":"8d32432f68ca4ce93ad717823976f2db2add94c70c19602bf87ee67fe51df48b","impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"c0671b50bb99cc7ad46e9c68fa0e7f15ba4bc898b59c31a17ea4611fab5095da","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"aa83e100f0c74a06c9d24f40a096c9e9cc3c02704250d01541e22c0ae9264eda","affectsGlobalScope":true,"impliedFormat":1},{"version":"1db0b7dca579049ca4193d034d835f6bfe73096c73663e5ef9a0b5779939f3d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"9798340ffb0d067d69b1ae5b32faa17ab31b82466a3fc00d8f2f2df0c8554aaa","affectsGlobalScope":true,"impliedFormat":1},{"version":"456fa0c0ab68731564917642b977c71c3b7682240685b118652fb9253c9a6429","affectsGlobalScope":true,"impliedFormat":1},{"version":"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","impliedFormat":1},{"version":"23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","impliedFormat":1},{"version":"487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","impliedFormat":1},{"version":"3a80bc85f38526ca3b08007ee80712e7bb0601df178b23fbf0bf87036fce40ce","impliedFormat":1},{"version":"ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"68834d631c8838c715f225509cfc3927913b9cc7a4870460b5b60c8dbdb99baf","impliedFormat":1},{"version":"4bc0794175abedf989547e628949888c1085b1efcd93fc482bccd77ee27f8b7c","impliedFormat":1},{"version":"3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","impliedFormat":1},{"version":"78c69908f7b42d6001037eb8e2d7ec501897ac9cee8d58f31923ff15b3fd4e02","impliedFormat":1},{"version":"ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","impliedFormat":1},{"version":"36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","impliedFormat":1},{"version":"914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","impliedFormat":1},{"version":"33e981bf6376e939f99bd7f89abec757c64897d33c005036b9a10d9587d80187","impliedFormat":1},{"version":"7fd1b31fd35876b0aa650811c25ec2c97a3c6387e5473eb18004bed86cdd76b6","impliedFormat":1},{"version":"b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","impliedFormat":1},{"version":"1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","impliedFormat":1},{"version":"af13e99445f37022c730bfcafcdc1761e9382ce1ea02afb678e3130b01ce5676","impliedFormat":1},{"version":"e5c4fceee379a4a8f5e0266172c33de9dd240e1218b6a439a30c96200190752b","impliedFormat":1},{"version":"0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","impliedFormat":1},{"version":"9666f2f84b985b62400d2e5ab0adae9ff44de9b2a34803c2c5bd3c8325b17dc0","impliedFormat":1},{"version":"40cd35c95e9cf22cfa5bd84e96408b6fcbca55295f4ff822390abb11afbc3dca","impliedFormat":1},{"version":"b1616b8959bf557feb16369c6124a97a0e74ed6f49d1df73bb4b9ddf68acf3f3","impliedFormat":1},{"version":"40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","impliedFormat":1},{"version":"249b9cab7f5d628b71308c7d9bb0a808b50b091e640ba3ed6e2d0516f4a8d91d","impliedFormat":1},{"version":"80aae6afc67faa5ac0b32b5b8bc8cc9f7fa299cff15cf09cc2e11fd28c6ae29e","impliedFormat":1},{"version":"f473cd2288991ff3221165dcf73cd5d24da30391f87e85b3dd4d0450c787a391","impliedFormat":1},{"version":"499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","impliedFormat":1},{"version":"54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","impliedFormat":1},{"version":"beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","impliedFormat":1},{"version":"78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","impliedFormat":1},{"version":"5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","impliedFormat":1},{"version":"59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","impliedFormat":1},{"version":"addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","impliedFormat":1},{"version":"48cc3ec153b50985fb95153258a710782b25975b10dd4ac8a4f3920632d10790","impliedFormat":1},{"version":"0040f0c70a793bdc76e4eace5de03485d76f667009656c5fc8d4da4eaf0aa2da","impliedFormat":1},{"version":"18f8cfbb14ba9405e67d30968ae67b8d19133867d13ebc49c8ed37ec64ce9bdb","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e","impliedFormat":1},{"version":"830171b27c5fdf9bcbe4cf7d428fcf3ae2c67780fb7fbdccdf70d1623d938bc4","affectsGlobalScope":true,"impliedFormat":1},{"version":"1cf059eaf468efcc649f8cf6075d3cb98e9a35a0fe9c44419ec3d2f5428d7123","affectsGlobalScope":true,"impliedFormat":1},{"version":"e7721c4f69f93c91360c26a0a84ee885997d748237ef78ef665b153e622b36c1","affectsGlobalScope":true,"impliedFormat":1},{"version":"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7","impliedFormat":1},{"version":"18334defc3d0a0e1966f5f3c23c7c83b62c77811e51045c5a7ff3883b446f81f","affectsGlobalScope":true,"impliedFormat":1},{"version":"8b17fcd63aa13734bf1d01419f4d6031b1c6a5fb2cbdb45e9839fb1762bdf0df","impliedFormat":1},{"version":"c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c","impliedFormat":1},{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"247b8f93f31c5918444116471bfb90810e268339bf5c678657ca99ca7183dabb","affectsGlobalScope":true,"impliedFormat":1},{"version":"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","impliedFormat":1},{"version":"25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","impliedFormat":1},{"version":"aa9224557befad144262c85b463c0a7ba8a3a0ad2a7c907349f8bb8bc3fe4abc","impliedFormat":1},{"version":"a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","impliedFormat":1},{"version":"ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c","impliedFormat":1},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true,"impliedFormat":1},{"version":"92dab1293d03f6cbd5d53c31b723c30ff5a52eaacd717ee3226e18739b5bb722","impliedFormat":1},{"version":"c6176c7b9f3769ba7f076c7a791588562c653cc0ba08fb2184f87bf78db2a87c","impliedFormat":1},{"version":"c6a532cab53ec1f87eb0b6a3a9882f4cf13c25b4a89495b3b3001a35f74224c6","impliedFormat":1},{"version":"bcbabfaca3f6b8a76cb2739e57710daf70ab5c9479ab70f5351c9b4932abf6bd","impliedFormat":1},{"version":"165a0c1f95bc939c72f18a280fc707fba6f2f349539246b050cfc09eb1d9f446","impliedFormat":1},{"version":"ca0f30343ce1a43181684c02af2ac708ba26d00f689be5e96e7301c374d64c7e","impliedFormat":1},{"version":"d163b6bc2372b4f07260747cbc6c0a6405ab3fbcea3852305e98ac43ca59f5bc","impliedFormat":1},{"version":"c8b85f7aed29f8f52b813f800611406b0bfe5cf3224d20a4bdda7c7f73ce368e","affectsGlobalScope":true,"impliedFormat":1},{"version":"7baae9bf5b50e572e7742c886c73c6f8fa50b34190bc5f0fd20dd7e706fda832","impliedFormat":1},{"version":"e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","impliedFormat":1},{"version":"76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86","impliedFormat":1},{"version":"5e9f8c1e042b0f598a9be018fc8c3cb670fe579e9f2e18e3388b63327544fe16","affectsGlobalScope":true,"impliedFormat":1},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true,"impliedFormat":1},{"version":"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","impliedFormat":1},{"version":"b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","impliedFormat":1},{"version":"de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","impliedFormat":1},{"version":"70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","impliedFormat":1},{"version":"8c81fd4a110490c43d7c578e8c6f69b3af01717189196899a6a44f93daa57a3a","impliedFormat":1},{"version":"1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","impliedFormat":1},{"version":"29c83cc89ddbdd5ffae8c00f4e6fab6f8f0e8076f87a866b132e8751e88cb848","impliedFormat":1},{"version":"363eedb495912790e867da6ff96e81bf792c8cfe386321e8163b71823a35719a","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"dba28a419aec76ed864ef43e5f577a5c99a010c32e5949fe4e17a4d57c58dd11","affectsGlobalScope":true,"impliedFormat":1},{"version":"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","impliedFormat":1},{"version":"07199a85560f473f37363d8f1300fac361cda2e954caf8a40221f83a6bfa7ade","impliedFormat":1},{"version":"9705cd157ffbb91c5cab48bdd2de5a437a372e63f870f8a8472e72ff634d47c1","affectsGlobalScope":true,"impliedFormat":1},{"version":"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","impliedFormat":1},{"version":"3af7d02e5d6ecbf363e61fb842ee55d3518a140fd226bdfb24a3bca6768c58df","impliedFormat":1},{"version":"e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","impliedFormat":1},{"version":"4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055","impliedFormat":1},{"version":"0d7393564d48a3f6f08c76b8d4de48260a072801422548e2030e386acd530dbf","affectsGlobalScope":true,"impliedFormat":1},{"version":"0fcb71410ad8a48bbdd13cd4c3eedf78ac0416e9f3533ae98e19cc6f3c7f5474","affectsGlobalScope":true,"impliedFormat":1},{"version":"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","impliedFormat":1},{"version":"420fdd37c51263be9db3fcac35ffd836216c71e6000e6a9740bb950fb0540654","impliedFormat":1},{"version":"73b0bff83ee76e3a9320e93c7fc15596e858b33c687c39a57567e75c43f2a324","impliedFormat":1},{"version":"cd3256f2ac09c65d2ee473916c273c45221367ab457fa1778a5696bccf5c4e8e","affectsGlobalScope":true,"impliedFormat":1},{"version":"4445f6ce6289c5b2220398138da23752fd84152c5c95bb8b58dedefc1758c036","impliedFormat":1},{"version":"7ac7756e2b43f021fa3d3b562a7ea8bf579543521a18b5682935d015361e6a35","impliedFormat":1},{"version":"a0acca63c9e39580f32a10945df231815f0fe554c074da96ba6564010ffbd2d8","impliedFormat":1},{"version":"1d4bc73751d6ec6285331d1ca378904f55d9e5e8aeaa69bc45b675c3df83e778","impliedFormat":1},{"version":"8017277c3843df85296d8730f9edf097d68d7d5f9bc9d8124fcacf17ecfd487e","impliedFormat":1}],"root":[[93,97],99,[168,174],[176,193]],"options":{"allowJs":true,"allowSyntheticDefaultImports":true,"declarationMap":false,"downlevelIteration":true,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"jsxImportSource":"react","module":99,"noFallthroughCasesInSwitch":true,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":2,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"referencedMap":[[194,1],[196,2],[197,1],[201,3],[202,3],[198,4],[199,4],[200,4],[203,5],[254,6],[255,6],[256,7],[206,8],[257,9],[258,10],[259,11],[204,1],[260,12],[261,13],[262,14],[263,15],[264,16],[265,17],[266,17],[267,18],[268,19],[269,20],[270,21],[207,1],[205,1],[271,22],[272,23],[273,24],[307,25],[274,26],[275,1],[276,27],[277,28],[278,29],[279,30],[280,31],[281,32],[282,33],[283,34],[284,35],[285,35],[286,36],[287,1],[288,1],[289,37],[291,38],[290,39],[292,40],[293,41],[294,42],[295,43],[296,44],[297,45],[298,46],[299,47],[300,48],[301,49],[302,50],[303,51],[304,52],[208,1],[209,1],[210,1],[251,53],[252,54],[253,1],[305,55],[306,56],[175,57],[308,57],[310,58],[309,59],[83,1],[85,60],[86,57],[98,1],[121,61],[122,61],[123,62],[124,61],[126,63],[125,61],[127,61],[128,61],[129,64],[103,65],[130,1],[131,1],[132,66],[100,1],[119,67],[120,68],[115,1],[106,69],[133,70],[134,71],[114,72],[118,73],[117,74],[135,1],[116,75],[136,76],[112,77],[139,78],[138,79],[107,77],[140,80],[150,65],[108,1],[137,81],[161,82],[144,83],[141,84],[142,85],[143,86],[152,87],[111,88],[145,1],[146,1],[147,89],[148,1],[149,90],[151,91],[160,92],[153,93],[155,94],[154,93],[156,93],[157,95],[158,96],[159,97],[162,98],[105,65],[102,1],[109,1],[104,1],[113,99],[110,100],[101,1],[89,1],[84,1],[195,1],[164,101],[167,102],[165,101],[163,103],[166,104],[92,105],[88,106],[91,107],[90,1],[87,57],[81,1],[82,1],[13,1],[14,1],[16,1],[15,1],[2,1],[17,1],[18,1],[19,1],[20,1],[21,1],[22,1],[23,1],[24,1],[3,1],[25,1],[26,1],[4,1],[27,1],[31,1],[28,1],[29,1],[30,1],[32,1],[33,1],[34,1],[5,1],[35,1],[36,1],[37,1],[38,1],[6,1],[42,1],[39,1],[40,1],[41,1],[43,1],[7,1],[44,1],[49,1],[50,1],[45,1],[46,1],[47,1],[48,1],[8,1],[54,1],[51,1],[52,1],[53,1],[55,1],[9,1],[56,1],[57,1],[58,1],[60,1],[59,1],[61,1],[62,1],[10,1],[63,1],[64,1],[65,1],[11,1],[66,1],[67,1],[68,1],[69,1],[70,1],[1,1],[71,1],[72,1],[12,1],[76,1],[74,1],[79,1],[78,1],[73,1],[77,1],[75,1],[80,1],[228,108],[239,109],[226,110],[240,111],[249,112],[217,113],[218,114],[216,115],[248,116],[243,117],[247,118],[220,119],[236,120],[219,121],[246,122],[214,123],[215,117],[221,124],[222,1],[227,125],[225,124],[212,126],[250,127],[241,128],[231,129],[230,124],[232,130],[234,131],[229,132],[233,133],[244,116],[223,134],[224,135],[235,136],[213,111],[238,137],[237,124],[242,1],[211,1],[245,138],[174,139],[172,140],[95,141],[182,142],[93,143],[94,143],[183,143],[170,144],[169,144],[168,144],[171,143],[99,145],[184,143],[185,146],[186,143],[176,147],[177,143],[178,1],[187,145],[188,146],[179,146],[180,148],[189,145],[173,146],[97,146],[190,146],[96,146],[191,145],[192,146],[193,1],[181,149]],"affectedFilesPendingEmit":[174,172,95,182,93,94,183,170,169,168,171,99,184,185,186,176,177,187,188,179,180,189,173,97,190,96,191,192,181],"version":"5.9.2"}[m
\ No newline at end of file[m
[32m+[m[32m{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.es2023.d.ts","../typescript/lib/lib.es2024.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2016.intl.d.ts","../typescript/lib/lib.es2017.arraybuffer.d.ts","../typescript/lib/lib.es2017.date.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.es2022.regexp.d.ts","../typescript/lib/lib.es2023.array.d.ts","../typescript/lib/lib.es2023.collection.d.ts","../typescript/lib/lib.es2023.intl.d.ts","../typescript/lib/lib.es2024.arraybuffer.d.ts","../typescript/lib/lib.es2024.collection.d.ts","../typescript/lib/lib.es2024.object.d.ts","../typescript/lib/lib.es2024.promise.d.ts","../typescript/lib/lib.es2024.regexp.d.ts","../typescript/lib/lib.es2024.sharedmemory.d.ts","../typescript/lib/lib.es2024.string.d.ts","../typescript/lib/lib.esnext.array.d.ts","../typescript/lib/lib.esnext.collection.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../typescript/lib/lib.esnext.disposable.d.ts","../typescript/lib/lib.esnext.promise.d.ts","../typescript/lib/lib.esnext.decorators.d.ts","../typescript/lib/lib.esnext.iterator.d.ts","../typescript/lib/lib.esnext.float16.d.ts","../typescript/lib/lib.esnext.error.d.ts","../typescript/lib/lib.esnext.sharedmemory.d.ts","../typescript/lib/lib.decorators.d.ts","../typescript/lib/lib.decorators.legacy.d.ts","../@types/react/global.d.ts","../csstype/index.d.ts","../@types/react/index.d.ts","../@types/react/jsx-runtime.d.ts","../react-router/dist/development/routeModules-DnUHijGz.d.ts","../react-router/dist/development/index-react-server-client-BYr9g50r.d.ts","../cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../../src/components/ImageUploadModal.tsx","../../src/components/shared/components/MultiAuthLogin.tsx","../../src/services/openaiAPI.ts","../../src/services/healthAPI.ts","../axios/index.d.ts","../../src/services/healthSearchService.ts","../../src/services/searchCache.ts","../../src/components/foodAnalysisService.tsx","../../src/services/newsService.ts","../../src/components/HealthNewsFeed.tsx","../../src/VHealthSearch.tsx","../../src/services/photoStorageService.ts","../chart.js/dist/core/core.config.d.ts","../chart.js/dist/types/utils.d.ts","../chart.js/dist/types/basic.d.ts","../chart.js/dist/core/core.adapters.d.ts","../chart.js/dist/types/geometric.d.ts","../chart.js/dist/types/animation.d.ts","../chart.js/dist/core/core.element.d.ts","../chart.js/dist/elements/element.point.d.ts","../chart.js/dist/helpers/helpers.easing.d.ts","../chart.js/dist/types/color.d.ts","../chart.js/dist/types/layout.d.ts","../chart.js/dist/plugins/plugin.colors.d.ts","../chart.js/dist/elements/element.arc.d.ts","../chart.js/dist/types/index.d.ts","../chart.js/dist/core/core.plugins.d.ts","../chart.js/dist/core/core.defaults.d.ts","../chart.js/dist/core/core.typedRegistry.d.ts","../chart.js/dist/core/core.scale.d.ts","../chart.js/dist/core/core.registry.d.ts","../chart.js/dist/core/core.controller.d.ts","../chart.js/dist/core/core.datasetController.d.ts","../chart.js/dist/controllers/controller.bar.d.ts","../chart.js/dist/controllers/controller.bubble.d.ts","../chart.js/dist/controllers/controller.doughnut.d.ts","../chart.js/dist/controllers/controller.line.d.ts","../chart.js/dist/controllers/controller.polarArea.d.ts","../chart.js/dist/controllers/controller.pie.d.ts","../chart.js/dist/controllers/controller.radar.d.ts","../chart.js/dist/controllers/controller.scatter.d.ts","../chart.js/dist/controllers/index.d.ts","../chart.js/dist/core/core.animation.d.ts","../chart.js/dist/core/core.animations.d.ts","../chart.js/dist/core/core.animator.d.ts","../chart.js/dist/core/core.interaction.d.ts","../chart.js/dist/core/core.layouts.d.ts","../chart.js/dist/core/core.ticks.d.ts","../chart.js/dist/core/index.d.ts","../chart.js/dist/helpers/helpers.segment.d.ts","../chart.js/dist/elements/element.line.d.ts","../chart.js/dist/elements/element.bar.d.ts","../chart.js/dist/elements/index.d.ts","../chart.js/dist/platform/platform.base.d.ts","../chart.js/dist/platform/platform.basic.d.ts","../chart.js/dist/platform/platform.dom.d.ts","../chart.js/dist/platform/index.d.ts","../chart.js/dist/plugins/plugin.decimation.d.ts","../chart.js/dist/plugins/plugin.filler/index.d.ts","../chart.js/dist/plugins/plugin.legend.d.ts","../chart.js/dist/plugins/plugin.subtitle.d.ts","../chart.js/dist/plugins/plugin.title.d.ts","../chart.js/dist/helpers/helpers.core.d.ts","../chart.js/dist/plugins/plugin.tooltip.d.ts","../chart.js/dist/plugins/index.d.ts","../chart.js/dist/scales/scale.category.d.ts","../chart.js/dist/scales/scale.linearbase.d.ts","../chart.js/dist/scales/scale.linear.d.ts","../chart.js/dist/scales/scale.logarithmic.d.ts","../chart.js/dist/scales/scale.radialLinear.d.ts","../chart.js/dist/scales/scale.time.d.ts","../chart.js/dist/scales/scale.timeseries.d.ts","../chart.js/dist/scales/index.d.ts","../chart.js/dist/index.d.ts","../chart.js/dist/types.d.ts","../react-chartjs-2/dist/types.d.ts","../react-chartjs-2/dist/chart.d.ts","../react-chartjs-2/dist/typedCharts.d.ts","../react-chartjs-2/dist/utils.d.ts","../react-chartjs-2/dist/index.d.ts","../../src/components/ResultQualityPie.tsx","../../src/components/NutritionChart.tsx","../../src/components/NovaChart.tsx","../@types/react-dom/index.d.ts","../../src/components/Spinner.tsx","../../src/SearchResults.tsx","../../src/App.tsx","../@types/react-dom/client.d.ts","../../src/index.tsx","../../src/login.tsx","../../src/react-app-env.d.ts","../../src/vHealthApp.tsx","../../src/components/App.tsx","../../src/components/MultiAuthLogin.tsx","../../src/components/vNutrition.tsx","../../src/components/shared/authService.ts","../../src/config/dbConfig.ts","../../src/hooks/useChartData.ts","../../src/services/apiService.ts","../../src/services/foodAnalysisService.ts","../../src/services/nutritionService.ts","../../src/services/readabilityService.ts","../../src/services/searchService.ts","../../src/types/index.ts","../../src/types/jsx.d.ts","../@types/axios/index.d.ts","../moment/ts3.1-typings/moment.d.ts","../@types/chart.js/index.d.ts","../@types/history/DOMUtils.d.ts","../@types/history/createBrowserHistory.d.ts","../@types/history/createHashHistory.d.ts","../@types/history/createMemoryHistory.d.ts","../@types/history/LocationUtils.d.ts","../@types/history/PathUtils.d.ts","../@types/history/index.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/globals.typedarray.d.ts","../@types/node/buffer.buffer.d.ts","../@types/node/globals.d.ts","../@types/node/web-globals/abortcontroller.d.ts","../@types/node/web-globals/domexception.d.ts","../@types/node/web-globals/events.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client-stats.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/web-globals/fetch.d.ts","../@types/node/web-globals/navigator.d.ts","../@types/node/web-globals/storage.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/inspector.generated.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/index.d.ts","../@types/react-router/index.d.ts","../@types/react-router-dom/index.d.ts"],"fileIdsList":[[210,261,278,279],[199,210,261,278,279],[207,210,261,278,279],[201,207,210,261,278,279],[202,203,204,205,206,210,261,278,279],[210,258,261,278,279],[210,260,261,278,279],[261,278,279],[210,261,266,278,279,296],[210,261,262,267,272,278,279,281,293,304],[210,261,262,263,272,278,279,281],[210,261,264,278,279,305],[210,261,265,266,273,278,279,282],[210,261,266,278,279,293,301],[210,261,267,269,272,278,279,281],[210,260,261,268,278,279],[210,261,269,270,278,279],[210,261,271,272,278,279],[210,260,261,272,278,279],[210,261,272,273,274,278,279,293,304],[210,261,272,273,274,278,279,288,293,296],[210,254,261,269,272,275,278,279,281,293,304],[210,261,272,273,275,276,278,279,281,293,301,304],[210,261,275,277,278,279,293,301,304],[208,209,210,211,212,213,214,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],[210,261,272,278,279],[210,261,278,279,280,304],[210,261,269,272,278,279,281,293],[210,261,278,279,282],[210,261,278,279,283],[210,260,261,278,279,284],[210,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],[210,261,278,279,286],[210,261,278,279,287],[210,261,272,278,279,288,289],[210,261,278,279,288,290,305,307],[210,261,272,278,279,293,294,296],[210,261,278,279,295,296],[210,261,278,279,293,294],[210,261,278,279,296],[210,261,278,279,297],[210,258,261,278,279,293,298],[210,261,272,278,279,299,300],[210,261,278,279,299,300],[210,261,266,278,279,281,293,301],[210,261,278,279,302],[210,261,278,279,281,303],[210,261,275,278,279,287,304],[210,261,266,278,279,305],[210,261,278,279,293,306],[210,261,278,279,280,307],[210,261,278,279,308],[210,254,261,278,279],[210,261,278,279,309],[210,254,261,272,274,278,279,284,293,296,304,306,307,309],[210,261,278,279,293,310],[85,210,261,278,279],[85,91,207,210,261,278,279],[85,207,210,261,278,279],[83,84,210,261,278,279],[125,210,261,278,279],[124,125,210,261,278,279],[128,210,261,278,279],[126,127,128,129,130,131,132,133,210,261,278,279],[107,118,210,261,278,279],[124,135,210,261,278,279],[105,118,119,120,123,210,261,278,279],[122,124,210,261,278,279],[107,109,110,210,261,278,279],[111,118,124,210,261,278,279],[124,210,261,278,279],[118,124,210,261,278,279],[111,121,122,125,210,261,278,279],[107,111,118,167,210,261,278,279],[120,210,261,278,279],[108,111,119,120,122,123,124,125,135,136,137,138,139,140,210,261,278,279],[111,118,210,261,278,279],[107,111,210,261,278,279],[107,111,112,142,210,261,278,279],[112,117,143,144,210,261,278,279],[112,143,210,261,278,279],[134,141,145,149,157,165,210,261,278,279],[146,147,148,210,261,278,279],[105,124,210,261,278,279],[146,210,261,278,279],[124,146,210,261,278,279],[116,150,151,152,153,154,156,210,261,278,279],[167,210,261,278,279],[107,111,118,210,261,278,279],[107,111,167,210,261,278,279],[107,111,118,124,136,138,146,155,210,261,278,279],[158,160,161,162,163,164,210,261,278,279],[122,210,261,278,279],[159,210,261,278,279],[159,167,210,261,278,279],[108,122,210,261,278,279],[163,210,261,278,279],[118,166,210,261,278,279],[106,107,108,109,110,111,112,113,114,115,116,117,210,261,278,279],[109,210,261,278,279],[168,210,261,278,279],[168,169,170,171,210,261,278,279],[85,167,210,261,278,279],[85,167,168,210,261,278,279],[91,210,261,278,279],[85,87,210,261,278,279],[85,87,88,89,90,210,261,278,279],[210,221,224,227,228,261,278,279,304],[210,224,261,278,279,293,304],[210,224,228,261,278,279,304],[210,261,278,279,293],[210,218,261,278,279],[210,222,261,278,279],[210,220,221,224,261,278,279,304],[210,261,278,279,281,301],[210,261,278,279,311],[210,218,261,278,279,311],[210,220,224,261,278,279,281,304],[210,215,216,217,219,223,261,272,278,279,293,304],[210,224,232,239,261,278,279],[210,216,222,261,278,279],[210,224,248,249,261,278,279],[210,216,219,224,261,278,279,296,304,311],[210,224,261,278,279],[210,220,224,261,278,279,304],[210,215,261,278,279],[210,218,219,220,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,261,278,279],[210,224,241,244,261,269,278,279],[210,224,232,233,234,261,278,279],[210,222,224,233,235,261,278,279],[210,223,261,278,279],[210,216,218,224,261,278,279],[210,224,228,233,235,261,278,279],[210,228,261,278,279],[210,222,224,227,261,278,279,304],[210,216,220,224,232,261,278,279],[210,224,241,261,278,279],[210,218,224,248,261,278,279,296,309,311],[85,86,92,95,103,178,210,261,278,279],[85,86,93,94,99,100,104,173,174,175,177,210,261,278,279],[85,86,92,93,94,98,99,100,102,210,261,278,279],[85,86,103,210,261,278,279],[85,86,101,210,261,278,279],[85,86,210,261,278,279],[85,86,167,172,210,261,278,279],[85,86,176,210,261,278,279],[86,198,210,261,278,279],[86,210,261,278,279],[85,86,179,180,210,261,278,279],[86,95,96,198,210,261,278,279],[85,86,93,94,98,99,100,104,178,210,261,278,279]],"fileInfos":[{"version":"c430d44666289dae81f30fa7b2edebf186ecc91a2d4c71266ea6ae76388792e1","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","impliedFormat":1},{"version":"ee7bad0c15b58988daa84371e0b89d313b762ab83cb5b31b8a2d1162e8eb41c2","impliedFormat":1},{"version":"27bdc30a0e32783366a5abeda841bc22757c1797de8681bbe81fbc735eeb1c10","impliedFormat":1},{"version":"8fd575e12870e9944c7e1d62e1f5a73fcf23dd8d3a321f2a2c74c20d022283fe","impliedFormat":1},{"version":"2ab096661c711e4a81cc464fa1e6feb929a54f5340b46b0a07ac6bbf857471f0","impliedFormat":1},{"version":"080941d9f9ff9307f7e27a83bcd888b7c8270716c39af943532438932ec1d0b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2e80ee7a49e8ac312cc11b77f1475804bee36b3b2bc896bead8b6e1266befb43","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"fb0f136d372979348d59b3f5020b4cdb81b5504192b1cacff5d1fbba29378aa1","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"a680117f487a4d2f30ea46f1b4b7f58bef1480456e18ba53ee85c2746eeca012","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true,"impliedFormat":1},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true,"impliedFormat":1},{"version":"959d36cddf5e7d572a65045b876f2956c973a586da58e5d26cde519184fd9b8a","affectsGlobalScope":true,"impliedFormat":1},{"version":"965f36eae237dd74e6cca203a43e9ca801ce38824ead814728a2807b1910117d","affectsGlobalScope":true,"impliedFormat":1},{"version":"3925a6c820dcb1a06506c90b1577db1fdbf7705d65b62b99dce4be75c637e26b","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a3d63ef2b853447ec4f749d3f368ce642264246e02911fcb1590d8c161b8005","affectsGlobalScope":true,"impliedFormat":1},{"version":"8cdf8847677ac7d20486e54dd3fcf09eda95812ac8ace44b4418da1bbbab6eb8","affectsGlobalScope":true,"impliedFormat":1},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true,"impliedFormat":1},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true,"impliedFormat":1},{"version":"b4b67b1a91182421f5df999988c690f14d813b9850b40acd06ed44691f6727ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"df83c2a6c73228b625b0beb6669c7ee2a09c914637e2d35170723ad49c0f5cd4","affectsGlobalScope":true,"impliedFormat":1},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e3c06ea092138bf9fa5e874a1fdbc9d54805d074bee1de31b99a11e2fec239d","affectsGlobalScope":true,"impliedFormat":1},{"version":"87dc0f382502f5bbce5129bdc0aea21e19a3abbc19259e0b43ae038a9fc4e326","affectsGlobalScope":true,"impliedFormat":1},{"version":"b1cb28af0c891c8c96b2d6b7be76bd394fddcfdb4709a20ba05a7c1605eea0f9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2fef54945a13095fdb9b84f705f2b5994597640c46afeb2ce78352fab4cb3279","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac77cb3e8c6d3565793eb90a8373ee8033146315a3dbead3bde8db5eaf5e5ec6","affectsGlobalScope":true,"impliedFormat":1},{"version":"56e4ed5aab5f5920980066a9409bfaf53e6d21d3f8d020c17e4de584d29600ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ece9f17b3866cc077099c73f4983bddbcb1dc7ddb943227f1ec070f529dedd1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a6282c8827e4b9a95f4bf4f5c205673ada31b982f50572d27103df8ceb8013c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1c9319a09485199c1f7b0498f2988d6d2249793ef67edda49d1e584746be9032","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3a2a0cee0f03ffdde24d89660eba2685bfbdeae955a6c67e8c4c9fd28928eeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811c71eee4aa0ac5f7adf713323a5c41b0cf6c4e17367a34fbce379e12bbf0a4","affectsGlobalScope":true,"impliedFormat":1},{"version":"51ad4c928303041605b4d7ae32e0c1ee387d43a24cd6f1ebf4a2699e1076d4fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"60037901da1a425516449b9a20073aa03386cce92f7a1fd902d7602be3a7c2e9","affectsGlobalScope":true,"impliedFormat":1},{"version":"d4b1d2c51d058fc21ec2629fff7a76249dec2e36e12960ea056e3ef89174080f","affectsGlobalScope":true,"impliedFormat":1},{"version":"22adec94ef7047a6c9d1af3cb96be87a335908bf9ef386ae9fd50eeb37f44c47","affectsGlobalScope":true,"impliedFormat":1},{"version":"4245fee526a7d1754529d19227ecbf3be066ff79ebb6a380d78e41648f2f224d","affectsGlobalScope":true,"impliedFormat":1},{"version":"73f78680d4c08509933daf80947902f6ff41b6230f94dd002ae372620adb0f60","affectsGlobalScope":true,"impliedFormat":1},{"version":"c5239f5c01bcfa9cd32f37c496cf19c61d69d37e48be9de612b541aac915805b","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"170d4db14678c68178ee8a3d5a990d5afb759ecb6ec44dbd885c50f6da6204f6","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"bea6c0f5b819cf8cba6608bf3530089119294f949640714011d46ec8013b61c2","impliedFormat":1},{"version":"42c169fb8c2d42f4f668c624a9a11e719d5d07dacbebb63cbcf7ef365b0a75b3","impliedFormat":1},{"version":"553ea9c5b51debd5899c0c80e40155bd4e0a5e927aa6c4ed1bca3c2e6710d041","impliedFormat":1},{"version":"4fe49159bc9ef8c8d1ab6d9424aef4912a54fc8c25502597fa4ebb9b82d63a76","impliedFormat":1},{"version":"5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","impliedFormat":1},{"version":"b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd","impliedFormat":1},{"version":"55687179edfa9f83f02309529d82fc2db0271c2eb313b2d12a7d26d48a4a88ba","affectsGlobalScope":true,"impliedFormat":1},{"version":"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","impliedFormat":1},"bd303e6ec0cff7cb04e0edaf0e1d20a082fc4114a68f97abcdc26843eee43eb6","6ca8e5c630898dcbdbe1278f20149fc7a7adbbba1022cd6738fe1214b4056970","83650727e659850952b699220b5b80c7f01213cef5b70b31f669b0259e255504","a292f4558c0464e002612f6d91a58c4060707007fb6b0e93d51a61d9c9c3ffa6",{"version":"7584239b853f690c6629ae8bb683ded6ff33104e7835778bbca5ee1b1d9a0a91","impliedFormat":99},"fa115899f1b418e67c21e9c063453a1cde1aaa8440169c8c7d2213d16885e127","09a3e3358f3e30f0ea746e144675d2883a2282eed61c414c434152be22aaf844","f9827d88a36eb70903373cb996ed07e9eaecc43b696552f159523a31070621cd","b05a6a99b86d64dbe01f30efd66b9c67a7d24d186926ed0a9999383e944aea35","ef416ac93b37aebd2eb77c6bd36863362afd089552df2b98056d1af7226b352b",{"version":"7652902307554f4d1cae4110a6795ad2dd0dc3d85661041fa437cffa0a9a1014","signature":"10fb7089d5f190a12696f2da3ce3a4716c8bc6d7dbaaff524d62ef442b6e5d52"},"2a9b1c500fe9080f24d1fd3dee48fe3e61b3a083efc956c0bc1f8da05d80d3f5",{"version":"63f6312a4be1ec344baa7c5cdb831587ed5f737f35df2baa2d3db1d180b983ec","impliedFormat":99},{"version":"74c3a57d874889e2f042b89b9688716af704cb2366d757ead586988f6cc9a625","impliedFormat":99},{"version":"5ebf4476be92f000f00cb9fb79d69babe6f6ac2a39efdb04a8f370e110003e19","impliedFormat":99},{"version":"39bc8c363900ffa799f98eb2e4c7ddd52e09cfb9392082128ebe49379f999aa5","impliedFormat":99},{"version":"1a4cfb737223d523387f7afee7219fd2016f1d73ef885e9cb42183c911d07b4d","impliedFormat":99},{"version":"392b17a6ba3f687f19ba207f17841c99306701cc2882f3615a3b426686d854e6","impliedFormat":99},{"version":"2a9f82af6c7cf1e002d17153e10d758f685d085864f6c5f7d2b775ebcd6b2fc9","impliedFormat":99},{"version":"f65b6f12e264b6e22dcf888bc0c239aab27c1d1fa6560af64bcd450f864abab7","impliedFormat":99},{"version":"ecbac26c0c765e1da3e748a35ededfa4c7ed87f48399919cd952ae8bc32a1339","impliedFormat":99},{"version":"9c88eebb75b82b4ccb9412c7e3035e40e188ea3d7dcb010ff87986b7ff629555","impliedFormat":99},{"version":"154f87edab104ff00f36e95b36d01e014a4d74ac4fc219e124e2bf2627099267","impliedFormat":99},{"version":"30844ce073bb46b6908f55273063915629cd795bf7d83638bcb71e1507a494bb","impliedFormat":99},{"version":"0b616ee0814b25c7b231a73b57ad93a558a6b8cb5d3642776b92dca8e361dd9d","impliedFormat":99},{"version":"165c74085a9beb3c2bf69716e5e090449d7e9d4dc53084da6228206213d94939","impliedFormat":99},{"version":"b02604b3eb025af58b4c07c7ffce6d28a03948286cb5c4d5cdc46ffe21549524","impliedFormat":99},{"version":"ebd09f4071c53a42a09a20feb0b144b1f485f10a7d6190aba91c1714977d689f","impliedFormat":99},{"version":"345bf134b7c00954c1db3e011f029c066877a32256569c9d91b6ceb5bcca054c","impliedFormat":99},{"version":"2a1f7be668e3a95cdb683c6f755631bf19de9705c6d6c1c9e4ebc67e9db916d7","impliedFormat":99},{"version":"357acfb6822f15161214eb9e1848c767182750b67f9c2c6ac0fab52ce300ddbb","impliedFormat":99},{"version":"895ed044afb790fa06b64467688cb28436d87f46dcdc526a163915a962d55dca","impliedFormat":99},{"version":"646d66c423da6f036ecfda81da6f7d60a4748ddb0c58c85d261bb5c8e541cef2","impliedFormat":99},{"version":"93acb73e975b4fd741faf2e8fb2a5705aadcf8ca2df8fe354c9edb0b07622252","impliedFormat":99},{"version":"24bf4c3ab312b32e6f114adc2f4ce858a8a28af76abcbdc46a4a40655933f152","impliedFormat":99},{"version":"3b355d5bc20b716079980a0ed2d400180a15368db05888b3b858f90ae3ceac14","impliedFormat":99},{"version":"ff2c4a40bbde08390837443555b9ae201af54b527baf151555310782bd7bb8ef","impliedFormat":99},{"version":"0e9998684ca02c028170441f4c006e1caf425f9a9c3814cf8765a0002773fe30","impliedFormat":99},{"version":"1e647f80259d61974c8d0a89d9e3fd22416975c257d76f4f32d6ff38b9157f21","impliedFormat":99},{"version":"31e9f9b81179cdce4ee1cd1d6a427dc0c5fd15064307df8cad58237b0d96385b","impliedFormat":99},{"version":"7ba73e6476144ac4587b18bcc70349d2a8e7cede4e780815b53a057ca71f764d","impliedFormat":99},{"version":"fba690fc44b5c1db29fb472830df4cea1374642935a02c6302730bff37752498","impliedFormat":99},{"version":"2515daf0e2b05ec5a90349ea839cc1fad8e67135665747cd5f72b7b3d2ad49c3","impliedFormat":99},{"version":"7b4a756bb59248aeb831709239014a9850837727c2d6ec053f54eeaee95dda39","impliedFormat":99},{"version":"cde91ca23d14021aca53adba5977bebf7f72e4f18bbdcd2c6a689482c77dba07","impliedFormat":99},{"version":"191878041be6dae0b75974d1d28d55ae82a2896d5eb5004eb039e964e8140c00","impliedFormat":99},{"version":"7f4272fd567d065c1f5614ae3bed61b3dee47845267be0e41dd24f901985bf0f","impliedFormat":99},{"version":"0fe6cb0ec82fea8bb694d8335f8d470c8843600a277cf02d7dbfb84002666e8a","impliedFormat":99},{"version":"e43159089587768cc9e4b325488c546cec950602173b04a4f6cb9a615c4fc3b9","impliedFormat":99},{"version":"f3ebf0a71fb9e0d708c607d6448edae7a7893162532b560b3f361f48bacdbfca","impliedFormat":99},{"version":"053ed027d6ab656c53ee8dfc3fe842beff2a831831591f7f446c0ea1632f606e","impliedFormat":99},{"version":"79c5c3441a6786ce4804528aa560836e45cf855af4f25d6ca40f598cd6f1979a","impliedFormat":99},{"version":"bf235a40a595fe4c1c72ff72b50a9881a7279c4063029fc88e49237542797935","impliedFormat":99},{"version":"25627620692594a49b01a7192416e59a0fd94717c4f5c2800a3cdde58e28b39f","impliedFormat":99},{"version":"00f9b95c0741094ef69f8befa268077fb5dae5192149d99af5c7abf4cd20d5e5","impliedFormat":99},{"version":"89536ffee2ff5d49cd4c898a854a92a3d0812394f4ab6e1d48f9fb658f4abe48","impliedFormat":99},{"version":"0085bc39713819715d49b27bb64767dff1829179b0914ef0d4e1a852770f0136","impliedFormat":99},{"version":"9c6c451215eae6ae4ee0ebf8433f9d90494df7dba87718478c050bf5551da18f","impliedFormat":99},{"version":"a12d1a8f1b6e34597b9aef2757fdf4505362189c75b7f15266604a80bcffb42e","impliedFormat":99},{"version":"193f77fd99a5798127915516363958d227df9cb82e23f5890aa668409c1e6360","impliedFormat":99},{"version":"d8dc0c576c79c5069f4e87b0a15088e952043cb3df0ec487f81e6b98b174e503","impliedFormat":99},{"version":"84b69e8d4be7b1736536d1ab8c72c48318bbe6c677dab53a2d51058f9e68df71","impliedFormat":99},{"version":"97d3c4bd2a49a56f2cb63bb76c5880afe5c76098dcbb5598cd14e96bf572cb86","impliedFormat":99},{"version":"a493cd942f29c45c9befb1cf2f3e9a757300e1fa6b5a20cf939bf563c31f46a1","impliedFormat":99},{"version":"5300527e32de6eab286e5b70c3cca475380320a142ad54f234a34daadfc7bb1c","impliedFormat":99},{"version":"7476dbc814b46489fff760fd1f3d64248aedbf17e86fda8883c9bd0482d8bf73","impliedFormat":99},{"version":"8520b3f4c2c698bcef9c71d418a11c7cbe90d7b6d7deaed251a97ee5ef6b2068","impliedFormat":99},{"version":"8afc3d51f8ace0b6b9e89a2f7d8a6dffaca41d91733d235dea7c28364a3081a1","impliedFormat":99},{"version":"01cd58f2842ffec94a7cd86881fb5595df4b08399b99e817d2c25c2fb973fe09","impliedFormat":99},{"version":"d49f5458be59a10cc60ad003bebafa22eb37e15492020b2be9ca07055b6c8b10","impliedFormat":99},{"version":"0aa491d56a8011fcf95247f81cc4e09b40cfd5a96e80221038347da3931e8ba6","impliedFormat":99},{"version":"814971944c21b19105949c552a7dd5b35235a17a2eb8092b809e2fcaa54ea4e4","impliedFormat":99},{"version":"70f1528dd7d2131386fdcf6223ac1c56f2d7726c7977bd5eddcdfd22cd24f7f6","impliedFormat":99},{"version":"87f41340a0cac5b54e499b3ea6e6d0cb2e7abb9abf5feaedc6c4cc608cdfdc54","impliedFormat":99},{"version":"d0a8b3701edaddb7db2935bb134439272b46201384579eb0b53d66e4ac83bbfc","impliedFormat":99},{"version":"06d3bd1652d7a961bee709bce34b2cbcd6725ab7de8e0cbbb3353927a347a2b0","impliedFormat":99},{"version":"4166eb28a4170609b107205a614bfc6936bb18348e3d37408835cb9d49c4634d","impliedFormat":99},{"version":"e21552b6c0c6c1aa2edfb55d949511fa055b2d94ee60731cbc8e6a5d3edc63e9","impliedFormat":99},{"version":"61547fc99d5410765d51588931a1e910aaa76a452480795268345d461dec9b01","impliedFormat":99},{"version":"e71c443455caa4f5e047db65adf9e3a9d5d5c075ec348f52dcf749bf594aaab2","impliedFormat":99},"10e24a464b819f296cdf55064d55aa0291e52a394f63c697913f0ed8f12ced1f","ef30f09018d6d125eef5362b4ced2a3fec318379f02e38cbc048a18fa03de1bb","8f36c65753d640adfa33b0e146bc8d579e59a4188a23060ff26b3f307361bfc4",{"version":"a0acca63c9e39580f32a10945df231815f0fe554c074da96ba6564010ffbd2d8","impliedFormat":1},{"version":"ea819e624a8cb88b7b37e07ca712974b9799221692d35f8993f13a574089e917","signature":"eef7a75bba8d14631fb9d8486d4ea0265942a7d949f4a1b381ef3120e4d1f481"},"1bfe7f61eb331313b5c18fe1cda40b7cb84c7440472ff42cc2507dc6c752f064","419e2565e9faef4bbc1c0dc06c721aea5b3bb8f5f1943b75609ef46b56b5c5af",{"version":"88e9caa9c5d2ba629240b5913842e7c57c5c0315383b8dc9d436ef2b60f1c391","impliedFormat":1},"1b19aead703f98140389ab9a8034eda65590cd414d6090b1252136a0f8c8df9f","1d75e8c3a7336bc302caf6ccbe2d6525eae3de71e7cf4fa773f96eb9233f4778","ba027b6f18800b0303aa700e73d8cbffeefd5df864df6be460f5bad437fdc61c",{"version":"0dd3bcb67dd8c799e8bf13f4985ab5969a766636e4ca04404a6d19d79b0d11fc","affectsGlobalScope":true},"e762b570e00b482f6d0ecce98ce37034542301e3efb5f8d1a2c22d7317313fee","45fcd236c2462766d7afe86ba387fa746fae48e35183f5028d763c82bc7eef27","b6e28fc9f40a6505a47154b6d3f3754b58a9655f13eb2dec2956aaf35ed2cff7","cbc24c634fa5d9f80980dd603143212cbd30e5f299d9c00797abfb816356a5af","bd4db52def8051f1c7e463202dd878957d36aa92d40a213e480d5bb6b187df2d","7815525b1d2eb0b25ccc863324e9bb917be5f982069b7fa21a4004e210a0cb25","ab423c0bfcd91985a3480cbc24cd465552b94c2a8c95602d2c20448f6ece887d","bb183b0dc04feb17c2c5cbed3ca62837991d42c5f5e71f3e17d3f456b9d62db7","9af87f130e804ee0eae6fcbe2ded3031652ca5c84d521940e445014489964d62","bd3a6c6d0284264e0b6b0abdefbbc82a24abd8dca8be4937ef3e30ba4ebb2b25","d236c31c313057c88e0313cb879ad82cc953292ae9be42909e55b6b7e66b8409","415be6a6c60012dddc5b03148bfec1a6df4cc849f73aae9a51967bb9a48822de",{"version":"df8caf0423ea5db34e4b78f70533baffde68c5ccb9b6d2e4c671ddc0668f4ba6","affectsGlobalScope":true},{"version":"519392f9725d2d8a6fc17f60590682b17c6a099120faa312363c13213cf60aeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"4051f6311deb0ce6052329eeb1cd4b1b104378fe52f882f483130bea75f92197","impliedFormat":1},{"version":"ee8bee0eb75f88221d2d6e5aeab2ea893f7798aab3416627ad86a0c73937b82a","impliedFormat":1},{"version":"271cde49dfd9b398ccc91bb3aaa43854cf76f4d14e10fed91cbac649aa6cbc63","affectsGlobalScope":true,"impliedFormat":1},{"version":"2bcecd31f1b4281710c666843fc55133a0ee25b143e59f35f49c62e168123f4b","impliedFormat":1},{"version":"a6273756fa05f794b64fe1aff45f4371d444f51ed0257f9364a8b25f3501915d","impliedFormat":1},{"version":"9c4e644fe9bf08d93c93bd892705842189fe345163f8896849d5964d21b56b78","impliedFormat":1},{"version":"25d91fb9ed77a828cc6c7a863236fb712dafcd52f816eec481bd0c1f589f4404","impliedFormat":1},{"version":"4cd14cea22eed1bfb0dc76183e56989f897ac5b14c0e2a819e5162eafdcfe243","impliedFormat":1},{"version":"8d32432f68ca4ce93ad717823976f2db2add94c70c19602bf87ee67fe51df48b","impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"c0671b50bb99cc7ad46e9c68fa0e7f15ba4bc898b59c31a17ea4611fab5095da","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"aa83e100f0c74a06c9d24f40a096c9e9cc3c02704250d01541e22c0ae9264eda","affectsGlobalScope":true,"impliedFormat":1},{"version":"1db0b7dca579049ca4193d034d835f6bfe73096c73663e5ef9a0b5779939f3d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"9798340ffb0d067d69b1ae5b32faa17ab31b82466a3fc00d8f2f2df0c8554aaa","affectsGlobalScope":true,"impliedFormat":1},{"version":"456fa0c0ab68731564917642b977c71c3b7682240685b118652fb9253c9a6429","affectsGlobalScope":true,"impliedFormat":1},{"version":"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","impliedFormat":1},{"version":"23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","impliedFormat":1},{"version":"487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","impliedFormat":1},{"version":"3a80bc85f38526ca3b08007ee80712e7bb0601df178b23fbf0bf87036fce40ce","impliedFormat":1},{"version":"ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"68834d631c8838c715f225509cfc3927913b9cc7a4870460b5b60c8dbdb99baf","impliedFormat":1},{"version":"4bc0794175abedf989547e628949888c1085b1efcd93fc482bccd77ee27f8b7c","impliedFormat":1},{"version":"3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","impliedFormat":1},{"version":"78c69908f7b42d6001037eb8e2d7ec501897ac9cee8d58f31923ff15b3fd4e02","impliedFormat":1},{"version":"ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","impliedFormat":1},{"version":"36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","impliedFormat":1},{"version":"914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","impliedFormat":1},{"version":"33e981bf6376e939f99bd7f89abec757c64897d33c005036b9a10d9587d80187","impliedFormat":1},{"version":"7fd1b31fd35876b0aa650811c25ec2c97a3c6387e5473eb18004bed86cdd76b6","impliedFormat":1},{"version":"b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","impliedFormat":1},{"version":"1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","impliedFormat":1},{"version":"af13e99445f37022c730bfcafcdc1761e9382ce1ea02afb678e3130b01ce5676","impliedFormat":1},{"version":"e5c4fceee379a4a8f5e0266172c33de9dd240e1218b6a439a30c96200190752b","impliedFormat":1},{"version":"0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","impliedFormat":1},{"version":"9666f2f84b985b62400d2e5ab0adae9ff44de9b2a34803c2c5bd3c8325b17dc0","impliedFormat":1},{"version":"40cd35c95e9cf22cfa5bd84e96408b6fcbca55295f4ff822390abb11afbc3dca","impliedFormat":1},{"version":"b1616b8959bf557feb16369c6124a97a0e74ed6f49d1df73bb4b9ddf68acf3f3","impliedFormat":1},{"version":"40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","impliedFormat":1},{"version":"249b9cab7f5d628b71308c7d9bb0a808b50b091e640ba3ed6e2d0516f4a8d91d","impliedFormat":1},{"version":"80aae6afc67faa5ac0b32b5b8bc8cc9f7fa299cff15cf09cc2e11fd28c6ae29e","impliedFormat":1},{"version":"f473cd2288991ff3221165dcf73cd5d24da30391f87e85b3dd4d0450c787a391","impliedFormat":1},{"version":"499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","impliedFormat":1},{"version":"54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","impliedFormat":1},{"version":"beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","impliedFormat":1},{"version":"78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","impliedFormat":1},{"version":"5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","impliedFormat":1},{"version":"59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","impliedFormat":1},{"version":"addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","impliedFormat":1},{"version":"48cc3ec153b50985fb95153258a710782b25975b10dd4ac8a4f3920632d10790","impliedFormat":1},{"version":"0040f0c70a793bdc76e4eace5de03485d76f667009656c5fc8d4da4eaf0aa2da","impliedFormat":1},{"version":"18f8cfbb14ba9405e67d30968ae67b8d19133867d13ebc49c8ed37ec64ce9bdb","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e","impliedFormat":1},{"version":"830171b27c5fdf9bcbe4cf7d428fcf3ae2c67780fb7fbdccdf70d1623d938bc4","affectsGlobalScope":true,"impliedFormat":1},{"version":"1cf059eaf468efcc649f8cf6075d3cb98e9a35a0fe9c44419ec3d2f5428d7123","affectsGlobalScope":true,"impliedFormat":1},{"version":"e7721c4f69f93c91360c26a0a84ee885997d748237ef78ef665b153e622b36c1","affectsGlobalScope":true,"impliedFormat":1},{"version":"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7","impliedFormat":1},{"version":"18334defc3d0a0e1966f5f3c23c7c83b62c77811e51045c5a7ff3883b446f81f","affectsGlobalScope":true,"impliedFormat":1},{"version":"8b17fcd63aa13734bf1d01419f4d6031b1c6a5fb2cbdb45e9839fb1762bdf0df","impliedFormat":1},{"version":"c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c","impliedFormat":1},{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"247b8f93f31c5918444116471bfb90810e268339bf5c678657ca99ca7183dabb","affectsGlobalScope":true,"impliedFormat":1},{"version":"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","impliedFormat":1},{"version":"25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","impliedFormat":1},{"version":"aa9224557befad144262c85b463c0a7ba8a3a0ad2a7c907349f8bb8bc3fe4abc","impliedFormat":1},{"version":"a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","impliedFormat":1},{"version":"ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c","impliedFormat":1},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true,"impliedFormat":1},{"version":"92dab1293d03f6cbd5d53c31b723c30ff5a52eaacd717ee3226e18739b5bb722","impliedFormat":1},{"version":"c6176c7b9f3769ba7f076c7a791588562c653cc0ba08fb2184f87bf78db2a87c","impliedFormat":1},{"version":"c6a532cab53ec1f87eb0b6a3a9882f4cf13c25b4a89495b3b3001a35f74224c6","impliedFormat":1},{"version":"bcbabfaca3f6b8a76cb2739e57710daf70ab5c9479ab70f5351c9b4932abf6bd","impliedFormat":1},{"version":"165a0c1f95bc939c72f18a280fc707fba6f2f349539246b050cfc09eb1d9f446","impliedFormat":1},{"version":"ca0f30343ce1a43181684c02af2ac708ba26d00f689be5e96e7301c374d64c7e","impliedFormat":1},{"version":"d163b6bc2372b4f07260747cbc6c0a6405ab3fbcea3852305e98ac43ca59f5bc","impliedFormat":1},{"version":"c8b85f7aed29f8f52b813f800611406b0bfe5cf3224d20a4bdda7c7f73ce368e","affectsGlobalScope":true,"impliedFormat":1},{"version":"7baae9bf5b50e572e7742c886c73c6f8fa50b34190bc5f0fd20dd7e706fda832","impliedFormat":1},{"version":"e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","impliedFormat":1},{"version":"76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86","impliedFormat":1},{"version":"5e9f8c1e042b0f598a9be018fc8c3cb670fe579e9f2e18e3388b63327544fe16","affectsGlobalScope":true,"impliedFormat":1},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true,"impliedFormat":1},{"version":"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","impliedFormat":1},{"version":"b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","impliedFormat":1},{"version":"de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","impliedFormat":1},{"version":"70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","impliedFormat":1},{"version":"8c81fd4a110490c43d7c578e8c6f69b3af01717189196899a6a44f93daa57a3a","impliedFormat":1},{"version":"1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","impliedFormat":1},{"version":"29c83cc89ddbdd5ffae8c00f4e6fab6f8f0e8076f87a866b132e8751e88cb848","impliedFormat":1},{"version":"363eedb495912790e867da6ff96e81bf792c8cfe386321e8163b71823a35719a","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"dba28a419aec76ed864ef43e5f577a5c99a010c32e5949fe4e17a4d57c58dd11","affectsGlobalScope":true,"impliedFormat":1},{"version":"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","impliedFormat":1},{"version":"07199a85560f473f37363d8f1300fac361cda2e954caf8a40221f83a6bfa7ade","impliedFormat":1},{"version":"9705cd157ffbb91c5cab48bdd2de5a437a372e63f870f8a8472e72ff634d47c1","affectsGlobalScope":true,"impliedFormat":1},{"version":"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","impliedFormat":1},{"version":"3af7d02e5d6ecbf363e61fb842ee55d3518a140fd226bdfb24a3bca6768c58df","impliedFormat":1},{"version":"e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","impliedFormat":1},{"version":"4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055","impliedFormat":1},{"version":"0d7393564d48a3f6f08c76b8d4de48260a072801422548e2030e386acd530dbf","affectsGlobalScope":true,"impliedFormat":1},{"version":"0fcb71410ad8a48bbdd13cd4c3eedf78ac0416e9f3533ae98e19cc6f3c7f5474","affectsGlobalScope":true,"impliedFormat":1},{"version":"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","impliedFormat":1},{"version":"420fdd37c51263be9db3fcac35ffd836216c71e6000e6a9740bb950fb0540654","impliedFormat":1},{"version":"73b0bff83ee76e3a9320e93c7fc15596e858b33c687c39a57567e75c43f2a324","impliedFormat":1},{"version":"cd3256f2ac09c65d2ee473916c273c45221367ab457fa1778a5696bccf5c4e8e","affectsGlobalScope":true,"impliedFormat":1},{"version":"4445f6ce6289c5b2220398138da23752fd84152c5c95bb8b58dedefc1758c036","impliedFormat":1},{"version":"7ac7756e2b43f021fa3d3b562a7ea8bf579543521a18b5682935d015361e6a35","impliedFormat":1},{"version":"1d4bc73751d6ec6285331d1ca378904f55d9e5e8aeaa69bc45b675c3df83e778","impliedFormat":1},{"version":"8017277c3843df85296d8730f9edf097d68d7d5f9bc9d8124fcacf17ecfd487e","impliedFormat":1}],"root":[[93,96],[98,104],[173,175],[177,179],[181,197]],"options":{"allowJs":true,"allowSyntheticDefaultImports":true,"declarationMap":false,"downlevelIteration":true,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"jsxImportSource":"react","module":99,"noFallthroughCasesInSwitch":true,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":2,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"referencedMap":[[198,1],[200,2],[201,1],[205,3],[206,3],[202,4],[203,4],[204,4],[207,5],[258,6],[259,6],[260,7],[210,8],[261,9],[262,10],[263,11],[208,1],[264,12],[265,13],[266,14],[267,15],[268,16],[269,17],[270,17],[271,18],[272,19],[273,20],[274,21],[211,1],[209,1],[275,22],[276,23],[277,24],[311,25],[278,26],[279,1],[280,27],[281,28],[282,29],[283,30],[284,31],[285,32],[286,33],[287,34],[288,35],[289,35],[290,36],[291,1],[292,1],[293,37],[295,38],[294,39],[296,40],[297,41],[298,42],[299,43],[300,44],[301,45],[302,46],[303,47],[304,48],[305,49],[306,50],[307,51],[308,52],[212,1],[213,1],[214,1],[255,53],[256,54],[257,1],[309,55],[310,56],[180,57],[176,57],[313,58],[312,59],[83,1],[85,60],[86,57],[97,1],[126,61],[127,61],[128,62],[129,61],[131,63],[130,61],[132,61],[133,61],[134,64],[108,65],[135,1],[136,1],[137,66],[105,1],[124,67],[125,68],[120,1],[111,69],[138,70],[139,71],[119,72],[123,73],[122,74],[140,1],[121,75],[141,76],[117,77],[144,78],[143,79],[112,77],[145,80],[155,65],[113,1],[142,81],[166,82],[149,83],[146,84],[147,85],[148,86],[157,87],[116,88],[150,1],[151,1],[152,89],[153,1],[154,90],[156,91],[165,92],[158,93],[160,94],[159,93],[161,93],[162,95],[163,96],[164,97],[167,98],[110,65],[107,1],[114,1],[109,1],[118,99],[115,100],[106,1],[89,1],[84,1],[199,1],[169,101],[172,102],[170,101],[168,103],[171,104],[92,105],[88,106],[91,107],[90,1],[87,57],[81,1],[82,1],[13,1],[14,1],[16,1],[15,1],[2,1],[17,1],[18,1],[19,1],[20,1],[21,1],[22,1],[23,1],[24,1],[3,1],[25,1],[26,1],[4,1],[27,1],[31,1],[28,1],[29,1],[30,1],[32,1],[33,1],[34,1],[5,1],[35,1],[36,1],[37,1],[38,1],[6,1],[42,1],[39,1],[40,1],[41,1],[43,1],[7,1],[44,1],[49,1],[50,1],[45,1],[46,1],[47,1],[48,1],[8,1],[54,1],[51,1],[52,1],[53,1],[55,1],[9,1],[56,1],[57,1],[58,1],[60,1],[59,1],[61,1],[62,1],[10,1],[63,1],[64,1],[65,1],[11,1],[66,1],[67,1],[68,1],[69,1],[70,1],[1,1],[71,1],[72,1],[12,1],[76,1],[74,1],[79,1],[78,1],[73,1],[77,1],[75,1],[80,1],[232,108],[243,109],[230,110],[244,111],[253,112],[221,113],[222,114],[220,115],[252,116],[247,117],[251,118],[224,119],[240,120],[223,121],[250,122],[218,123],[219,117],[225,124],[226,1],[231,125],[229,124],[216,126],[254,127],[245,128],[235,129],[234,124],[236,130],[238,131],[233,132],[237,133],[248,116],[227,134],[228,135],[239,136],[217,111],[242,137],[241,124],[246,1],[215,1],[249,138],[179,139],[178,140],[103,141],[185,142],[102,143],[93,144],[186,144],[175,145],[174,145],[173,145],[177,146],[100,147],[188,148],[94,144],[187,144],[189,148],[190,144],[181,149],[182,144],[183,1],[191,147],[192,148],[96,148],[98,150],[101,148],[193,147],[95,148],[104,148],[194,148],[99,148],[195,147],[196,148],[197,1],[184,151]],"affectedFilesPendingEmit":[179,178,103,185,102,93,186,175,174,173,177,100,188,94,187,189,190,181,182,191,192,96,98,101,193,95,104,194,99,195,196,184],"version":"5.9.2"}[m
\ No newline at end of file[m
[1mdiff --git a/client/node_modules/.package-lock.json b/client/node_modules/.package-lock.json[m
[1mindex 7fb239c5..a71fe817 100644[m
[1m--- a/client/node_modules/.package-lock.json[m
[1m+++ b/client/node_modules/.package-lock.json[m
[36m@@ -358,6 +358,15 @@[m
         "node": ">= 0.4"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/lucide-react": {[m
[32m+[m[32m      "version": "0.544.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.544.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-t5tS44bqd825zAW45UQxpG2CvcC4urOwn2TrwSH8u+MjeE+1NnWl6QqeQ/6NdjMqdOygyiT9p3Ev0p1NJykxjw==",[m
[32m+[m[32m      "license": "ISC",[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/math-intrinsics": {[m
       "version": "1.1.0",[m
       "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",[m
[1mdiff --git a/client/package-lock.json b/client/package-lock.json[m
[1mindex 0b27dcbc..30658c99 100644[m
[1m--- a/client/package-lock.json[m
[1m+++ b/client/package-lock.json[m
[36m@@ -11,6 +11,7 @@[m
       "dependencies": {[m
         "axios": "^1.11.0",[m
         "chart.js": "^4.5.0",[m
[32m+[m[32m        "lucide-react": "^0.544.0",[m
         "react": "^19.1.1",[m
         "react-chartjs-2": "^5.3.0",[m
         "react-dom": "^19.1.1",[m
[36m@@ -381,6 +382,15 @@[m
         "node": ">= 0.4"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/lucide-react": {[m
[32m+[m[32m      "version": "0.544.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.544.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-t5tS44bqd825zAW45UQxpG2CvcC4urOwn2TrwSH8u+MjeE+1NnWl6QqeQ/6NdjMqdOygyiT9p3Ev0p1NJykxjw==",[m
[32m+[m[32m      "license": "ISC",[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/math-intrinsics": {[m
       "version": "1.1.0",[m
       "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",[m
[1mdiff --git a/client/package.json b/client/package.json[m
[1mindex 06d6b0a5..8fda24a3 100644[m
[1m--- a/client/package.json[m
[1m+++ b/client/package.json[m
[36m@@ -20,6 +20,7 @@[m
   "dependencies": {[m
     "axios": "^1.11.0",[m
     "chart.js": "^4.5.0",[m
[32m+[m[32m    "lucide-react": "^0.544.0",[m
     "react": "^19.1.1",[m
     "react-chartjs-2": "^5.3.0",[m
     "react-dom": "^19.1.1",[m
[1mdiff --git a/client/src/SearchResults.tsx b/client/src/SearchResults.tsx[m
[1mindex 61f010a7..64d1f8a2 100644[m
[1m--- a/client/src/SearchResults.tsx[m
[1m+++ b/client/src/SearchResults.tsx[m
[36m@@ -3,7 +3,7 @@[m [mimport { searchCache } from './services/searchCache';[m
 import { photoStorageService } from './services/photoStorageService';[m
 import { foodAnalysisService } from './components/foodAnalysisService';[m
 import ImageUploadModal from './components/ImageUploadModal';[m
[31m-import LoginButton from './components/LoginButton/LoginButton';[m
[32m+[m[32mimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';[m
 import ResultQualityPie from './components/ResultQualityPie';[m
 import NutritionChart from './components/NutritionChart';[m
 import NovaChart from './components/NovaChart';[m
[36m@@ -307,11 +307,27 @@[m [mconst SearchResults: React.FC<SearchResultsProps> = ({[m
   // Check if current query is "test" to show dummy data styles[m
   const isTestQuery = query.toLowerCase().trim() === 'test';[m
 [m
[32m+[m[32m  // Add auth handlers[m
[32m+[m[32m  const handleUserChange = (user: any) => {[m
[32m+[m[32m    console.log('User changed in SearchResults:', user);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleSignIn = (user: any) => {[m
[32m+[m[32m    console.log('User signed in from SearchResults:', user);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleSignOut = () => {[m
[32m+[m[32m    console.log('User signed out from SearchResults');[m
[32m+[m[32m  };[m
[32m+[m
   return ([m
     <div className={`results-page ${isLoading ? 'loading' : ''} ${isUploadModalOpen ? 'modal-open' : ''}`}>[m
[31m-      <LoginButton [m
[32m+[m[32m      <MultiAuthLogin[m[41m [m
         position="top-right"[m
         className="results-login-button"[m
[32m+[m[32m        onUserChange={handleUserChange}[m
[32m+[m[32m        onSignIn={handleSignIn}[m
[32m+[m[32m        onSignOut={handleSignOut}[m
       />[m
 [m
       {/* Always show header */}[m
[1mdiff --git a/client/src/VHealthSearch.css b/client/src/VHealthSearch.css[m
[1mindex 1c4c8ba6..4d0fa7b6 100644[m
[1m--- a/client/src/VHealthSearch.css[m
[1m+++ b/client/src/VHealthSearch.css[m
[36m@@ -663,7 +663,7 @@[m [mh1.search-logo {[m
 }[m
 [m
 .search-landing .logo-container .search-logo-image,[m
[31m-img[src*="293a2ef6-826c-4ec9-9b26-c2abf3bb894f"] {[m
[32m+[m[32mimg[src*="whatishealthylogo"] {[m
   width: 600px !important;  /* match search box desktop cap */[m
   height: auto !important;[m
   object-fit: contain !important;[m
[36m@@ -673,10 +673,18 @@[m [mimg[src*="293a2ef6-826c-4ec9-9b26-c2abf3bb894f"] {[m
 }[m
 [m
 @media (max-width: 768px) {[m
[31m-  .search-landing .logo-container .search-logo-image { width: 500px !important; }[m
[32m+[m[32m  .search-landing .logo-container .search-logo-image,[m
[32m+[m[32m  img[src*="whatishealthylogo"] {[m[41m [m
[32m+[m[32m    width: 500px !important;[m[41m [m
[32m+[m[32m  }[m
 }[m
[32m+[m
 @media (max-width: 480px) {[m
[31m-  .search-landing .logo-container .search-logo-image { width: 90% !important; max-width: 320px !important; }[m
[32m+[m[32m  .search-landing .logo-container .search-logo-image,[m
[32m+[m[32m  img[src*="whatishealthylogo"] {[m[41m [m
[32m+[m[32m    width: 90% !important;[m[41m [m
[32m+[m[32m    max-width: 320px !important;[m[41m [m
[32m+[m[32m  }[m
 }[m
 [m
 /* =========================================[m
[1mdiff --git a/client/src/VHealthSearch.tsx b/client/src/VHealthSearch.tsx[m
[1mindex a6858df8..82320a83 100644[m
[1m--- a/client/src/VHealthSearch.tsx[m
[1m+++ b/client/src/VHealthSearch.tsx[m
[36m@@ -1,8 +1,12 @@[m
[31m-import React, { useState, useRef } from 'react';[m
[32m+[m[32mimport React, { useState, useRef, useEffect } from 'react';[m
 import { useNavigate } from 'react-router-dom';[m
 import './VHealthSearch.css';[m
 import ImageUploadModal from './components/ImageUploadModal';[m
[31m-import LoginButton from './components/LoginButton/LoginButton';[m
[32m+[m[32mimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';[m
[32m+[m[32mimport { healthSearchService } from './services/healthSearchService';[m
[32m+[m[32mimport { searchCache } from './services/searchCache';[m
[32m+[m[32mimport { foodAnalysisService } from './components/foodAnalysisService';[m
[32m+[m[32mimport HealthNewsFeed from './components/HealthNewsFeed';[m
 [m
 const VHealthSearch: React.FC = () => {[m
   const [searchQuery, setSearchQuery] = useState('');[m
[36m@@ -10,68 +14,399 @@[m [mconst VHealthSearch: React.FC = () => {[m
   const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);[m
   const [isLoading, setIsLoading] = useState(false);[m
   const [imageError, setImageError] = useState(false);[m
[32m+[m[32m  const [loadingMessage, setLoadingMessage] = useState('Searching...');[m
[32m+[m[32m  const [showFeelingHealthyContent, setShowFeelingHealthyContent] = useState(false);[m
[32m+[m[41m  [m
   const navigate = useNavigate();[m
   const searchInputRef = useRef<HTMLInputElement>(null);[m
   const recognitionRef = useRef<any>(null);[m
 [m
[32m+[m[32m  const progressFromMessage = (msg: string) => {[m
[32m+[m[32m    if (msg.includes('Initializing')) return 10;[m
[32m+[m[32m    if (msg.includes('Checking cache')) return 25;[m
[32m+[m[32m    if (msg.includes('Analyzing with AI')) return 55;[m
[32m+[m[32m    if (msg.includes('Processing results')) return 75;[m
[32m+[m[32m    if (msg.includes('Results ready') || msg.includes('Response ready')) return 95;[m
[32m+[m
[32m+[m[32m    if (msg.includes('Processing image')) return 35;[m
[32m+[m[32m    if (msg.includes('Checking nutrition')) return 45;[m
[32m+[m[32m    if (msg.includes('Analyzing nutrition')) return 60;[m
[32m+[m[32m    if (msg.includes('Processing nutrition')) return 80;[m
[32m+[m[32m    if (msg.includes('complete')) return 95;[m
[32m+[m
[32m+[m[32m    if (msg.includes('failed')) return 100; // will close shortly[m
[32m+[m[32m    return 40; // default midpoint[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleUserChange = (user: any) => {[m
[32m+[m[32m    console.log('User changed:', user);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleSignIn = (user: any) => {[m
[32m+[m[32m    console.log('User signed in:', user);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleSignOut = () => {[m
[32m+[m[32m    console.log('User signed out');[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  // Simplified search handler[m
   const handleSearch = async () => {[m
[31m-    if (searchQuery.trim()) {[m
[31m-      setIsLoading(true);[m
[32m+[m[32m    if (!searchQuery.trim() || isLoading) return;[m
[32m+[m[41m    [m
[32m+[m[32m    setIsLoading(true);[m
[32m+[m[32m    setLoadingMessage('Initializing search...');[m
[32m+[m[41m    [m
[32m+[m[32m    try {[m
[32m+[m[32m      // Step 1: Check database cache first[m
[32m+[m[32m      setLoadingMessage('Checking cache...');[m
[32m+[m[41m      [m
       try {[m
[31m-        // Add a small delay to show the spinner[m
[31m-        await new Promise(resolve => setTimeout(resolve, 500));[m
[31m-        navigate(`/results?q=${encodeURIComponent(searchQuery)}`);[m
[31m-      } catch (error) {[m
[31m-        console.error("Search error:", error);[m
[31m-        setIsLoading(false);[m
[32m+[m[32m        const response = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(searchQuery)}`);[m
[32m+[m[41m        [m
[32m+[m[32m        if (response.ok) {[m
[32m+[m[32m          const cachedData = await response.json();[m
[32m+[m[32m          console.log('Using cached results from database');[m
[32m+[m[32m          setLoadingMessage('Loading cached results...');[m
[32m+[m[32m          await new Promise(resolve => setTimeout(resolve, 300));[m
[32m+[m[41m          [m
[32m+[m[32m          setIsLoading(false);[m
[32m+[m[32m          navigate(`/results?q=${encodeURIComponent(searchQuery)}&cached=true`);[m
[32m+[m[32m          return;[m
[32m+[m[32m        }[m
[32m+[m[32m      } catch (cacheError) {[m
[32m+[m[32m        console.log('No cache found, proceeding with API call');[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Step 2: Get fresh results from API[m
[32m+[m[32m      setLoadingMessage('Analyzing with AI...');[m
[32m+[m[32m      console.log('Getting fresh results for:', searchQuery);[m
[32m+[m[41m      [m
[32m+[m[32m      try {[m
[32m+[m[32m        const searchResults = await healthSearchService.searchHealthInfo(searchQuery);[m
[32m+[m[32m        console.log('Health search results received:', searchResults);[m
[32m+[m[41m        [m
[32m+[m[32m        const isValidResult = searchResults &&[m[41m [m
[32m+[m[32m          typeof searchResults === 'object' &&[m[41m [m
[32m+[m[32m          searchResults !== null &&[m
[32m+[m[32m          (searchResults.summary || searchResults.details || Object.keys(searchResults).length > 0);[m
[32m+[m[41m        [m
[32m+[m[32m        if (isValidResult) {[m
[32m+[m[32m          console.log('Valid results confirmed');[m
[32m+[m[41m          [m
[32m+[m[32m          // Step 3: Save to database cache (async, don't wait)[m
[32m+[m[32m          setLoadingMessage('Caching results...');[m
[32m+[m[41m          [m
[32m+[m[32m          fetch('http://localhost:5000/api/cache/save', {[m
[32m+[m[32m            method: 'POST',[m
[32m+[m[32m            headers: {[m
[32m+[m[32m              'Content-Type': 'application/json',[m
[32m+[m[32m            },[m
[32m+[m[32m            body: JSON.stringify({[m
[32m+[m[32m              query: searchQuery,[m
[32m+[m[32m              results: searchResults,[m
[32m+[m[32m              source: 'openai'[m
[32m+[m[32m            })[m
[32m+[m[32m          }).then(response => {[m
[32m+[m[32m            if (response.ok) {[m
[32m+[m[32m              console.log('Results saved to database cache');[m
[32m+[m[32m            } else {[m
[32m+[m[32m              console.warn('Failed to save to cache');[m
[32m+[m[32m            }[m
[32m+[m[32m          }).catch(err => {[m
[32m+[m[32m            console.warn('Cache save error:', err);[m
[32m+[m[32m          });[m
[32m+[m[41m          [m
[32m+[m[32m          setLoadingMessage('Results ready!');[m
[32m+[m[32m          await new Promise(resolve => setTimeout(resolve, 300));[m
[32m+[m[41m          [m
[32m+[m[32m          setIsLoading(false);[m
[32m+[m[32m          console.log('Navigating to results page');[m
[32m+[m[32m          navigate(`/results?q=${encodeURIComponent(searchQuery)}`);[m
[32m+[m[32m          return;[m
[32m+[m[32m        } else {[m
[32m+[m[32m          throw new Error('Invalid results from API');[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m      } catch (apiError) {[m
[32m+[m[32m        console.error('Health search service failed:', apiError);[m
[32m+[m[41m        [m
[32m+[m[32m        // Step 4: Try similar results as fallback[m
[32m+[m[32m        setLoadingMessage('Searching for similar results...');[m
[32m+[m[41m        [m
[32m+[m[32m        try {[m
[32m+[m[32m          const similarResponse = await fetch(`http://localhost:5000/api/cache/similar?q=${encodeURIComponent(searchQuery)}`);[m
[32m+[m[41m          [m
[32m+[m[32m          if (similarResponse.ok) {[m
[32m+[m[32m            const similarResults = await similarResponse.json();[m
[32m+[m[41m            [m
[32m+[m[32m            if (similarResults.length > 0) {[m
[32m+[m[32m              console.log('Using similar cached results');[m
[32m+[m[32m              setLoadingMessage('Loading similar results...');[m
[32m+[m[32m              await new Promise(resolve => setTimeout(resolve, 300));[m
[32m+[m[41m              [m
[32m+[m[32m              setIsLoading(false);[m
[32m+[m[32m              navigate(`/results?q=${encodeURIComponent(searchQuery)}&similar=true`);[m
[32m+[m[32m              return;[m
[32m+[m[32m            }[m
[32m+[m[32m          }[m
[32m+[m[32m        } catch (similarError) {[m
[32m+[m[32m          console.warn('Similar results search failed:', similarError);[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        setLoadingMessage('No results found. Please try a different search.');[m
[32m+[m[32m        setTimeout(() => {[m
[32m+[m[32m          setIsLoading(false);[m
[32m+[m[32m          setLoadingMessage('Searching...');[m
[32m+[m[32m        }, 3000);[m
[32m+[m[32m        return;[m
       }[m
[32m+[m[41m        [m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error("Search error:", error);[m
[32m+[m[32m      setLoadingMessage('Search failed. Please try again.');[m
[32m+[m[41m      [m
[32m+[m[32m      setTimeout(() => {[m
[32m+[m[32m        setIsLoading(false);[m
[32m+[m[32m        setLoadingMessage('Searching...');[m
[32m+[m[32m      }, 2000);[m
     }[m
   };[m
 [m
   const handleAnalysisComplete = async (foodName: string): Promise<void> => {[m
[32m+[m[32m    if (!foodName || isLoading) {[m
[32m+[m[32m      setIsUploadModalOpen(false);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
     setIsLoading(true);[m
[32m+[m[32m    setLoadingMessage('Processing image analysis...');[m
[32m+[m[41m    [m
     try {[m
       console.log("Image analysis completed, food detected:", foodName);[m
[32m+[m[32m      setSearchQuery(foodName);[m
[32m+[m[41m      [m
[32m+[m[32m      // Step 1: Check database cache for nutrition data[m
[32m+[m[32m      setLoadingMessage('Checking nutrition database...');[m
       [m
[31m-      if (foodName) {[m
[31m-        setSearchQuery(foodName);[m
[31m-        // Add delay to show spinner[m
[31m-        await new Promise(resolve => setTimeout(resolve, 500));[m
[31m-        navigate(`/results?q=${encodeURIComponent(foodName)}`);[m
[32m+[m[32m      try {[m
[32m+[m[32m        const response = await fetch(`http://localhost:5000/api/cache/get?q=${encodeURIComponent(foodName)}`);[m
[32m+[m[41m        [m
[32m+[m[32m        if (response.ok) {[m
[32m+[m[32m          const cachedData = await response.json();[m
[32m+[m[32m          console.log('Using cached nutrition data');[m
[32m+[m[32m          setLoadingMessage('Loading cached nutrition data...');[m
[32m+[m[32m          await new Promise(resolve => setTimeout(resolve, 300));[m
[32m+[m[41m          [m
[32m+[m[32m          setIsLoading(false);[m
[32m+[m[32m          navigate(`/results?q=${encodeURIComponent(foodName)}&cached=true`);[m
[32m+[m[32m          return;[m
[32m+[m[32m        }[m
[32m+[m[32m      } catch (cacheError) {[m
[32m+[m[32m        console.log('No cached nutrition data found');[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      // Step 2: Get fresh nutrition data[m
[32m+[m[32m      setLoadingMessage('Analyzing nutrition content...');[m
[32m+[m[41m      [m
[32m+[m[32m      try {[m
[32m+[m[32m        const nutritionResults = await healthSearchService.searchHealthInfo(foodName);[m
[32m+[m[41m        [m
[32m+[m[32m        const isValidResult = nutritionResults &&[m[41m [m
[32m+[m[32m          typeof nutritionResults === 'object' &&[m[41m [m
[32m+[m[32m          nutritionResults !== null &&[m
[32m+[m[32m          (nutritionResults.summary || nutritionResults.details || Object.keys(nutritionResults).length > 0);[m
[32m+[m[41m        [m
[32m+[m[32m        if (isValidResult) {[m
[32m+[m[32m          // Step 3: Save to database cache (async, don't wait)[m
[32m+[m[32m          setLoadingMessage('Caching nutrition data...');[m
[32m+[m[41m          [m
[32m+[m[32m          fetch('http://localhost:5000/api/cache/save', {[m
[32m+[m[32m            method: 'POST',[m
[32m+[m[32m            headers: {[m
[32m+[m[32m              'Content-Type': 'application/json',[m
[32m+[m[32m            },[m
[32m+[m[32m            body: JSON.stringify({[m
[32m+[m[32m              query: foodName,[m
[32m+[m[32m              results: nutritionResults,[m
[32m+[m[32m              source: 'image-analysis'[m
[32m+[m[32m            })[m
[32m+[m[32m          }).then(response => {[m
[32m+[m[32m            if (response.ok) {[m
[32m+[m[32m              console.log('Nutrition data saved to cache');[m
[32m+[m[32m            } else {[m
[32m+[m[32m              console.warn('Failed to save nutrition data to cache');[m
[32m+[m[32m            }[m
[32m+[m[32m          }).catch(err => {[m
[32m+[m[32m            console.warn('Nutrition cache save error:', err);[m
[32m+[m[32m          });[m
[32m+[m[41m          [m
[32m+[m[32m          setLoadingMessage('Nutrition analysis complete!');[m
[32m+[m[32m          await new Promise(resolve => setTimeout(resolve, 300));[m
[32m+[m[41m          [m
[32m+[m[32m          setIsLoading(false);[m
[32m+[m[32m          navigate(`/results?q=${encodeURIComponent(foodName)}`);[m
[32m+[m[32m          return;[m
[32m+[m[32m        } else {[m
[32m+[m[32m          throw new Error('Invalid nutrition results');[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m      } catch (nutritionError) {[m
[32m+[m[32m        console.error('Nutrition analysis failed:', nutritionError);[m
[32m+[m[41m        [m
[32m+[m[32m        // Try similar results as fallback[m
[32m+[m[32m        try {[m
[32m+[m[32m          const similarResponse = await fetch(`http://localhost:5000/api/cache/similar?q=${encodeURIComponent(foodName)}`);[m
[32m+[m[41m          [m
[32m+[m[32m          if (similarResponse.ok) {[m
[32m+[m[32m            const similarResults = await similarResponse.json();[m
[32m+[m[41m            [m
[32m+[m[32m            if (similarResults.length > 0) {[m
[32m+[m[32m              console.log('Using similar nutrition data');[m
[32m+[m[32m              setLoadingMessage('Loading similar nutrition data...');[m
[32m+[m[32m              await new Promise(resolve => setTimeout(resolve, 300));[m
[32m+[m[41m              [m
[32m+[m[32m              setIsLoading(false);[m
[32m+[m[32m              navigate(`/results?q=${encodeURIComponent(foodName)}&similar=true`);[m
[32m+[m[32m              return;[m
[32m+[m[32m            }[m
[32m+[m[32m          }[m
[32m+[m[32m        } catch (similarError) {[m
[32m+[m[32m          console.warn('Similar nutrition search failed:', similarError);[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        setLoadingMessage('Could not analyze this food item. Please try again.');[m
[32m+[m[32m        setTimeout(() => {[m
[32m+[m[32m          setIsLoading(false);[m
[32m+[m[32m          setLoadingMessage('Searching...');[m
[32m+[m[32m        }, 3000);[m
[32m+[m[32m        return;[m
       }[m
[32m+[m[41m      [m
     } catch (error) {[m
       console.error("Error processing analyzed food:", error);[m
[31m-      setIsLoading(false);[m
[32m+[m[32m      setLoadingMessage('Analysis failed. Please try again.');[m
[32m+[m[41m      [m
[32m+[m[32m      setTimeout(() => {[m
[32m+[m[32m        setIsLoading(false);[m
[32m+[m[32m        setLoadingMessage('Searching...');[m
[32m+[m[32m      }, 2000);[m
     } finally {[m
       setIsUploadModalOpen(false);[m
     }[m
   };[m
 [m
[31m-  // Loading overlay component[m
[31m-  const LoadingOverlay = () => ([m
[31m-    <div className="search-loading-overlay">[m
[31m-      <div className="search-loading-content">[m
[31m-        <div className="search-spinner"></div>[m
[31m-        <p>Searching...</p>[m
[32m+[m[32m  // Reset loading state on component unmount[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    return () => {[m
[32m+[m[32m      setIsLoading(false);[m
[32m+[m[32m      setLoadingMessage('Searching...');[m
[32m+[m[32m    };[m
[32m+[m[32m  }, []);[m
[32m+[m
[32m+[m[32m  const LoadingOverlay: React.FC<{ message: string; progress: number }> = ({ message, progress }) => ([m
[32m+[m[32m    <div style={{[m
[32m+[m[32m      position: 'fixed',[m
[32m+[m[32m      top: 0,[m
[32m+[m[32m      left: 0,[m
[32m+[m[32m      right: 0,[m
[32m+[m[32m      bottom: 0,[m
[32m+[m[32m      backgroundColor: 'rgba(0, 0, 0, 0.5)',[m
[32m+[m[32m      display: 'flex',[m
[32m+[m[32m      alignItems: 'center',[m
[32m+[m[32m      justifyContent: 'center',[m
[32m+[m[32m      zIndex: 9999[m
[32m+[m[32m    }}>[m
[32m+[m[32m      <div style={{[m
[32m+[m[32m        backgroundColor: 'white',[m
[32m+[m[32m        borderRadius: '12px',[m
[32m+[m[32m        padding: '40px',[m
[32m+[m[32m        textAlign: 'center',[m
[32m+[m[32m        minWidth: '320px',[m
[32m+[m[32m        boxShadow: '0 10px 25px rgba(0, 0, 0, 0.2)'[m
[32m+[m[32m      }}>[m
[32m+[m[32m        {/* Spinner */}[m
[32m+[m[32m        <div style={{[m
[32m+[m[32m          width: '48px',[m
[32m+[m[32m          height: '48px',[m
[32m+[m[32m          border: '4px solid #e5e7eb',[m
[32m+[m[32m          borderTop: '4px solid #3b82f6',[m
[32m+[m[32m          borderRadius: '50%',[m
[32m+[m[32m          animation: 'spin 1s linear infinite',[m
[32m+[m[32m          margin: '0 auto 24px auto'[m
[32m+[m[32m        }} />[m
[32m+[m[41m        [m
[32m+[m[32m        {/* Title */}[m
[32m+[m[32m        <h3 style={{[m
[32m+[m[32m          margin: '0 0 8px 0',[m
[32m+[m[32m          fontSize: '24px',[m
[32m+[m[32m          fontWeight: '600',[m
[32m+[m[32m          color: '#1f2937'[m
[32m+[m[32m        }}>[m
[32m+[m[32m          Loading Content[m
[32m+[m[32m        </h3>[m
[32m+[m[41m        [m
[32m+[m[32m        {/* Subtitle */}[m
[32m+[m[32m        <p style={{[m
[32m+[m[32m          margin: '0 0 24px 0',[m
[32m+[m[32m          fontSize: '16px',[m
[32m+[m[32m          color: '#6b7280'[m
[32m+[m[32m        }}>[m
[32m+[m[32m          Please wait while we process your request...[m
[32m+[m[32m        </p>[m
[32m+[m[41m        [m
[32m+[m[32m        {/* Progress Bar */}[m
[32m+[m[32m        <div style={{[m
[32m+[m[32m          width: '100%',[m
[32m+[m[32m          height: '8px',[m
[32m+[m[32m          backgroundColor: '#e5e7eb',[m
[32m+[m[32m          borderRadius: '4px',[m
[32m+[m[32m          overflow: 'hidden',[m
[32m+[m[32m          marginBottom: '12px'[m
[32m+[m[32m        }}>[m
[32m+[m[32m          <div style={{[m
[32m+[m[32m            width: `${progress}%`,[m
[32m+[m[32m            height: '100%',[m
[32m+[m[32m            backgroundColor: '#3b82f6',[m
[32m+[m[32m            borderRadius: '4px',[m
[32m+[m[32m            transition: 'width 0.3s ease'[m
[32m+[m[32m          }} />[m
[32m+[m[32m        </div>[m
[32m+[m[41m        [m
[32m+[m[32m        {/* Progress Text */}[m
[32m+[m[32m        <p style={{[m
[32m+[m[32m          margin: 0,[m
[32m+[m[32m          fontSize: '14px',[m
[32m+[m[32m          color: '#6b7280'[m
[32m+[m[32m        }}>[m
[32m+[m[32m          {progress}% Complete[m
[32m+[m[32m        </p>[m
       </div>[m
     </div>[m
   );[m
 [m
   return ([m
     <div className="search-landing">[m
[31m-      {/* Show loading overlay when searching */}[m
[31m-      {isLoading && <LoadingOverlay />}[m
[32m+[m[32m      {isLoading && ([m
[32m+[m[32m        <LoadingOverlay[m[41m [m
[32m+[m[32m          message={loadingMessage}[m
[32m+[m[32m          progress={progressFromMessage(loadingMessage)}[m
[32m+[m[32m        />[m
[32m+[m[32m      )}[m
       [m
[31m-      <LoginButton [m
[32m+[m[32m      <MultiAuthLogin[m[41m [m
         position="top-right"[m
[31m-        className="login-button-container"[m
[32m+[m[32m        className="main-login-button"[m
[32m+[m[32m        onUserChange={handleUserChange}[m
[32m+[m[32m        onSignIn={handleSignIn}[m
[32m+[m[32m        onSignOut={handleSignOut}[m
       />[m
 [m
       <div className="search-container-centered">[m
         <div className="logo-container">[m
           {!imageError ? ([m
             <img [m
[31m-              src="/assets/293a2ef6-826c-4ec9-9b26-c2abf3bb894f.png"[m
[32m+[m[32m              src="/assets/whatishealthylogo.svg"[m
               alt="What is Healthy?"[m
               className="search-logo-image"[m
               onError={() => setImageError(true)}[m
[36m@@ -97,7 +432,7 @@[m [mconst VHealthSearch: React.FC = () => {[m
               placeholder="Ask anything about health..."[m
               className="search-input"[m
               autoFocus[m
[31m-              disabled={isLoading} // Disable input while loading[m
[32m+[m[32m              disabled={isLoading}[m
             />[m
           </form>[m
 [m
[36m@@ -120,7 +455,7 @@[m [mconst VHealthSearch: React.FC = () => {[m
               onClick={() => setIsUploadModalOpen(true)}[m
               className="icon-button"[m
               aria-label="Upload image"[m
[31m-              disabled={isLoading} // Disable while loading[m
[32m+[m[32m              disabled={isLoading}[m
             >[m
               <svg viewBox="0 0 24 24" fill="currentColor">[m
                 <path d="M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"/>[m
[36m@@ -130,7 +465,7 @@[m [mconst VHealthSearch: React.FC = () => {[m
             <button[m
               type="button"[m
               onClick={() => {[m
[31m-                if (isLoading) return; // Don't allow voice input while loading[m
[32m+[m[32m                if (isLoading) return;[m
                 [m
                 if (!('webkitSpeechRecognition' in window)) {[m
                   alert('Speech recognition not supported in this browser');[m
[36m@@ -143,23 +478,14 @@[m [mconst VHealthSearch: React.FC = () => {[m
                   recognition.interimResults = false;[m
                   recognition.lang = 'en-US';[m
 [m
[31m-                  recognition.onstart = () => {[m
[31m-                    setIsListening(true);[m
[31m-                  };[m
[31m-[m
[32m+[m[32m                  recognition.onstart = () => setIsListening(true);[m
                   recognition.onresult = (event: any) => {[m
                     const transcript = event.results[0][0].transcript;[m
                     setSearchQuery(transcript);[m
                     setIsListening(false);[m
                   };[m
[31m-[m
[31m-                  recognition.onerror = () => {[m
[31m-                    setIsListening(false);[m
[31m-                  };[m
[31m-[m
[31m-                  recognition.onend = () => {[m
[31m-                    setIsListening(false);[m
[31m-                  };[m
[32m+[m[32m                  recognition.onerror = () => setIsListening(false);[m
[32m+[m[32m                  recognition.onend = () => setIsListening(false);[m
 [m
                   recognitionRef.current = recognition;[m
                 }[m
[36m@@ -173,7 +499,7 @@[m [mconst VHealthSearch: React.FC = () => {[m
               }}[m
               className={`icon-button ${isListening ? 'listening' : ''}`}[m
               aria-label={isListening ? 'Stop listening' : 'Start voice input'}[m
[31m-              disabled={isLoading} // Disable while loading[m
[32m+[m[32m              disabled={isLoading}[m
             >[m
               <svg viewBox="0 0 24 24" fill="currentColor">[m
                 <path d="M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z"/>[m
[36m@@ -192,26 +518,49 @@[m [mconst VHealthSearch: React.FC = () => {[m
             className="search-btn primary"[m
             disabled={!searchQuery.trim() || isLoading}[m
           >[m
[31m-            {isLoading ? 'Searching...' : 'Analyze Nutrition'}[m
[32m+[m[32m            {isLoading ? loadingMessage : 'Analyze Nutrition'}[m
           </button>[m
           [m
           <button [m
             onClick={() => {[m
[31m-              if (isLoading) return; // Don't allow while loading[m
[31m-              const healthyFoods = ['apple', 'broccoli', 'salmon', 'quinoa', 'blueberries'];[m
[31m-              const randomFood = healthyFoods[Math.floor(Math.random() * healthyFoods.length)];[m
[31m-              setSearchQuery(randomFood);[m
[32m+[m[32m              if (isLoading) return;[m
[32m+[m[41m              [m
[32m+[m[32m              if (showFeelingHealthyContent) {[m
[32m+[m[32m                // If news is showing, close it and set "What is Healthy?" in search[m
[32m+[m[32m                setShowFeelingHealthyContent(false);[m
[32m+[m[32m                setSearchQuery('What is Healthy?');[m
[32m+[m[32m              } else {[m
[32m+[m[32m                // Show the news feed[m
[32m+[m[32m                setShowFeelingHealthyContent(true);[m
[32m+[m[32m              }[m
             }}[m
             className="search-btn secondary"[m
             type="button"[m
             style={{ color: '#000000' }}[m
[31m-            disabled={isLoading} // Disable while loading[m
[32m+[m[32m            disabled={isLoading}[m
           >[m
             I'm Feeling Healthy[m
           </button>[m
         </div>[m
       </div>[m
       [m
[32m+[m[32m      {showFeelingHealthyContent && ([m
[32m+[m[32m        <div[m[41m [m
[32m+[m[32m          className="feeling-healthy-section"[m
[32m+[m[32m          onClick={(e) => {[m
[32m+[m[32m            // Close if clicking on the background, not the content[m
[32m+[m[32m            if (e.target === e.currentTarget) {[m
[32m+[m[32m              setShowFeelingHealthyContent(false);[m
[32m+[m[32m              setSearchQuery('What is Healthy?');[m
[32m+[m[32m            }[m
[32m+[m[32m          }}[m
[32m+[m[32m        >[m
[32m+[m[32m          <div onClick={(e) => e.stopPropagation()}>[m
[32m+[m[32m            <HealthNewsFeed maxArticles={6} />[m
[32m+[m[32m          </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m      )}[m
[32m+[m
       <ImageUploadModal[m
         isOpen={isUploadModalOpen}[m
         onClose={() => setIsUploadModalOpen(false)}[m
[36m@@ -223,4 +572,11 @@[m [mconst VHealthSearch: React.FC = () => {[m
   );[m
 };[m
 [m
[31m-export default VHealthSearch;[m
\ No newline at end of file[m
[32m+[m[32mexport default VHealthSearch;[m
[32m+[m
[32m+[m[32m/* Add this CSS to your styles[m
[32m+[m[32m@keyframes spin {[m
[32m+[m[32m  0% { transform: rotate(0deg); }[m
[32m+[m[32m  100% { transform: rotate(360deg); }[m
[32m+[m[32m}[m
[32m+[m[32m*/[m
\ No newline at end of file[m
[1mdiff --git a/client/src/components/LoginButton/LoginButton.css b/client/src/components/LoginButton/LoginButton.css[m
[1mdeleted file mode 100644[m
[1mindex a2a57f8a..00000000[m
[1m--- a/client/src/components/LoginButton/LoginButton.css[m
[1m+++ /dev/null[m
[36m@@ -1,180 +0,0 @@[m
[31m-/* src/components/LoginButton/LoginButton.css */[m
[31m-.login-button-container {[m
[31m-  position: relative;[m
[31m-}[m
[31m-[m
[31m-.login-button-container.top-right {[m
[31m-  position: absolute;[m
[31m-  top: 16px;[m
[31m-  right: 16px;[m
[31m-  z-index: 1500; /* Increase z-index to be above everything */[m
[31m-  pointer-events: auto !important; /* Force pointer events */[m
[31m-}[m
[31m-[m
[31m-.login-icon {[m
[31m-  background: transparent;[m
[31m-  border: none;[m
[31m-  color: #5f6368;[m
[31m-  cursor: pointer !important; /* Force cursor */[m
[31m-  width: 40px;[m
[31m-  height: 40px;[m
[31m-  border-radius: 50%;[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  transition: background-color 0.2s;[m
[31m-  z-index: 1500; /* Ensure button is clickable */[m
[31m-  position: relative; /* Establish stacking context */[m
[31m-  pointer-events: auto !important; /* Force pointer events */[m
[31m-}[m
[31m-[m
[31m-.login-icon:hover {[m
[31m-  background-color: rgba(0, 0, 0, 0.05);[m
[31m-}[m
[31m-[m
[31m-.login-icon svg {[m
[31m-  width: 24px;[m
[31m-  height: 24px;[m
[31m-}[m
[31m-[m
[31m-/* Fixed dropdown positioning */[m
[31m-.login-dropdown {[m
[31m-  z-index: 1600; /* Even higher than the button */[m
[31m-  position: absolute;[m
[31m-  top: 44px;[m
[31m-  right: 0;[m
[31m-  width: 280px;[m
[31m-  background-color: white;[m
[31m-  border-radius: 8px;[m
[31m-  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);[m
[31m-  overflow: hidden;[m
[31m-  z-index: 1000;[m
[31m-  animation: fadeIn 0.2s ease-out;[m
[31m-}[m
[31m-[m
[31m-/* Ensure dropdown stays above other elements */[m
[31m-.login-dropdown-header {[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: space-between;[m
[31m-  padding: 16px;[m
[31m-  border-bottom: 1px solid #f1f3f4;[m
[31m-}[m
[31m-[m
[31m-.login-dropdown-header h3 {[m
[31m-  margin: 0;[m
[31m-  font-size: 18px;[m
[31m-  color: #202124;[m
[31m-  font-weight: 500;[m
[31m-}[m
[31m-[m
[31m-.close-dropdown {[m
[31m-  background: transparent;[m
[31m-  border: none;[m
[31m-  color: #5f6368;[m
[31m-  font-size: 22px;[m
[31m-  cursor: pointer;[m
[31m-  padding: 0;[m
[31m-  width: 24px;[m
[31m-  height: 24px;[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-}[m
[31m-[m
[31m-.login-dropdown-content {[m
[31m-  padding: 16px;[m
[31m-}[m
[31m-[m
[31m-.login-action-button {[m
[31m-  width: 100%;[m
[31m-  padding: 10px;[m
[31m-  border: none;[m
[31m-  border-radius: 4px;[m
[31m-  background-color: #1a73e8;[m
[31m-  color: white;[m
[31m-  font-size: 14px;[m
[31m-  font-weight: 500;[m
[31m-  cursor: pointer;[m
[31m-  margin-bottom: 8px;[m
[31m-  transition: background-color 0.2s;[m
[31m-}[m
[31m-[m
[31m-.login-action-button:hover {[m
[31m-  background-color: #1765cc;[m
[31m-}[m
[31m-[m
[31m-.login-action-button.secondary {[m
[31m-  background-color: white;[m
[31m-  color: #1a73e8;[m
[31m-  border: 1px solid #dadce0;[m
[31m-}[m
[31m-[m
[31m-.login-action-button.secondary:hover {[m
[31m-  background-color: #f8f9fa;[m
[31m-}[m
[31m-[m
[31m-hr {[m
[31m-  margin: 16px 0;[m
[31m-  border: none;[m
[31m-  border-top: 1px solid #dadce0;[m
[31m-}[m
[31m-[m
[31m-.login-options {[m
[31m-  display: flex;[m
[31m-  flex-direction: column;[m
[31m-  gap: 8px;[m
[31m-}[m
[31m-[m
[31m-.login-option {[m
[31m-  width: 100%;[m
[31m-  padding: 8px;[m
[31m-  border: none;[m
[31m-  background-color: transparent;[m
[31m-  border-radius: 4px;[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  text-align: left;[m
[31m-  cursor: pointer;[m
[31m-  transition: background-color 0.2s;[m
[31m-}[m
[31m-[m
[31m-.login-option:hover {[m
[31m-  background-color: #f8f9fa;[m
[31m-}[m
[31m-[m
[31m-.option-icon {[m
[31m-  margin-right: 12px;[m
[31m-  font-size: 16px;[m
[31m-  display: inline-flex;[m
[31m-  width: 20px;[m
[31m-  justify-content: center;[m
[31m-}[m
[31m-[m
[31m-/* Adjusted animation for better positioning */[m
[31m-@keyframes fadeIn {[m
[31m-  from {[m
[31m-    opacity: 0;[m
[31m-    transform: translateY(-8px);[m
[31m-  }[m
[31m-  to {[m
[31m-    opacity: 1;[m
[31m-    transform: translateY(0);[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-/* Mobile styles - keep dropdown within viewport */[m
[31m-@media (max-width: 600px) {[m
[31m-  .login-dropdown {[m
[31m-    width: calc(100vw - 32px);[m
[31m-    right: -8px;[m
[31m-    position: fixed;[m
[31m-    top: 60px;[m
[31m-  }[m
[31m-  [m
[31m-  .login-button-container.top-right {[m
[31m-    position: absolute;[m
[31m-    top: 12px;[m
[31m-    right: 12px;[m
[31m-  }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/client/src/components/LoginButton/LoginButton.tsx b/client/src/components/LoginButton/LoginButton.tsx[m
[1mdeleted file mode 100644[m
[1mindex 78946b3d..00000000[m
[1m--- a/client/src/components/LoginButton/LoginButton.tsx[m
[1m+++ /dev/null[m
[36m@@ -1,123 +0,0 @@[m
[31m-// src/components/LoginButton/LoginButton.tsx[m
[31m-import React, { useState, useEffect, useRef } from 'react';[m
[31m-import './LoginButton.css';[m
[31m-[m
[31m-interface LoginButtonProps {[m
[31m-  position?: 'top-right' | 'inline';[m
[31m-  onLogin?: () => void;[m
[31m-  className?: string;[m
[31m-}[m
[31m-[m
[31m-const LoginButton: React.FC<LoginButtonProps> = ({ [m
[31m-  position = 'top-right',[m
[31m-  onLogin,[m
[31m-  className = ''[m
[31m-}) => {[m
[31m-  const [showDropdown, setShowDropdown] = useState(false);[m
[31m-  const buttonRef = useRef<HTMLButtonElement>(null);[m
[31m-  const dropdownRef = useRef<HTMLDivElement>(null);[m
[31m-  [m
[31m-  // Close dropdown when clicking outside[m
[31m-  useEffect(() => {[m
[31m-    function handleClickOutside(event: MouseEvent) {[m
[31m-      if (showDropdown && [m
[31m-          buttonRef.current && [m
[31m-          dropdownRef.current &&[m
[31m-          !buttonRef.current.contains(event.target as Node) && [m
[31m-          !dropdownRef.current.contains(event.target as Node)) {[m
[31m-        setShowDropdown(false);[m
[31m-      }[m
[31m-    }[m
[31m-    [m
[31m-    document.addEventListener('mousedown', handleClickOutside);[m
[31m-    return () => {[m
[31m-      document.removeEventListener('mousedown', handleClickOutside);[m
[31m-    };[m
[31m-  }, [showDropdown]);[m
[31m-  [m
[31m-  const handleLoginClick = (event: React.MouseEvent) => {[m
[31m-    event.stopPropagation(); // Add this line[m
[31m-    if (onLogin) {[m
[31m-      onLogin();[m
[31m-    } else {[m
[31m-      setShowDropdown(!showDropdown);[m
[31m-    }[m
[31m-  };[m
[31m-  [m
[31m-  const handleActionClick = (action: string) => {[m
[31m-    console.log(`${action} clicked`);[m
[31m-    setShowDropdown(false);[m
[31m-    // Implement actual actions here[m
[31m-  };[m
[31m-  [m
[31m-  return ([m
[31m-    <div className={`login-button-container ${position} ${className}`}>[m
[31m-      <button[m
[31m-        ref={buttonRef}[m
[31m-        type="button"[m
[31m-        className="login-icon"[m
[31m-        onClick={handleLoginClick}[m
[31m-        aria-label="User Login"[m
[31m-        aria-expanded={showDropdown}[m
[31m-        aria-haspopup="true"[m
[31m-      >[m
[31m-        <svg viewBox="0 0 24 24" fill="currentColor" width="24" height="24">[m
[31m-          <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>[m
[31m-        </svg>[m
[31m-      </button>[m
[31m-      [m
[31m-      {showDropdown && ([m
[31m-        <div [m
[31m-          ref={dropdownRef}[m
[31m-          className="login-dropdown" [m
[31m-          role="menu"[m
[31m-          aria-orientation="vertical"[m
[31m-        >[m
[31m-          <div className="login-dropdown-header">[m
[31m-            <h3>Account</h3>[m
[31m-            <button [m
[31m-              onClick={() => setShowDropdown(false)}[m
[31m-              className="close-dropdown"[m
[31m-              aria-label="Close menu"[m
[31m-            >[m
[31m-              ×[m
[31m-            </button>[m
[31m-          </div>[m
[31m-          <div className="login-dropdown-content">[m
[31m-            <button [m
[31m-              className="login-action-button"[m
[31m-              onClick={() => handleActionClick('sign-in')}[m
[31m-            >[m
[31m-              Sign In[m
[31m-            </button>[m
[31m-            <button [m
[31m-              className="login-action-button secondary"[m
[31m-              onClick={() => handleActionClick('create-account')}[m
[31m-            >[m
[31m-              Create Account[m
[31m-            </button>[m
[31m-            <hr />[m
[31m-            <div className="login-options">[m
[31m-              <button [m
[31m-                className="login-option"[m
[31m-                onClick={() => handleActionClick('privacy')}[m
[31m-              >[m
[31m-                <span className="option-icon">🔒</span>[m
[31m-                <span>Privacy Settings</span>[m
[31m-              </button>[m
[31m-              <button [m
[31m-                className="login-option"[m
[31m-                onClick={() => handleActionClick('help')}[m
[31m-              >[m
[31m-                <span className="option-icon">❓</span>[m
[31m-                <span>Help</span>[m
[31m-              </button>[m
[31m-            </div>[m
[31m-          </div>[m
[31m-        </div>[m
[31m-      )}[m
[31m-    </div>[m
[31m-  );[m
[31m-};[m
[31m-[m
[31m-export default LoginButton;[m
\ No newline at end of file[m
[1mdiff --git a/client/src/components/Spinner.css b/client/src/components/Spinner.css[m
[1mindex fbc08d0c..ce63057c 100644[m
[1m--- a/client/src/components/Spinner.css[m
[1m+++ b/client/src/components/Spinner.css[m
[36m@@ -1,54 +1,105 @@[m
[32m+[m[32m/* ==== Fullscreen overlay (modal) ==== */[m
 .spinner-overlay {[m
   position: fixed;[m
[31m-  top: 0;[m
[31m-  left: 0;[m
[31m-  right: 0;[m
[31m-  bottom: 0;[m
[31m-  background: rgba(60, 64, 67, 0.18);[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[32m+[m[32m  inset: 0;[m
[32m+[m[32m  background: rgba(17, 24, 39, 0.6); /* darker, matches screenshot mood */[m
[32m+[m[32m  display: grid;[m
[32m+[m[32m  place-items: center;[m
   z-index: 2000;[m
   backdrop-filter: blur(4px);[m
 }[m
 [m
[32m+[m[32m/* ==== Card container ==== */[m
 .spinner-container {[m
   display: flex;[m
   flex-direction: column;[m
   align-items: center;[m
[31m-  justify-content: center;[m
[31m-  padding: 40px;[m
[31m-  background: white;[m
[32m+[m[32m  padding: 36px 40px 28px;[m
[32m+[m[32m  background: #fff;[m
   border-radius: 16px;[m
[31m-  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);[m
[32m+[m[32m  box-shadow:[m
[32m+[m[32m    0 25px 50px -12px rgba(0,0,0,.35),[m
[32m+[m[32m    0 10px 20px rgba(0,0,0,.12);[m
   border: 1px solid #e8f0fe;[m
[31m-  min-width: 300px;[m
[32m+[m[32m  width: min(640px, calc(100vw - 48px));[m
[32m+[m[32m  text-align: center;[m
[32m+[m[32m  animation: spinner-fade-in .18s ease-out;[m
 }[m
 [m
[31m-.loading-spinner {[m
[31m-  width: 60px;[m
[31m-  height: 60px;[m
[31m-  background-image: url('../../public/assets/spinicon.gif');[m
[31m-  background-size: contain;[m
[31m-  background-repeat: no-repeat;[m
[31m-  background-position: center;[m
[31m-  border: none;[m
[31m-  animation: none;[m
[31m-  margin-bottom: 20px;[m
[32m+[m[32m/* Title + body text */[m
[32m+[m[32m.spinner-title {[m
[32m+[m[32m  margin: 8px 0 4px;[m
[32m+[m[32m  font-size: 24px;[m
[32m+[m[32m  font-weight: 700;[m
[32m+[m[32m  color: #111827;[m
[32m+[m[32m}[m
[32m+[m[32m.spinner-text,[m
[32m+[m[32m.spinner-message {[m
[32m+[m[32m  color: #4b5563;[m
[32m+[m[32m  font-size: 16px;[m
[32m+[m[32m  margin: 4px 0 18px;[m
 }[m
 [m
[31m-.spinner-text {[m
[31m-  margin-top: 16px;[m
[31m-  font-size: 18px;[m
[31m-  color: #333;[m
[31m-  text-align: center;[m
[31m-  display: block; /* Ensure visibility */[m
[32m+[m[32m/* ==== Arc Spinner (replaces GIF) ==== */[m
[32m+[m[32m.arc-spinner {[m
[32m+[m[32m  width: 40px;[m
[32m+[m[32m  height: 40px;[m
[32m+[m[32m  border-radius: 50%;[m
[32m+[m[32m  border: 4px solid transparent;[m
[32m+[m[32m  border-top-color: #3b82f6;  /* blue accent */[m
[32m+[m[32m  border-left-color: #3b82f6;[m
[32m+[m[32m  transform: rotate(45deg);[m
[32m+[m[32m  animation: spinner-rotate 1s linear infinite;[m
[32m+[m[32m  margin-bottom: 8px;[m
 }[m
 [m
[31m-.spinner-message {[m
[31m-  color: #5f6368;[m
[31m-  font-size: 16px;[m
[31m-  font-weight: 500;[m
[31m-  text-align: center;[m
[31m-  margin: 0;[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m/* Keep old class for inline/legacy layouts */[m
[32m+[m[32m.clean-loader {[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  justify-content: center;[m
[32m+[m[32m  margin: 24px 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ==== Progress bar (determinate/indeterminate) ==== */[m
[32m+[m[32m.spinner-progress { width: 100%; margin-top: 6px; }[m
[32m+[m[32m.spinner-track {[m
[32m+[m[32m  height: 10px;[m
[32m+[m[32m  background: #e5e7eb;[m
[32m+[m[32m  border-radius: 999px;[m
[32m+[m[32m  overflow: hidden;[m
[32m+[m[32m}[m
[32m+[m[32m.spinner-fill {[m
[32m+[m[32m  height: 100%;[m
[32m+[m[32m  width: 0%;[m
[32m+[m[32m  background: linear-gradient(90deg, #2563eb, #3b82f6);[m
[32m+[m[32m  border-radius: 999px;[m
[32m+[m[32m  transition: width .25s ease;[m
[32m+[m[32m}[m
[32m+[m[32m/* Indeterminate pill that slides across */[m
[32m+[m[32m.spinner-fill.indeterminate {[m
[32m+[m[32m  width: 35%;[m
[32m+[m[32m  animation: spinner-indeterminate 1.2s ease-in-out infinite;[m
[32m+[m[32m}[m
[32m+[m[32m.spinner-percent {[m
[32m+[m[32m  margin-top: 10px;[m
[32m+[m[32m  font-size: 15px;[m
[32m+[m[32m  color: #374151;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ==== Keyframes ==== */[m
[32m+[m[32m@keyframes spinner-rotate { to { transform: rotate(405deg); } }[m
[32m+[m[32m@keyframes spinner-indeterminate {[m
[32m+[m[32m  0%   { margin-left: 0%; }[m
[32m+[m[32m  50%  { margin-left: 65%; }[m
[32m+[m[32m  100% { margin-left: 0%; }[m
[32m+[m[32m}[m
[32m+[m[32m@keyframes spinner-fade-in {[m
[32m+[m[32m  from { opacity: 0; transform: translateY(8px); }[m
[32m+[m[32m  to   { opacity: 1; transform: translateY(0); }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ==== Responsive ==== */[m
[32m+[m[32m@media (max-width: 480px) {[m
[32m+[m[32m  .spinner-container { padding: 28px 22px 22px; }[m
[32m+[m[32m  .spinner-title { font-size: 20px; }[m
[32m+[m[32m}[m
[1mdiff --git a/client/src/components/Spinner.tsx b/client/src/components/Spinner.tsx[m
[1mindex 98396cc6..837d3939 100644[m
[1m--- a/client/src/components/Spinner.tsx[m
[1m+++ b/client/src/components/Spinner.tsx[m
[36m@@ -1,28 +1,104 @@[m
 // Spinner.tsx[m
[31m-import React from 'react';[m
[31m-import './Spinner.css'; // or styles from './Spinner.module.css'[m
[32m+[m[32mimport React, { useEffect } from 'react';[m
[32m+[m[32mimport ReactDOM from 'react-dom';[m
[32m+[m[32mimport './Spinner.css';[m
 [m
 type SpinnerProps = {[m
[31m-  overlay?: boolean;      // full-screen overlay[m
[31m-  message?: string;       // Changed from 'text' to 'message'[m
[32m+[m[32m  /** Full-screen overlay modal */[m
[32m+[m[32m  overlay?: boolean;[m
[32m+[m[32m  /** Bold heading (defaults to “Analyzing with AI…”) */[m
[32m+[m[32m  title?: string;[m
[32m+[m[32m  /** Secondary line (defaults to “This may take a few moments…”) */[m
[32m+[m[32m  subtitle?: string;[m
[32m+[m[32m  /** 0–100 for determinate; omit for indeterminate */[m
[32m+[m[32m  progress?: number;[m
[32m+[m[32m  /** Legacy alias (treated as subtitle if provided) */[m
[32m+[m[32m  message?: string;[m
[32m+[m[32m  /** Prevent closing with Esc (defaults true for blocking tasks) */[m
[32m+[m[32m  disableEsc?: boolean;[m
[32m+[m[32m  /** Called if Esc is allowed and user presses it */[m
[32m+[m[32m  onClose?: () => void;[m
 };[m
 [m
[31m-export default function Spinner({ overlay = false, message }: SpinnerProps) {[m
[31m-  if (overlay) {[m
[32m+[m[32mconst portalId = 'vh-spinner-portal';[m
[32m+[m
[32m+[m[32mfunction ensurePortal(): HTMLElement {[m
[32m+[m[32m  let el = document.getElementById(portalId);[m
[32m+[m[32m  if (!el) {[m
[32m+[m[32m    el = document.createElement('div');[m
[32m+[m[32m    el.id = portalId;[m
[32m+[m[32m    document.body.appendChild(el);[m
[32m+[m[32m  }[m
[32m+[m[32m  return el;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport default function Spinner({[m
[32m+[m[32m  overlay = false,[m
[32m+[m[32m  title = 'Analyzing with AI...',[m
[32m+[m[32m  subtitle = 'This may take a few moments...',[m
[32m+[m[32m  progress,[m
[32m+[m[32m  message,[m
[32m+[m[32m  disableEsc = true,[m
[32m+[m[32m  onClose[m
[32m+[m[32m}: SpinnerProps) {[m
[32m+[m[32m  // Preserve legacy "message" prop as subtitle if present[m
[32m+[m[32m  const sub = message ?? subtitle;[m
[32m+[m
[32m+[m[32m  // Optional: trap/allow ESC when overlayed[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    if (!overlay) return;[m
[32m+[m[32m    const onKey = (e: KeyboardEvent) => {[m
[32m+[m[32m      if (e.key === 'Escape') {[m
[32m+[m[32m        if (disableEsc) {[m
[32m+[m[32m          e.preventDefault();[m
[32m+[m[32m          e.stopPropagation();[m
[32m+[m[32m        } else {[m
[32m+[m[32m          onClose?.();[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    };[m
[32m+[m[32m    document.addEventListener('keydown', onKey, { capture: true });[m
[32m+[m[32m    return () => document.removeEventListener('keydown', onKey, { capture: true } as any);[m
[32m+[m[32m  }, [overlay, disableEsc, onClose]);[m
[32m+[m
[32m+[m[32m  // Non-overlay inline spinner (kept for compatibility)[m
[32m+[m[32m  if (!overlay) {[m
     return ([m
[31m-      <div className="results-loading-overlay" role="status" aria-live="polite">[m
[31m-        <div className="results-loading-content">[m
[31m-          <div className="clean-spinner" />[m
[31m-          {message && <p>{message}</p>}[m
[31m-        </div>[m
[32m+[m[32m      <div className="clean-loader" role="status" aria-live="polite">[m
[32m+[m[32m        <div className="arc-spinner" />[m
[32m+[m[32m        {sub && <p style={{ marginTop: 12 }} className="spinner-text">{sub}</p>}[m
       </div>[m
     );[m
   }[m
 [m
[31m-  return ([m
[31m-    <div className="clean-loader" role="status" aria-live="polite">[m
[31m-      <div className="clean-spinner" />[m
[31m-      {message && <p style={{ marginTop: 12 }}>{message}</p>}[m
[32m+[m[32m  // Overlay modal via portal to avoid z-index issues[m
[32m+[m[32m  const portal = ensurePortal();[m
[32m+[m[32m  const clamped =[m
[32m+[m[32m    typeof progress === 'number'[m
[32m+[m[32m      ? Math.max(0, Math.min(100, Math.round(progress)))[m
[32m+[m[32m      : undefined;[m
[32m+[m
[32m+[m[32m  const modal = ([m
[32m+[m[32m    <div className="spinner-overlay" role="dialog" aria-modal="true" aria-labelledby="spinner-title" aria-describedby="spinner-subtitle">[m
[32m+[m[32m      <div className="spinner-container">[m
[32m+[m[32m        <div className="arc-spinner" aria-hidden />[m
[32m+[m[32m        <h2 id="spinner-title" className="spinner-title">{title}</h2>[m
[32m+[m[32m        {sub && <p id="spinner-subtitle" className="spinner-message">{sub}</p>}[m
[32m+[m
[32m+[m[32m        <div className="spinner-progress">[m
[32m+[m[32m          <div className="spinner-track">[m
[32m+[m[32m            <div[m
[32m+[m[32m              className={`spinner-fill ${clamped === undefined ? 'indeterminate' : ''}`}[m
[32m+[m[32m              style={clamped !== undefined ? { width: `${clamped}%` } : undefined}[m
[32m+[m[32m            />[m
[32m+[m[32m          </div>[m
[32m+[m[32m          <div className="spinner-percent">[m
[32m+[m[32m            {clamped !== undefined ? `${clamped}% Complete` : 'Working…'}[m
[32m+[m[32m          </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m      </div>[m
     </div>[m
   );[m
[31m-}[m
\ No newline at end of file[m
[32m+[m
[32m+[m[32m  return ReactDOM.createPortal(modal, portal);[m
[32m+[m[32m}[m
[1mdiff --git a/client/src/vHealthApp.tsx b/client/src/vHealthApp.tsx[m
[1mindex cf5566ed..ac212640 100644[m
[1m--- a/client/src/vHealthApp.tsx[m
[1m+++ b/client/src/vHealthApp.tsx[m
[36m@@ -6,7 +6,7 @@[m [mimport { healthSearchService } from './services/healthSearchService';[m
 import { photoStorageService } from './services/photoStorageService';[m
 import { foodAnalysisService } from './components/foodAnalysisService';[m
 import './VHealthSearch.css';[m
[31m-import LoginButton from './components/LoginButton/LoginButton';[m
[32m+[m[32mimport MultiAuthLogin from './components/shared/components/MultiAuthLogin';[m
 [m
 // Add TypeScript declaration for Speech Recognition[m
 declare global {[m
[36m@@ -291,6 +291,18 @@[m [mconst VHealthApp: React.FC = () => {[m
     }[m
   };[m
 [m
[32m+[m[32m  const handleUserChange = (user: any) => {[m
[32m+[m[32m    console.log('User changed:', user);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleSignIn = (user: any) => {[m
[32m+[m[32m    console.log('User signed in:', user);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleSignOut = () => {[m
[32m+[m[32m    console.log('User signed out');[m
[32m+[m[32m  };[m
[32m+[m
   if (currentView === 'results') {[m
     return ([m
       <SearchResults[m
[36m@@ -306,9 +318,12 @@[m [mconst VHealthApp: React.FC = () => {[m
 [m
   return ([m
     <div className="search-container">[m
[31m-      <LoginButton [m
[32m+[m[32m      <MultiAuthLogin[m[41m [m
         position="top-right"[m
         className="main-login-button"[m
[32m+[m[32m        onUserChange={handleUserChange}[m
[32m+[m[32m        onSignIn={handleSignIn}[m
[32m+[m[32m        onSignOut={handleSignOut}[m
       />[m
 [m
       <h1 className="search-title">What is Healthy?</h1>[m
[1mdiff --git a/client/tsconfig.json b/client/tsconfig.json[m
[1mindex 42e02084..8cefd1e4 100644[m
[1m--- a/client/tsconfig.json[m
[1m+++ b/client/tsconfig.json[m
[36m@@ -23,8 +23,6 @@[m
     "downlevelIteration": true[m
   },[m
   "include": [[m
[31m-    "src",[m
[31m-    "src/types",[m
[31m-    "src/VHealthSearch.tsx"[m
[32m+[m[32m    "src/**/*"[m
   ][m
 }[m
[1mdiff --git a/services/node_modules/.package-lock.json b/services/node_modules/.package-lock.json[m
[1mindex 55811919..13fcef99 100644[m
[1m--- a/services/node_modules/.package-lock.json[m
[1m+++ b/services/node_modules/.package-lock.json[m
[36m@@ -573,12 +573,12 @@[m
       }[m
     },[m
     "node_modules/@types/node": {[m
[31m-      "version": "24.3.0",[m
[31m-      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.3.0.tgz",[m
[31m-      "integrity": "sha512-aPTXCrfwnDLj4VvXrm+UUCQjNEvJgNA8s5F1cvwQU+3KNltTOkBm1j30uNLyqqPNe7gE3KFzImYoZEfLhp4Yow==",[m
[32m+[m[32m      "version": "24.5.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.5.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-FYxk1I7wPv3K2XBaoyH2cTnocQEu8AOZ60hPbsyukMPLv5/5qr7V1i8PLHdl6Zf87I+xZXFvPCXYjiTFq+YSDQ==",[m
       "license": "MIT",[m
       "dependencies": {[m
[31m-        "undici-types": "~7.10.0"[m
[32m+[m[32m        "undici-types": "~7.12.0"[m
       }[m
     },[m
     "node_modules/@types/qs": {[m
[36m@@ -595,6 +595,26 @@[m
       "dev": true,[m
       "license": "MIT"[m
     },[m
[32m+[m[32m    "node_modules/@types/react": {[m
[32m+[m[32m      "version": "19.1.13",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.13.tgz",[m
[32m+[m[32m      "integrity": "sha512-hHkbU/eoO3EG5/MZkuFSKmYqPbSVk5byPFa3e7y/8TybHiLMACgI8seVYlicwk7H5K/rI2px9xrQp/C+AUDTiQ==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "csstype": "^3.0.2"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@types/react-dom": {[m
[32m+[m[32m      "version": "19.1.9",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.9.tgz",[m
[32m+[m[32m      "integrity": "sha512-qXRuZaOsAdXKFyOhRBg6Lqqc0yay13vN7KrIg4L7N4aaHN68ma9OK3NE1BoDFgFOTfM7zg+3/8+2n8rLUH3OKQ==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "@types/react": "^19.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/@types/readable-stream": {[m
       "version": "4.0.21",[m
       "resolved": "https://registry.npmjs.org/@types/readable-stream/-/readable-stream-4.0.21.tgz",[m
[36m@@ -1160,6 +1180,13 @@[m
       "dev": true,[m
       "license": "MIT"[m
     },[m
[32m+[m[32m    "node_modules/csstype": {[m
[32m+[m[32m      "version": "3.1.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
     "node_modules/data-uri-to-buffer": {[m
       "version": "4.0.1",[m
       "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",[m
[36m@@ -3685,9 +3712,9 @@[m
       "license": "MIT"[m
     },[m
     "node_modules/undici-types": {[m
[31m-      "version": "7.10.0",[m
[31m-      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.10.0.tgz",[m
[31m-      "integrity": "sha512-t5Fy/nfn+14LuOc2KNYg75vZqClpAiqscVvMygNnlsHBFpSXdJaYtXMcdNLpl/Qvc3P2cB3s6lOV51nqsFq4ag==",[m
[32m+[m[32m      "version": "7.12.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.12.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-goOacqME2GYyOZZfb5Lgtu+1IDmAlAEu5xnD3+xTzS10hT0vzpf0SPjkXwAw9Jm+4n/mQGDP3LO8CPbYROeBfQ==",[m
       "license": "MIT"[m
     },[m
     "node_modules/unpipe": {[m
[1mdiff --git a/services/node_modules/@types/node/README.md b/services/node_modules/@types/node/README.md[m
[1mindex e20ebfd1..3e305d3a 100644[m
[1m--- a/services/node_modules/@types/node/README.md[m
[1m+++ b/services/node_modules/@types/node/README.md[m
[36m@@ -8,7 +8,7 @@[m [mThis package contains type definitions for node (https://nodejs.org/).[m
 Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node.[m
 [m
 ### Additional Details[m
[31m- * Last updated: Fri, 15 Aug 2025 08:39:32 GMT[m
[32m+[m[32m * Last updated: Thu, 18 Sep 2025 00:04:03 GMT[m
  * Dependencies: [undici-types](https://npmjs.com/package/undici-types)[m
 [m
 # Credits[m
[1mdiff --git a/services/node_modules/@types/node/buffer.d.ts b/services/node_modules/@types/node/buffer.d.ts[m
[1mindex cbdf207c..49636f39 100644[m
[1m--- a/services/node_modules/@types/node/buffer.d.ts[m
[1m+++ b/services/node_modules/@types/node/buffer.d.ts[m
[36m@@ -139,7 +139,7 @@[m [mdeclare module "buffer" {[m
         type?: string | undefined;[m
     }[m
     /**[m
[31m-     * A [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob) encapsulates immutable, raw data that can be safely shared across[m
[32m+[m[32m     * A `Blob` encapsulates immutable, raw data that can be safely shared across[m
      * multiple worker threads.[m
      * @since v15.7.0, v14.18.0[m
      */[m
[1mdiff --git a/services/node_modules/@types/node/child_process.d.ts b/services/node_modules/@types/node/child_process.d.ts[m
[1mindex 6a12a8c8..8c551e9c 100644[m
[1m--- a/services/node_modules/@types/node/child_process.d.ts[m
[1m+++ b/services/node_modules/@types/node/child_process.d.ts[m
[36m@@ -24,7 +24,7 @@[m
  * the parent Node.js process and the spawned subprocess. These pipes have[m
  * limited (and platform-specific) capacity. If the subprocess writes to[m
  * stdout in excess of that limit without the output being captured, the[m
[31m- * subprocess blocks waiting for the pipe buffer to accept more data. This is[m
[32m+[m[32m * subprocess blocks, waiting for the pipe buffer to accept more data. This is[m
  * identical to the behavior of pipes in the shell. Use the `{ stdio: 'ignore' }` option if the output will not be consumed.[m
  *[m
  * The command lookup is performed using the `options.env.PATH` environment[m
[1mdiff --git a/services/node_modules/@types/node/crypto.d.ts b/services/node_modules/@types/node/crypto.d.ts[m
[1mindex e3c7d671..57ac4cd4 100644[m
[1m--- a/services/node_modules/@types/node/crypto.d.ts[m
[1m+++ b/services/node_modules/@types/node/crypto.d.ts[m
[36m@@ -3363,11 +3363,36 @@[m [mdeclare module "crypto" {[m
         options: { privateKey: KeyObject; publicKey: KeyObject },[m
         callback: (err: Error | null, secret: Buffer) => void,[m
     ): void;[m
[32m+[m[32m    interface OneShotDigestOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Encoding used to encode the returned digest.[m
[32m+[m[32m         * @default 'hex'[m
[32m+[m[32m         */[m
[32m+[m[32m        outputEncoding?: BinaryToTextEncoding | "buffer" | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * For XOF hash functions such as 'shake256', the outputLength option[m
[32m+[m[32m         * can be used to specify the desired output length in bytes.[m
[32m+[m[32m         */[m
[32m+[m[32m        outputLength?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface OneShotDigestOptionsWithStringEncoding extends OneShotDigestOptions {[m
[32m+[m[32m        outputEncoding?: BinaryToTextEncoding | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface OneShotDigestOptionsWithBufferEncoding extends OneShotDigestOptions {[m
[32m+[m[32m        outputEncoding: "buffer";[m
[32m+[m[32m    }[m
     /**[m
[31m-     * A utility for creating one-shot hash digests of data. It can be faster than the object-based `crypto.createHash()` when hashing a smaller amount of data[m
[31m-     * (<= 5MB) that's readily available. If the data can be big or if it is streamed, it's still recommended to use `crypto.createHash()` instead. The `algorithm`[m
[31m-     * is dependent on the available algorithms supported by the version of OpenSSL on the platform. Examples are `'sha256'`, `'sha512'`, etc. On recent releases[m
[31m-     * of OpenSSL, `openssl list -digest-algorithms` will display the available digest algorithms.[m
[32m+[m[32m     * A utility for creating one-shot hash digests of data. It can be faster than[m
[32m+[m[32m     * the object-based `crypto.createHash()` when hashing a smaller amount of data[m
[32m+[m[32m     * (<= 5MB) that's readily available. If the data can be big or if it is streamed,[m
[32m+[m[32m     * it's still recommended to use `crypto.createHash()` instead.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `algorithm` is dependent on the available algorithms supported by the[m
[32m+[m[32m     * version of OpenSSL on the platform. Examples are `'sha256'`, `'sha512'`, etc.[m
[32m+[m[32m     * On recent releases of OpenSSL, `openssl list -digest-algorithms` will[m
[32m+[m[32m     * display the available digest algorithms.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the `outputEncoding`.[m
      *[m
      * Example:[m
      *[m
[36m@@ -3387,16 +3412,25 @@[m [mdeclare module "crypto" {[m
      * console.log(crypto.hash('sha1', Buffer.from(base64, 'base64'), 'buffer'));[m
      * ```[m
      * @since v21.7.0, v20.12.0[m
[31m-     * @param data When `data` is a string, it will be encoded as UTF-8 before being hashed. If a different input encoding is desired for a string input, user[m
[31m-     *             could encode the string into a `TypedArray` using either `TextEncoder` or `Buffer.from()` and passing the encoded `TypedArray` into this API instead.[m
[31m-     * @param [outputEncoding='hex'] [Encoding](https://nodejs.org/docs/latest-v24.x/api/buffer.html#buffers-and-character-encodings) used to encode the returned digest.[m
[32m+[m[32m     * @param data When `data` is a string, it will be encoded as UTF-8 before being hashed. If a different[m
[32m+[m[32m     * input encoding is desired for a string input, user could encode the string[m
[32m+[m[32m     * into a `TypedArray` using either `TextEncoder` or `Buffer.from()` and passing[m
[32m+[m[32m     * the encoded `TypedArray` into this API instead.[m
      */[m
[31m-    function hash(algorithm: string, data: BinaryLike, outputEncoding?: BinaryToTextEncoding): string;[m
[31m-    function hash(algorithm: string, data: BinaryLike, outputEncoding: "buffer"): Buffer;[m
     function hash([m
         algorithm: string,[m
         data: BinaryLike,[m
[31m-        outputEncoding?: BinaryToTextEncoding | "buffer",[m
[32m+[m[32m        options?: OneShotDigestOptionsWithStringEncoding | BinaryToTextEncoding,[m
[32m+[m[32m    ): string;[m
[32m+[m[32m    function hash([m
[32m+[m[32m        algorithm: string,[m
[32m+[m[32m        data: BinaryLike,[m
[32m+[m[32m        options: OneShotDigestOptionsWithBufferEncoding | "buffer",[m
[32m+[m[32m    ): Buffer;[m
[32m+[m[32m    function hash([m
[32m+[m[32m        algorithm: string,[m
[32m+[m[32m        data: BinaryLike,[m
[32m+[m[32m        options: OneShotDigestOptions | BinaryToTextEncoding | "buffer",[m
     ): string | Buffer;[m
     type CipherMode = "cbc" | "ccm" | "cfb" | "ctr" | "ecb" | "gcm" | "ocb" | "ofb" | "stream" | "wrap" | "xts";[m
     interface CipherInfoOptions {[m
[1mdiff --git a/services/node_modules/@types/node/dns.d.ts b/services/node_modules/@types/node/dns.d.ts[m
[1mindex f7539fd3..f217630f 100644[m
[1m--- a/services/node_modules/@types/node/dns.d.ts[m
[1m+++ b/services/node_modules/@types/node/dns.d.ts[m
[36m@@ -830,6 +830,11 @@[m [mdeclare module "dns" {[m
          * @default 4[m
          */[m
         tries?: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The max retry timeout, in milliseconds.[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        maxTimeout?: number | undefined;[m
     }[m
     /**[m
      * An independent resolver for DNS requests.[m
[1mdiff --git a/services/node_modules/@types/node/dom-events.d.ts b/services/node_modules/@types/node/dom-events.d.ts[m
[1mdeleted file mode 100644[m
[1mindex cd6acde2..00000000[m
[1m--- a/services/node_modules/@types/node/dom-events.d.ts[m
[1m+++ /dev/null[m
[36m@@ -1,99 +0,0 @@[m
[31m-// Make this a module[m
[31m-export {};[m
[31m-[m
[31m-// Conditional type aliases, which are later merged into the global scope.[m
[31m-// Will either be empty if the relevant web library is already present, or the @types/node definition otherwise.[m
[31m-[m
[31m-type __Event = typeof globalThis extends { onmessage: any } ? {} : Event;[m
[31m-interface Event {[m
[31m-    readonly bubbles: boolean;[m
[31m-    cancelBubble: boolean;[m
[31m-    readonly cancelable: boolean;[m
[31m-    readonly composed: boolean;[m
[31m-    composedPath(): [EventTarget?];[m
[31m-    readonly currentTarget: EventTarget | null;[m
[31m-    readonly defaultPrevented: boolean;[m
[31m-    readonly eventPhase: 0 | 2;[m
[31m-    initEvent(type: string, bubbles?: boolean, cancelable?: boolean): void;[m
[31m-    readonly isTrusted: boolean;[m
[31m-    preventDefault(): void;[m
[31m-    readonly returnValue: boolean;[m
[31m-    readonly srcElement: EventTarget | null;[m
[31m-    stopImmediatePropagation(): void;[m
[31m-    stopPropagation(): void;[m
[31m-    readonly target: EventTarget | null;[m
[31m-    readonly timeStamp: number;[m
[31m-    readonly type: string;[m
[31m-}[m
[31m-[m
[31m-type __CustomEvent<T = any> = typeof globalThis extends { onmessage: any } ? {} : CustomEvent<T>;[m
[31m-interface CustomEvent<T = any> extends Event {[m
[31m-    readonly detail: T;[m
[31m-}[m
[31m-[m
[31m-type __EventTarget = typeof globalThis extends { onmessage: any } ? {} : EventTarget;[m
[31m-interface EventTarget {[m
[31m-    addEventListener([m
[31m-        type: string,[m
[31m-        listener: EventListener | EventListenerObject,[m
[31m-        options?: AddEventListenerOptions | boolean,[m
[31m-    ): void;[m
[31m-    dispatchEvent(event: Event): boolean;[m
[31m-    removeEventListener([m
[31m-        type: string,[m
[31m-        listener: EventListener | EventListenerObject,[m
[31m-        options?: EventListenerOptions | boolean,[m
[31m-    ): void;[m
[31m-}[m
[31m-[m
[31m-interface EventInit {[m
[31m-    bubbles?: boolean;[m
[31m-    cancelable?: boolean;[m
[31m-    composed?: boolean;[m
[31m-}[m
[31m-[m
[31m-interface CustomEventInit<T = any> extends EventInit {[m
[31m-    detail?: T;[m
[31m-}[m
[31m-[m
[31m-interface EventListenerOptions {[m
[31m-    capture?: boolean;[m
[31m-}[m
[31m-[m
[31m-interface AddEventListenerOptions extends EventListenerOptions {[m
[31m-    once?: boolean;[m
[31m-    passive?: boolean;[m
[31m-    signal?: AbortSignal;[m
[31m-}[m
[31m-[m
[31m-interface EventListener {[m
[31m-    (evt: Event): void;[m
[31m-}[m
[31m-[m
[31m-interface EventListenerObject {[m
[31m-    handleEvent(object: Event): void;[m
[31m-}[m
[31m-[m
[31m-// Merge conditional interfaces into global scope, and conditionally declare global constructors.[m
[31m-declare global {[m
[31m-    interface Event extends __Event {}[m
[31m-    var Event: typeof globalThis extends { onmessage: any; Event: infer T } ? T[m
[31m-        : {[m
[31m-            prototype: Event;[m
[31m-            new(type: string, eventInitDict?: EventInit): Event;[m
[31m-        };[m
[31m-[m
[31m-    interface CustomEvent<T = any> extends __CustomEvent<T> {}[m
[31m-    var CustomEvent: typeof globalThis extends { onmessage: any; CustomEvent: infer T } ? T[m
[31m-        : {[m
[31m-            prototype: CustomEvent;[m
[31m-            new<T>(type: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;[m
[31m-        };[m
[31m-[m
[31m-    interface EventTarget extends __EventTarget {}[m
[31m-    var EventTarget: typeof globalThis extends { onmessage: any; EventTarget: infer T } ? T[m
[31m-        : {[m
[31m-            prototype: EventTarget;[m
[31m-            new(): EventTarget;[m
[31m-        };[m
[31m-}[m
[1mdiff --git a/services/node_modules/@types/node/fs.d.ts b/services/node_modules/@types/node/fs.d.ts[m
[1mindex 5f3bd7ad..666413aa 100644[m
[1m--- a/services/node_modules/@types/node/fs.d.ts[m
[1m+++ b/services/node_modules/@types/node/fs.d.ts[m
[36m@@ -1966,6 +1966,39 @@[m [mdeclare module "fs" {[m
      * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
      */[m
     export function mkdtempSync(prefix: string, options?: EncodingOption): string | Buffer;[m
[32m+[m[32m    export interface DisposableTempDir extends AsyncDisposable {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The path of the created directory.[m
[32m+[m[32m         */[m
[32m+[m[32m        path: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A function which removes the created directory.[m
[32m+[m[32m         */[m
[32m+[m[32m        remove(): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The same as `remove`.[m
[32m+[m[32m         */[m
[32m+[m[32m        [Symbol.asyncDispose](): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a disposable object whose `path` property holds the created directory[m
[32m+[m[32m     * path. When the object is disposed, the directory and its contents will be[m
[32m+[m[32m     * removed if it still exists. If the directory cannot be deleted, disposal will[m
[32m+[m[32m     * throw an error. The object has a `remove()` method which will perform the same[m
[32m+[m[32m     * task.[m
[32m+[m[32m     *[m
[32m+[m[32m     * <!-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of `fs.mkdtemp()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * There is no callback-based version of this API because it is designed for use[m
[32m+[m[32m     * with the `using` syntax.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use.[m
[32m+[m[32m     * @since v24.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdtempDisposableSync(prefix: string, options?: EncodingOption): DisposableTempDir;[m
     /**[m
      * Reads the contents of a directory. The callback gets two arguments `(err, files)` where `files` is an array of the names of the files in the directory excluding `'.'` and `'..'`.[m
      *[m
[1mdiff --git a/services/node_modules/@types/node/fs/promises.d.ts b/services/node_modules/@types/node/fs/promises.d.ts[m
[1mindex d3386aa4..adddd098 100644[m
[1m--- a/services/node_modules/@types/node/fs/promises.d.ts[m
[1m+++ b/services/node_modules/@types/node/fs/promises.d.ts[m
[36m@@ -20,6 +20,8 @@[m [mdeclare module "fs/promises" {[m
         CopyOptions,[m
         Dir,[m
         Dirent,[m
[32m+[m[32m        DisposableTempDir,[m
[32m+[m[32m        EncodingOption,[m
         GlobOptions,[m
         GlobOptionsWithFileTypes,[m
         GlobOptionsWithoutFileTypes,[m
[36m@@ -961,6 +963,26 @@[m [mdeclare module "fs/promises" {[m
      * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
      */[m
     function mkdtemp(prefix: string, options?: ObjectEncodingOptions | BufferEncoding | null): Promise<string | Buffer>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The resulting Promise holds an async-disposable object whose `path` property[m
[32m+[m[32m     * holds the created directory path. When the object is disposed, the directory[m
[32m+[m[32m     * and its contents will be removed asynchronously if it still exists. If the[m
[32m+[m[32m     * directory cannot be deleted, disposal will throw an error. The object has an[m
[32m+[m[32m     * async `remove()` method which will perform the same task.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Both this function and the disposal function on the resulting object are[m
[32m+[m[32m     * async, so it should be used with `await` + `await using` as in[m
[32m+[m[32m     * `await using dir = await fsPromises.mkdtempDisposable('prefix')`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * <!-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of `fsPromises.mkdtemp()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use.[m
[32m+[m[32m     * @since v24.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function mkdtempDisposable(prefix: PathLike, options?: EncodingOption): Promise<DisposableTempDir>;[m
     /**[m
      * Asynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an[m
      * [AsyncIterable](https://tc39.github.io/ecma262/#sec-asynciterable-interface), or an[m
[1mdiff --git a/services/node_modules/@types/node/globals.d.ts b/services/node_modules/@types/node/globals.d.ts[m
[1mindex 143ba4ea..af46ec15 100644[m
[1m--- a/services/node_modules/@types/node/globals.d.ts[m
[1m+++ b/services/node_modules/@types/node/globals.d.ts[m
[36m@@ -1,367 +1,168 @@[m
[31m-export {}; // Make this a module[m
[32m+[m[32mdeclare var global: typeof globalThis;[m
 [m
[31m-// #region Fetch and friends[m
[31m-// Conditional type aliases, used at the end of this file.[m
[31m-// Will either be empty if lib.dom (or lib.webworker) is included, or the undici version otherwise.[m
[31m-type _Request = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Request;[m
[31m-type _Response = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Response;[m
[31m-type _FormData = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").FormData;[m
[31m-type _Headers = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Headers;[m
[31m-type _MessageEvent = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").MessageEvent;[m
[31m-type _RequestInit = typeof globalThis extends { onmessage: any } ? {}[m
[31m-    : import("undici-types").RequestInit;[m
[31m-type _ResponseInit = typeof globalThis extends { onmessage: any } ? {}[m
[31m-    : import("undici-types").ResponseInit;[m
[31m-type _WebSocket = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").WebSocket;[m
[31m-type _EventSource = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").EventSource;[m
[31m-type _CloseEvent = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").CloseEvent;[m
[31m-// #endregion Fetch and friends[m
[31m-[m
[31m-// Conditional type definitions for webstorage interface, which conflicts with lib.dom otherwise.[m
[31m-type _Storage = typeof globalThis extends { onabort: any } ? {} : {[m
[31m-    readonly length: number;[m
[31m-    clear(): void;[m
[31m-    getItem(key: string): string | null;[m
[31m-    key(index: number): string | null;[m
[31m-    removeItem(key: string): void;[m
[31m-    setItem(key: string, value: string): void;[m
[31m-    [key: string]: any;[m
[31m-};[m
[31m-[m
[31m-// #region DOMException[m
[31m-type _DOMException = typeof globalThis extends { onmessage: any } ? {} : NodeDOMException;[m
[31m-interface NodeDOMException extends Error {[m
[31m-    readonly code: number;[m
[31m-    readonly message: string;[m
[31m-    readonly name: string;[m
[31m-    readonly INDEX_SIZE_ERR: 1;[m
[31m-    readonly DOMSTRING_SIZE_ERR: 2;[m
[31m-    readonly HIERARCHY_REQUEST_ERR: 3;[m
[31m-    readonly WRONG_DOCUMENT_ERR: 4;[m
[31m-    readonly INVALID_CHARACTER_ERR: 5;[m
[31m-    readonly NO_DATA_ALLOWED_ERR: 6;[m
[31m-    readonly NO_MODIFICATION_ALLOWED_ERR: 7;[m
[31m-    readonly NOT_FOUND_ERR: 8;[m
[31m-    readonly NOT_SUPPORTED_ERR: 9;[m
[31m-    readonly INUSE_ATTRIBUTE_ERR: 10;[m
[31m-    readonly INVALID_STATE_ERR: 11;[m
[31m-    readonly SYNTAX_ERR: 12;[m
[31m-    readonly INVALID_MODIFICATION_ERR: 13;[m
[31m-    readonly NAMESPACE_ERR: 14;[m
[31m-    readonly INVALID_ACCESS_ERR: 15;[m
[31m-    readonly VALIDATION_ERR: 16;[m
[31m-    readonly TYPE_MISMATCH_ERR: 17;[m
[31m-    readonly SECURITY_ERR: 18;[m
[31m-    readonly NETWORK_ERR: 19;[m
[31m-    readonly ABORT_ERR: 20;[m
[31m-    readonly URL_MISMATCH_ERR: 21;[m
[31m-    readonly QUOTA_EXCEEDED_ERR: 22;[m
[31m-    readonly TIMEOUT_ERR: 23;[m
[31m-    readonly INVALID_NODE_TYPE_ERR: 24;[m
[31m-    readonly DATA_CLONE_ERR: 25;[m
[31m-}[m
[31m-interface NodeDOMExceptionConstructor {[m
[31m-    prototype: DOMException;[m
[31m-    new(message?: string, nameOrOptions?: string | { name?: string; cause?: unknown }): DOMException;[m
[31m-    readonly INDEX_SIZE_ERR: 1;[m
[31m-    readonly DOMSTRING_SIZE_ERR: 2;[m
[31m-    readonly HIERARCHY_REQUEST_ERR: 3;[m
[31m-    readonly WRONG_DOCUMENT_ERR: 4;[m
[31m-    readonly INVALID_CHARACTER_ERR: 5;[m
[31m-    readonly NO_DATA_ALLOWED_ERR: 6;[m
[31m-    readonly NO_MODIFICATION_ALLOWED_ERR: 7;[m
[31m-    readonly NOT_FOUND_ERR: 8;[m
[31m-    readonly NOT_SUPPORTED_ERR: 9;[m
[31m-    readonly INUSE_ATTRIBUTE_ERR: 10;[m
[31m-    readonly INVALID_STATE_ERR: 11;[m
[31m-    readonly SYNTAX_ERR: 12;[m
[31m-    readonly INVALID_MODIFICATION_ERR: 13;[m
[31m-    readonly NAMESPACE_ERR: 14;[m
[31m-    readonly INVALID_ACCESS_ERR: 15;[m
[31m-    readonly VALIDATION_ERR: 16;[m
[31m-    readonly TYPE_MISMATCH_ERR: 17;[m
[31m-    readonly SECURITY_ERR: 18;[m
[31m-    readonly NETWORK_ERR: 19;[m
[31m-    readonly ABORT_ERR: 20;[m
[31m-    readonly URL_MISMATCH_ERR: 21;[m
[31m-    readonly QUOTA_EXCEEDED_ERR: 22;[m
[31m-    readonly TIMEOUT_ERR: 23;[m
[31m-    readonly INVALID_NODE_TYPE_ERR: 24;[m
[31m-    readonly DATA_CLONE_ERR: 25;[m
[31m-}[m
[31m-// #endregion DOMException[m
[31m-[m
[31m-declare global {[m
[31m-    var global: typeof globalThis;[m
[31m-[m
[31m-    var process: NodeJS.Process;[m
[31m-    var console: Console;[m
[31m-[m
[31m-    interface ErrorConstructor {[m
[31m-        /**[m
[31m-         * Creates a `.stack` property on `targetObject`, which when accessed returns[m
[31m-         * a string representing the location in the code at which[m
[31m-         * `Error.captureStackTrace()` was called.[m
[31m-         *[m
[31m-         * ```js[m
[31m-         * const myObject = {};[m
[31m-         * Error.captureStackTrace(myObject);[m
[31m-         * myObject.stack;  // Similar to `new Error().stack`[m
[31m-         * ```[m
[31m-         *[m
[31m-         * The first line of the trace will be prefixed with[m
[31m-         * `${myObject.name}: ${myObject.message}`.[m
[31m-         *[m
[31m-         * The optional `constructorOpt` argument accepts a function. If given, all frames[m
[31m-         * above `constructorOpt`, including `constructorOpt`, will be omitted from the[m
[31m-         * generated stack trace.[m
[31m-         *[m
[31m-         * The `constructorOpt` argument is useful for hiding implementation[m
[31m-         * details of error generation from the user. For instance:[m
[31m-         *[m
[31m-         * ```js[m
[31m-         * function a() {[m
[31m-         *   b();[m
[31m-         * }[m
[31m-         *[m
[31m-         * function b() {[m
[31m-         *   c();[m
[31m-         * }[m
[31m-         *[m
[31m-         * function c() {[m
[31m-         *   // Create an error without stack trace to avoid calculating the stack trace twice.[m
[31m-         *   const { stackTraceLimit } = Error;[m
[31m-         *   Error.stackTraceLimit = 0;[m
[31m-         *   const error = new Error();[m
[31m-         *   Error.stackTraceLimit = stackTraceLimit;[m
[31m-         *[m
[31m-         *   // Capture the stack trace above function b[m
[31m-         *   Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace[m
[31m-         *   throw error;[m
[31m-         * }[m
[31m-         *[m
[31m-         * a();[m
[31m-         * ```[m
[31m-         */[m
[31m-        captureStackTrace(targetObject: object, constructorOpt?: Function): void;[m
[31m-        /**[m
[31m-         * @see https://v8.dev/docs/stack-trace-api#customizing-stack-traces[m
[31m-         */[m
[31m-        prepareStackTrace(err: Error, stackTraces: NodeJS.CallSite[]): any;[m
[31m-        /**[m
[31m-         * The `Error.stackTraceLimit` property specifies the number of stack frames[m
[31m-         * collected by a stack trace (whether generated by `new Error().stack` or[m
[31m-         * `Error.captureStackTrace(obj)`).[m
[31m-         *[m
[31m-         * The default value is `10` but may be set to any valid JavaScript number. Changes[m
[31m-         * will affect any stack trace captured _after_ the value has been changed.[m
[31m-         *[m
[31m-         * If set to a non-number value, or set to a negative number, stack traces will[m
[31m-         * not capture any frames.[m
[31m-         */[m
[31m-        stackTraceLimit: number;[m
[31m-    }[m
[32m+[m[32mdeclare var process: NodeJS.Process;[m
[32m+[m[32mdeclare var console: Console;[m
 [m
[32m+[m[32minterface ErrorConstructor {[m
     /**[m
[31m-     * Enable this API with the `--expose-gc` CLI flag.[m
[32m+[m[32m     * Creates a `.stack` property on `targetObject`, which when accessed returns[m
[32m+[m[32m     * a string representing the location in the code at which[m
[32m+[m[32m     * `Error.captureStackTrace()` was called.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const myObject = {};[m
[32m+[m[32m     * Error.captureStackTrace(myObject);[m
[32m+[m[32m     * myObject.stack;  // Similar to `new Error().stack`[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The first line of the trace will be prefixed with[m
[32m+[m[32m     * `${myObject.name}: ${myObject.message}`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `constructorOpt` argument accepts a function. If given, all frames[m
[32m+[m[32m     * above `constructorOpt`, including `constructorOpt`, will be omitted from the[m
[32m+[m[32m     * generated stack trace.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `constructorOpt` argument is useful for hiding implementation[m
[32m+[m[32m     * details of error generation from the user. For instance:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * function a() {[m
[32m+[m[32m     *   b();[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * function b() {[m
[32m+[m[32m     *   c();[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * function c() {[m
[32m+[m[32m     *   // Create an error without stack trace to avoid calculating the stack trace twice.[m
[32m+[m[32m     *   const { stackTraceLimit } = Error;[m
[32m+[m[32m     *   Error.stackTraceLimit = 0;[m
[32m+[m[32m     *   const error = new Error();[m
[32m+[m[32m     *   Error.stackTraceLimit = stackTraceLimit;[m
[32m+[m[32m     *[m
[32m+[m[32m     *   // Capture the stack trace above function b[m
[32m+[m[32m     *   Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace[m
[32m+[m[32m     *   throw error;[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * a();[m
[32m+[m[32m     * ```[m
      */[m
[31m-    var gc: NodeJS.GCFunction | undefined;[m
[31m-[m
[31m-    namespace NodeJS {[m
[31m-        interface CallSite {[m
[31m-            getColumnNumber(): number | null;[m
[31m-            getEnclosingColumnNumber(): number | null;[m
[31m-            getEnclosingLineNumber(): number | null;[m
[31m-            getEvalOrigin(): string | undefined;[m
[31m-            getFileName(): string | null;[m
[31m-            getFunction(): Function | undefined;[m
[31m-            getFunctionName(): string | null;[m
[31m-            getLineNumber(): number | null;[m
[31m-            getMethodName(): string | null;[m
[31m-            getPosition(): number;[m
[31m-            getPromiseIndex(): number | null;[m
[31m-            getScriptHash(): string;[m
[31m-            getScriptNameOrSourceURL(): string | null;[m
[31m-            getThis(): unknown;[m
[31m-            getTypeName(): string | null;[m
[31m-            isAsync(): boolean;[m
[31m-            isConstructor(): boolean;[m
[31m-            isEval(): boolean;[m
[31m-            isNative(): boolean;[m
[31m-            isPromiseAll(): boolean;[m
[31m-            isToplevel(): boolean;[m
[31m-        }[m
[31m-[m
[31m-        interface ErrnoException extends Error {[m
[31m-            errno?: number | undefined;[m
[31m-            code?: string | undefined;[m
[31m-            path?: string | undefined;[m
[31m-            syscall?: string | undefined;[m
[31m-        }[m
[31m-[m
[31m-        interface ReadableStream extends EventEmitter {[m
[31m-            readable: boolean;[m
[31m-            read(size?: number): string | Buffer;[m
[31m-            setEncoding(encoding: BufferEncoding): this;[m
[31m-            pause(): this;[m
[31m-            resume(): this;[m
[31m-            isPaused(): boolean;[m
[31m-            pipe<T extends WritableStream>(destination: T, options?: { end?: boolean | undefined }): T;[m
[31m-            unpipe(destination?: WritableStream): this;[m
[31m-            unshift(chunk: string | Uint8Array, encoding?: BufferEncoding): void;[m
[31m-            wrap(oldStream: ReadableStream): this;[m
[31m-            [Symbol.asyncIterator](): AsyncIterableIterator<string | Buffer>;[m
[31m-        }[m
[31m-[m
[31m-        interface WritableStream extends EventEmitter {[m
[31m-            writable: boolean;[m
[31m-            write(buffer: Uint8Array | string, cb?: (err?: Error | null) => void): boolean;[m
[31m-            write(str: string, encoding?: BufferEncoding, cb?: (err?: Error | null) => void): boolean;[m
[31m-            end(cb?: () => void): this;[m
[31m-            end(data: string | Uint8Array, cb?: () => void): this;[m
[31m-            end(str: string, encoding?: BufferEncoding, cb?: () => void): this;[m
[31m-        }[m
[31m-[m
[31m-        interface ReadWriteStream extends ReadableStream, WritableStream {}[m
[31m-[m
[31m-        interface RefCounted {[m
[31m-            ref(): this;[m
[31m-            unref(): this;[m
[31m-        }[m
[31m-[m
[31m-        interface Dict<T> {[m
[31m-            [key: string]: T | undefined;[m
[31m-        }[m
[31m-[m
[31m-        interface ReadOnlyDict<T> {[m
[31m-            readonly [key: string]: T | undefined;[m
[31m-        }[m
[31m-[m
[31m-        interface GCFunction {[m
[31m-            (minor?: boolean): void;[m
[31m-            (options: NodeJS.GCOptions & { execution: "async" }): Promise<void>;[m
[31m-            (options: NodeJS.GCOptions): void;[m
[31m-        }[m
[31m-[m
[31m-        interface GCOptions {[m
[31m-            execution?: "sync" | "async" | undefined;[m
[31m-            flavor?: "regular" | "last-resort" | undefined;[m
[31m-            type?: "major-snapshot" | "major" | "minor" | undefined;[m
[31m-            filename?: string | undefined;[m
[31m-        }[m
[31m-[m
[31m-        /** An iterable iterator returned by the Node.js API. */[m
[31m-        interface Iterator<T, TReturn = undefined, TNext = any> extends IteratorObject<T, TReturn, TNext> {[m
[31m-            [Symbol.iterator](): NodeJS.Iterator<T, TReturn, TNext>;[m
[31m-        }[m
[32m+[m[32m    captureStackTrace(targetObject: object, constructorOpt?: Function): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @see https://v8.dev/docs/stack-trace-api#customizing-stack-traces[m
[32m+[m[32m     */[m
[32m+[m[32m    prepareStackTrace(err: Error, stackTraces: NodeJS.CallSite[]): any;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `Error.stackTraceLimit` property specifies the number of stack frames[m
[32m+[m[32m     * collected by a stack trace (whether generated by `new Error().stack` or[m
[32m+[m[32m     * `Error.captureStackTrace(obj)`).[m
[32m+[m[32m     *[m
[32m+[m[32m     * The default value is `10` but may be set to any valid JavaScript number. Changes[m
[32m+[m[32m     * will affect any stack trace captured _after_ the value has been changed.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If set to a non-number value, or set to a negative number, stack traces will[m
[32m+[m[32m     * not capture any frames.[m
[32m+[m[32m     */[m
[32m+[m[32m    stackTraceLimit: number;[m
[32m+[m[32m}[m
 [m
[31m-        /** An async iterable iterator returned by the Node.js API. */[m
[31m-        interface AsyncIterator<T, TReturn = undefined, TNext = any> extends AsyncIteratorObject<T, TReturn, TNext> {[m
[31m-            [Symbol.asyncIterator](): NodeJS.AsyncIterator<T, TReturn, TNext>;[m
[31m-        }[m
[32m+[m[32m/**[m
[32m+[m[32m * Enable this API with the `--expose-gc` CLI flag.[m
[32m+[m[32m */[m
[32m+[m[32mdeclare var gc: NodeJS.GCFunction | undefined;[m
[32m+[m
[32m+[m[32mdeclare namespace NodeJS {[m
[32m+[m[32m    interface CallSite {[m
[32m+[m[32m        getColumnNumber(): number | null;[m
[32m+[m[32m        getEnclosingColumnNumber(): number | null;[m
[32m+[m[32m        getEnclosingLineNumber(): number | null;[m
[32m+[m[32m        getEvalOrigin(): string | undefined;[m
[32m+[m[32m        getFileName(): string | null;[m
[32m+[m[32m        getFunction(): Function | undefined;[m
[32m+[m[32m        getFunctionName(): string | null;[m
[32m+[m[32m        getLineNumber(): number | null;[m
[32m+[m[32m        getMethodName(): string | null;[m
[32m+[m[32m        getPosition(): number;[m
[32m+[m[32m        getPromiseIndex(): number | null;[m
[32m+[m[32m        getScriptHash(): string;[m
[32m+[m[32m        getScriptNameOrSourceURL(): string | null;[m
[32m+[m[32m        getThis(): unknown;[m
[32m+[m[32m        getTypeName(): string | null;[m
[32m+[m[32m        isAsync(): boolean;[m
[32m+[m[32m        isConstructor(): boolean;[m
[32m+[m[32m        isEval(): boolean;[m
[32m+[m[32m        isNative(): boolean;[m
[32m+[m[32m        isPromiseAll(): boolean;[m
[32m+[m[32m        isToplevel(): boolean;[m
     }[m
 [m
[31m-    // Global DOM types[m
[31m-[m
[31m-    interface DOMException extends _DOMException {}[m
[31m-    var DOMException: typeof globalThis extends { onmessage: any; DOMException: infer T } ? T[m
[31m-        : NodeDOMExceptionConstructor;[m
[31m-[m
[31m-    // #region AbortController[m
[31m-    interface AbortController {[m
[31m-        readonly signal: AbortSignal;[m
[31m-        abort(reason?: any): void;[m
[32m+[m[32m    interface ErrnoException extends Error {[m
[32m+[m[32m        errno?: number | undefined;[m
[32m+[m[32m        code?: string | undefined;[m
[32m+[m[32m        path?: string | undefined;[m
[32m+[m[32m        syscall?: string | undefined;[m
     }[m
[31m-    var AbortController: typeof globalThis extends { onmessage: any; AbortController: infer T } ? T[m
[31m-        : {[m
[31m-            prototype: AbortController;[m
[31m-            new(): AbortController;[m
[31m-        };[m
 [m
[31m-    interface AbortSignal extends EventTarget {[m
[31m-        readonly aborted: boolean;[m
[31m-        onabort: ((this: AbortSignal, ev: Event) => any) | null;[m
[31m-        readonly reason: any;[m
[31m-        throwIfAborted(): void;[m
[32m+[m[32m    interface ReadableStream extends EventEmitter {[m
[32m+[m[32m        readable: boolean;[m
[32m+[m[32m        read(size?: number): string | Buffer;[m
[32m+[m[32m        setEncoding(encoding: BufferEncoding): this;[m
[32m+[m[32m        pause(): this;[m
[32m+[m[32m        resume(): this;[m
[32m+[m[32m        isPaused(): boolean;[m
[32m+[m[32m        pipe<T extends WritableStream>(destination: T, options?: { end?: boolean | undefined }): T;[m
[32m+[m[32m        unpipe(destination?: WritableStream): this;[m
[32m+[m[32m        unshift(chunk: string | Uint8Array, encoding?: BufferEncoding): void;[m
[32m+[m[32m        wrap(oldStream: ReadableStream): this;[m
[32m+[m[32m        [Symbol.asyncIterator](): AsyncIterableIterator<string | Buffer>;[m
     }[m
[31m-    var AbortSignal: typeof globalThis extends { onmessage: any; AbortSignal: infer T } ? T[m
[31m-        : {[m
[31m-            prototype: AbortSignal;[m
[31m-            new(): AbortSignal;[m
[31m-            abort(reason?: any): AbortSignal;[m
[31m-            any(signals: AbortSignal[]): AbortSignal;[m
[31m-            timeout(milliseconds: number): AbortSignal;[m
[31m-        };[m
[31m-    // #endregion AbortController[m
[31m-[m
[31m-    // #region Storage[m
[31m-    interface Storage extends _Storage {}[m
[31m-    // Conditional on `onabort` rather than `onmessage`, in order to exclude lib.webworker[m
[31m-    var Storage: typeof globalThis extends { onabort: any; Storage: infer T } ? T[m
[31m-        : {[m
[31m-            prototype: Storage;[m
[31m-            new(): Storage;[m
[31m-        };[m
[31m-[m
[31m-    var localStorage: Storage;[m
[31m-    var sessionStorage: Storage;[m
[31m-    // #endregion Storage[m
[31m-[m
[31m-    // #region fetch[m
[31m-    interface RequestInit extends _RequestInit {}[m
 [m
[31m-    function fetch([m
[31m-        input: string | URL | globalThis.Request,[m
[31m-        init?: RequestInit,[m
[31m-    ): Promise<Response>;[m
[31m-[m
[31m-    interface Request extends _Request {}[m
[31m-    var Request: typeof globalThis extends {[m
[31m-        onmessage: any;[m
[31m-        Request: infer T;[m
[31m-    } ? T[m
[31m-        : typeof import("undici-types").Request;[m
[32m+[m[32m    interface WritableStream extends EventEmitter {[m
[32m+[m[32m        writable: boolean;[m
[32m+[m[32m        write(buffer: Uint8Array | string, cb?: (err?: Error | null) => void): boolean;[m
[32m+[m[32m        write(str: string, encoding?: BufferEncoding, cb?: (err?: Error | null) => void): boolean;[m
[32m+[m[32m        end(cb?: () => void): this;[m
[32m+[m[32m        end(data: string | Uint8Array, cb?: () => void): this;[m
[32m+[m[32m        end(str: string, encoding?: BufferEncoding, cb?: () => void): this;[m
[32m+[m[32m    }[m
 [m
[31m-    interface ResponseInit extends _ResponseInit {}[m
[32m+[m[32m    interface ReadWriteStream extends ReadableStream, WritableStream {}[m
 [m
[31m-    interface Response extends _Response {}[m
[31m-    var Response: typeof globalThis extends {[m
[31m-        onmessage: any;[m
[31m-        Response: infer T;[m
[31m-    } ? T[m
[31m-        : typeof import("undici-types").Response;[m
[32m+[m[32m    interface RefCounted {[m
[32m+[m[32m        ref(): this;[m
[32m+[m[32m        unref(): this;[m
[32m+[m[32m    }[m
 [m
[31m-    interface FormData extends _FormData {}[m
[31m-    var FormData: typeof globalThis extends {[m
[31m-        onmessage: any;[m
[31m-        FormData: infer T;[m
[31m-    } ? T[m
[31m-        : typeof import("undici-types").FormData;[m
[32m+[m[32m    interface Dict<T> {[m
[32m+[m[32m        [key: string]: T | undefined;[m
[32m+[m[32m    }[m
 [m
[31m-    interface Headers extends _Headers {}[m
[31m-    var Headers: typeof globalThis extends {[m
[31m-        onmessage: any;[m
[31m-        Headers: infer T;[m
[31m-    } ? T[m
[31m-        : typeof import("undici-types").Headers;[m
[32m+[m[32m    interface ReadOnlyDict<T> {[m
[32m+[m[32m        readonly [key: string]: T | undefined;[m
[32m+[m[32m    }[m
 [m
[31m-    interface MessageEvent extends _MessageEvent {}[m
[31m-    var MessageEvent: typeof globalThis extends {[m
[31m-        onmessage: any;[m
[31m-        MessageEvent: infer T;[m
[31m-    } ? T[m
[31m-        : typeof import("undici-types").MessageEvent;[m
[32m+[m[32m    interface GCFunction {[m
[32m+[m[32m        (minor?: boolean): void;[m
[32m+[m[32m        (options: NodeJS.GCOptions & { execution: "async" }): Promise<void>;[m
[32m+[m[32m        (options: NodeJS.GCOptions): void;[m
[32m+[m[32m    }[m
 [m
[31m-    interface WebSocket extends _WebSocket {}[m
[31m-    var WebSocket: typeof globalThis extends { onmessage: any; WebSocket: infer T } ? T[m
[31m-        : typeof import("undici-types").WebSocket;[m
[32m+[m[32m    interface GCOptions {[m
[32m+[m[32m        execution?: "sync" | "async" | undefined;[m
[32m+[m[32m        flavor?: "regular" | "last-resort" | undefined;[m
[32m+[m[32m        type?: "major-snapshot" | "major" | "minor" | undefined;[m
[32m+[m[32m        filename?: string | undefined;[m
[32m+[m[32m    }[m
 [m
[31m-    interface EventSource extends _EventSource {}[m
[31m-    var EventSource: typeof globalThis extends { onmessage: any; EventSource: infer T } ? T[m
[31m-        : typeof import("undici-types").EventSource;[m
[32m+[m[32m    /** An iterable iterator returned by the Node.js API. */[m
[32m+[m[32m    interface Iterator<T, TReturn = undefined, TNext = any> extends IteratorObject<T, TReturn, TNext> {[m
[32m+[m[32m        [Symbol.iterator](): NodeJS.Iterator<T, TReturn, TNext>;[m
[32m+[m[32m    }[m
 [m
[31m-    interface CloseEvent extends _CloseEvent {}[m
[31m-    var CloseEvent: typeof globalThis extends { onmessage: any; CloseEvent: infer T } ? T[m
[31m-        : typeof import("undici-types").CloseEvent;[m
[31m-    // #endregion fetch[m
[32m+[m[32m    /** An async iterable iterator returned by the Node.js API. */[m
[32m+[m[32m    interface AsyncIterator<T, TReturn = undefined, TNext = any> extends AsyncIteratorObject<T, TReturn, TNext> {[m
[32m+[m[32m        [Symbol.asyncIterator](): NodeJS.AsyncIterator<T, TReturn, TNext>;[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/services/node_modules/@types/node/http.d.ts b/services/node_modules/@types/node/http.d.ts[m
[1mindex 4df8fad9..61fc93a9 100644[m
[1m--- a/services/node_modules/@types/node/http.d.ts[m
[1m+++ b/services/node_modules/@types/node/http.d.ts[m
[36m@@ -1419,6 +1419,14 @@[m [mdeclare module "http" {[m
          */[m
         destroy(error?: Error): this;[m
     }[m
[32m+[m[32m    interface ProxyEnv extends NodeJS.ProcessEnv {[m
[32m+[m[32m        HTTP_PROXY?: string | undefined;[m
[32m+[m[32m        HTTPS_PROXY?: string | undefined;[m
[32m+[m[32m        NO_PROXY?: string | undefined;[m
[32m+[m[32m        http_proxy?: string | undefined;[m
[32m+[m[32m        https_proxy?: string | undefined;[m
[32m+[m[32m        no_proxy?: string | undefined;[m
[32m+[m[32m    }[m
     interface AgentOptions extends Partial<TcpSocketConnectOpts> {[m
         /**[m
          * Keep sockets around in a pool to be used by other requests in the future. Default = false[m
[36m@@ -1450,6 +1458,22 @@[m [mdeclare module "http" {[m
          * @default `lifo`[m
          */[m
         scheduling?: "fifo" | "lifo" | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Environment variables for proxy configuration. See[m
[32m+[m[32m         * [Built-in Proxy Support](https://nodejs.org/docs/latest-v24.x/api/http.html#built-in-proxy-support) for details.[m
[32m+[m[32m         * @since v24.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        proxyEnv?: ProxyEnv | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Default port to use when the port is not specified in requests.[m
[32m+[m[32m         * @since v24.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        defaultPort?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The protocol to use for the agent.[m
[32m+[m[32m         * @since v24.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        protocol?: string | undefined;[m
     }[m
     /**[m
      * An `Agent` is responsible for managing connection persistence[m
[36m@@ -1591,7 +1615,7 @@[m [mdeclare module "http" {[m
         createConnection([m
             options: ClientRequestArgs,[m
             callback?: (err: Error | null, stream: stream.Duplex) => void,[m
[31m-        ): stream.Duplex;[m
[32m+[m[32m        ): stream.Duplex | null | undefined;[m
         /**[m
          * Called when `socket` is detached from a request and could be persisted by the`Agent`. Default behavior is to:[m
          *[m
[36m@@ -2028,18 +2052,18 @@[m [mdeclare module "http" {[m
      */[m
     const maxHeaderSize: number;[m
     /**[m
[31m-     * A browser-compatible implementation of [WebSocket](https://nodejs.org/docs/latest/api/http.html#websocket).[m
[32m+[m[32m     * A browser-compatible implementation of `WebSocket`.[m
      * @since v22.5.0[m
      */[m
[31m-    const WebSocket: import("undici-types").WebSocket;[m
[32m+[m[32m    const WebSocket: typeof import("undici-types").WebSocket;[m
     /**[m
      * @since v22.5.0[m
      */[m
[31m-    const CloseEvent: import("undici-types").CloseEvent;[m
[32m+[m[32m    const CloseEvent: typeof import("undici-types").CloseEvent;[m
     /**[m
      * @since v22.5.0[m
      */[m
[31m-    const MessageEvent: import("undici-types").MessageEvent;[m
[32m+[m[32m    const MessageEvent: typeof import("undici-types").MessageEvent;[m
 }[m
 declare module "node:http" {[m
     export * from "http";[m
[1mdiff --git a/services/node_modules/@types/node/https.d.ts b/services/node_modules/@types/node/https.d.ts[m
[1mindex a40f06b2..7518dc2a 100644[m
[1m--- a/services/node_modules/@types/node/https.d.ts[m
[1m+++ b/services/node_modules/@types/node/https.d.ts[m
[36m@@ -32,6 +32,11 @@[m [mdeclare module "https" {[m
     class Agent extends http.Agent {[m
         constructor(options?: AgentOptions);[m
         options: AgentOptions;[m
[32m+[m[32m        createConnection([m
[32m+[m[32m            options: RequestOptions,[m
[32m+[m[32m            callback?: (err: Error | null, stream: Duplex) => void,[m
[32m+[m[32m        ): Duplex | null | undefined;[m
[32m+[m[32m        getName(options?: RequestOptions): string;[m
     }[m
     interface Server<[m
         Request extends typeof http.IncomingMessage = typeof http.IncomingMessage,[m
[1mdiff --git a/services/node_modules/@types/node/index.d.ts b/services/node_modules/@types/node/index.d.ts[m
[1mindex 3b005c11..70f3eb69 100644[m
[1m--- a/services/node_modules/@types/node/index.d.ts[m
[1m+++ b/services/node_modules/@types/node/index.d.ts[m
[36m@@ -38,6 +38,12 @@[m
 [m
 // Definitions for Node.js modules that are not specific to any version of TypeScript:[m
 /// <reference path="globals.d.ts" />[m
[32m+[m[32m/// <reference path="web-globals/abortcontroller.d.ts" />[m
[32m+[m[32m/// <reference path="web-globals/domexception.d.ts" />[m
[32m+[m[32m/// <reference path="web-globals/events.d.ts" />[m
[32m+[m[32m/// <reference path="web-globals/fetch.d.ts" />[m
[32m+[m[32m/// <reference path="web-globals/navigator.d.ts" />[m
[32m+[m[32m/// <reference path="web-globals/storage.d.ts" />[m
 /// <reference path="assert.d.ts" />[m
 /// <reference path="assert/strict.d.ts" />[m
 /// <reference path="async_hooks.d.ts" />[m
[36m@@ -51,9 +57,7 @@[m
 /// <reference path="diagnostics_channel.d.ts" />[m
 /// <reference path="dns.d.ts" />[m
 /// <reference path="dns/promises.d.ts" />[m
[31m-/// <reference path="dns/promises.d.ts" />[m
 /// <reference path="domain.d.ts" />[m
[31m-/// <reference path="dom-events.d.ts" />[m
 /// <reference path="events.d.ts" />[m
 /// <reference path="fs.d.ts" />[m
 /// <reference path="fs/promises.d.ts" />[m
[36m@@ -61,6 +65,7 @@[m
 /// <reference path="http2.d.ts" />[m
 /// <reference path="https.d.ts" />[m
 /// <reference path="inspector.d.ts" />[m
[32m+[m[32m/// <reference path="inspector.generated.d.ts" />[m
 /// <reference path="module.d.ts" />[m
 /// <reference path="net.d.ts" />[m
 /// <reference path="os.d.ts" />[m
[1mdiff --git a/services/node_modules/@types/node/inspector.d.ts b/services/node_modules/@types/node/inspector.d.ts[m
[1mindex 06333e49..584daa28 100644[m
[1m--- a/services/node_modules/@types/node/inspector.d.ts[m
[1m+++ b/services/node_modules/@types/node/inspector.d.ts[m
[36m@@ -1,4204 +1,246 @@[m
[31m-// These definitions are automatically generated by the generate-inspector script.[m
[31m-// Do not edit this file directly.[m
[31m-// See scripts/generate-inspector/README.md for information on how to update the protocol definitions.[m
[31m-// Changes to the module itself should be added to the generator template (scripts/generate-inspector/inspector.d.ts.template).[m
[31m-[m
 /**[m
  * The `node:inspector` module provides an API for interacting with the V8[m
  * inspector.[m
  * @see [source](https://github.com/nodejs/node/blob/v24.x/lib/inspector.js)[m
  */[m
[31m-declare module 'inspector' {[m
[31m-    import EventEmitter = require('node:events');[m
[31m-[m
[31m-    interface InspectorNotification<T> {[m
[31m-        method: string;[m
[31m-        params: T;[m
[31m-    }[m
[31m-[m
[31m-    namespace Schema {[m
[31m-        /**[m
[31m-         * Description of the protocol domain.[m
[31m-         */[m
[31m-        interface Domain {[m
[31m-            /**[m
[31m-             * Domain name.[m
[31m-             */[m
[31m-            name: string;[m
[31m-            /**[m
[31m-             * Domain version.[m
[31m-             */[m
[31m-            version: string;[m
[31m-        }[m
[31m-        interface GetDomainsReturnType {[m
[31m-            /**[m
[31m-             * List of supported domains.[m
[31m-             */[m
[31m-            domains: Domain[];[m
[31m-        }[m
[31m-    }[m
[31m-    namespace Runtime {[m
[31m-        /**[m
[31m-         * Unique script identifier.[m
[31m-         */[m
[31m-        type ScriptId = string;[m
[31m-        /**[m
[31m-         * Unique object identifier.[m
[31m-         */[m
[31m-        type RemoteObjectId = string;[m
[31m-        /**[m
[31m-         * Primitive value which cannot be JSON-stringified.[m
[31m-         */[m
[31m-        type UnserializableValue = string;[m
[31m-        /**[m
[31m-         * Mirror object referencing original JavaScript object.[m
[31m-         */[m
[31m-        interface RemoteObject {[m
[31m-            /**[m
[31m-             * Object type.[m
[31m-             */[m
[31m-            type: string;[m
[31m-            /**[m
[31m-             * Object subtype hint. Specified for <code>object</code> type values only.[m
[31m-             */[m
[31m-            subtype?: string | undefined;[m
[31m-            /**[m
[31m-             * Object class (constructor) name. Specified for <code>object</code> type values only.[m
[31m-             */[m
[31m-            className?: string | undefined;[m
[31m-            /**[m
[31m-             * Remote object value in case of primitive values or JSON values (if it was requested).[m
[31m-             */[m
[31m-            value?: any;[m
[31m-            /**[m
[31m-             * Primitive value which can not be JSON-stringified does not have <code>value</code>, but gets this property.[m
[31m-             */[m
[31m-            unserializableValue?: UnserializableValue | undefined;[m
[31m-            /**[m
[31m-             * String representation of the object.[m
[31m-             */[m
[31m-            description?: string | undefined;[m
[31m-            /**[m
[31m-             * Unique object identifier (for non-primitive values).[m
[31m-             */[m
[31m-            objectId?: RemoteObjectId | undefined;[m
[31m-            /**[m
[31m-             * Preview containing abbreviated property values. Specified for <code>object</code> type values only.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            preview?: ObjectPreview | undefined;[m
[31m-            /**[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            customPreview?: CustomPreview | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        interface CustomPreview {[m
[31m-            header: string;[m
[31m-            hasBody: boolean;[m
[31m-            formatterObjectId: RemoteObjectId;[m
[31m-            bindRemoteObjectFunctionId: RemoteObjectId;[m
[31m-            configObjectId?: RemoteObjectId | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Object containing abbreviated remote object value.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        interface ObjectPreview {[m
[31m-            /**[m
[31m-             * Object type.[m
[31m-             */[m
[31m-            type: string;[m
[31m-            /**[m
[31m-             * Object subtype hint. Specified for <code>object</code> type values only.[m
[31m-             */[m
[31m-            subtype?: string | undefined;[m
[31m-            /**[m
[31m-             * String representation of the object.[m
[31m-             */[m
[31m-            description?: string | undefined;[m
[31m-            /**[m
[31m-             * True iff some of the properties or entries of the original object did not fit.[m
[31m-             */[m
[31m-            overflow: boolean;[m
[31m-            /**[m
[31m-             * List of the properties.[m
[31m-             */[m
[31m-            properties: PropertyPreview[];[m
[31m-            /**[m
[31m-             * List of the entries. Specified for <code>map</code> and <code>set</code> subtype values only.[m
[31m-             */[m
[31m-            entries?: EntryPreview[] | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        interface PropertyPreview {[m
[31m-            /**[m
[31m-             * Property name.[m
[31m-             */[m
[31m-            name: string;[m
[31m-            /**[m
[31m-             * Object type. Accessor means that the property itself is an accessor property.[m
[31m-             */[m
[31m-            type: string;[m
[31m-            /**[m
[31m-             * User-friendly property value string.[m
[31m-             */[m
[31m-            value?: string | undefined;[m
[31m-            /**[m
[31m-             * Nested value preview.[m
[31m-             */[m
[31m-            valuePreview?: ObjectPreview | undefined;[m
[31m-            /**[m
[31m-             * Object subtype hint. Specified for <code>object</code> type values only.[m
[31m-             */[m
[31m-            subtype?: string | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        interface EntryPreview {[m
[31m-            /**[m
[31m-             * Preview of the key. Specified for map-like collection entries.[m
[31m-             */[m
[31m-            key?: ObjectPreview | undefined;[m
[31m-            /**[m
[31m-             * Preview of the value.[m
[31m-             */[m
[31m-            value: ObjectPreview;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Object property descriptor.[m
[31m-         */[m
[31m-        interface PropertyDescriptor {[m
[31m-            /**[m
[31m-             * Property name or symbol description.[m
[31m-             */[m
[31m-            name: string;[m
[31m-            /**[m
[31m-             * The value associated with the property.[m
[31m-             */[m
[31m-            value?: RemoteObject | undefined;[m
[31m-            /**[m
[31m-             * True if the value associated with the property may be changed (data descriptors only).[m
[31m-             */[m
[31m-            writable?: boolean | undefined;[m
[31m-            /**[m
[31m-             * A function which serves as a getter for the property, or <code>undefined</code> if there is no getter (accessor descriptors only).[m
[31m-             */[m
[31m-            get?: RemoteObject | undefined;[m
[31m-            /**[m
[31m-             * A function which serves as a setter for the property, or <code>undefined</code> if there is no setter (accessor descriptors only).[m
[31m-             */[m
[31m-            set?: RemoteObject | undefined;[m
[31m-            /**[m
[31m-             * True if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.[m
[31m-             */[m
[31m-            configurable: boolean;[m
[31m-            /**[m
[31m-             * True if this property shows up during enumeration of the properties on the corresponding object.[m
[31m-             */[m
[31m-            enumerable: boolean;[m
[31m-            /**[m
[31m-             * True if the result was thrown during the evaluation.[m
[31m-             */[m
[31m-            wasThrown?: boolean | undefined;[m
[31m-            /**[m
[31m-             * True if the property is owned for the object.[m
[31m-             */[m
[31m-            isOwn?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Property symbol object, if the property is of the <code>symbol</code> type.[m
[31m-             */[m
[31m-            symbol?: RemoteObject | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Object internal property descriptor. This property isn't normally visible in JavaScript code.[m
[31m-         */[m
[31m-        interface InternalPropertyDescriptor {[m
[31m-            /**[m
[31m-             * Conventional property name.[m
[31m-             */[m
[31m-            name: string;[m
[31m-            /**[m
[31m-             * The value associated with the property.[m
[31m-             */[m
[31m-            value?: RemoteObject | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Represents function call argument. Either remote object id <code>objectId</code>, primitive <code>value</code>, unserializable primitive value or neither of (for undefined) them should be specified.[m
[31m-         */[m
[31m-        interface CallArgument {[m
[31m-            /**[m
[31m-             * Primitive value or serializable javascript object.[m
[31m-             */[m
[31m-            value?: any;[m
[31m-            /**[m
[31m-             * Primitive value which can not be JSON-stringified.[m
[31m-             */[m
[31m-            unserializableValue?: UnserializableValue | undefined;[m
[31m-            /**[m
[31m-             * Remote object handle.[m
[31m-             */[m
[31m-            objectId?: RemoteObjectId | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Id of an execution context.[m
[31m-         */[m
[31m-        type ExecutionContextId = number;[m
[31m-        /**[m
[31m-         * Description of an isolated world.[m
[31m-         */[m
[31m-        interface ExecutionContextDescription {[m
[31m-            /**[m
[31m-             * Unique id of the execution context. It can be used to specify in which execution context script evaluation should be performed.[m
[31m-             */[m
[31m-            id: ExecutionContextId;[m
[31m-            /**[m
[31m-             * Execution context origin.[m
[31m-             */[m
[31m-            origin: string;[m
[31m-            /**[m
[31m-             * Human readable name describing given context.[m
[31m-             */[m
[31m-            name: string;[m
[31m-            /**[m
[31m-             * Embedder-specific auxiliary data.[m
[31m-             */[m
[31m-            auxData?: object | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Detailed information about exception (or error) that was thrown during script compilation or execution.[m
[31m-         */[m
[31m-        interface ExceptionDetails {[m
[31m-            /**[m
[31m-             * Exception id.[m
[31m-             */[m
[31m-            exceptionId: number;[m
[31m-            /**[m
[31m-             * Exception text, which should be used together with exception object when available.[m
[31m-             */[m
[31m-            text: string;[m
[31m-            /**[m
[31m-             * Line number of the exception location (0-based).[m
[31m-             */[m
[31m-            lineNumber: number;[m
[31m-            /**[m
[31m-             * Column number of the exception location (0-based).[m
[31m-             */[m
[31m-            columnNumber: number;[m
[31m-            /**[m
[31m-             * Script ID of the exception location.[m
[31m-             */[m
[31m-            scriptId?: ScriptId | undefined;[m
[31m-            /**[m
[31m-             * URL of the exception location, to be used when the script was not reported.[m
[31m-             */[m
[31m-            url?: string | undefined;[m
[31m-            /**[m
[31m-             * JavaScript stack trace if available.[m
[31m-             */[m
[31m-            stackTrace?: StackTrace | undefined;[m
[31m-            /**[m
[31m-             * Exception object if available.[m
[31m-             */[m
[31m-            exception?: RemoteObject | undefined;[m
[31m-            /**[m
[31m-             * Identifier of the context where exception happened.[m
[31m-             */[m
[31m-            executionContextId?: ExecutionContextId | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Number of milliseconds since epoch.[m
[31m-         */[m
[31m-        type Timestamp = number;[m
[31m-        /**[m
[31m-         * Stack entry for runtime errors and assertions.[m
[31m-         */[m
[31m-        interface CallFrame {[m
[31m-            /**[m
[31m-             * JavaScript function name.[m
[31m-             */[m
[31m-            functionName: string;[m
[31m-            /**[m
[31m-             * JavaScript script id.[m
[31m-             */[m
[31m-            scriptId: ScriptId;[m
[31m-            /**[m
[31m-             * JavaScript script name or url.[m
[31m-             */[m
[31m-            url: string;[m
[31m-            /**[m
[31m-             * JavaScript script line number (0-based).[m
[31m-             */[m
[31m-            lineNumber: number;[m
[31m-            /**[m
[31m-             * JavaScript script column number (0-based).[m
[31m-             */[m
[31m-            columnNumber: number;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Call frames for assertions or error messages.[m
[31m-         */[m
[31m-        interface StackTrace {[m
[31m-            /**[m
[31m-             * String label of this stack trace. For async traces this may be a name of the function that initiated the async call.[m
[31m-             */[m
[31m-            description?: string | undefined;[m
[31m-            /**[m
[31m-             * JavaScript function name.[m
[31m-             */[m
[31m-            callFrames: CallFrame[];[m
[31m-            /**[m
[31m-             * Asynchronous JavaScript stack trace that preceded this stack, if available.[m
[31m-             */[m
[31m-            parent?: StackTrace | undefined;[m
[31m-            /**[m
[31m-             * Asynchronous JavaScript stack trace that preceded this stack, if available.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            parentId?: StackTraceId | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Unique identifier of current debugger.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        type UniqueDebuggerId = string;[m
[31m-        /**[m
[31m-         * If <code>debuggerId</code> is set stack trace comes from another debugger and can be resolved there. This allows to track cross-debugger calls. See <code>Runtime.StackTrace</code> and <code>Debugger.paused</code> for usages.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        interface StackTraceId {[m
[31m-            id: string;[m
[31m-            debuggerId?: UniqueDebuggerId | undefined;[m
[31m-        }[m
[31m-        interface EvaluateParameterType {[m
[31m-            /**[m
[31m-             * Expression to evaluate.[m
[31m-             */[m
[31m-            expression: string;[m
[31m-            /**[m
[31m-             * Symbolic group name that can be used to release multiple objects.[m
[31m-             */[m
[31m-            objectGroup?: string | undefined;[m
[31m-            /**[m
[31m-             * Determines whether Command Line API should be available during the evaluation.[m
[31m-             */[m
[31m-            includeCommandLineAPI?: boolean | undefined;[m
[31m-            /**[m
[31m-             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.[m
[31m-             */[m
[31m-            silent?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Specifies in which execution context to perform evaluation. If the parameter is omitted the evaluation will be performed in the context of the inspected page.[m
[31m-             */[m
[31m-            contextId?: ExecutionContextId | undefined;[m
[31m-            /**[m
[31m-             * Whether the result is expected to be a JSON object that should be sent by value.[m
[31m-             */[m
[31m-            returnByValue?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether preview should be generated for the result.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            generatePreview?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether execution should be treated as initiated by user in the UI.[m
[31m-             */[m
[31m-            userGesture?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.[m
[31m-             */[m
[31m-            awaitPromise?: boolean | undefined;[m
[31m-        }[m
[31m-        interface AwaitPromiseParameterType {[m
[31m-            /**[m
[31m-             * Identifier of the promise.[m
[31m-             */[m
[31m-            promiseObjectId: RemoteObjectId;[m
[31m-            /**[m
[31m-             * Whether the result is expected to be a JSON object that should be sent by value.[m
[31m-             */[m
[31m-            returnByValue?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether preview should be generated for the result.[m
[31m-             */[m
[31m-            generatePreview?: boolean | undefined;[m
[31m-        }[m
[31m-        interface CallFunctionOnParameterType {[m
[31m-            /**[m
[31m-             * Declaration of the function to call.[m
[31m-             */[m
[31m-            functionDeclaration: string;[m
[31m-            /**[m
[31m-             * Identifier of the object to call function on. Either objectId or executionContextId should be specified.[m
[31m-             */[m
[31m-            objectId?: RemoteObjectId | undefined;[m
[31m-            /**[m
[31m-             * Call arguments. All call arguments must belong to the same JavaScript world as the target object.[m
[31m-             */[m
[31m-            arguments?: CallArgument[] | undefined;[m
[31m-            /**[m
[31m-             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.[m
[31m-             */[m
[31m-            silent?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether the result is expected to be a JSON object which should be sent by value.[m
[31m-             */[m
[31m-            returnByValue?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether preview should be generated for the result.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            generatePreview?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether execution should be treated as initiated by user in the UI.[m
[31m-             */[m
[31m-            userGesture?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.[m
[31m-             */[m
[31m-            awaitPromise?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Specifies execution context which global object will be used to call function on. Either executionContextId or objectId should be specified.[m
[31m-             */[m
[31m-            executionContextId?: ExecutionContextId | undefined;[m
[31m-            /**[m
[31m-             * Symbolic group name that can be used to release multiple objects. If objectGroup is not specified and objectId is, objectGroup will be inherited from object.[m
[31m-             */[m
[31m-            objectGroup?: string | undefined;[m
[31m-        }[m
[31m-        interface GetPropertiesParameterType {[m
[31m-            /**[m
[31m-             * Identifier of the object to return properties for.[m
[31m-             */[m
[31m-            objectId: RemoteObjectId;[m
[31m-            /**[m
[31m-             * If true, returns properties belonging only to the element itself, not to its prototype chain.[m
[31m-             */[m
[31m-            ownProperties?: boolean | undefined;[m
[31m-            /**[m
[31m-             * If true, returns accessor properties (with getter/setter) only; internal properties are not returned either.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            accessorPropertiesOnly?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether preview should be generated for the results.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            generatePreview?: boolean | undefined;[m
[31m-        }[m
[31m-        interface ReleaseObjectParameterType {[m
[31m-            /**[m
[31m-             * Identifier of the object to release.[m
[31m-             */[m
[31m-            objectId: RemoteObjectId;[m
[31m-        }[m
[31m-        interface ReleaseObjectGroupParameterType {[m
[31m-            /**[m
[31m-             * Symbolic object group name.[m
[31m-             */[m
[31m-            objectGroup: string;[m
[31m-        }[m
[31m-        interface SetCustomObjectFormatterEnabledParameterType {[m
[31m-            enabled: boolean;[m
[31m-        }[m
[31m-        interface CompileScriptParameterType {[m
[31m-            /**[m
[31m-             * Expression to compile.[m
[31m-             */[m
[31m-            expression: string;[m
[31m-            /**[m
[31m-             * Source url to be set for the script.[m
[31m-             */[m
[31m-            sourceURL: string;[m
[31m-            /**[m
[31m-             * Specifies whether the compiled script should be persisted.[m
[31m-             */[m
[31m-            persistScript: boolean;[m
[31m-            /**[m
[31m-             * Specifies in which execution context to perform script run. If the parameter is omitted the evaluation will be performed in the context of the inspected page.[m
[31m-             */[m
[31m-            executionContextId?: ExecutionContextId | undefined;[m
[31m-        }[m
[31m-        interface RunScriptParameterType {[m
[31m-            /**[m
[31m-             * Id of the script to run.[m
[31m-             */[m
[31m-            scriptId: ScriptId;[m
[31m-            /**[m
[31m-             * Specifies in which execution context to perform script run. If the parameter is omitted the evaluation will be performed in the context of the inspected page.[m
[31m-             */[m
[31m-            executionContextId?: ExecutionContextId | undefined;[m
[31m-            /**[m
[31m-             * Symbolic group name that can be used to release multiple objects.[m
[31m-             */[m
[31m-            objectGroup?: string | undefined;[m
[31m-            /**[m
[31m-             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.[m
[31m-             */[m
[31m-            silent?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Determines whether Command Line API should be available during the evaluation.[m
[31m-             */[m
[31m-            includeCommandLineAPI?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether the result is expected to be a JSON object which should be sent by value.[m
[31m-             */[m
[31m-            returnByValue?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether preview should be generated for the result.[m
[31m-             */[m
[31m-            generatePreview?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.[m
[31m-             */[m
[31m-            awaitPromise?: boolean | undefined;[m
[31m-        }[m
[31m-        interface QueryObjectsParameterType {[m
[31m-            /**[m
[31m-             * Identifier of the prototype to return objects for.[m
[31m-             */[m
[31m-            prototypeObjectId: RemoteObjectId;[m
[31m-        }[m
[31m-        interface GlobalLexicalScopeNamesParameterType {[m
[31m-            /**[m
[31m-             * Specifies in which execution context to lookup global scope variables.[m
[31m-             */[m
[31m-            executionContextId?: ExecutionContextId | undefined;[m
[31m-        }[m
[31m-        interface EvaluateReturnType {[m
[31m-            /**[m
[31m-             * Evaluation result.[m
[31m-             */[m
[31m-            result: RemoteObject;[m
[31m-            /**[m
[31m-             * Exception details.[m
[31m-             */[m
[31m-            exceptionDetails?: ExceptionDetails | undefined;[m
[31m-        }[m
[31m-        interface AwaitPromiseReturnType {[m
[31m-            /**[m
[31m-             * Promise result. Will contain rejected value if promise was rejected.[m
[31m-             */[m
[31m-            result: RemoteObject;[m
[31m-            /**[m
[31m-             * Exception details if stack strace is available.[m
[31m-             */[m
[31m-            exceptionDetails?: ExceptionDetails | undefined;[m
[31m-        }[m
[31m-        interface CallFunctionOnReturnType {[m
[31m-            /**[m
[31m-             * Call result.[m
[31m-             */[m
[31m-            result: RemoteObject;[m
[31m-            /**[m
[31m-             * Exception details.[m
[31m-             */[m
[31m-            exceptionDetails?: ExceptionDetails | undefined;[m
[31m-        }[m
[31m-        interface GetPropertiesReturnType {[m
[31m-            /**[m
[31m-             * Object properties.[m
[31m-             */[m
[31m-            result: PropertyDescriptor[];[m
[31m-            /**[m
[31m-             * Internal object properties (only of the element itself).[m
[31m-             */[m
[31m-            internalProperties?: InternalPropertyDescriptor[] | undefined;[m
[31m-            /**[m
[31m-             * Exception details.[m
[31m-             */[m
[31m-            exceptionDetails?: ExceptionDetails | undefined;[m
[31m-        }[m
[31m-        interface CompileScriptReturnType {[m
[31m-            /**[m
[31m-             * Id of the script.[m
[31m-             */[m
[31m-            scriptId?: ScriptId | undefined;[m
[31m-            /**[m
[31m-             * Exception details.[m
[31m-             */[m
[31m-            exceptionDetails?: ExceptionDetails | undefined;[m
[31m-        }[m
[31m-        interface RunScriptReturnType {[m
[31m-            /**[m
[31m-             * Run result.[m
[31m-             */[m
[31m-            result: RemoteObject;[m
[31m-            /**[m
[31m-             * Exception details.[m
[31m-             */[m
[31m-            exceptionDetails?: ExceptionDetails | undefined;[m
[31m-        }[m
[31m-        interface QueryObjectsReturnType {[m
[31m-            /**[m
[31m-             * Array with objects.[m
[31m-             */[m
[31m-            objects: RemoteObject;[m
[31m-        }[m
[31m-        interface GlobalLexicalScopeNamesReturnType {[m
[31m-            names: string[];[m
[31m-        }[m
[31m-        interface ExecutionContextCreatedEventDataType {[m
[31m-            /**[m
[31m-             * A newly created execution context.[m
[31m-             */[m
[31m-            context: ExecutionContextDescription;[m
[31m-        }[m
[31m-        interface ExecutionContextDestroyedEventDataType {[m
[31m-            /**[m
[31m-             * Id of the destroyed context[m
[31m-             */[m
[31m-            executionContextId: ExecutionContextId;[m
[31m-        }[m
[31m-        interface ExceptionThrownEventDataType {[m
[31m-            /**[m
[31m-             * Timestamp of the exception.[m
[31m-             */[m
[31m-            timestamp: Timestamp;[m
[31m-            exceptionDetails: ExceptionDetails;[m
[31m-        }[m
[31m-        interface ExceptionRevokedEventDataType {[m
[31m-            /**[m
[31m-             * Reason describing why exception was revoked.[m
[31m-             */[m
[31m-            reason: string;[m
[31m-            /**[m
[31m-             * The id of revoked exception, as reported in <code>exceptionThrown</code>.[m
[31m-             */[m
[31m-            exceptionId: number;[m
[31m-        }[m
[31m-        interface ConsoleAPICalledEventDataType {[m
[31m-            /**[m
[31m-             * Type of the call.[m
[31m-             */[m
[31m-            type: string;[m
[31m-            /**[m
[31m-             * Call arguments.[m
[31m-             */[m
[31m-            args: RemoteObject[];[m
[31m-            /**[m
[31m-             * Identifier of the context where the call was made.[m
[31m-             */[m
[31m-            executionContextId: ExecutionContextId;[m
[31m-            /**[m
[31m-             * Call timestamp.[m
[31m-             */[m
[31m-            timestamp: Timestamp;[m
[31m-            /**[m
[31m-             * Stack trace captured when the call was made.[m
[31m-             */[m
[31m-            stackTrace?: StackTrace | undefined;[m
[31m-            /**[m
[31m-             * Console context descriptor for calls on non-default console context (not console.*): 'anonymous#unique-logger-id' for call on unnamed context, 'name#unique-logger-id' for call on named context.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            context?: string | undefined;[m
[31m-        }[m
[31m-        interface InspectRequestedEventDataType {[m
[31m-            object: RemoteObject;[m
[31m-            hints: object;[m
[31m-        }[m
[31m-    }[m
[31m-    namespace Debugger {[m
[31m-        /**[m
[31m-         * Breakpoint identifier.[m
[31m-         */[m
[31m-        type BreakpointId = string;[m
[31m-        /**[m
[31m-         * Call frame identifier.[m
[31m-         */[m
[31m-        type CallFrameId = string;[m
[31m-        /**[m
[31m-         * Location in the source code.[m
[31m-         */[m
[31m-        interface Location {[m
[31m-            /**[m
[31m-             * Script identifier as reported in the <code>Debugger.scriptParsed</code>.[m
[31m-             */[m
[31m-            scriptId: Runtime.ScriptId;[m
[31m-            /**[m
[31m-             * Line number in the script (0-based).[m
[31m-             */[m
[31m-            lineNumber: number;[m
[31m-            /**[m
[31m-             * Column number in the script (0-based).[m
[31m-             */[m
[31m-            columnNumber?: number | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Location in the source code.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        interface ScriptPosition {[m
[31m-            lineNumber: number;[m
[31m-            columnNumber: number;[m
[31m-        }[m
[31m-        /**[m
[31m-         * JavaScript call frame. Array of call frames form the call stack.[m
[31m-         */[m
[31m-        interface CallFrame {[m
[31m-            /**[m
[31m-             * Call frame identifier. This identifier is only valid while the virtual machine is paused.[m
[31m-             */[m
[31m-            callFrameId: CallFrameId;[m
[31m-            /**[m
[31m-             * Name of the JavaScript function called on this call frame.[m
[31m-             */[m
[31m-            functionName: string;[m
[31m-            /**[m
[31m-             * Location in the source code.[m
[31m-             */[m
[31m-            functionLocation?: Location | undefined;[m
[31m-            /**[m
[31m-             * Location in the source code.[m
[31m-             */[m
[31m-            location: Location;[m
[31m-            /**[m
[31m-             * JavaScript script name or url.[m
[31m-             */[m
[31m-            url: string;[m
[31m-            /**[m
[31m-             * Scope chain for this call frame.[m
[31m-             */[m
[31m-            scopeChain: Scope[];[m
[31m-            /**[m
[31m-             * <code>this</code> object for this call frame.[m
[31m-             */[m
[31m-            this: Runtime.RemoteObject;[m
[31m-            /**[m
[31m-             * The value being returned, if the function is at return point.[m
[31m-             */[m
[31m-            returnValue?: Runtime.RemoteObject | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Scope description.[m
[31m-         */[m
[31m-        interface Scope {[m
[31m-            /**[m
[31m-             * Scope type.[m
[31m-             */[m
[31m-            type: string;[m
[31m-            /**[m
[31m-             * Object representing the scope. For <code>global</code> and <code>with</code> scopes it represents the actual object; for the rest of the scopes, it is artificial transient object enumerating scope variables as its properties.[m
[31m-             */[m
[31m-            object: Runtime.RemoteObject;[m
[31m-            name?: string | undefined;[m
[31m-            /**[m
[31m-             * Location in the source code where scope starts[m
[31m-             */[m
[31m-            startLocation?: Location | undefined;[m
[31m-            /**[m
[31m-             * Location in the source code where scope ends[m
[31m-             */[m
[31m-            endLocation?: Location | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Search match for resource.[m
[31m-         */[m
[31m-        interface SearchMatch {[m
[31m-            /**[m
[31m-             * Line number in resource content.[m
[31m-             */[m
[31m-            lineNumber: number;[m
[31m-            /**[m
[31m-             * Line with match content.[m
[31m-             */[m
[31m-            lineContent: string;[m
[31m-        }[m
[31m-        interface BreakLocation {[m
[31m-            /**[m
[31m-             * Script identifier as reported in the <code>Debugger.scriptParsed</code>.[m
[31m-             */[m
[31m-            scriptId: Runtime.ScriptId;[m
[31m-            /**[m
[31m-             * Line number in the script (0-based).[m
[31m-             */[m
[31m-            lineNumber: number;[m
[31m-            /**[m
[31m-             * Column number in the script (0-based).[m
[31m-             */[m
[31m-            columnNumber?: number | undefined;[m
[31m-            type?: string | undefined;[m
[31m-        }[m
[31m-        interface SetBreakpointsActiveParameterType {[m
[31m-            /**[m
[31m-             * New value for breakpoints active state.[m
[31m-             */[m
[31m-            active: boolean;[m
[31m-        }[m
[31m-        interface SetSkipAllPausesParameterType {[m
[31m-            /**[m
[31m-             * New value for skip pauses state.[m
[31m-             */[m
[31m-            skip: boolean;[m
[31m-        }[m
[31m-        interface SetBreakpointByUrlParameterType {[m
[31m-            /**[m
[31m-             * Line number to set breakpoint at.[m
[31m-             */[m
[31m-            lineNumber: number;[m
[31m-            /**[m
[31m-             * URL of the resources to set breakpoint on.[m
[31m-             */[m
[31m-            url?: string | undefined;[m
[31m-            /**[m
[31m-             * Regex pattern for the URLs of the resources to set breakpoints on. Either <code>url</code> or <code>urlRegex</code> must be specified.[m
[31m-             */[m
[31m-            urlRegex?: string | undefined;[m
[31m-            /**[m
[31m-             * Script hash of the resources to set breakpoint on.[m
[31m-             */[m
[31m-            scriptHash?: string | undefined;[m
[31m-            /**[m
[31m-             * Offset in the line to set breakpoint at.[m
[31m-             */[m
[31m-            columnNumber?: number | undefined;[m
[31m-            /**[m
[31m-             * Expression to use as a breakpoint condition. When specified, debugger will only stop on the breakpoint if this expression evaluates to true.[m
[31m-             */[m
[31m-            condition?: string | undefined;[m
[31m-        }[m
[31m-        interface SetBreakpointParameterType {[m
[31m-            /**[m
[31m-             * Location to set breakpoint in.[m
[31m-             */[m
[31m-            location: Location;[m
[31m-            /**[m
[31m-             * Expression to use as a breakpoint condition. When specified, debugger will only stop on the breakpoint if this expression evaluates to true.[m
[31m-             */[m
[31m-            condition?: string | undefined;[m
[31m-        }[m
[31m-        interface RemoveBreakpointParameterType {[m
[31m-            breakpointId: BreakpointId;[m
[31m-        }[m
[31m-        interface GetPossibleBreakpointsParameterType {[m
[31m-            /**[m
[31m-             * Start of range to search possible breakpoint locations in.[m
[31m-             */[m
[31m-            start: Location;[m
[31m-            /**[m
[31m-             * End of range to search possible breakpoint locations in (excluding). When not specified, end of scripts is used as end of range.[m
[31m-             */[m
[31m-            end?: Location | undefined;[m
[31m-            /**[m
[31m-             * Only consider locations which are in the same (non-nested) function as start.[m
[31m-             */[m
[31m-            restrictToFunction?: boolean | undefined;[m
[31m-        }[m
[31m-        interface ContinueToLocationParameterType {[m
[31m-            /**[m
[31m-             * Location to continue to.[m
[31m-             */[m
[31m-            location: Location;[m
[31m-            targetCallFrames?: string | undefined;[m
[31m-        }[m
[31m-        interface PauseOnAsyncCallParameterType {[m
[31m-            /**[m
[31m-             * Debugger will pause when async call with given stack trace is started.[m
[31m-             */[m
[31m-            parentStackTraceId: Runtime.StackTraceId;[m
[31m-        }[m
[31m-        interface StepIntoParameterType {[m
[31m-            /**[m
[31m-             * Debugger will issue additional Debugger.paused notification if any async task is scheduled before next pause.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            breakOnAsyncCall?: boolean | undefined;[m
[31m-        }[m
[31m-        interface GetStackTraceParameterType {[m
[31m-            stackTraceId: Runtime.StackTraceId;[m
[31m-        }[m
[31m-        interface SearchInContentParameterType {[m
[31m-            /**[m
[31m-             * Id of the script to search in.[m
[31m-             */[m
[31m-            scriptId: Runtime.ScriptId;[m
[31m-            /**[m
[31m-             * String to search for.[m
[31m-             */[m
[31m-            query: string;[m
[31m-            /**[m
[31m-             * If true, search is case sensitive.[m
[31m-             */[m
[31m-            caseSensitive?: boolean | undefined;[m
[31m-            /**[m
[31m-             * If true, treats string parameter as regex.[m
[31m-             */[m
[31m-            isRegex?: boolean | undefined;[m
[31m-        }[m
[31m-        interface SetScriptSourceParameterType {[m
[31m-            /**[m
[31m-             * Id of the script to edit.[m
[31m-             */[m
[31m-            scriptId: Runtime.ScriptId;[m
[31m-            /**[m
[31m-             * New content of the script.[m
[31m-             */[m
[31m-            scriptSource: string;[m
[31m-            /**[m
[31m-             *  If true the change will not actually be applied. Dry run may be used to get result description without actually modifying the code.[m
[31m-             */[m
[31m-            dryRun?: boolean | undefined;[m
[31m-        }[m
[31m-        interface RestartFrameParameterType {[m
[31m-            /**[m
[31m-             * Call frame identifier to evaluate on.[m
[31m-             */[m
[31m-            callFrameId: CallFrameId;[m
[31m-        }[m
[31m-        interface GetScriptSourceParameterType {[m
[31m-            /**[m
[31m-             * Id of the script to get source for.[m
[31m-             */[m
[31m-            scriptId: Runtime.ScriptId;[m
[31m-        }[m
[31m-        interface SetPauseOnExceptionsParameterType {[m
[31m-            /**[m
[31m-             * Pause on exceptions mode.[m
[31m-             */[m
[31m-            state: string;[m
[31m-        }[m
[31m-        interface EvaluateOnCallFrameParameterType {[m
[31m-            /**[m
[31m-             * Call frame identifier to evaluate on.[m
[31m-             */[m
[31m-            callFrameId: CallFrameId;[m
[31m-            /**[m
[31m-             * Expression to evaluate.[m
[31m-             */[m
[31m-            expression: string;[m
[31m-            /**[m
[31m-             * String object group name to put result into (allows rapid releasing resulting object handles using <code>releaseObjectGroup</code>).[m
[31m-             */[m
[31m-            objectGroup?: string | undefined;[m
[31m-            /**[m
[31m-             * Specifies whether command line API should be available to the evaluated expression, defaults to false.[m
[31m-             */[m
[31m-            includeCommandLineAPI?: boolean | undefined;[m
[31m-            /**[m
[31m-             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.[m
[31m-             */[m
[31m-            silent?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether the result is expected to be a JSON object that should be sent by value.[m
[31m-             */[m
[31m-            returnByValue?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether preview should be generated for the result.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            generatePreview?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Whether to throw an exception if side effect cannot be ruled out during evaluation.[m
[31m-             */[m
[31m-            throwOnSideEffect?: boolean | undefined;[m
[31m-        }[m
[31m-        interface SetVariableValueParameterType {[m
[31m-            /**[m
[31m-             * 0-based number of scope as was listed in scope chain. Only 'local', 'closure' and 'catch' scope types are allowed. Other scopes could be manipulated manually.[m
[31m-             */[m
[31m-            scopeNumber: number;[m
[31m-            /**[m
[31m-             * Variable name.[m
[31m-             */[m
[31m-            variableName: string;[m
[31m-            /**[m
[31m-             * New variable value.[m
[31m-             */[m
[31m-            newValue: Runtime.CallArgument;[m
[31m-            /**[m
[31m-             * Id of callframe that holds variable.[m
[31m-             */[m
[31m-            callFrameId: CallFrameId;[m
[31m-        }[m
[31m-        interface SetReturnValueParameterType {[m
[31m-            /**[m
[31m-             * New return value.[m
[31m-             */[m
[31m-            newValue: Runtime.CallArgument;[m
[31m-        }[m
[31m-        interface SetAsyncCallStackDepthParameterType {[m
[31m-            /**[m
[31m-             * Maximum depth of async call stacks. Setting to <code>0</code> will effectively disable collecting async call stacks (default).[m
[31m-             */[m
[31m-            maxDepth: number;[m
[31m-        }[m
[31m-        interface SetBlackboxPatternsParameterType {[m
[31m-            /**[m
[31m-             * Array of regexps that will be used to check script url for blackbox state.[m
[31m-             */[m
[31m-            patterns: string[];[m
[31m-        }[m
[31m-        interface SetBlackboxedRangesParameterType {[m
[31m-            /**[m
[31m-             * Id of the script.[m
[31m-             */[m
[31m-            scriptId: Runtime.ScriptId;[m
[31m-            positions: ScriptPosition[];[m
[31m-        }[m
[31m-        interface EnableReturnType {[m
[31m-            /**[m
[31m-             * Unique identifier of the debugger.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            debuggerId: Runtime.UniqueDebuggerId;[m
[31m-        }[m
[31m-        interface SetBreakpointByUrlReturnType {[m
[31m-            /**[m
[31m-             * Id of the created breakpoint for further reference.[m
[31m-             */[m
[31m-            breakpointId: BreakpointId;[m
[31m-            /**[m
[31m-             * List of the locations this breakpoint resolved into upon addition.[m
[31m-             */[m
[31m-            locations: Location[];[m
[31m-        }[m
[31m-        interface SetBreakpointReturnType {[m
[31m-            /**[m
[31m-             * Id of the created breakpoint for further reference.[m
[31m-             */[m
[31m-            breakpointId: BreakpointId;[m
[31m-            /**[m
[31m-             * Location this breakpoint resolved into.[m
[31m-             */[m
[31m-            actualLocation: Location;[m
[31m-        }[m
[31m-        interface GetPossibleBreakpointsReturnType {[m
[31m-            /**[m
[31m-             * List of the possible breakpoint locations.[m
[31m-             */[m
[31m-            locations: BreakLocation[];[m
[31m-        }[m
[31m-        interface GetStackTraceReturnType {[m
[31m-            stackTrace: Runtime.StackTrace;[m
[31m-        }[m
[31m-        interface SearchInContentReturnType {[m
[31m-            /**[m
[31m-             * List of search matches.[m
[31m-             */[m
[31m-            result: SearchMatch[];[m
[31m-        }[m
[31m-        interface SetScriptSourceReturnType {[m
[31m-            /**[m
[31m-             * New stack trace in case editing has happened while VM was stopped.[m
[31m-             */[m
[31m-            callFrames?: CallFrame[] | undefined;[m
[31m-            /**[m
[31m-             * Whether current call stack  was modified after applying the changes.[m
[31m-             */[m
[31m-            stackChanged?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Async stack trace, if any.[m
[31m-             */[m
[31m-            asyncStackTrace?: Runtime.StackTrace | undefined;[m
[31m-            /**[m
[31m-             * Async stack trace, if any.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            asyncStackTraceId?: Runtime.StackTraceId | undefined;[m
[31m-            /**[m
[31m-             * Exception details if any.[m
[31m-             */[m
[31m-            exceptionDetails?: Runtime.ExceptionDetails | undefined;[m
[31m-        }[m
[31m-        interface RestartFrameReturnType {[m
[31m-            /**[m
[31m-             * New stack trace.[m
[31m-             */[m
[31m-            callFrames: CallFrame[];[m
[31m-            /**[m
[31m-             * Async stack trace, if any.[m
[31m-             */[m
[31m-            asyncStackTrace?: Runtime.StackTrace | undefined;[m
[31m-            /**[m
[31m-             * Async stack trace, if any.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            asyncStackTraceId?: Runtime.StackTraceId | undefined;[m
[31m-        }[m
[31m-        interface GetScriptSourceReturnType {[m
[31m-            /**[m
[31m-             * Script source.[m
[31m-             */[m
[31m-            scriptSource: string;[m
[31m-        }[m
[31m-        interface EvaluateOnCallFrameReturnType {[m
[31m-            /**[m
[31m-             * Object wrapper for the evaluation result.[m
[31m-             */[m
[31m-            result: Runtime.RemoteObject;[m
[31m-            /**[m
[31m-             * Exception details.[m
[31m-             */[m
[31m-            exceptionDetails?: Runtime.ExceptionDetails | undefined;[m
[31m-        }[m
[31m-        interface ScriptParsedEventDataType {[m
[31m-            /**[m
[31m-             * Identifier of the script parsed.[m
[31m-             */[m
[31m-            scriptId: Runtime.ScriptId;[m
[31m-            /**[m
[31m-             * URL or name of the script parsed (if any).[m
[31m-             */[m
[31m-            url: string;[m
[31m-            /**[m
[31m-             * Line offset of the script within the resource with given URL (for script tags).[m
[31m-             */[m
[31m-            startLine: number;[m
[31m-            /**[m
[31m-             * Column offset of the script within the resource with given URL.[m
[31m-             */[m
[31m-            startColumn: number;[m
[31m-            /**[m
[31m-             * Last line of the script.[m
[31m-             */[m
[31m-            endLine: number;[m
[31m-            /**[m
[31m-             * Length of the last line of the script.[m
[31m-             */[m
[31m-            endColumn: number;[m
[31m-            /**[m
[31m-             * Specifies script creation context.[m
[31m-             */[m
[31m-            executionContextId: Runtime.ExecutionContextId;[m
[31m-            /**[m
[31m-             * Content hash of the script.[m
[31m-             */[m
[31m-            hash: string;[m
[31m-            /**[m
[31m-             * Embedder-specific auxiliary data.[m
[31m-             */[m
[31m-            executionContextAuxData?: object | undefined;[m
[31m-            /**[m
[31m-             * True, if this script is generated as a result of the live edit operation.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            isLiveEdit?: boolean | undefined;[m
[31m-            /**[m
[31m-             * URL of source map associated with script (if any).[m
[31m-             */[m
[31m-            sourceMapURL?: string | undefined;[m
[31m-            /**[m
[31m-             * True, if this script has sourceURL.[m
[31m-             */[m
[31m-            hasSourceURL?: boolean | undefined;[m
[31m-            /**[m
[31m-             * True, if this script is ES6 module.[m
[31m-             */[m
[31m-            isModule?: boolean | undefined;[m
[31m-            /**[m
[31m-             * This script length.[m
[31m-             */[m
[31m-            length?: number | undefined;[m
[31m-            /**[m
[31m-             * JavaScript top stack frame of where the script parsed event was triggered if available.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            stackTrace?: Runtime.StackTrace | undefined;[m
[31m-        }[m
[31m-        interface ScriptFailedToParseEventDataType {[m
[31m-            /**[m
[31m-             * Identifier of the script parsed.[m
[31m-             */[m
[31m-            scriptId: Runtime.ScriptId;[m
[31m-            /**[m
[31m-             * URL or name of the script parsed (if any).[m
[31m-             */[m
[31m-            url: string;[m
[31m-            /**[m
[31m-             * Line offset of the script within the resource with given URL (for script tags).[m
[31m-             */[m
[31m-            startLine: number;[m
[31m-            /**[m
[31m-             * Column offset of the script within the resource with given URL.[m
[31m-             */[m
[31m-            startColumn: number;[m
[31m-            /**[m
[31m-             * Last line of the script.[m
[31m-             */[m
[31m-            endLine: number;[m
[31m-            /**[m
[31m-             * Length of the last line of the script.[m
[31m-             */[m
[31m-            endColumn: number;[m
[31m-            /**[m
[31m-             * Specifies script creation context.[m
[31m-             */[m
[31m-            executionContextId: Runtime.ExecutionContextId;[m
[31m-            /**[m
[31m-             * Content hash of the script.[m
[31m-             */[m
[31m-            hash: string;[m
[31m-            /**[m
[31m-             * Embedder-specific auxiliary data.[m
[31m-             */[m
[31m-            executionContextAuxData?: object | undefined;[m
[31m-            /**[m
[31m-             * URL of source map associated with script (if any).[m
[31m-             */[m
[31m-            sourceMapURL?: string | undefined;[m
[31m-            /**[m
[31m-             * True, if this script has sourceURL.[m
[31m-             */[m
[31m-            hasSourceURL?: boolean | undefined;[m
[31m-            /**[m
[31m-             * True, if this script is ES6 module.[m
[31m-             */[m
[31m-            isModule?: boolean | undefined;[m
[31m-            /**[m
[31m-             * This script length.[m
[31m-             */[m
[31m-            length?: number | undefined;[m
[31m-            /**[m
[31m-             * JavaScript top stack frame of where the script parsed event was triggered if available.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            stackTrace?: Runtime.StackTrace | undefined;[m
[31m-        }[m
[31m-        interface BreakpointResolvedEventDataType {[m
[31m-            /**[m
[31m-             * Breakpoint unique identifier.[m
[31m-             */[m
[31m-            breakpointId: BreakpointId;[m
[31m-            /**[m
[31m-             * Actual breakpoint location.[m
[31m-             */[m
[31m-            location: Location;[m
[31m-        }[m
[31m-        interface PausedEventDataType {[m
[31m-            /**[m
[31m-             * Call stack the virtual machine stopped on.[m
[31m-             */[m
[31m-            callFrames: CallFrame[];[m
[31m-            /**[m
[31m-             * Pause reason.[m
[31m-             */[m
[31m-            reason: string;[m
[31m-            /**[m
[31m-             * Object containing break-specific auxiliary properties.[m
[31m-             */[m
[31m-            data?: object | undefined;[m
[31m-            /**[m
[31m-             * Hit breakpoints IDs[m
[31m-             */[m
[31m-            hitBreakpoints?: string[] | undefined;[m
[31m-            /**[m
[31m-             * Async stack trace, if any.[m
[31m-             */[m
[31m-            asyncStackTrace?: Runtime.StackTrace | undefined;[m
[31m-            /**[m
[31m-             * Async stack trace, if any.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            asyncStackTraceId?: Runtime.StackTraceId | undefined;[m
[31m-            /**[m
[31m-             * Just scheduled async call will have this stack trace as parent stack during async execution. This field is available only after <code>Debugger.stepInto</code> call with <code>breakOnAsynCall</code> flag.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            asyncCallStackTraceId?: Runtime.StackTraceId | undefined;[m
[31m-        }[m
[31m-    }[m
[31m-    namespace Console {[m
[31m-        /**[m
[31m-         * Console message.[m
[31m-         */[m
[31m-        interface ConsoleMessage {[m
[31m-            /**[m
[31m-             * Message source.[m
[31m-             */[m
[31m-            source: string;[m
[31m-            /**[m
[31m-             * Message severity.[m
[31m-             */[m
[31m-            level: string;[m
[31m-            /**[m
[31m-             * Message text.[m
[31m-             */[m
[31m-            text: string;[m
[31m-            /**[m
[31m-             * URL of the message origin.[m
[31m-             */[m
[31m-            url?: string | undefined;[m
[31m-            /**[m
[31m-             * Line number in the resource that generated this message (1-based).[m
[31m-             */[m
[31m-            line?: number | undefined;[m
[31m-            /**[m
[31m-             * Column number in the resource that generated this message (1-based).[m
[31m-             */[m
[31m-            column?: number | undefined;[m
[31m-        }[m
[31m-        interface MessageAddedEventDataType {[m
[31m-            /**[m
[31m-             * Console message that has been added.[m
[31m-             */[m
[31m-            message: ConsoleMessage;[m
[31m-        }[m
[31m-    }[m
[31m-    namespace Profiler {[m
[31m-        /**[m
[31m-         * Profile node. Holds callsite information, execution statistics and child nodes.[m
[31m-         */[m
[31m-        interface ProfileNode {[m
[31m-            /**[m
[31m-             * Unique id of the node.[m
[31m-             */[m
[31m-            id: number;[m
[31m-            /**[m
[31m-             * Function location.[m
[31m-             */[m
[31m-            callFrame: Runtime.CallFrame;[m
[31m-            /**[m
[31m-             * Number of samples where this node was on top of the call stack.[m
[31m-             */[m
[31m-            hitCount?: number | undefined;[m
[31m-            /**[m
[31m-             * Child node ids.[m
[31m-             */[m
[31m-            children?: number[] | undefined;[m
[31m-            /**[m
[31m-             * The reason of being not optimized. The function may be deoptimized or marked as don't optimize.[m
[31m-             */[m
[31m-            deoptReason?: string | undefined;[m
[31m-            /**[m
[31m-             * An array of source position ticks.[m
[31m-             */[m
[31m-            positionTicks?: PositionTickInfo[] | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Profile.[m
[31m-         */[m
[31m-        interface Profile {[m
[31m-            /**[m
[31m-             * The list of profile nodes. First item is the root node.[m
[31m-             */[m
[31m-            nodes: ProfileNode[];[m
[31m-            /**[m
[31m-             * Profiling start timestamp in microseconds.[m
[31m-             */[m
[31m-            startTime: number;[m
[31m-            /**[m
[31m-             * Profiling end timestamp in microseconds.[m
[31m-             */[m
[31m-            endTime: number;[m
[31m-            /**[m
[31m-             * Ids of samples top nodes.[m
[31m-             */[m
[31m-            samples?: number[] | undefined;[m
[31m-            /**[m
[31m-             * Time intervals between adjacent samples in microseconds. The first delta is relative to the profile startTime.[m
[31m-             */[m
[31m-            timeDeltas?: number[] | undefined;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Specifies a number of samples attributed to a certain source position.[m
[31m-         */[m
[31m-        interface PositionTickInfo {[m
[31m-            /**[m
[31m-             * Source line number (1-based).[m
[31m-             */[m
[31m-            line: number;[m
[31m-            /**[m
[31m-             * Number of samples attributed to the source line.[m
[31m-             */[m
[31m-            ticks: number;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Coverage data for a source range.[m
[31m-         */[m
[31m-        interface CoverageRange {[m
[31m-            /**[m
[31m-             * JavaScript script source offset for the range start.[m
[31m-             */[m
[31m-            startOffset: number;[m
[31m-            /**[m
[31m-             * JavaScript script source offset for the range end.[m
[31m-             */[m
[31m-            endOffset: number;[m
[31m-            /**[m
[31m-             * Collected execution count of the source range.[m
[31m-             */[m
[31m-            count: number;[m
[31m-        }[m
[31m-        /**[m
[31m-         * Coverage data for a JavaScript function.[m
[31m-         */[m
[31m-        interface FunctionCoverage {[m
[31m-            /**[m
[31m-             * JavaScript function name.[m
[31m-             */[m
[31m-            functionName: string;[m
[31m-            /**[m
[31m-             * Source ranges inside the function with coverage data.[m
[31m-             */[m
[31m-            ranges: CoverageRange[];[m
[31m-            /**[m
[31m-             * Whether coverage data for this function has block granularity.[m
[31m-             */[m
[31m-            isBlockCoverage: boolean;[m
[31m-        }[m
[32m+[m[32mdeclare module "inspector" {[m
[32m+[m[32m    import EventEmitter = require("node:events");[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `inspector.Session` is used for dispatching messages to the V8 inspector[m
[32m+[m[32m     * back-end and receiving message responses and notifications.[m
[32m+[m[32m     */[m
[32m+[m[32m    class Session extends EventEmitter {[m
         /**[m
[31m-         * Coverage data for a JavaScript script.[m
[32m+[m[32m         * Create a new instance of the inspector.Session class.[m
[32m+[m[32m         * The inspector session needs to be connected through `session.connect()` before the messages can be dispatched to the inspector backend.[m
          */[m
[31m-        interface ScriptCoverage {[m
[31m-            /**[m
[31m-             * JavaScript script id.[m
[31m-             */[m
[31m-            scriptId: Runtime.ScriptId;[m
[31m-            /**[m
[31m-             * JavaScript script name or url.[m
[31m-             */[m
[31m-            url: string;[m
[31m-            /**[m
[31m-             * Functions contained in the script that has coverage data.[m
[31m-             */[m
[31m-            functions: FunctionCoverage[];[m
[31m-        }[m
[31m-        interface SetSamplingIntervalParameterType {[m
[31m-            /**[m
[31m-             * New sampling interval in microseconds.[m
[31m-             */[m
[31m-            interval: number;[m
[31m-        }[m
[31m-        interface StartPreciseCoverageParameterType {[m
[31m-            /**[m
[31m-             * Collect accurate call counts beyond simple 'covered' or 'not covered'.[m
[31m-             */[m
[31m-            callCount?: boolean | undefined;[m
[31m-            /**[m
[31m-             * Collect block-based coverage.[m
[31m-             */[m
[31m-            detailed?: boolean | undefined;[m
[31m-        }[m
[31m-        interface StopReturnType {[m
[31m-            /**[m
[31m-             * Recorded profile.[m
[31m-             */[m
[31m-            profile: Profile;[m
[31m-        }[m
[31m-        interface TakePreciseCoverageReturnType {[m
[31m-            /**[m
[31m-             * Coverage data for the current isolate.[m
[31m-             */[m
[31m-            result: ScriptCoverage[];[m
[31m-        }[m
[31m-        interface GetBestEffortCoverageReturnType {[m
[31m-            /**[m
[31m-             * Coverage data for the current isolate.[m
[31m-             */[m
[31m-            result: ScriptCoverage[];[m
[31m-        }[m
[31m-        interface ConsoleProfileStartedEventDataType {[m
[31m-            id: string;[m
[31m-            /**[m
[31m-             * Location of console.profile().[m
[31m-             */[m
[31m-            location: Debugger.Location;[m
[31m-            /**[m
[31m-             * Profile title passed as an argument to console.profile().[m
[31m-             */[m
[31m-            title?: string | undefined;[m
[31m-        }[m
[31m-        interface ConsoleProfileFinishedEventDataType {[m
[31m-            id: string;[m
[31m-            /**[m
[31m-             * Location of console.profileEnd().[m
[31m-             */[m
[31m-            location: Debugger.Location;[m
[31m-            profile: Profile;[m
[31m-            /**[m
[31m-             * Profile title passed as an argument to console.profile().[m
[31m-             */[m
[31m-            title?: string | undefined;[m
[31m-        }[m
[31m-    }[m
[31m-    namespace HeapProfiler {[m
[32m+[m[32m        constructor();[m
         /**[m
[31m-         * Heap snapshot object id.[m
[32m+[m[32m         * Connects a session to the inspector back-end.[m
          */[m
[31m-        type HeapSnapshotObjectId = string;[m
[32m+[m[32m        connect(): void;[m
         /**[m
[31m-         * Sampling Heap Profile node. Holds callsite information, allocation statistics and child nodes.[m
[32m+[m[32m         * Connects a session to the inspector back-end.[m
[32m+[m[32m         * An exception will be thrown if this API was not called on a Worker thread.[m
[32m+[m[32m         * @since v12.11.0[m
          */[m
[31m-        interface SamplingHeapProfileNode {[m
[31m-            /**[m
[31m-             * Function location.[m
[31m-             */[m
[31m-            callFrame: Runtime.CallFrame;[m
[31m-            /**[m
[31m-             * Allocations size in bytes for the node excluding children.[m
[31m-             */[m
[31m-            selfSize: number;[m
[31m-            /**[m
[31m-             * Child nodes.[m
[31m-             */[m
[31m-            children: SamplingHeapProfileNode[];[m
[31m-        }[m
[32m+[m[32m        connectToMainThread(): void;[m
         /**[m
[31m-         * Profile.[m
[32m+[m[32m         * Immediately close the session. All pending message callbacks will be called with an error.[m
[32m+[m[32m         * `session.connect()` will need to be called to be able to send messages again.[m
[32m+[m[32m         * Reconnected session will lose all inspector state, such as enabled agents or configured breakpoints.[m
          */[m
[31m-        interface SamplingHeapProfile {[m
[31m-            head: SamplingHeapProfileNode;[m
[31m-        }[m
[31m-        interface StartTrackingHeapObjectsParameterType {[m
[31m-            trackAllocations?: boolean | undefined;[m
[31m-        }[m
[31m-        interface StopTrackingHeapObjectsParameterType {[m
[31m-            /**[m
[31m-             * If true 'reportHeapSnapshotProgress' events will be generated while snapshot is being taken when the tracking is stopped.[m
[31m-             */[m
[31m-            reportProgress?: boolean | undefined;[m
[31m-        }[m
[31m-        interface TakeHeapSnapshotParameterType {[m
[31m-            /**[m
[31m-             * If true 'reportHeapSnapshotProgress' events will be generated while snapshot is being taken.[m
[31m-             */[m
[31m-            reportProgress?: boolean | undefined;[m
[31m-        }[m
[31m-        interface GetObjectByHeapObjectIdParameterType {[m
[31m-            objectId: HeapSnapshotObjectId;[m
[31m-            /**[m
[31m-             * Symbolic group name that can be used to release multiple objects.[m
[31m-             */[m
[31m-            objectGroup?: string | undefined;[m
[31m-        }[m
[31m-        interface AddInspectedHeapObjectParameterType {[m
[31m-            /**[m
[31m-             * Heap snapshot object id to be accessible by means of $x command line API.[m
[31m-             */[m
[31m-            heapObjectId: HeapSnapshotObjectId;[m
[31m-        }[m
[31m-        interface GetHeapObjectIdParameterType {[m
[31m-            /**[m
[31m-             * Identifier of the object to get heap object id for.[m
[31m-             */[m
[31m-            objectId: Runtime.RemoteObjectId;[m
[31m-        }[m
[31m-        interface StartSamplingParameterType {[m
[31m-            /**[m
[31m-             * Average sample interval in bytes. Poisson distribution is used for the intervals. The default value is 32768 bytes.[m
[31m-             */[m
[31m-            samplingInterval?: number | undefined;[m
[31m-        }[m
[31m-        interface GetObjectByHeapObjectIdReturnType {[m
[31m-            /**[m
[31m-             * Evaluation result.[m
[31m-             */[m
[31m-            result: Runtime.RemoteObject;[m
[31m-        }[m
[31m-        interface GetHeapObjectIdReturnType {[m
[31m-            /**[m
[31m-             * Id of the heap snapshot object corresponding to the passed remote object id.[m
[31m-             */[m
[31m-            heapSnapshotObjectId: HeapSnapshotObjectId;[m
[31m-        }[m
[31m-        interface StopSamplingReturnType {[m
[31m-            /**[m
[31m-             * Recorded sampling heap profile.[m
[31m-             */[m
[31m-            profile: SamplingHeapProfile;[m
[31m-        }[m
[31m-        interface GetSamplingProfileReturnType {[m
[31m-            /**[m
[31m-             * Return the sampling profile being collected.[m
[31m-             */[m
[31m-            profile: SamplingHeapProfile;[m
[31m-        }[m
[31m-        interface AddHeapSnapshotChunkEventDataType {[m
[31m-            chunk: string;[m
[31m-        }[m
[31m-        interface ReportHeapSnapshotProgressEventDataType {[m
[31m-            done: number;[m
[31m-            total: number;[m
[31m-            finished?: boolean | undefined;[m
[31m-        }[m
[31m-        interface LastSeenObjectIdEventDataType {[m
[31m-            lastSeenObjectId: number;[m
[31m-            timestamp: number;[m
[31m-        }[m
[31m-        interface HeapStatsUpdateEventDataType {[m
[31m-            /**[m
[31m-             * An array of triplets. Each triplet describes a fragment. The first integer is the fragment index, the second integer is a total count of objects for the fragment, the third integer is a total size of the objects for the fragment.[m
[31m-             */[m
[31m-            statsUpdate: number[];[m
[31m-        }[m
[31m-    }[m
[31m-    namespace NodeTracing {[m
[31m-        interface TraceConfig {[m
[31m-            /**[m
[31m-             * Controls how the trace buffer stores data.[m
[31m-             */[m
[31m-            recordMode?: string | undefined;[m
[31m-            /**[m
[31m-             * Included category filters.[m
[31m-             */[m
[31m-            includedCategories: string[];[m
[31m-        }[m
[31m-        interface StartParameterType {[m
[31m-            traceConfig: TraceConfig;[m
[31m-        }[m
[31m-        interface GetCategoriesReturnType {[m
[31m-            /**[m
[31m-             * A list of supported tracing categories.[m
[31m-             */[m
[31m-            categories: string[];[m
[31m-        }[m
[31m-        interface DataCollectedEventDataType {[m
[31m-            value: object[];[m
[31m-        }[m
[32m+[m[32m        disconnect(): void;[m
     }[m
[31m-    namespace NodeWorker {[m
[31m-        type WorkerID = string;[m
[31m-        /**[m
[31m-         * Unique identifier of attached debugging session.[m
[31m-         */[m
[31m-        type SessionID = string;[m
[31m-        interface WorkerInfo {[m
[31m-            workerId: WorkerID;[m
[31m-            type: string;[m
[31m-            title: string;[m
[31m-            url: string;[m
[31m-        }[m
[31m-        interface SendMessageToWorkerParameterType {[m
[31m-            message: string;[m
[31m-            /**[m
[31m-             * Identifier of the session.[m
[31m-             */[m
[31m-            sessionId: SessionID;[m
[31m-        }[m
[31m-        interface EnableParameterType {[m
[31m-            /**[m
[31m-             * Whether to new workers should be paused until the frontend sends `Runtime.runIfWaitingForDebugger`[m
[31m-             * message to run them.[m
[31m-             */[m
[31m-            waitForDebuggerOnStart: boolean;[m
[31m-        }[m
[31m-        interface DetachParameterType {[m
[31m-            sessionId: SessionID;[m
[31m-        }[m
[31m-        interface AttachedToWorkerEventDataType {[m
[31m-            /**[m
[31m-             * Identifier assigned to the session used to send/receive messages.[m
[31m-             */[m
[31m-            sessionId: SessionID;[m
[31m-            workerInfo: WorkerInfo;[m
[31m-            waitingForDebugger: boolean;[m
[31m-        }[m
[31m-        interface DetachedFromWorkerEventDataType {[m
[31m-            /**[m
[31m-             * Detached session identifier.[m
[31m-             */[m
[31m-            sessionId: SessionID;[m
[31m-        }[m
[31m-        interface ReceivedMessageFromWorkerEventDataType {[m
[31m-            /**[m
[31m-             * Identifier of a session which sends a message.[m
[31m-             */[m
[31m-            sessionId: SessionID;[m
[31m-            message: string;[m
[31m-        }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Activate inspector on host and port. Equivalent to `node --inspect=[[host:]port]`, but can be done programmatically after node has[m
[32m+[m[32m     * started.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If wait is `true`, will block until a client has connected to the inspect port[m
[32m+[m[32m     * and flow control has been passed to the debugger client.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the [security warning](https://nodejs.org/docs/latest-v24.x/api/cli.html#warning-binding-inspector-to-a-public-ipport-combination-is-insecure)[m
[32m+[m[32m     * regarding the `host` parameter usage.[m
[32m+[m[32m     * @param port Port to listen on for inspector connections. Defaults to what was specified on the CLI.[m
[32m+[m[32m     * @param host Host to listen on for inspector connections. Defaults to what was specified on the CLI.[m
[32m+[m[32m     * @param wait Block until a client has connected. Defaults to what was specified on the CLI.[m
[32m+[m[32m     * @returns Disposable that calls `inspector.close()`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function open(port?: number, host?: string, wait?: boolean): Disposable;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Deactivate the inspector. Blocks until there are no active connections.[m
[32m+[m[32m     */[m
[32m+[m[32m    function close(): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Return the URL of the active inspector, or `undefined` if there is none.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```console[m
[32m+[m[32m     * $ node --inspect -p 'inspector.url()'[m
[32m+[m[32m     * Debugger listening on ws://127.0.0.1:9229/166e272e-7a30-4d09-97ce-f1c012b43c34[m
[32m+[m[32m     * For help, see: https://nodejs.org/en/docs/inspector[m
[32m+[m[32m     * ws://127.0.0.1:9229/166e272e-7a30-4d09-97ce-f1c012b43c34[m
[32m+[m[32m     *[m
[32m+[m[32m     * $ node --inspect=localhost:3000 -p 'inspector.url()'[m
[32m+[m[32m     * Debugger listening on ws://localhost:3000/51cf8d0e-3c36-4c59-8efd-54519839e56a[m
[32m+[m[32m     * For help, see: https://nodejs.org/en/docs/inspector[m
[32m+[m[32m     * ws://localhost:3000/51cf8d0e-3c36-4c59-8efd-54519839e56a[m
[32m+[m[32m     *[m
[32m+[m[32m     * $ node -p 'inspector.url()'[m
[32m+[m[32m     * undefined[m
[32m+[m[32m     * ```[m
[32m+[m[32m     */[m
[32m+[m[32m    function url(): string | undefined;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Blocks until a client (existing or connected later) has sent `Runtime.runIfWaitingForDebugger` command.[m
[32m+[m[32m     *[m
[32m+[m[32m     * An exception will be thrown if there is no active inspector.[m
[32m+[m[32m     * @since v12.7.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function waitForDebugger(): void;[m
[32m+[m[32m    // These methods are exposed by the V8 inspector console API (inspector/v8-console.h).[m
[32m+[m[32m    // The method signatures differ from those of the Node.js console, and are deliberately[m
[32m+[m[32m    // typed permissively.[m
[32m+[m[32m    interface InspectorConsole {[m
[32m+[m[32m        debug(...data: any[]): void;[m
[32m+[m[32m        error(...data: any[]): void;[m
[32m+[m[32m        info(...data: any[]): void;[m
[32m+[m[32m        log(...data: any[]): void;[m
[32m+[m[32m        warn(...data: any[]): void;[m
[32m+[m[32m        dir(...data: any[]): void;[m
[32m+[m[32m        dirxml(...data: any[]): void;[m
[32m+[m[32m        table(...data: any[]): void;[m
[32m+[m[32m        trace(...data: any[]): void;[m
[32m+[m[32m        group(...data: any[]): void;[m
[32m+[m[32m        groupCollapsed(...data: any[]): void;[m
[32m+[m[32m        groupEnd(...data: any[]): void;[m
[32m+[m[32m        clear(...data: any[]): void;[m
[32m+[m[32m        count(label?: any): void;[m
[32m+[m[32m        countReset(label?: any): void;[m
[32m+[m[32m        assert(value?: any, ...data: any[]): void;[m
[32m+[m[32m        profile(label?: any): void;[m
[32m+[m[32m        profileEnd(label?: any): void;[m
[32m+[m[32m        time(label?: any): void;[m
[32m+[m[32m        timeLog(label?: any): void;[m
[32m+[m[32m        timeStamp(label?: any): void;[m
     }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An object to send messages to the remote inspector console.[m
[32m+[m[32m     * @since v11.0.0[m
[32m+[m[32m     */[m
[32m+[m[32m    const console: InspectorConsole;[m
[32m+[m[32m    // DevTools protocol event broadcast methods[m
     namespace Network {[m
         /**[m
[31m-         * Resource type as it was perceived by the rendering engine.[m
[31m-         */[m
[31m-        type ResourceType = string;[m
[31m-        /**[m
[31m-         * Unique request identifier.[m
[32m+[m[32m         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Broadcasts the `Network.requestWillBeSent` event to connected frontends. This event indicates that[m
[32m+[m[32m         * the application is about to send an HTTP request.[m
[32m+[m[32m         * @since v22.6.0[m
          */[m
[31m-        type RequestId = string;[m
[32m+[m[32m        function requestWillBeSent(params: RequestWillBeSentEventDataType): void;[m
         /**[m
[31m-         * UTC time in seconds, counted from January 1, 1970.[m
[32m+[m[32m         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Broadcasts the `Network.dataReceived` event to connected frontends, or buffers the data if[m
[32m+[m[32m         * `Network.streamResourceContent` command was not invoked for the given request yet.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Also enables `Network.getResponseBody` command to retrieve the response data.[m
[32m+[m[32m         * @since v24.2.0[m
          */[m
[31m-        type TimeSinceEpoch = number;[m
[32m+[m[32m        function dataReceived(params: DataReceivedEventDataType): void;[m
         /**[m
[31m-         * Monotonically increasing time in seconds since an arbitrary point in the past.[m
[32m+[m[32m         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Enables `Network.getRequestPostData` command to retrieve the request data.[m
[32m+[m[32m         * @since v24.3.0[m
          */[m
[31m-        type MonotonicTime = number;[m
[32m+[m[32m        function dataSent(params: unknown): void;[m
         /**[m
[31m-         * Information about the request initiator.[m
[32m+[m[32m         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Broadcasts the `Network.responseReceived` event to connected frontends. This event indicates that[m
[32m+[m[32m         * HTTP response is available.[m
[32m+[m[32m         * @since v22.6.0[m
          */[m
[31m-        interface Initiator {[m
[31m-            /**[m
[31m-             * Type of this initiator.[m
[31m-             */[m
[31m-            type: string;[m
[31m-            /**[m
[31m-             * Initiator JavaScript stack trace, set for Script only.[m
[31m-             * Requires the Debugger domain to be enabled.[m
[31m-             */[m
[31m-            stack?: Runtime.StackTrace | undefined;[m
[31m-            /**[m
[31m-             * Initiator URL, set for Parser type or for Script type (when script is importing module) or for SignedExchange type.[m
[31m-             */[m
[31m-            url?: string | undefined;[m
[31m-            /**[m
[31m-             * Initiator line number, set for Parser type or for Script type (when script is importing[m
[31m-             * module) (0-based).[m
[31m-             */[m
[31m-            lineNumber?: number | undefined;[m
[31m-            /**[m
[31m-             * Initiator column number, set for Parser type or for Script type (when script is importing[m
[31m-             * module) (0-based).[m
[31m-             */[m
[31m-            columnNumber?: number | undefined;[m
[31m-            /**[m
[31m-             * Set if another request triggered this request (e.g. preflight).[m
[31m-             */[m
[31m-            requestId?: RequestId | undefined;[m
[31m-        }[m
[32m+[m[32m        function responseReceived(params: ResponseReceivedEventDataType): void;[m
         /**[m
[31m-         * HTTP request data.[m
[32m+[m[32m         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Broadcasts the `Network.loadingFinished` event to connected frontends. This event indicates that[m
[32m+[m[32m         * HTTP request has finished loading.[m
[32m+[m[32m         * @since v22.6.0[m
          */[m
[31m-        interface Request {[m
[31m-            url: string;[m
[31m-            method: string;[m
[31m-            headers: Headers;[m
[31m-            hasPostData: boolean;[m
[31m-        }[m
[32m+[m[32m        function loadingFinished(params: LoadingFinishedEventDataType): void;[m
         /**[m
[31m-         * HTTP response data.[m
[32m+[m[32m         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Broadcasts the `Network.loadingFailed` event to connected frontends. This event indicates that[m
[32m+[m[32m         * HTTP request has failed to load.[m
[32m+[m[32m         * @since v22.7.0[m
          */[m
[31m-        interface Response {[m
[31m-            url: string;[m
[31m-            status: number;[m
[31m-            statusText: string;[m
[31m-            headers: Headers;[m
[31m-            mimeType: string;[m
[31m-            charset: string;[m
[31m-        }[m
[32m+[m[32m        function loadingFailed(params: LoadingFailedEventDataType): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace NetworkResources {[m
         /**[m
[31m-         * Request / response headers as keys / values of JSON object.[m
[32m+[m[32m         * This feature is only available with the `--experimental-inspector-network-resource` flag enabled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The inspector.NetworkResources.put method is used to provide a response for a loadNetworkResource[m
[32m+[m[32m         * request issued via the Chrome DevTools Protocol (CDP).[m
[32m+[m[32m         * This is typically triggered when a source map is specified by URL, and a DevTools frontend—such as[m
[32m+[m[32m         * Chrome—requests the resource to retrieve the source map.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method allows developers to predefine the resource content to be served in response to such CDP requests.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const inspector = require('node:inspector');[m
[32m+[m[32m         * // By preemptively calling put to register the resource, a source map can be resolved when[m
[32m+[m[32m         * // a loadNetworkResource request is made from the frontend.[m
[32m+[m[32m         * async function setNetworkResources() {[m
[32m+[m[32m         *   const mapUrl = 'http://localhost:3000/dist/app.js.map';[m
[32m+[m[32m         *   const tsUrl = 'http://localhost:3000/src/app.ts';[m
[32m+[m[32m         *   const distAppJsMap = await fetch(mapUrl).then((res) => res.text());[m
[32m+[m[32m         *   const srcAppTs = await fetch(tsUrl).then((res) => res.text());[m
[32m+[m[32m         *   inspector.NetworkResources.put(mapUrl, distAppJsMap);[m
[32m+[m[32m         *   inspector.NetworkResources.put(tsUrl, srcAppTs);[m
[32m+[m[32m         * };[m
[32m+[m[32m         * setNetworkResources().then(() => {[m
[32m+[m[32m         *   require('./dist/app');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * For more details, see the official CDP documentation: [Network.loadNetworkResource](https://chromedevtools.github.io/devtools-protocol/tot/Network/#method-loadNetworkResource)[m
[32m+[m[32m         * @since v24.5.0[m
[32m+[m[32m         * @experimental[m
          */[m
[31m-        interface Headers {[m
[31m-        }[m
[31m-        interface GetRequestPostDataParameterType {[m
[31m-            /**[m
[31m-             * Identifier of the network request to get content for.[m
[31m-             */[m
[31m-            requestId: RequestId;[m
[31m-        }[m
[31m-        interface GetResponseBodyParameterType {[m
[31m-            /**[m
[31m-             * Identifier of the network request to get content for.[m
[31m-             */[m
[31m-            requestId: RequestId;[m
[31m-        }[m
[31m-        interface StreamResourceContentParameterType {[m
[31m-            /**[m
[31m-             * Identifier of the request to stream.[m
[31m-             */[m
[31m-            requestId: RequestId;[m
[31m-        }[m
[31m-        interface GetRequestPostDataReturnType {[m
[31m-            /**[m
[31m-             * Request body string, omitting files from multipart requests[m
[31m-             */[m
[31m-            postData: string;[m
[31m-        }[m
[31m-        interface GetResponseBodyReturnType {[m
[31m-            /**[m
[31m-             * Response body.[m
[31m-             */[m
[31m-            body: string;[m
[31m-            /**[m
[31m-             * True, if content was sent as base64.[m
[31m-             */[m
[31m-            base64Encoded: boolean;[m
[31m-        }[m
[31m-        interface StreamResourceContentReturnType {[m
[31m-            /**[m
[31m-             * Data that has been buffered until streaming is enabled.[m
[31m-             */[m
[31m-            bufferedData: string;[m
[31m-        }[m
[31m-        interface RequestWillBeSentEventDataType {[m
[31m-            /**[m
[31m-             * Request identifier.[m
[31m-             */[m
[31m-            requestId: RequestId;[m
[31m-            /**[m
[31m-             * Request data.[m
[31m-             */[m
[31m-            request: Request;[m
[31m-            /**[m
[31m-             * Request initiator.[m
[31m-             */[m
[31m-            initiator: Initiator;[m
[31m-            /**[m
[31m-             * Timestamp.[m
[31m-             */[m
[31m-            timestamp: MonotonicTime;[m
[31m-            /**[m
[31m-             * Timestamp.[m
[31m-             */[m
[31m-            wallTime: TimeSinceEpoch;[m
[31m-        }[m
[31m-        interface ResponseReceivedEventDataType {[m
[31m-            /**[m
[31m-             * Request identifier.[m
[31m-             */[m
[31m-            requestId: RequestId;[m
[31m-            /**[m
[31m-             * Timestamp.[m
[31m-             */[m
[31m-            timestamp: MonotonicTime;[m
[31m-            /**[m
[31m-             * Resource type.[m
[31m-             */[m
[31m-            type: ResourceType;[m
[31m-            /**[m
[31m-             * Response data.[m
[31m-             */[m
[31m-            response: Response;[m
[31m-        }[m
[31m-        interface LoadingFailedEventDataType {[m
[31m-            /**[m
[31m-             * Request identifier.[m
[31m-             */[m
[31m-            requestId: RequestId;[m
[31m-            /**[m
[31m-             * Timestamp.[m
[31m-             */[m
[31m-            timestamp: MonotonicTime;[m
[31m-            /**[m
[31m-             * Resource type.[m
[31m-             */[m
[31m-            type: ResourceType;[m
[31m-            /**[m
[31m-             * Error message.[m
[31m-             */[m
[31m-            errorText: string;[m
[31m-        }[m
[31m-        interface LoadingFinishedEventDataType {[m
[31m-            /**[m
[31m-             * Request identifier.[m
[31m-             */[m
[31m-            requestId: RequestId;[m
[31m-            /**[m
[31m-             * Timestamp.[m
[31m-             */[m
[31m-            timestamp: MonotonicTime;[m
[31m-        }[m
[31m-        interface DataReceivedEventDataType {[m
[31m-            /**[m
[31m-             * Request identifier.[m
[31m-             */[m
[31m-            requestId: RequestId;[m
[31m-            /**[m
[31m-             * Timestamp.[m
[31m-             */[m
[31m-            timestamp: MonotonicTime;[m
[31m-            /**[m
[31m-             * Data chunk length.[m
[31m-             */[m
[31m-            dataLength: number;[m
[31m-            /**[m
[31m-             * Actual bytes received (might be less than dataLength for compressed encodings).[m
[31m-             */[m
[31m-            encodedDataLength: number;[m
[31m-            /**[m
[31m-             * Data that was received.[m
[31m-             * @experimental[m
[31m-             */[m
[31m-            data?: string | undefined;[m
[31m-        }[m
[31m-    }[m
[31m-    namespace NodeRuntime {[m
[31m-        interface NotifyWhenWaitingForDisconnectParameterType {[m
[31m-            enabled: boolean;[m
[31m-        }[m
[31m-    }[m
[31m-    namespace Target {[m
[31m-        type SessionID = string;[m
[31m-        type TargetID = string;[m
[31m-        interface TargetInfo {[m
[31m-            targetId: TargetID;[m
[31m-            type: string;[m
[31m-            title: string;[m
[31m-            url: string;[m
[31m-            attached: boolean;[m
[31m-            canAccessOpener: boolean;[m
[31m-        }[m
[31m-        interface SetAutoAttachParameterType {[m
[31m-            autoAttach: boolean;[m
[31m-            waitForDebuggerOnStart: boolean;[m
[31m-        }[m
[31m-        interface TargetCreatedEventDataType {[m
[31m-            targetInfo: TargetInfo;[m
[31m-        }[m
[31m-        interface AttachedToTargetEventDataType {[m
[31m-            sessionId: SessionID;[m
[31m-            targetInfo: TargetInfo;[m
[31m-            waitingForDebugger: boolean;[m
[31m-        }[m
[32m+[m[32m        function put(url: string, data: string): void;[m
     }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:inspector` module provides an API for interacting with the V8[m
[32m+[m[32m * inspector.[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "node:inspector" {[m
[32m+[m[32m    export * from "inspector";[m
[32m+[m[32m}[m
 [m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:inspector/promises` module provides an API for interacting with the V8[m
[32m+[m[32m * inspector.[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v24.x/lib/inspector/promises.js)[m
[32m+[m[32m * @since v19.0.0[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "inspector/promises" {[m
[32m+[m[32m    import EventEmitter = require("node:events");[m
[32m+[m[32m    export { close, console, NetworkResources, open, url, waitForDebugger } from "inspector";[m
     /**[m
      * The `inspector.Session` is used for dispatching messages to the V8 inspector[m
      * back-end and receiving message responses and notifications.[m
[32m+[m[32m     * @since v19.0.0[m
      */[m
[31m-    class Session extends EventEmitter {[m
[32m+[m[32m    export class Session extends EventEmitter {[m
         /**[m
          * Create a new instance of the inspector.Session class.[m
          * The inspector session needs to be connected through `session.connect()` before the messages can be dispatched to the inspector backend.[m
          */[m
         constructor();[m
[31m-[m
         /**[m
          * Connects a session to the inspector back-end.[m
          */[m
         connect(): void;[m
[31m-[m
         /**[m
          * Connects a session to the inspector back-end.[m
          * An exception will be thrown if this API was not called on a Worker thread.[m
          * @since v12.11.0[m
          */[m
         connectToMainThread(): void;[m
[31m-[m
         /**[m
          * Immediately close the session. All pending message callbacks will be called with an error.[m
          * `session.connect()` will need to be called to be able to send messages again.[m
          * Reconnected session will lose all inspector state, such as enabled agents or configured breakpoints.[m
          */[m
         disconnect(): void;[m
[31m-[m
[31m-        /**[m
[31m-         * Posts a message to the inspector back-end. `callback` will be notified when[m
[31m-         * a response is received. `callback` is a function that accepts two optional[m
[31m-         * arguments: error and message-specific result.[m
[31m-         *[m
[31m-         * ```js[m
[31m-         * session.post('Runtime.evaluate', { expression: '2 + 2' },[m
[31m-         *              (error, { result }) => console.log(result));[m
[31m-         * // Output: { type: 'number', value: 4, description: '4' }[m
[31m-         * ```[m
[31m-         *[m
[31m-         * The latest version of the V8 inspector protocol is published on the[m
[31m-         * [Chrome DevTools Protocol Viewer](https://chromedevtools.github.io/devtools-protocol/v8/).[m
[31m-         *[m
[31m-         * Node.js inspector supports all the Chrome DevTools Protocol domains declared[m
[31m-         * by V8. Chrome DevTools Protocol domain provides an interface for interacting[m
[31m-         * with one of the runtime agents used to inspect the application state and listen[m
[31m-         * to the run-time events.[m
[31m-         */[m
[31m-        post(method: string, callback?: (err: Error | null, params?: object) => void): void;[m
[31m-        post(method: string, params?: object, callback?: (err: Error | null, params?: object) => void): void;[m
[31m-        /**[m
[31m-         * Returns supported domains.[m
[31m-         */[m
[31m-        post(method: 'Schema.getDomains', callback?: (err: Error | null, params: Schema.GetDomainsReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Evaluates expression on global object.[m
[31m-         */[m
[31m-        post(method: 'Runtime.evaluate', params?: Runtime.EvaluateParameterType, callback?: (err: Error | null, params: Runtime.EvaluateReturnType) => void): void;[m
[31m-        post(method: 'Runtime.evaluate', callback?: (err: Error | null, params: Runtime.EvaluateReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Add handler to promise with given promise object id.[m
[31m-         */[m
[31m-        post(method: 'Runtime.awaitPromise', params?: Runtime.AwaitPromiseParameterType, callback?: (err: Error | null, params: Runtime.AwaitPromiseReturnType) => void): void;[m
[31m-        post(method: 'Runtime.awaitPromise', callback?: (err: Error | null, params: Runtime.AwaitPromiseReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Calls function with given declaration on the given object. Object group of the result is inherited from the target object.[m
[31m-         */[m
[31m-        post(method: 'Runtime.callFunctionOn', params?: Runtime.CallFunctionOnParameterType, callback?: (err: Error | null, params: Runtime.CallFunctionOnReturnType) => void): void;[m
[31m-        post(method: 'Runtime.callFunctionOn', callback?: (err: Error | null, params: Runtime.CallFunctionOnReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Returns properties of a given object. Object group of the result is inherited from the target object.[m
[31m-         */[m
[31m-        post(method: 'Runtime.getProperties', params?: Runtime.GetPropertiesParameterType, callback?: (err: Error | null, params: Runtime.GetPropertiesReturnType) => void): void;[m
[31m-        post(method: 'Runtime.getProperties', callback?: (err: Error | null, params: Runtime.GetPropertiesReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Releases remote object with given id.[m
[31m-         */[m
[31m-        post(method: 'Runtime.releaseObject', params?: Runtime.ReleaseObjectParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Runtime.releaseObject', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Releases all remote objects that belong to a given group.[m
[31m-         */[m
[31m-        post(method: 'Runtime.releaseObjectGroup', params?: Runtime.ReleaseObjectGroupParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Runtime.releaseObjectGroup', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Tells inspected instance to run if it was waiting for debugger to attach.[m
[31m-         */[m
[31m-        post(method: 'Runtime.runIfWaitingForDebugger', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Enables reporting of execution contexts creation by means of <code>executionContextCreated</code> event. When the reporting gets enabled the event will be sent immediately for each existing execution context.[m
[31m-         */[m
[31m-        post(method: 'Runtime.enable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Disables reporting of execution contexts creation.[m
[31m-         */[m
[31m-        post(method: 'Runtime.disable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Discards collected exceptions and console API calls.[m
[31m-         */[m
[31m-        post(method: 'Runtime.discardConsoleEntries', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Runtime.setCustomObjectFormatterEnabled', params?: Runtime.SetCustomObjectFormatterEnabledParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Runtime.setCustomObjectFormatterEnabled', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Compiles expression.[m
[31m-         */[m
[31m-        post(method: 'Runtime.compileScript', params?: Runtime.CompileScriptParameterType, callback?: (err: Error | null, params: Runtime.CompileScriptReturnType) => void): void;[m
[31m-        post(method: 'Runtime.compileScript', callback?: (err: Error | null, params: Runtime.CompileScriptReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Runs script with given id in a given context.[m
[31m-         */[m
[31m-        post(method: 'Runtime.runScript', params?: Runtime.RunScriptParameterType, callback?: (err: Error | null, params: Runtime.RunScriptReturnType) => void): void;[m
[31m-        post(method: 'Runtime.runScript', callback?: (err: Error | null, params: Runtime.RunScriptReturnType) => void): void;[m
[31m-        post(method: 'Runtime.queryObjects', params?: Runtime.QueryObjectsParameterType, callback?: (err: Error | null, params: Runtime.QueryObjectsReturnType) => void): void;[m
[31m-        post(method: 'Runtime.queryObjects', callback?: (err: Error | null, params: Runtime.QueryObjectsReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Returns all let, const and class variables from global scope.[m
[31m-         */[m
[31m-        post([m
[31m-            method: 'Runtime.globalLexicalScopeNames',[m
[31m-            params?: Runtime.GlobalLexicalScopeNamesParameterType,[m
[31m-            callback?: (err: Error | null, params: Runtime.GlobalLexicalScopeNamesReturnType) => void[m
[31m-        ): void;[m
[31m-        post(method: 'Runtime.globalLexicalScopeNames', callback?: (err: Error | null, params: Runtime.GlobalLexicalScopeNamesReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Enables debugger for the given page. Clients should not assume that the debugging has been enabled until the result for this command is received.[m
[31m-         */[m
[31m-        post(method: 'Debugger.enable', callback?: (err: Error | null, params: Debugger.EnableReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Disables debugger for given page.[m
[31m-         */[m
[31m-        post(method: 'Debugger.disable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Activates / deactivates all breakpoints on the page.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBreakpointsActive', params?: Debugger.SetBreakpointsActiveParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.setBreakpointsActive', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Makes page not interrupt on any pauses (breakpoint, exception, dom exception etc).[m
[31m-         */[m
[31m-        post(method: 'Debugger.setSkipAllPauses', params?: Debugger.SetSkipAllPausesParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.setSkipAllPauses', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Sets JavaScript breakpoint at given location specified either by URL or URL regex. Once this command is issued, all existing parsed scripts will have breakpoints resolved and returned in <code>locations</code> property. Further matching script parsing will result in subsequent <code>breakpointResolved</code> events issued. This logical breakpoint will survive page reloads.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBreakpointByUrl', params?: Debugger.SetBreakpointByUrlParameterType, callback?: (err: Error | null, params: Debugger.SetBreakpointByUrlReturnType) => void): void;[m
[31m-        post(method: 'Debugger.setBreakpointByUrl', callback?: (err: Error | null, params: Debugger.SetBreakpointByUrlReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Sets JavaScript breakpoint at a given location.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBreakpoint', params?: Debugger.SetBreakpointParameterType, callback?: (err: Error | null, params: Debugger.SetBreakpointReturnType) => void): void;[m
[31m-        post(method: 'Debugger.setBreakpoint', callback?: (err: Error | null, params: Debugger.SetBreakpointReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Removes JavaScript breakpoint.[m
[31m-         */[m
[31m-        post(method: 'Debugger.removeBreakpoint', params?: Debugger.RemoveBreakpointParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.removeBreakpoint', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Returns possible locations for breakpoint. scriptId in start and end range locations should be the same.[m
[31m-         */[m
[31m-        post([m
[31m-            method: 'Debugger.getPossibleBreakpoints',[m
[31m-            params?: Debugger.GetPossibleBreakpointsParameterType,[m
[31m-            callback?: (err: Error | null, params: Debugger.GetPossibleBreakpointsReturnType) => void[m
[31m-        ): void;[m
[31m-        post(method: 'Debugger.getPossibleBreakpoints', callback?: (err: Error | null, params: Debugger.GetPossibleBreakpointsReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Continues execution until specific location is reached.[m
[31m-         */[m
[31m-        post(method: 'Debugger.continueToLocation', params?: Debugger.ContinueToLocationParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.continueToLocation', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.pauseOnAsyncCall', params?: Debugger.PauseOnAsyncCallParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.pauseOnAsyncCall', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Steps over the statement.[m
[31m-         */[m
[31m-        post(method: 'Debugger.stepOver', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Steps into the function call.[m
[31m-         */[m
[31m-        post(method: 'Debugger.stepInto', params?: Debugger.StepIntoParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.stepInto', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Steps out of the function call.[m
[31m-         */[m
[31m-        post(method: 'Debugger.stepOut', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Stops on the next JavaScript statement.[m
[31m-         */[m
[31m-        post(method: 'Debugger.pause', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * This method is deprecated - use Debugger.stepInto with breakOnAsyncCall and Debugger.pauseOnAsyncTask instead. Steps into next scheduled async task if any is scheduled before next pause. Returns success when async task is actually scheduled, returns error if no task were scheduled or another scheduleStepIntoAsync was called.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.scheduleStepIntoAsync', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Resumes JavaScript execution.[m
[31m-         */[m
[31m-        post(method: 'Debugger.resume', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Returns stack trace with given <code>stackTraceId</code>.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.getStackTrace', params?: Debugger.GetStackTraceParameterType, callback?: (err: Error | null, params: Debugger.GetStackTraceReturnType) => void): void;[m
[31m-        post(method: 'Debugger.getStackTrace', callback?: (err: Error | null, params: Debugger.GetStackTraceReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Searches for given string in script content.[m
[31m-         */[m
[31m-        post(method: 'Debugger.searchInContent', params?: Debugger.SearchInContentParameterType, callback?: (err: Error | null, params: Debugger.SearchInContentReturnType) => void): void;[m
[31m-        post(method: 'Debugger.searchInContent', callback?: (err: Error | null, params: Debugger.SearchInContentReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Edits JavaScript source live.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setScriptSource', params?: Debugger.SetScriptSourceParameterType, callback?: (err: Error | null, params: Debugger.SetScriptSourceReturnType) => void): void;[m
[31m-        post(method: 'Debugger.setScriptSource', callback?: (err: Error | null, params: Debugger.SetScriptSourceReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Restarts particular call frame from the beginning.[m
[31m-         */[m
[31m-        post(method: 'Debugger.restartFrame', params?: Debugger.RestartFrameParameterType, callback?: (err: Error | null, params: Debugger.RestartFrameReturnType) => void): void;[m
[31m-        post(method: 'Debugger.restartFrame', callback?: (err: Error | null, params: Debugger.RestartFrameReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Returns source for the script with given id.[m
[31m-         */[m
[31m-        post(method: 'Debugger.getScriptSource', params?: Debugger.GetScriptSourceParameterType, callback?: (err: Error | null, params: Debugger.GetScriptSourceReturnType) => void): void;[m
[31m-        post(method: 'Debugger.getScriptSource', callback?: (err: Error | null, params: Debugger.GetScriptSourceReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Defines pause on exceptions state. Can be set to stop on all exceptions, uncaught exceptions or no exceptions. Initial pause on exceptions state is <code>none</code>.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setPauseOnExceptions', params?: Debugger.SetPauseOnExceptionsParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.setPauseOnExceptions', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Evaluates expression on a given call frame.[m
[31m-         */[m
[31m-        post(method: 'Debugger.evaluateOnCallFrame', params?: Debugger.EvaluateOnCallFrameParameterType, callback?: (err: Error | null, params: Debugger.EvaluateOnCallFrameReturnType) => void): void;[m
[31m-        post(method: 'Debugger.evaluateOnCallFrame', callback?: (err: Error | null, params: Debugger.EvaluateOnCallFrameReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Changes value of variable in a callframe. Object-based scopes are not supported and must be mutated manually.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setVariableValue', params?: Debugger.SetVariableValueParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.setVariableValue', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Changes return value in top frame. Available only at return break position.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.setReturnValue', params?: Debugger.SetReturnValueParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.setReturnValue', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Enables or disables async call stacks tracking.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setAsyncCallStackDepth', params?: Debugger.SetAsyncCallStackDepthParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.setAsyncCallStackDepth', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Replace previous blackbox patterns with passed ones. Forces backend to skip stepping/pausing in scripts with url matching one of the patterns. VM will try to leave blackboxed script by performing 'step in' several times, finally resorting to 'step out' if unsuccessful.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBlackboxPatterns', params?: Debugger.SetBlackboxPatternsParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.setBlackboxPatterns', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Makes backend skip steps in the script in blackboxed ranges. VM will try leave blacklisted scripts by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. Positions array contains positions where blackbox state is changed. First interval isn't blackboxed. Array should be sorted.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBlackboxedRanges', params?: Debugger.SetBlackboxedRangesParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Debugger.setBlackboxedRanges', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Enables console domain, sends the messages collected so far to the client by means of the <code>messageAdded</code> notification.[m
[31m-         */[m
[31m-        post(method: 'Console.enable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Disables console domain, prevents further console messages from being reported to the client.[m
[31m-         */[m
[31m-        post(method: 'Console.disable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Does nothing.[m
[31m-         */[m
[31m-        post(method: 'Console.clearMessages', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Profiler.enable', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Profiler.disable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Changes CPU profiler sampling interval. Must be called before CPU profiles recording started.[m
[31m-         */[m
[31m-        post(method: 'Profiler.setSamplingInterval', params?: Profiler.SetSamplingIntervalParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Profiler.setSamplingInterval', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Profiler.start', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Profiler.stop', callback?: (err: Error | null, params: Profiler.StopReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Enable precise code coverage. Coverage data for JavaScript executed before enabling precise code coverage may be incomplete. Enabling prevents running optimized code and resets execution counters.[m
[31m-         */[m
[31m-        post(method: 'Profiler.startPreciseCoverage', params?: Profiler.StartPreciseCoverageParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Profiler.startPreciseCoverage', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Disable precise code coverage. Disabling releases unnecessary execution count records and allows executing optimized code.[m
[31m-         */[m
[31m-        post(method: 'Profiler.stopPreciseCoverage', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Collect coverage data for the current isolate, and resets execution counters. Precise code coverage needs to have started.[m
[31m-         */[m
[31m-        post(method: 'Profiler.takePreciseCoverage', callback?: (err: Error | null, params: Profiler.TakePreciseCoverageReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Collect coverage data for the current isolate. The coverage data may be incomplete due to garbage collection.[m
[31m-         */[m
[31m-        post(method: 'Profiler.getBestEffortCoverage', callback?: (err: Error | null, params: Profiler.GetBestEffortCoverageReturnType) => void): void;[m
[31m-        post(method: 'HeapProfiler.enable', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.disable', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.startTrackingHeapObjects', params?: HeapProfiler.StartTrackingHeapObjectsParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.startTrackingHeapObjects', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.stopTrackingHeapObjects', params?: HeapProfiler.StopTrackingHeapObjectsParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.stopTrackingHeapObjects', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.takeHeapSnapshot', params?: HeapProfiler.TakeHeapSnapshotParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.takeHeapSnapshot', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.collectGarbage', callback?: (err: Error | null) => void): void;[m
[31m-        post([m
[31m-            method: 'HeapProfiler.getObjectByHeapObjectId',[m
[31m-            params?: HeapProfiler.GetObjectByHeapObjectIdParameterType,[m
[31m-            callback?: (err: Error | null, params: HeapProfiler.GetObjectByHeapObjectIdReturnType) => void[m
[31m-        ): void;[m
[31m-        post(method: 'HeapProfiler.getObjectByHeapObjectId', callback?: (err: Error | null, params: HeapProfiler.GetObjectByHeapObjectIdReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Enables console to refer to the node with given id via $x (see Command Line API for more details $x functions).[m
[31m-         */[m
[31m-        post(method: 'HeapProfiler.addInspectedHeapObject', params?: HeapProfiler.AddInspectedHeapObjectParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.addInspectedHeapObject', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.getHeapObjectId', params?: HeapProfiler.GetHeapObjectIdParameterType, callback?: (err: Error | null, params: HeapProfiler.GetHeapObjectIdReturnType) => void): void;[m
[31m-        post(method: 'HeapProfiler.getHeapObjectId', callback?: (err: Error | null, params: HeapProfiler.GetHeapObjectIdReturnType) => void): void;[m
[31m-        post(method: 'HeapProfiler.startSampling', params?: HeapProfiler.StartSamplingParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.startSampling', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'HeapProfiler.stopSampling', callback?: (err: Error | null, params: HeapProfiler.StopSamplingReturnType) => void): void;[m
[31m-        post(method: 'HeapProfiler.getSamplingProfile', callback?: (err: Error | null, params: HeapProfiler.GetSamplingProfileReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Gets supported tracing categories.[m
[31m-         */[m
[31m-        post(method: 'NodeTracing.getCategories', callback?: (err: Error | null, params: NodeTracing.GetCategoriesReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Start trace events collection.[m
[31m-         */[m
[31m-        post(method: 'NodeTracing.start', params?: NodeTracing.StartParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'NodeTracing.start', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Stop trace events collection. Remaining collected events will be sent as a sequence of[m
[31m-         * dataCollected events followed by tracingComplete event.[m
[31m-         */[m
[31m-        post(method: 'NodeTracing.stop', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Sends protocol message over session with given id.[m
[31m-         */[m
[31m-        post(method: 'NodeWorker.sendMessageToWorker', params?: NodeWorker.SendMessageToWorkerParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'NodeWorker.sendMessageToWorker', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Instructs the inspector to attach to running workers. Will also attach to new workers[m
[31m-         * as they start[m
[31m-         */[m
[31m-        post(method: 'NodeWorker.enable', params?: NodeWorker.EnableParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'NodeWorker.enable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Detaches from all running workers and disables attaching to new workers as they are started.[m
[31m-         */[m
[31m-        post(method: 'NodeWorker.disable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Detached from the worker with given sessionId.[m
[31m-         */[m
[31m-        post(method: 'NodeWorker.detach', params?: NodeWorker.DetachParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'NodeWorker.detach', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Disables network tracking, prevents network events from being sent to the client.[m
[31m-         */[m
[31m-        post(method: 'Network.disable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Enables network tracking, network events will now be delivered to the client.[m
[31m-         */[m
[31m-        post(method: 'Network.enable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Returns post data sent with the request. Returns an error when no data was sent with the request.[m
[31m-         */[m
[31m-        post(method: 'Network.getRequestPostData', params?: Network.GetRequestPostDataParameterType, callback?: (err: Error | null, params: Network.GetRequestPostDataReturnType) => void): void;[m
[31m-        post(method: 'Network.getRequestPostData', callback?: (err: Error | null, params: Network.GetRequestPostDataReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Returns content served for the given request.[m
[31m-         */[m
[31m-        post(method: 'Network.getResponseBody', params?: Network.GetResponseBodyParameterType, callback?: (err: Error | null, params: Network.GetResponseBodyReturnType) => void): void;[m
[31m-        post(method: 'Network.getResponseBody', callback?: (err: Error | null, params: Network.GetResponseBodyReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Enables streaming of the response for the given requestId.[m
[31m-         * If enabled, the dataReceived event contains the data that was received during streaming.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post([m
[31m-            method: 'Network.streamResourceContent',[m
[31m-            params?: Network.StreamResourceContentParameterType,[m
[31m-            callback?: (err: Error | null, params: Network.StreamResourceContentReturnType) => void[m
[31m-        ): void;[m
[31m-        post(method: 'Network.streamResourceContent', callback?: (err: Error | null, params: Network.StreamResourceContentReturnType) => void): void;[m
[31m-        /**[m
[31m-         * Enable the NodeRuntime events except by `NodeRuntime.waitingForDisconnect`.[m
[31m-         */[m
[31m-        post(method: 'NodeRuntime.enable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Disable NodeRuntime events[m
[31m-         */[m
[31m-        post(method: 'NodeRuntime.disable', callback?: (err: Error | null) => void): void;[m
[31m-        /**[m
[31m-         * Enable the `NodeRuntime.waitingForDisconnect`.[m
[31m-         */[m
[31m-        post(method: 'NodeRuntime.notifyWhenWaitingForDisconnect', params?: NodeRuntime.NotifyWhenWaitingForDisconnectParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'NodeRuntime.notifyWhenWaitingForDisconnect', callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Target.setAutoAttach', params?: Target.SetAutoAttachParameterType, callback?: (err: Error | null) => void): void;[m
[31m-        post(method: 'Target.setAutoAttach', callback?: (err: Error | null) => void): void;[m
[31m-[m
[31m-        addListener(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        addListener(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        addListener(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        addListener(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        addListener(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        addListener(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        addListener(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        addListener(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        addListener(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        addListener(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        addListener(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        addListener(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        addListener(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        addListener(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        addListener(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        addListener(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        addListener(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        addListener(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        addListener(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        addListener(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        addListener(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        addListener(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        addListener(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        addListener(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
[31m-        emit(event: string | symbol, ...args: any[]): boolean;[m
[31m-        emit(event: 'inspectorNotification', message: InspectorNotification<object>): boolean;[m
[31m-        emit(event: 'Runtime.executionContextCreated', message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.executionContextDestroyed', message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.executionContextsCleared'): boolean;[m
[31m-        emit(event: 'Runtime.exceptionThrown', message: InspectorNotification<Runtime.ExceptionThrownEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.exceptionRevoked', message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.consoleAPICalled', message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.inspectRequested', message: InspectorNotification<Runtime.InspectRequestedEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.scriptParsed', message: InspectorNotification<Debugger.ScriptParsedEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.scriptFailedToParse', message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.breakpointResolved', message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.paused', message: InspectorNotification<Debugger.PausedEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.resumed'): boolean;[m
[31m-        emit(event: 'Console.messageAdded', message: InspectorNotification<Console.MessageAddedEventDataType>): boolean;[m
[31m-        emit(event: 'Profiler.consoleProfileStarted', message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>): boolean;[m
[31m-        emit(event: 'Profiler.consoleProfileFinished', message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>): boolean;[m
[31m-        emit(event: 'HeapProfiler.addHeapSnapshotChunk', message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>): boolean;[m
[31m-        emit(event: 'HeapProfiler.resetProfiles'): boolean;[m
[31m-        emit(event: 'HeapProfiler.reportHeapSnapshotProgress', message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>): boolean;[m
[31m-        emit(event: 'HeapProfiler.lastSeenObjectId', message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>): boolean;[m
[31m-        emit(event: 'HeapProfiler.heapStatsUpdate', message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>): boolean;[m
[31m-        emit(event: 'NodeTracing.dataCollected', message: InspectorNotification<NodeTracing.DataCollectedEventDataType>): boolean;[m
[31m-        emit(event: 'NodeTracing.tracingComplete'): boolean;[m
[31m-        emit(event: 'NodeWorker.attachedToWorker', message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>): boolean;[m
[31m-        emit(event: 'NodeWorker.detachedFromWorker', message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>): boolean;[m
[31m-        emit(event: 'NodeWorker.receivedMessageFromWorker', message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>): boolean;[m
[31m-        emit(event: 'Network.requestWillBeSent', message: InspectorNotification<Network.RequestWillBeSentEventDataType>): boolean;[m
[31m-        emit(event: 'Network.responseReceived', message: InspectorNotification<Network.ResponseReceivedEventDataType>): boolean;[m
[31m-        emit(event: 'Network.loadingFailed', message: InspectorNotification<Network.LoadingFailedEventDataType>): boolean;[m
[31m-        emit(event: 'Network.loadingFinished', message: InspectorNotification<Network.LoadingFinishedEventDataType>): boolean;[m
[31m-        emit(event: 'Network.dataReceived', message: InspectorNotification<Network.DataReceivedEventDataType>): boolean;[m
[31m-        emit(event: 'NodeRuntime.waitingForDisconnect'): boolean;[m
[31m-        emit(event: 'NodeRuntime.waitingForDebugger'): boolean;[m
[31m-        emit(event: 'Target.targetCreated', message: InspectorNotification<Target.TargetCreatedEventDataType>): boolean;[m
[31m-        emit(event: 'Target.attachedToTarget', message: InspectorNotification<Target.AttachedToTargetEventDataType>): boolean;[m
[31m-        on(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        on(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        on(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        on(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        on(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        on(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        on(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        on(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        on(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        on(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        on(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        on(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        on(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        on(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        on(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        on(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        on(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        on(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        on(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        on(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        on(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        on(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        on(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        on(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        on(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        on(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        on(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        on(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        on(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        on(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        on(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        on(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        on(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        on(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        on(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        on(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
[31m-        once(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        once(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        once(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        once(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        once(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        once(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        once(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        once(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        once(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        once(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        once(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        once(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        once(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        once(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        once(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        once(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        once(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        once(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        once(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        once(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        once(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        once(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        once(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        once(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        once(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        once(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        once(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        once(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        once(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        once(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        once(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        once(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        once(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        once(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        once(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        once(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
[31m-        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        prependListener(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        prependListener(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        prependListener(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        prependListener(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        prependListener(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        prependListener(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        prependListener(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        prependListener(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        prependListener(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        prependListener(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        prependListener(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        prependListener(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        prependListener(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        prependOnceListener(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        prependOnceListener(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        prependOnceListener(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Activate inspector on host and port. Equivalent to `node --inspect=[[host:]port]`, but can be done programmatically after node has[m
[31m-     * started.[m
[31m-     *[m
[31m-     * If wait is `true`, will block until a client has connected to the inspect port[m
[31m-     * and flow control has been passed to the debugger client.[m
[31m-     *[m
[31m-     * See the [security warning](https://nodejs.org/docs/latest-v24.x/api/cli.html#warning-binding-inspector-to-a-public-ipport-combination-is-insecure)[m
[31m-     * regarding the `host` parameter usage.[m
[31m-     * @param port Port to listen on for inspector connections. Defaults to what was specified on the CLI.[m
[31m-     * @param host Host to listen on for inspector connections. Defaults to what was specified on the CLI.[m
[31m-     * @param wait Block until a client has connected. Defaults to what was specified on the CLI.[m
[31m-     * @returns Disposable that calls `inspector.close()`.[m
[31m-     */[m
[31m-    function open(port?: number, host?: string, wait?: boolean): Disposable;[m
[31m-[m
[31m-    /**[m
[31m-     * Deactivate the inspector. Blocks until there are no active connections.[m
[31m-     */[m
[31m-    function close(): void;[m
[31m-[m
[31m-    /**[m
[31m-     * Return the URL of the active inspector, or `undefined` if there is none.[m
[31m-     *[m
[31m-     * ```console[m
[31m-     * $ node --inspect -p 'inspector.url()'[m
[31m-     * Debugger listening on ws://127.0.0.1:9229/166e272e-7a30-4d09-97ce-f1c012b43c34[m
[31m-     * For help, see: https://nodejs.org/en/docs/inspector[m
[31m-     * ws://127.0.0.1:9229/166e272e-7a30-4d09-97ce-f1c012b43c34[m
[31m-     *[m
[31m-     * $ node --inspect=localhost:3000 -p 'inspector.url()'[m
[31m-     * Debugger listening on ws://localhost:3000/51cf8d0e-3c36-4c59-8efd-54519839e56a[m
[31m-     * For help, see: https://nodejs.org/en/docs/inspector[m
[31m-     * ws://localhost:3000/51cf8d0e-3c36-4c59-8efd-54519839e56a[m
[31m-     *[m
[31m-     * $ node -p 'inspector.url()'[m
[31m-     * undefined[m
[31m-     * ```[m
[31m-     */[m
[31m-    function url(): string | undefined;[m
[31m-[m
[31m-    /**[m
[31m-     * Blocks until a client (existing or connected later) has sent `Runtime.runIfWaitingForDebugger` command.[m
[31m-     *[m
[31m-     * An exception will be thrown if there is no active inspector.[m
[31m-     * @since v12.7.0[m
[31m-     */[m
[31m-    function waitForDebugger(): void;[m
[31m-[m
[31m-    // These methods are exposed by the V8 inspector console API (inspector/v8-console.h).[m
[31m-    // The method signatures differ from those of the Node.js console, and are deliberately[m
[31m-    // typed permissively.[m
[31m-    interface InspectorConsole {[m
[31m-        debug(...data: any[]): void;[m
[31m-        error(...data: any[]): void;[m
[31m-        info(...data: any[]): void;[m
[31m-        log(...data: any[]): void;[m
[31m-        warn(...data: any[]): void;[m
[31m-        dir(...data: any[]): void;[m
[31m-        dirxml(...data: any[]): void;[m
[31m-        table(...data: any[]): void;[m
[31m-        trace(...data: any[]): void;[m
[31m-        group(...data: any[]): void;[m
[31m-        groupCollapsed(...data: any[]): void;[m
[31m-        groupEnd(...data: any[]): void;[m
[31m-        clear(...data: any[]): void;[m
[31m-        count(label?: any): void;[m
[31m-        countReset(label?: any): void;[m
[31m-        assert(value?: any, ...data: any[]): void;[m
[31m-        profile(label?: any): void;[m
[31m-        profileEnd(label?: any): void;[m
[31m-        time(label?: any): void;[m
[31m-        timeLog(label?: any): void;[m
[31m-        timeStamp(label?: any): void;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * An object to send messages to the remote inspector console.[m
[31m-     * @since v11.0.0[m
[31m-     */[m
[31m-    const console: InspectorConsole;[m
[31m-[m
[31m-    // DevTools protocol event broadcast methods[m
[31m-    namespace Network {[m
[31m-        /**[m
[31m-         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[31m-         *[m
[31m-         * Broadcasts the `Network.requestWillBeSent` event to connected frontends. This event indicates that[m
[31m-         * the application is about to send an HTTP request.[m
[31m-         * @since v22.6.0[m
[31m-         */[m
[31m-        function requestWillBeSent(params: RequestWillBeSentEventDataType): void;[m
[31m-        /**[m
[31m-         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[31m-         *[m
[31m-         * Broadcasts the `Network.dataReceived` event to connected frontends, or buffers the data if[m
[31m-         * `Network.streamResourceContent` command was not invoked for the given request yet.[m
[31m-         *[m
[31m-         * Also enables `Network.getResponseBody` command to retrieve the response data.[m
[31m-         * @since v24.2.0[m
[31m-         */[m
[31m-        function dataReceived(params: DataReceivedEventDataType): void;[m
[31m-        /**[m
[31m-         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[31m-         *[m
[31m-         * Enables `Network.getRequestPostData` command to retrieve the request data.[m
[31m-         * @since v24.3.0[m
[31m-         */[m
[31m-        function dataSent(params: unknown): void;[m
[31m-        /**[m
[31m-         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[31m-         *[m
[31m-         * Broadcasts the `Network.responseReceived` event to connected frontends. This event indicates that[m
[31m-         * HTTP response is available.[m
[31m-         * @since v22.6.0[m
[31m-         */[m
[31m-        function responseReceived(params: ResponseReceivedEventDataType): void;[m
[31m-        /**[m
[31m-         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[31m-         *[m
[31m-         * Broadcasts the `Network.loadingFinished` event to connected frontends. This event indicates that[m
[31m-         * HTTP request has finished loading.[m
[31m-         * @since v22.6.0[m
[31m-         */[m
[31m-        function loadingFinished(params: LoadingFinishedEventDataType): void;[m
[31m-        /**[m
[31m-         * This feature is only available with the `--experimental-network-inspection` flag enabled.[m
[31m-         *[m
[31m-         * Broadcasts the `Network.loadingFailed` event to connected frontends. This event indicates that[m
[31m-         * HTTP request has failed to load.[m
[31m-         * @since v22.7.0[m
[31m-         */[m
[31m-        function loadingFailed(params: LoadingFailedEventDataType): void;[m
[31m-    }[m
[31m-}[m
[31m-[m
[31m-/**[m
[31m- * The `node:inspector` module provides an API for interacting with the V8[m
[31m- * inspector.[m
[31m- */[m
[31m-declare module 'node:inspector' {[m
[31m-    export * from 'inspector';[m
[31m-}[m
[31m-[m
[31m-/**[m
[31m- * The `node:inspector/promises` module provides an API for interacting with the V8[m
[31m- * inspector.[m
[31m- * @see [source](https://github.com/nodejs/node/blob/v24.x/lib/inspector/promises.js)[m
[31m- * @since v19.0.0[m
[31m- */[m
[31m-declare module 'inspector/promises' {[m
[31m-    import EventEmitter = require('node:events');[m
[31m-    import {[m
[31m-        open,[m
[31m-        close,[m
[31m-        url,[m
[31m-        waitForDebugger,[m
[31m-        console,[m
[31m-        InspectorNotification,[m
[31m-        Schema,[m
[31m-        Runtime,[m
[31m-        Debugger,[m
[31m-        Console,[m
[31m-        Profiler,[m
[31m-        HeapProfiler,[m
[31m-        NodeTracing,[m
[31m-        NodeWorker,[m
[31m-        Network,[m
[31m-        NodeRuntime,[m
[31m-        Target,[m
[31m-    } from 'inspector';[m
[31m-[m
[31m-    /**[m
[31m-     * The `inspector.Session` is used for dispatching messages to the V8 inspector[m
[31m-     * back-end and receiving message responses and notifications.[m
[31m-     * @since v19.0.0[m
[31m-     */[m
[31m-    class Session extends EventEmitter {[m
[31m-        /**[m
[31m-         * Create a new instance of the `inspector.Session` class.[m
[31m-         * The inspector session needs to be connected through `session.connect()` before the messages can be dispatched to the inspector backend.[m
[31m-         */[m
[31m-        constructor();[m
[31m-[m
[31m-        /**[m
[31m-         * Connects a session to the inspector back-end.[m
[31m-         */[m
[31m-        connect(): void;[m
[31m-[m
[31m-        /**[m
[31m-         * Connects a session to the inspector back-end.[m
[31m-         * An exception will be thrown if this API was not called on a Worker thread.[m
[31m-         */[m
[31m-        connectToMainThread(): void;[m
[31m-[m
[31m-        /**[m
[31m-         * Immediately close the session. All pending message callbacks will be called with an error.[m
[31m-         * `session.connect()` will need to be called to be able to send messages again.[m
[31m-         * Reconnected session will lose all inspector state, such as enabled agents or configured breakpoints.[m
[31m-         */[m
[31m-        disconnect(): void;[m
[31m-[m
[31m-        /**[m
[31m-         * Posts a message to the inspector back-end.[m
[31m-         *[m
[31m-         * ```js[m
[31m-         * import { Session } from 'node:inspector/promises';[m
[31m-         * try {[m
[31m-         *   const session = new Session();[m
[31m-         *   session.connect();[m
[31m-         *   const result = await session.post('Runtime.evaluate', { expression: '2 + 2' });[m
[31m-         *   console.log(result);[m
[31m-         * } catch (error) {[m
[31m-         *   console.error(error);[m
[31m-         * }[m
[31m-         * // Output: { result: { type: 'number', value: 4, description: '4' } }[m
[31m-         * ```[m
[31m-         *[m
[31m-         * The latest version of the V8 inspector protocol is published on the[m
[31m-         * [Chrome DevTools Protocol Viewer](https://chromedevtools.github.io/devtools-protocol/v8/).[m
[31m-         *[m
[31m-         * Node.js inspector supports all the Chrome DevTools Protocol domains declared[m
[31m-         * by V8. Chrome DevTools Protocol domain provides an interface for interacting[m
[31m-         * with one of the runtime agents used to inspect the application state and listen[m
[31m-         * to the run-time events.[m
[31m-         */[m
[31m-        post(method: string, params?: object): Promise<void>;[m
[31m-        /**[m
[31m-         * Returns supported domains.[m
[31m-         */[m
[31m-        post(method: 'Schema.getDomains'): Promise<Schema.GetDomainsReturnType>;[m
[31m-        /**[m
[31m-         * Evaluates expression on global object.[m
[31m-         */[m
[31m-        post(method: 'Runtime.evaluate', params?: Runtime.EvaluateParameterType): Promise<Runtime.EvaluateReturnType>;[m
[31m-        /**[m
[31m-         * Add handler to promise with given promise object id.[m
[31m-         */[m
[31m-        post(method: 'Runtime.awaitPromise', params?: Runtime.AwaitPromiseParameterType): Promise<Runtime.AwaitPromiseReturnType>;[m
[31m-        /**[m
[31m-         * Calls function with given declaration on the given object. Object group of the result is inherited from the target object.[m
[31m-         */[m
[31m-        post(method: 'Runtime.callFunctionOn', params?: Runtime.CallFunctionOnParameterType): Promise<Runtime.CallFunctionOnReturnType>;[m
[31m-        /**[m
[31m-         * Returns properties of a given object. Object group of the result is inherited from the target object.[m
[31m-         */[m
[31m-        post(method: 'Runtime.getProperties', params?: Runtime.GetPropertiesParameterType): Promise<Runtime.GetPropertiesReturnType>;[m
[31m-        /**[m
[31m-         * Releases remote object with given id.[m
[31m-         */[m
[31m-        post(method: 'Runtime.releaseObject', params?: Runtime.ReleaseObjectParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Releases all remote objects that belong to a given group.[m
[31m-         */[m
[31m-        post(method: 'Runtime.releaseObjectGroup', params?: Runtime.ReleaseObjectGroupParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Tells inspected instance to run if it was waiting for debugger to attach.[m
[31m-         */[m
[31m-        post(method: 'Runtime.runIfWaitingForDebugger'): Promise<void>;[m
[31m-        /**[m
[31m-         * Enables reporting of execution contexts creation by means of <code>executionContextCreated</code> event. When the reporting gets enabled the event will be sent immediately for each existing execution context.[m
[31m-         */[m
[31m-        post(method: 'Runtime.enable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Disables reporting of execution contexts creation.[m
[31m-         */[m
[31m-        post(method: 'Runtime.disable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Discards collected exceptions and console API calls.[m
[31m-         */[m
[31m-        post(method: 'Runtime.discardConsoleEntries'): Promise<void>;[m
[31m-        /**[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Runtime.setCustomObjectFormatterEnabled', params?: Runtime.SetCustomObjectFormatterEnabledParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Compiles expression.[m
[31m-         */[m
[31m-        post(method: 'Runtime.compileScript', params?: Runtime.CompileScriptParameterType): Promise<Runtime.CompileScriptReturnType>;[m
[31m-        /**[m
[31m-         * Runs script with given id in a given context.[m
[31m-         */[m
[31m-        post(method: 'Runtime.runScript', params?: Runtime.RunScriptParameterType): Promise<Runtime.RunScriptReturnType>;[m
[31m-        post(method: 'Runtime.queryObjects', params?: Runtime.QueryObjectsParameterType): Promise<Runtime.QueryObjectsReturnType>;[m
[31m-        /**[m
[31m-         * Returns all let, const and class variables from global scope.[m
[31m-         */[m
[31m-        post(method: 'Runtime.globalLexicalScopeNames', params?: Runtime.GlobalLexicalScopeNamesParameterType): Promise<Runtime.GlobalLexicalScopeNamesReturnType>;[m
[31m-        /**[m
[31m-         * Enables debugger for the given page. Clients should not assume that the debugging has been enabled until the result for this command is received.[m
[31m-         */[m
[31m-        post(method: 'Debugger.enable'): Promise<Debugger.EnableReturnType>;[m
[31m-        /**[m
[31m-         * Disables debugger for given page.[m
[31m-         */[m
[31m-        post(method: 'Debugger.disable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Activates / deactivates all breakpoints on the page.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBreakpointsActive', params?: Debugger.SetBreakpointsActiveParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Makes page not interrupt on any pauses (breakpoint, exception, dom exception etc).[m
[31m-         */[m
[31m-        post(method: 'Debugger.setSkipAllPauses', params?: Debugger.SetSkipAllPausesParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Sets JavaScript breakpoint at given location specified either by URL or URL regex. Once this command is issued, all existing parsed scripts will have breakpoints resolved and returned in <code>locations</code> property. Further matching script parsing will result in subsequent <code>breakpointResolved</code> events issued. This logical breakpoint will survive page reloads.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBreakpointByUrl', params?: Debugger.SetBreakpointByUrlParameterType): Promise<Debugger.SetBreakpointByUrlReturnType>;[m
[31m-        /**[m
[31m-         * Sets JavaScript breakpoint at a given location.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBreakpoint', params?: Debugger.SetBreakpointParameterType): Promise<Debugger.SetBreakpointReturnType>;[m
[31m-        /**[m
[31m-         * Removes JavaScript breakpoint.[m
[31m-         */[m
[31m-        post(method: 'Debugger.removeBreakpoint', params?: Debugger.RemoveBreakpointParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Returns possible locations for breakpoint. scriptId in start and end range locations should be the same.[m
[31m-         */[m
[31m-        post(method: 'Debugger.getPossibleBreakpoints', params?: Debugger.GetPossibleBreakpointsParameterType): Promise<Debugger.GetPossibleBreakpointsReturnType>;[m
[31m-        /**[m
[31m-         * Continues execution until specific location is reached.[m
[31m-         */[m
[31m-        post(method: 'Debugger.continueToLocation', params?: Debugger.ContinueToLocationParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.pauseOnAsyncCall', params?: Debugger.PauseOnAsyncCallParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Steps over the statement.[m
[31m-         */[m
[31m-        post(method: 'Debugger.stepOver'): Promise<void>;[m
[31m-        /**[m
[31m-         * Steps into the function call.[m
[31m-         */[m
[31m-        post(method: 'Debugger.stepInto', params?: Debugger.StepIntoParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Steps out of the function call.[m
[31m-         */[m
[31m-        post(method: 'Debugger.stepOut'): Promise<void>;[m
[31m-        /**[m
[31m-         * Stops on the next JavaScript statement.[m
[31m-         */[m
[31m-        post(method: 'Debugger.pause'): Promise<void>;[m
[31m-        /**[m
[31m-         * This method is deprecated - use Debugger.stepInto with breakOnAsyncCall and Debugger.pauseOnAsyncTask instead. Steps into next scheduled async task if any is scheduled before next pause. Returns success when async task is actually scheduled, returns error if no task were scheduled or another scheduleStepIntoAsync was called.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.scheduleStepIntoAsync'): Promise<void>;[m
[31m-        /**[m
[31m-         * Resumes JavaScript execution.[m
[31m-         */[m
[31m-        post(method: 'Debugger.resume'): Promise<void>;[m
[31m-        /**[m
[31m-         * Returns stack trace with given <code>stackTraceId</code>.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.getStackTrace', params?: Debugger.GetStackTraceParameterType): Promise<Debugger.GetStackTraceReturnType>;[m
[31m-        /**[m
[31m-         * Searches for given string in script content.[m
[31m-         */[m
[31m-        post(method: 'Debugger.searchInContent', params?: Debugger.SearchInContentParameterType): Promise<Debugger.SearchInContentReturnType>;[m
[31m-        /**[m
[31m-         * Edits JavaScript source live.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setScriptSource', params?: Debugger.SetScriptSourceParameterType): Promise<Debugger.SetScriptSourceReturnType>;[m
[31m-        /**[m
[31m-         * Restarts particular call frame from the beginning.[m
[31m-         */[m
[31m-        post(method: 'Debugger.restartFrame', params?: Debugger.RestartFrameParameterType): Promise<Debugger.RestartFrameReturnType>;[m
[31m-        /**[m
[31m-         * Returns source for the script with given id.[m
[31m-         */[m
[31m-        post(method: 'Debugger.getScriptSource', params?: Debugger.GetScriptSourceParameterType): Promise<Debugger.GetScriptSourceReturnType>;[m
[31m-        /**[m
[31m-         * Defines pause on exceptions state. Can be set to stop on all exceptions, uncaught exceptions or no exceptions. Initial pause on exceptions state is <code>none</code>.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setPauseOnExceptions', params?: Debugger.SetPauseOnExceptionsParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Evaluates expression on a given call frame.[m
[31m-         */[m
[31m-        post(method: 'Debugger.evaluateOnCallFrame', params?: Debugger.EvaluateOnCallFrameParameterType): Promise<Debugger.EvaluateOnCallFrameReturnType>;[m
[31m-        /**[m
[31m-         * Changes value of variable in a callframe. Object-based scopes are not supported and must be mutated manually.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setVariableValue', params?: Debugger.SetVariableValueParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Changes return value in top frame. Available only at return break position.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.setReturnValue', params?: Debugger.SetReturnValueParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Enables or disables async call stacks tracking.[m
[31m-         */[m
[31m-        post(method: 'Debugger.setAsyncCallStackDepth', params?: Debugger.SetAsyncCallStackDepthParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Replace previous blackbox patterns with passed ones. Forces backend to skip stepping/pausing in scripts with url matching one of the patterns. VM will try to leave blackboxed script by performing 'step in' several times, finally resorting to 'step out' if unsuccessful.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBlackboxPatterns', params?: Debugger.SetBlackboxPatternsParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Makes backend skip steps in the script in blackboxed ranges. VM will try leave blacklisted scripts by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. Positions array contains positions where blackbox state is changed. First interval isn't blackboxed. Array should be sorted.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Debugger.setBlackboxedRanges', params?: Debugger.SetBlackboxedRangesParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Enables console domain, sends the messages collected so far to the client by means of the <code>messageAdded</code> notification.[m
[31m-         */[m
[31m-        post(method: 'Console.enable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Disables console domain, prevents further console messages from being reported to the client.[m
[31m-         */[m
[31m-        post(method: 'Console.disable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Does nothing.[m
[31m-         */[m
[31m-        post(method: 'Console.clearMessages'): Promise<void>;[m
[31m-        post(method: 'Profiler.enable'): Promise<void>;[m
[31m-        post(method: 'Profiler.disable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Changes CPU profiler sampling interval. Must be called before CPU profiles recording started.[m
[31m-         */[m
[31m-        post(method: 'Profiler.setSamplingInterval', params?: Profiler.SetSamplingIntervalParameterType): Promise<void>;[m
[31m-        post(method: 'Profiler.start'): Promise<void>;[m
[31m-        post(method: 'Profiler.stop'): Promise<Profiler.StopReturnType>;[m
[31m-        /**[m
[31m-         * Enable precise code coverage. Coverage data for JavaScript executed before enabling precise code coverage may be incomplete. Enabling prevents running optimized code and resets execution counters.[m
[31m-         */[m
[31m-        post(method: 'Profiler.startPreciseCoverage', params?: Profiler.StartPreciseCoverageParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Disable precise code coverage. Disabling releases unnecessary execution count records and allows executing optimized code.[m
[31m-         */[m
[31m-        post(method: 'Profiler.stopPreciseCoverage'): Promise<void>;[m
[31m-        /**[m
[31m-         * Collect coverage data for the current isolate, and resets execution counters. Precise code coverage needs to have started.[m
[31m-         */[m
[31m-        post(method: 'Profiler.takePreciseCoverage'): Promise<Profiler.TakePreciseCoverageReturnType>;[m
[31m-        /**[m
[31m-         * Collect coverage data for the current isolate. The coverage data may be incomplete due to garbage collection.[m
[31m-         */[m
[31m-        post(method: 'Profiler.getBestEffortCoverage'): Promise<Profiler.GetBestEffortCoverageReturnType>;[m
[31m-        post(method: 'HeapProfiler.enable'): Promise<void>;[m
[31m-        post(method: 'HeapProfiler.disable'): Promise<void>;[m
[31m-        post(method: 'HeapProfiler.startTrackingHeapObjects', params?: HeapProfiler.StartTrackingHeapObjectsParameterType): Promise<void>;[m
[31m-        post(method: 'HeapProfiler.stopTrackingHeapObjects', params?: HeapProfiler.StopTrackingHeapObjectsParameterType): Promise<void>;[m
[31m-        post(method: 'HeapProfiler.takeHeapSnapshot', params?: HeapProfiler.TakeHeapSnapshotParameterType): Promise<void>;[m
[31m-        post(method: 'HeapProfiler.collectGarbage'): Promise<void>;[m
[31m-        post(method: 'HeapProfiler.getObjectByHeapObjectId', params?: HeapProfiler.GetObjectByHeapObjectIdParameterType): Promise<HeapProfiler.GetObjectByHeapObjectIdReturnType>;[m
[31m-        /**[m
[31m-         * Enables console to refer to the node with given id via $x (see Command Line API for more details $x functions).[m
[31m-         */[m
[31m-        post(method: 'HeapProfiler.addInspectedHeapObject', params?: HeapProfiler.AddInspectedHeapObjectParameterType): Promise<void>;[m
[31m-        post(method: 'HeapProfiler.getHeapObjectId', params?: HeapProfiler.GetHeapObjectIdParameterType): Promise<HeapProfiler.GetHeapObjectIdReturnType>;[m
[31m-        post(method: 'HeapProfiler.startSampling', params?: HeapProfiler.StartSamplingParameterType): Promise<void>;[m
[31m-        post(method: 'HeapProfiler.stopSampling'): Promise<HeapProfiler.StopSamplingReturnType>;[m
[31m-        post(method: 'HeapProfiler.getSamplingProfile'): Promise<HeapProfiler.GetSamplingProfileReturnType>;[m
[31m-        /**[m
[31m-         * Gets supported tracing categories.[m
[31m-         */[m
[31m-        post(method: 'NodeTracing.getCategories'): Promise<NodeTracing.GetCategoriesReturnType>;[m
[31m-        /**[m
[31m-         * Start trace events collection.[m
[31m-         */[m
[31m-        post(method: 'NodeTracing.start', params?: NodeTracing.StartParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Stop trace events collection. Remaining collected events will be sent as a sequence of[m
[31m-         * dataCollected events followed by tracingComplete event.[m
[31m-         */[m
[31m-        post(method: 'NodeTracing.stop'): Promise<void>;[m
[31m-        /**[m
[31m-         * Sends protocol message over session with given id.[m
[31m-         */[m
[31m-        post(method: 'NodeWorker.sendMessageToWorker', params?: NodeWorker.SendMessageToWorkerParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Instructs the inspector to attach to running workers. Will also attach to new workers[m
[31m-         * as they start[m
[31m-         */[m
[31m-        post(method: 'NodeWorker.enable', params?: NodeWorker.EnableParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Detaches from all running workers and disables attaching to new workers as they are started.[m
[31m-         */[m
[31m-        post(method: 'NodeWorker.disable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Detached from the worker with given sessionId.[m
[31m-         */[m
[31m-        post(method: 'NodeWorker.detach', params?: NodeWorker.DetachParameterType): Promise<void>;[m
[31m-        /**[m
[31m-         * Disables network tracking, prevents network events from being sent to the client.[m
[31m-         */[m
[31m-        post(method: 'Network.disable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Enables network tracking, network events will now be delivered to the client.[m
[31m-         */[m
[31m-        post(method: 'Network.enable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Returns post data sent with the request. Returns an error when no data was sent with the request.[m
[31m-         */[m
[31m-        post(method: 'Network.getRequestPostData', params?: Network.GetRequestPostDataParameterType): Promise<Network.GetRequestPostDataReturnType>;[m
[31m-        /**[m
[31m-         * Returns content served for the given request.[m
[31m-         */[m
[31m-        post(method: 'Network.getResponseBody', params?: Network.GetResponseBodyParameterType): Promise<Network.GetResponseBodyReturnType>;[m
[31m-        /**[m
[31m-         * Enables streaming of the response for the given requestId.[m
[31m-         * If enabled, the dataReceived event contains the data that was received during streaming.[m
[31m-         * @experimental[m
[31m-         */[m
[31m-        post(method: 'Network.streamResourceContent', params?: Network.StreamResourceContentParameterType): Promise<Network.StreamResourceContentReturnType>;[m
[31m-        /**[m
[31m-         * Enable the NodeRuntime events except by `NodeRuntime.waitingForDisconnect`.[m
[31m-         */[m
[31m-        post(method: 'NodeRuntime.enable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Disable NodeRuntime events[m
[31m-         */[m
[31m-        post(method: 'NodeRuntime.disable'): Promise<void>;[m
[31m-        /**[m
[31m-         * Enable the `NodeRuntime.waitingForDisconnect`.[m
[31m-         */[m
[31m-        post(method: 'NodeRuntime.notifyWhenWaitingForDisconnect', params?: NodeRuntime.NotifyWhenWaitingForDisconnectParameterType): Promise<void>;[m
[31m-        post(method: 'Target.setAutoAttach', params?: Target.SetAutoAttachParameterType): Promise<void>;[m
[31m-[m
[31m-        addListener(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        addListener(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        addListener(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        addListener(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        addListener(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        addListener(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        addListener(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        addListener(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        addListener(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        addListener(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        addListener(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        addListener(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        addListener(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        addListener(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        addListener(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        addListener(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        addListener(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        addListener(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        addListener(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        addListener(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        addListener(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        addListener(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        addListener(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        addListener(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        addListener(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        addListener(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
[31m-        emit(event: string | symbol, ...args: any[]): boolean;[m
[31m-        emit(event: 'inspectorNotification', message: InspectorNotification<object>): boolean;[m
[31m-        emit(event: 'Runtime.executionContextCreated', message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.executionContextDestroyed', message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.executionContextsCleared'): boolean;[m
[31m-        emit(event: 'Runtime.exceptionThrown', message: InspectorNotification<Runtime.ExceptionThrownEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.exceptionRevoked', message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.consoleAPICalled', message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>): boolean;[m
[31m-        emit(event: 'Runtime.inspectRequested', message: InspectorNotification<Runtime.InspectRequestedEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.scriptParsed', message: InspectorNotification<Debugger.ScriptParsedEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.scriptFailedToParse', message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.breakpointResolved', message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.paused', message: InspectorNotification<Debugger.PausedEventDataType>): boolean;[m
[31m-        emit(event: 'Debugger.resumed'): boolean;[m
[31m-        emit(event: 'Console.messageAdded', message: InspectorNotification<Console.MessageAddedEventDataType>): boolean;[m
[31m-        emit(event: 'Profiler.consoleProfileStarted', message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>): boolean;[m
[31m-        emit(event: 'Profiler.consoleProfileFinished', message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>): boolean;[m
[31m-        emit(event: 'HeapProfiler.addHeapSnapshotChunk', message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>): boolean;[m
[31m-        emit(event: 'HeapProfiler.resetProfiles'): boolean;[m
[31m-        emit(event: 'HeapProfiler.reportHeapSnapshotProgress', message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>): boolean;[m
[31m-        emit(event: 'HeapProfiler.lastSeenObjectId', message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>): boolean;[m
[31m-        emit(event: 'HeapProfiler.heapStatsUpdate', message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>): boolean;[m
[31m-        emit(event: 'NodeTracing.dataCollected', message: InspectorNotification<NodeTracing.DataCollectedEventDataType>): boolean;[m
[31m-        emit(event: 'NodeTracing.tracingComplete'): boolean;[m
[31m-        emit(event: 'NodeWorker.attachedToWorker', message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>): boolean;[m
[31m-        emit(event: 'NodeWorker.detachedFromWorker', message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>): boolean;[m
[31m-        emit(event: 'NodeWorker.receivedMessageFromWorker', message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>): boolean;[m
[31m-        emit(event: 'Network.requestWillBeSent', message: InspectorNotification<Network.RequestWillBeSentEventDataType>): boolean;[m
[31m-        emit(event: 'Network.responseReceived', message: InspectorNotification<Network.ResponseReceivedEventDataType>): boolean;[m
[31m-        emit(event: 'Network.loadingFailed', message: InspectorNotification<Network.LoadingFailedEventDataType>): boolean;[m
[31m-        emit(event: 'Network.loadingFinished', message: InspectorNotification<Network.LoadingFinishedEventDataType>): boolean;[m
[31m-        emit(event: 'Network.dataReceived', message: InspectorNotification<Network.DataReceivedEventDataType>): boolean;[m
[31m-        emit(event: 'NodeRuntime.waitingForDisconnect'): boolean;[m
[31m-        emit(event: 'NodeRuntime.waitingForDebugger'): boolean;[m
[31m-        emit(event: 'Target.targetCreated', message: InspectorNotification<Target.TargetCreatedEventDataType>): boolean;[m
[31m-        emit(event: 'Target.attachedToTarget', message: InspectorNotification<Target.AttachedToTargetEventDataType>): boolean;[m
[31m-        on(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        on(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        on(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        on(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        on(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        on(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        on(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        on(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        on(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        on(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        on(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        on(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        on(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        on(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        on(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        on(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        on(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        on(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        on(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        on(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        on(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        on(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        on(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        on(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        on(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        on(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        on(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        on(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        on(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        on(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        on(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        on(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        on(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        on(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        on(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        on(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
[31m-        once(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        once(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        once(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        once(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        once(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        once(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        once(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        once(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        once(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        once(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        once(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        once(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        once(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        once(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        once(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        once(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        once(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        once(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        once(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        once(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        once(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        once(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        once(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        once(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        once(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        once(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        once(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        once(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        once(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        once(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        once(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        once(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        once(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        once(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        once(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        once(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
[31m-        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        prependListener(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        prependListener(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        prependListener(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        prependListener(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        prependListener(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        prependListener(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        prependListener(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        prependListener(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        prependListener(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        prependListener(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        prependListener(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        prependListener(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        prependListener(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        prependListener(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        prependListener(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        prependListener(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        prependListener(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[31m-        /**[m
[31m-         * Emitted when any notification from the V8 Inspector is received.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'inspectorNotification', listener: (message: InspectorNotification<object>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when new execution context is created.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when execution context is destroyed.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when all executionContexts were cleared in browser[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when exception was thrown and unhandled.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when unhandled exception was revoked.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when console API was called.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when virtual machine fails to parse the script.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when breakpoint is resolved to an actual script and location.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when the virtual machine resumed execution.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Debugger.resumed', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when new console message is added.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Sent when new profile recording is started using console.profile() call.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[31m-        prependOnceListener(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[31m-         */[m
[31m-        prependOnceListener(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Contains an bucket of collected trace events.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[31m-         * delivered via dataCollected events.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[31m-        /**[m
[31m-         * Issued when attached to a worker.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Issued when detached from the worker.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Notifies about a new protocol message received from the session[m
[31m-         * (session ID is provided in attachedToWorker notification).[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when page is about to send HTTP request.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Network.requestWillBeSent', listener: (message: InspectorNotification<Network.RequestWillBeSentEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when HTTP response is available.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Network.responseReceived', listener: (message: InspectorNotification<Network.ResponseReceivedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'Network.loadingFailed', listener: (message: InspectorNotification<Network.LoadingFailedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'Network.loadingFinished', listener: (message: InspectorNotification<Network.LoadingFinishedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * Fired when data chunk was received over the network.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'Network.dataReceived', listener: (message: InspectorNotification<Network.DataReceivedEventDataType>) => void): this;[m
[31m-        /**[m
[31m-         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[31m-         * enabled.[m
[31m-         * It is fired when the Node process finished all code execution and is[m
[31m-         * waiting for all frontends to disconnect.[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[31m-        /**[m
[31m-         * This event is fired when the runtime is waiting for the debugger. For[m
[31m-         * example, when inspector.waitingForDebugger is called[m
[31m-         */[m
[31m-        prependOnceListener(event: 'NodeRuntime.waitingForDebugger', listener: () => void): this;[m
[31m-        prependOnceListener(event: 'Target.targetCreated', listener: (message: InspectorNotification<Target.TargetCreatedEventDataType>) => void): this;[m
[31m-        prependOnceListener(event: 'Target.attachedToTarget', listener: (message: InspectorNotification<Target.AttachedToTargetEventDataType>) => void): this;[m
     }[m
[31m-[m
[31m-    export {[m
[31m-        Session,[m
[31m-        open,[m
[31m-        close,[m
[31m-        url,[m
[31m-        waitForDebugger,[m
[31m-        console,[m
[31m-        InspectorNotification,[m
[31m-        Schema,[m
[31m-        Runtime,[m
[31m-        Debugger,[m
[31m-        Console,[m
[31m-        Profiler,[m
[31m-        HeapProfiler,[m
[31m-        NodeTracing,[m
[31m-        NodeWorker,[m
[31m-        Network,[m
[31m-        NodeRuntime,[m
[31m-        Target,[m
[31m-    };[m
 }[m
 [m
 /**[m
[36m@@ -4206,6 +248,6 @@[m [mdeclare module 'inspector/promises' {[m
  * inspector.[m
  * @since v19.0.0[m
  */[m
[31m-declare module 'node:inspector/promises' {[m
[31m-    export * from 'inspector/promises';[m
[32m+[m[32mdeclare module "node:inspector/promises" {[m
[32m+[m[32m    export * from "inspector/promises";[m
 }[m
[1mdiff --git a/services/node_modules/@types/node/module.d.ts b/services/node_modules/@types/node/module.d.ts[m
[1mindex c0c85f96..b563b4be 100644[m
[1m--- a/services/node_modules/@types/node/module.d.ts[m
[1m+++ b/services/node_modules/@types/node/module.d.ts[m
[36m@@ -359,6 +359,7 @@[m [mdeclare module "module" {[m
         interface ImportAttributes extends NodeJS.Dict<string> {[m
             type?: string | undefined;[m
         }[m
[32m+[m[32m        type ImportPhase = "source" | "evaluation";[m
         type ModuleFormat =[m
             | "addon"[m
             | "builtin"[m
[1mdiff --git a/services/node_modules/@types/node/net.d.ts b/services/node_modules/@types/node/net.d.ts[m
[1mindex 7a4c5cb7..dc01e364 100644[m
[1m--- a/services/node_modules/@types/node/net.d.ts[m
[1m+++ b/services/node_modules/@types/node/net.d.ts[m
[36m@@ -805,6 +805,27 @@[m [mdeclare module "net" {[m
          * @param value Any JS value[m
          */[m
         static isBlockList(value: unknown): value is BlockList;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const blockList = new net.BlockList();[m
[32m+[m[32m         * const data = [[m
[32m+[m[32m         *   'Subnet: IPv4 192.168.1.0/24',[m
[32m+[m[32m         *   'Address: IPv4 10.0.0.5',[m
[32m+[m[32m         *   'Range: IPv4 192.168.2.1-192.168.2.10',[m
[32m+[m[32m         *   'Range: IPv4 10.0.0.1-10.0.0.10',[m
[32m+[m[32m         * ];[m
[32m+[m[32m         * blockList.fromJSON(data);[m
[32m+[m[32m         * blockList.fromJSON(JSON.stringify(data));[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v24.5.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        fromJSON(data: string | readonly string[]): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v24.5.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        toJSON(): readonly string[];[m
     }[m
     interface TcpNetConnectOpts extends TcpSocketConnectOpts, SocketConstructorOpts {[m
         timeout?: number | undefined;[m
[1mdiff --git a/services/node_modules/@types/node/package.json b/services/node_modules/@types/node/package.json[m
[1mindex 7d4a99d1..bfe5c91a 100644[m
[1m--- a/services/node_modules/@types/node/package.json[m
[1m+++ b/services/node_modules/@types/node/package.json[m
[36m@@ -1,6 +1,6 @@[m
 {[m
     "name": "@types/node",[m
[31m-    "version": "24.3.0",[m
[32m+[m[32m    "version": "24.5.2",[m
     "description": "TypeScript definitions for node",[m
     "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node",[m
     "license": "MIT",[m
[36m@@ -147,9 +147,9 @@[m
     },[m
     "scripts": {},[m
     "dependencies": {[m
[31m-        "undici-types": "~7.10.0"[m
[32m+[m[32m        "undici-types": "~7.12.0"[m
     },[m
     "peerDependencies": {},[m
[31m-    "typesPublisherContentHash": "1db0510763ba3afd8e54c0591e60a100a7b90926f5d7da28ae32d8f845d725da",[m
[32m+[m[32m    "typesPublisherContentHash": "5df6870a3de1de1f3716802276fe0c64c2b3a2903d725578b50f533f42cfea46",[m
     "typeScriptVersion": "5.2"[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/services/node_modules/@types/node/sqlite.d.ts b/services/node_modules/@types/node/sqlite.d.ts[m
[1mindex 9019832f..be10af03 100644[m
[1m--- a/services/node_modules/@types/node/sqlite.d.ts[m
[1m+++ b/services/node_modules/@types/node/sqlite.d.ts[m
[36m@@ -97,6 +97,33 @@[m [mdeclare module "node:sqlite" {[m
          * @default 0[m
          */[m
         timeout?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, integer fields are read as JavaScript `BigInt` values. If `false`,[m
[32m+[m[32m         * integer fields are read as JavaScript numbers.[m
[32m+[m[32m         * @since v24.4.0[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        readBigInts?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, query results are returned as arrays instead of objects.[m
[32m+[m[32m         * @since v24.4.0[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        returnArrays?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, allows binding named parameters without the prefix[m
[32m+[m[32m         * character (e.g., `foo` instead of `:foo`).[m
[32m+[m[32m         * @since v24.4.40[m
[32m+[m[32m         * @default true[m
[32m+[m[32m         */[m
[32m+[m[32m        allowBareNamedParameters?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, unknown named parameters are ignored when binding.[m
[32m+[m[32m         * If `false`, an exception is thrown for unknown named parameters.[m
[32m+[m[32m         * @since v24.4.40[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        allowUnknownNamedParameters?: boolean | undefined;[m
     }[m
     interface CreateSessionOptions {[m
         /**[m
[36m@@ -566,6 +593,13 @@[m [mdeclare module "node:sqlite" {[m
          * @param enabled Enables or disables support for unknown named parameters.[m
          */[m
         setAllowUnknownNamedParameters(enabled: boolean): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When enabled, query results returned by the `all()`, `get()`, and `iterate()` methods will be returned as arrays instead[m
[32m+[m[32m         * of objects.[m
[32m+[m[32m         * @since v24.0.0[m
[32m+[m[32m         * @param enabled Enables or disables the return of query results as arrays.[m
[32m+[m[32m         */[m
[32m+[m[32m        setReturnArrays(enabled: boolean): void;[m
         /**[m
          * When reading from the database, SQLite `INTEGER`s are mapped to JavaScript[m
          * numbers by default. However, SQLite `INTEGER`s can store values larger than[m
[1mdiff --git a/services/node_modules/@types/node/tls.d.ts b/services/node_modules/@types/node/tls.d.ts[m
[1mindex b9c4f244..c12add97 100644[m
[1m--- a/services/node_modules/@types/node/tls.d.ts[m
[1m+++ b/services/node_modules/@types/node/tls.d.ts[m
[36m@@ -1162,6 +1162,38 @@[m [mdeclare module "tls" {[m
      * @since v0.10.2[m
      */[m
     function getCiphers(): string[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the default CA certificates used by Node.js TLS clients. If the provided[m
[32m+[m[32m     * certificates are parsed successfully, they will become the default CA[m
[32m+[m[32m     * certificate list returned by {@link getCACertificates} and used[m
[32m+[m[32m     * by subsequent TLS connections that don't specify their own CA certificates.[m
[32m+[m[32m     * The certificates will be deduplicated before being set as the default.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This function only affects the current Node.js thread. Previous[m
[32m+[m[32m     * sessions cached by the HTTPS agent won't be affected by this change, so[m
[32m+[m[32m     * this method should be called before any unwanted cachable TLS connections are[m
[32m+[m[32m     * made.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To use system CA certificates as the default:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import tls from 'node:tls';[m
[32m+[m[32m     * tls.setDefaultCACertificates(tls.getCACertificates('system'));[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * This function completely replaces the default CA certificate list. To add additional[m
[32m+[m[32m     * certificates to the existing defaults, get the current certificates and append to them:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import tls from 'node:tls';[m
[32m+[m[32m     * const currentCerts = tls.getCACertificates('default');[m
[32m+[m[32m     * const additionalCerts = ['-----BEGIN CERTIFICATE-----\n...'];[m
[32m+[m[32m     * tls.setDefaultCACertificates([...currentCerts, ...additionalCerts]);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v24.5.0[m
[32m+[m[32m     * @param certs An array of CA certificates in PEM format.[m
[32m+[m[32m     */[m
[32m+[m[32m    function setDefaultCACertificates(certs: ReadonlyArray<string | NodeJS.ArrayBufferView>): void;[m
     /**[m
      * The default curve name to use for ECDH key agreement in a tls server.[m
      * The default value is `'auto'`. See `{@link createSecureContext()}` for further[m
[1mdiff --git a/services/node_modules/@types/node/ts5.6/index.d.ts b/services/node_modules/@types/node/ts5.6/index.d.ts[m
[1mindex b98cc67d..c7287562 100644[m
[1m--- a/services/node_modules/@types/node/ts5.6/index.d.ts[m
[1m+++ b/services/node_modules/@types/node/ts5.6/index.d.ts[m
[36m@@ -40,6 +40,12 @@[m
 [m
 // Definitions for Node.js modules that are not specific to any version of TypeScript:[m
 /// <reference path="../globals.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/abortcontroller.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/domexception.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/events.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/fetch.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/navigator.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/storage.d.ts" />[m
 /// <reference path="../assert.d.ts" />[m
 /// <reference path="../assert/strict.d.ts" />[m
 /// <reference path="../async_hooks.d.ts" />[m
[36m@@ -53,9 +59,7 @@[m
 /// <reference path="../diagnostics_channel.d.ts" />[m
 /// <reference path="../dns.d.ts" />[m
 /// <reference path="../dns/promises.d.ts" />[m
[31m-/// <reference path="../dns/promises.d.ts" />[m
 /// <reference path="../domain.d.ts" />[m
[31m-/// <reference path="../dom-events.d.ts" />[m
 /// <reference path="../events.d.ts" />[m
 /// <reference path="../fs.d.ts" />[m
 /// <reference path="../fs/promises.d.ts" />[m
[36m@@ -63,6 +67,7 @@[m
 /// <reference path="../http2.d.ts" />[m
 /// <reference path="../https.d.ts" />[m
 /// <reference path="../inspector.d.ts" />[m
[32m+[m[32m/// <reference path="../inspector.generated.d.ts" />[m
 /// <reference path="../module.d.ts" />[m
 /// <reference path="../net.d.ts" />[m
 /// <reference path="../os.d.ts" />[m
[1mdiff --git a/services/node_modules/@types/node/ts5.7/index.d.ts b/services/node_modules/@types/node/ts5.7/index.d.ts[m
[1mindex 9793c72e..137503b2 100644[m
[1m--- a/services/node_modules/@types/node/ts5.7/index.d.ts[m
[1m+++ b/services/node_modules/@types/node/ts5.7/index.d.ts[m
[36m@@ -40,6 +40,12 @@[m
 [m
 // Definitions for Node.js modules that are not specific to any version of TypeScript:[m
 /// <reference path="../globals.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/abortcontroller.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/domexception.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/events.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/fetch.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/navigator.d.ts" />[m
[32m+[m[32m/// <reference path="../web-globals/storage.d.ts" />[m
 /// <reference path="../assert.d.ts" />[m
 /// <reference path="../assert/strict.d.ts" />[m
 /// <reference path="../async_hooks.d.ts" />[m
[36m@@ -53,9 +59,7 @@[m
 /// <reference path="../diagnostics_channel.d.ts" />[m
 /// <reference path="../dns.d.ts" />[m
 /// <reference path="../dns/promises.d.ts" />[m
[31m-/// <reference path="../dns/promises.d.ts" />[m
 /// <reference path="../domain.d.ts" />[m
[31m-/// <reference path="../dom-events.d.ts" />[m
 /// <reference path="../events.d.ts" />[m
 /// <reference path="../fs.d.ts" />[m
 /// <reference path="../fs/promises.d.ts" />[m
[36m@@ -63,6 +67,7 @@[m
 /// <reference path="../http2.d.ts" />[m
 /// <reference path="../https.d.ts" />[m
 /// <reference path="../inspector.d.ts" />[m
[32m+[m[32m/// <reference path="../inspector.generated.d.ts" />[m
 /// <reference path="../module.d.ts" />[m
 /// <reference path="../net.d.ts" />[m
 /// <reference path="../os.d.ts" />[m
[1mdiff --git a/services/node_modules/@types/node/url.d.ts b/services/node_modules/@types/node/url.d.ts[m
[1mindex 83e3872e..157ae84a 100644[m
[1m--- a/services/node_modules/@types/node/url.d.ts[m
[1m+++ b/services/node_modules/@types/node/url.d.ts[m
[36m@@ -455,12 +455,15 @@[m [mdeclare module "url" {[m
          */[m
         static canParse(input: string, base?: string): boolean;[m
         /**[m
[31m-         * Parses a string as a URL. If `base` is provided, it will be used as the base URL for the purpose of resolving non-absolute `input` URLs.[m
[31m-         * Returns `null` if `input` is not a valid.[m
[31m-         * @param input The absolute or relative input URL to parse. If `input` is relative, then `base` is required. If `input` is absolute, the `base` is ignored. If `input` is not a string, it is[m
[31m-         * `converted to a string` first.[m
[31m-         * @param base The base URL to resolve against if the `input` is not absolute. If `base` is not a string, it is `converted to a string` first.[m
[32m+[m[32m         * Parses a string as a URL. If `base` is provided, it will be used as the base[m
[32m+[m[32m         * URL for the purpose of resolving non-absolute `input` URLs. Returns `null`[m
[32m+[m[32m         * if the parameters can't be resolved to a valid URL.[m
          * @since v22.1.0[m
[32m+[m[32m         * @param input The absolute or relative input URL to parse. If `input`[m
[32m+[m[32m         * is relative, then `base` is required. If `input` is absolute, the `base`[m
[32m+[m[32m         * is ignored. If `input` is not a string, it is [converted to a string](https://tc39.es/ecma262/#sec-tostring) first.[m
[32m+[m[32m         * @param base The base URL to resolve against if the `input` is not[m
[32m+[m[32m         * absolute. If `base` is not a string, it is [converted to a string](https://tc39.es/ecma262/#sec-tostring) first.[m
          */[m
         static parse(input: string, base?: string): URL | null;[m
         constructor(input: string | { toString: () => string }, base?: string | URL);[m
[1mdiff --git a/services/node_modules/@types/node/util.d.ts b/services/node_modules/@types/node/util.d.ts[m
[1mindex 142e78b2..bcb8f30b 100644[m
[1m--- a/services/node_modules/@types/node/util.d.ts[m
[1m+++ b/services/node_modules/@types/node/util.d.ts[m
[36m@@ -1420,10 +1420,12 @@[m [mdeclare module "util" {[m
          */[m
         short?: string | undefined;[m
         /**[m
[31m-         * The default value to[m
[31m-         * be used if (and only if) the option does not appear in the arguments to be[m
[31m-         * parsed. It must be of the same type as the `type` property. When `multiple`[m
[31m-         * is `true`, it must be an array.[m
[32m+[m[32m         * The value to assign to[m
[32m+[m[32m         * the option if it does not appear in the arguments to be parsed. The value[m
[32m+[m[32m         * must match the type specified by the `type` property. If `multiple` is[m
[32m+[m[32m         * `true`, it must be an array. No default value is applied when the option[m
[32m+[m[32m         * does appear in the arguments to be parsed, even if the provided value[m
[32m+[m[32m         * is falsy.[m
          * @since v18.11.0[m
          */[m
         default?: string | boolean | string[] | boolean[] | undefined;[m
[1mdiff --git a/services/node_modules/@types/node/vm.d.ts b/services/node_modules/@types/node/vm.d.ts[m
[1mindex bba2e0ba..c61435c7 100644[m
[1m--- a/services/node_modules/@types/node/vm.d.ts[m
[1m+++ b/services/node_modules/@types/node/vm.d.ts[m
[36m@@ -37,7 +37,7 @@[m
  * @see [source](https://github.com/nodejs/node/blob/v24.x/lib/vm.js)[m
  */[m
 declare module "vm" {[m
[31m-    import { ImportAttributes } from "node:module";[m
[32m+[m[32m    import { ImportAttributes, ImportPhase } from "node:module";[m
     interface Context extends NodeJS.Dict<any> {}[m
     interface BaseOptions {[m
         /**[m
[36m@@ -60,7 +60,7 @@[m [mdeclare module "vm" {[m
         specifier: string,[m
         referrer: T,[m
         importAttributes: ImportAttributes,[m
[31m-        phase: "source" | "evaluation",[m
[32m+[m[32m        phase: ImportPhase,[m
     ) => Module | Promise<Module>;[m
     interface ScriptOptions extends BaseOptions {[m
         /**[m
[36m@@ -791,14 +791,6 @@[m [mdeclare module "vm" {[m
      * @experimental[m
      */[m
     class Module {[m
[31m-        /**[m
[31m-         * The specifiers of all dependencies of this module. The returned array is frozen[m
[31m-         * to disallow any changes to it.[m
[31m-         *[m
[31m-         * Corresponds to the `[[RequestedModules]]` field of [Cyclic Module Record](https://tc39.es/ecma262/#sec-cyclic-module-records) s in[m
[31m-         * the ECMAScript specification.[m
[31m-         */[m
[31m-        dependencySpecifiers: readonly string[];[m
         /**[m
          * If the `module.status` is `'errored'`, this property contains the exception[m
          * thrown by the module during evaluation. If the status is anything else,[m
[36m@@ -918,6 +910,25 @@[m [mdeclare module "vm" {[m
          */[m
         importModuleDynamically?: DynamicModuleLoader<SourceTextModule> | undefined;[m
     }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A `ModuleRequest` represents the request to import a module with given import attributes and phase.[m
[32m+[m[32m     * @since 24.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    interface ModuleRequest {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The specifier of the requested module.[m
[32m+[m[32m         */[m
[32m+[m[32m        specifier: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `"with"` value passed to the `WithClause` in a `ImportDeclaration`, or an empty object if no value was[m
[32m+[m[32m         * provided.[m
[32m+[m[32m         */[m
[32m+[m[32m        attributes: ImportAttributes;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The phase of the requested module (`"source"` or `"evaluation"`).[m
[32m+[m[32m         */[m
[32m+[m[32m        phase: ImportPhase;[m
[32m+[m[32m    }[m
     /**[m
      * This feature is only available with the `--experimental-vm-modules` command[m
      * flag enabled.[m
[36m@@ -933,6 +944,58 @@[m [mdeclare module "vm" {[m
          * @param code JavaScript Module code to parse[m
          */[m
         constructor(code: string, options?: SourceTextModuleOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated Use `sourceTextModule.moduleRequests` instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly dependencySpecifiers: readonly string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The requested import dependencies of this module. The returned array is frozen[m
[32m+[m[32m         * to disallow any changes to it.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For example, given a source text:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import foo from 'foo';[m
[32m+[m[32m         * import fooAlias from 'foo';[m
[32m+[m[32m         * import bar from './bar.js';[m
[32m+[m[32m         * import withAttrs from '../with-attrs.ts' with { arbitraryAttr: 'attr-val' };[m
[32m+[m[32m         * import source Module from 'wasm-mod.wasm';[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The value of the `sourceTextModule.moduleRequests` will be:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * [[m
[32m+[m[32m         *   {[m
[32m+[m[32m         *     specifier: 'foo',[m
[32m+[m[32m         *     attributes: {},[m
[32m+[m[32m         *     phase: 'evaluation',[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   {[m
[32m+[m[32m         *     specifier: 'foo',[m
[32m+[m[32m         *     attributes: {},[m
[32m+[m[32m         *     phase: 'evaluation',[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   {[m
[32m+[m[32m         *     specifier: './bar.js',[m
[32m+[m[32m         *     attributes: {},[m
[32m+[m[32m         *     phase: 'evaluation',[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   {[m
[32m+[m[32m         *     specifier: '../with-attrs.ts',[m
[32m+[m[32m         *     attributes: { arbitraryAttr: 'attr-val' },[m
[32m+[m[32m         *     phase: 'evaluation',[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   {[m
[32m+[m[32m         *     specifier: 'wasm-mod.wasm',[m
[32m+[m[32m         *     attributes: {},[m
[32m+[m[32m         *     phase: 'source',[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * ];[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v24.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly moduleRequests: readonly ModuleRequest[];[m
     }[m
     interface SyntheticModuleOptions {[m
         /**[m
[1mdiff --git a/services/node_modules/@types/node/wasi.d.ts b/services/node_modules/@types/node/wasi.d.ts[m
[1mindex b7f02128..150ad903 100644[m
[1m--- a/services/node_modules/@types/node/wasi.d.ts[m
[1m+++ b/services/node_modules/@types/node/wasi.d.ts[m
[36m@@ -121,6 +121,12 @@[m [mdeclare module "wasi" {[m
          */[m
         version: "unstable" | "preview1";[m
     }[m
[32m+[m[32m    interface FinalizeBindingsOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default instance.exports.memory[m
[32m+[m[32m         */[m
[32m+[m[32m        memory?: object | undefined;[m
[32m+[m[32m    }[m
     /**[m
      * The `WASI` class provides the WASI system call API and additional convenience[m
      * methods for working with WASI-based applications. Each `WASI` instance[m
[36m@@ -167,6 +173,21 @@[m [mdeclare module "wasi" {[m
          * @since v14.6.0, v12.19.0[m
          */[m
         initialize(instance: object): void; // TODO: avoid DOM dependency until WASM moved to own lib.[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Set up WASI host bindings to `instance` without calling `initialize()`[m
[32m+[m[32m         * or `start()`. This method is useful when the WASI module is instantiated in[m
[32m+[m[32m         * child threads for sharing the memory across threads.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `finalizeBindings()` requires that either `instance` exports a[m
[32m+[m[32m         * [`WebAssembly.Memory`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory) named `memory` or user specify a[m
[32m+[m[32m         * [`WebAssembly.Memory`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory) object in `options.memory`. If the `memory` is invalid[m
[32m+[m[32m         * an exception is thrown.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `start()` and `initialize()` will call `finalizeBindings()` internally.[m
[32m+[m[32m         * If `finalizeBindings()` is called more than once, an exception is thrown.[m
[32m+[m[32m         * @since v24.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        finalizeBindings(instance: object, options?: FinalizeBindingsOptions): void;[m
         /**[m
          * `wasiImport` is an object that implements the WASI system call API. This object[m
          * should be passed as the `wasi_snapshot_preview1` import during the instantiation[m
[1mdiff --git a/services/node_modules/@types/node/worker_threads.d.ts b/services/node_modules/@types/node/worker_threads.d.ts[m
[1mindex e14d367f..73446b17 100644[m
[1m--- a/services/node_modules/@types/node/worker_threads.d.ts[m
[1m+++ b/services/node_modules/@types/node/worker_threads.d.ts[m
[36m@@ -63,6 +63,7 @@[m [mdeclare module "worker_threads" {[m
     import { ReadableStream, TransformStream, WritableStream } from "node:stream/web";[m
     import { URL } from "node:url";[m
     import { HeapInfo } from "node:v8";[m
[32m+[m[32m    import { MessageEvent } from "undici-types";[m
     const isInternalThread: boolean;[m
     const isMainThread: boolean;[m
     const parentPort: null | MessagePort;[m
[36m@@ -574,18 +575,18 @@[m [mdeclare module "worker_threads" {[m
      * ```[m
      * @since v15.4.0[m
      */[m
[31m-    class BroadcastChannel {[m
[32m+[m[32m    class BroadcastChannel extends EventTarget {[m
         readonly name: string;[m
         /**[m
          * Invoked with a single \`MessageEvent\` argument when a message is received.[m
          * @since v15.4.0[m
          */[m
[31m-        onmessage: (message: unknown) => void;[m
[32m+[m[32m        onmessage: (message: MessageEvent) => void;[m
         /**[m
          * Invoked with a received message cannot be deserialized.[m
          * @since v15.4.0[m
          */[m
[31m-        onmessageerror: (message: unknown) => void;[m
[32m+[m[32m        onmessageerror: (message: MessageEvent) => void;[m
         constructor(name: string);[m
         /**[m
          * Closes the `BroadcastChannel` connection.[m
[36m@@ -598,6 +599,35 @@[m [mdeclare module "worker_threads" {[m
          */[m
         postMessage(message: unknown): void;[m
     }[m
[32m+[m[32m    interface Lock {[m
[32m+[m[32m        readonly mode: LockMode;[m
[32m+[m[32m        readonly name: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface LockGrantedCallback<T> {[m
[32m+[m[32m        (lock: Lock | null): T;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface LockInfo {[m
[32m+[m[32m        clientId: string;[m
[32m+[m[32m        mode: LockMode;[m
[32m+[m[32m        name: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface LockManager {[m
[32m+[m[32m        query(): Promise<LockManagerSnapshot>;[m
[32m+[m[32m        request<T>(name: string, callback: LockGrantedCallback<T>): Promise<Awaited<T>>;[m
[32m+[m[32m        request<T>(name: string, options: LockOptions, callback: LockGrantedCallback<T>): Promise<Awaited<T>>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface LockManagerSnapshot {[m
[32m+[m[32m        held: LockInfo[];[m
[32m+[m[32m        pending: LockInfo[];[m
[32m+[m[32m    }[m
[32m+[m[32m    type LockMode = "exclusive" | "shared";[m
[32m+[m[32m    interface LockOptions {[m
[32m+[m[32m        ifAvailable?: boolean;[m
[32m+[m[32m        mode?: LockMode;[m
[32m+[m[32m        signal?: AbortSignal;[m
[32m+[m[32m        steal?: boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    var locks: LockManager;[m
     /**[m
      * Mark an object as not transferable. If `object` occurs in the transfer list of[m
      * a `port.postMessage()` call, it is ignored.[m
[36m@@ -739,6 +769,24 @@[m [mdeclare module "worker_threads" {[m
      * for the `key` will be deleted.[m
      */[m
     function setEnvironmentData(key: Serializable, value?: Serializable): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sends a value to another worker, identified by its thread ID.[m
[32m+[m[32m     * @param threadId The target thread ID. If the thread ID is invalid, a `ERR_WORKER_MESSAGING_FAILED` error will be thrown.[m
[32m+[m[32m     * If the target thread ID is the current thread ID, a `ERR_WORKER_MESSAGING_SAME_THREAD` error will be thrown.[m
[32m+[m[32m     * @param value The value to send.[m
[32m+[m[32m     * @param transferList If one or more `MessagePort`-like objects are passed in value, a `transferList` is required for those items[m
[32m+[m[32m     * or `ERR_MISSING_MESSAGE_PORT_IN_TRANSFER_LIST` is thrown. See `port.postMessage()` for more information.[m
[32m+[m[32m     * @param timeout Time to wait for the message to be delivered in milliseconds. By default it's `undefined`, which means wait forever.[m
[32m+[m[32m     * If the operation times out, a `ERR_WORKER_MESSAGING_TIMEOUT` error is thrown.[m
[32m+[m[32m     * @since v22.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function postMessageToThread(threadId: number, value: any, timeout?: number): Promise<void>;[m
[32m+[m[32m    function postMessageToThread([m
[32m+[m[32m        threadId: number,[m
[32m+[m[32m        value: any,[m
[32m+[m[32m        transferList: readonly Transferable[],[m
[32m+[m[32m        timeout?: number,[m
[32m+[m[32m    ): Promise<void>;[m
 [m
     import {[m
         BroadcastChannel as _BroadcastChannel,[m
[1mdiff --git a/services/node_modules/undici-types/diagnostics-channel.d.ts b/services/node_modules/undici-types/diagnostics-channel.d.ts[m
[1mindex 0c8477e1..eb3d50df 100644[m
[1m--- a/services/node_modules/undici-types/diagnostics-channel.d.ts[m
[1m+++ b/services/node_modules/undici-types/diagnostics-channel.d.ts[m
[36m@@ -31,6 +31,15 @@[m [mdeclare namespace DiagnosticsChannel {[m
   export interface RequestBodySentMessage {[m
     request: Request;[m
   }[m
[32m+[m
[32m+[m[32m  export interface RequestBodyChunkSentMessage {[m
[32m+[m[32m    request: Request;[m
[32m+[m[32m    chunk: Uint8Array | string;[m
[32m+[m[32m  }[m
[32m+[m[32m  export interface RequestBodyChunkReceivedMessage {[m
[32m+[m[32m    request: Request;[m
[32m+[m[32m    chunk: Buffer;[m
[32m+[m[32m  }[m
   export interface RequestHeadersMessage {[m
     request: Request;[m
     response: Response;[m
[1mdiff --git a/services/node_modules/undici-types/dispatcher.d.ts b/services/node_modules/undici-types/dispatcher.d.ts[m
[1mindex 0584e36f..5da4c720 100644[m
[1m--- a/services/node_modules/undici-types/dispatcher.d.ts[m
[1m+++ b/services/node_modules/undici-types/dispatcher.d.ts[m
[36m@@ -97,7 +97,8 @@[m [mdeclare class Dispatcher extends EventEmitter {[m
 [m
 declare namespace Dispatcher {[m
   export interface ComposedDispatcher extends Dispatcher {}[m
[31m-  export type DispatcherComposeInterceptor = (dispatch: Dispatcher['dispatch']) => Dispatcher['dispatch'][m
[32m+[m[32m  export type Dispatch = Dispatcher['dispatch'][m
[32m+[m[32m  export type DispatcherComposeInterceptor = (dispatch: Dispatch) => Dispatch[m
   export interface DispatchOptions {[m
     origin?: string | URL;[m
     path: string;[m
[36m@@ -276,6 +277,6 @@[m [mdeclare namespace Dispatcher {[m
   }[m
 [m
   export interface DispatchInterceptor {[m
[31m-    (dispatch: Dispatcher['dispatch']): Dispatcher['dispatch'][m
[32m+[m[32m    (dispatch: Dispatch): Dispatch[m
   }[m
 }[m
[1mdiff --git a/services/node_modules/undici-types/env-http-proxy-agent.d.ts b/services/node_modules/undici-types/env-http-proxy-agent.d.ts[m
[1mindex 28fbb846..1733d7f6 100644[m
[1m--- a/services/node_modules/undici-types/env-http-proxy-agent.d.ts[m
[1m+++ b/services/node_modules/undici-types/env-http-proxy-agent.d.ts[m
[36m@@ -1,4 +1,5 @@[m
 import Agent from './agent'[m
[32m+[m[32mimport ProxyAgent from './proxy-agent'[m
 import Dispatcher from './dispatcher'[m
 [m
 export default EnvHttpProxyAgent[m
[36m@@ -10,7 +11,7 @@[m [mdeclare class EnvHttpProxyAgent extends Dispatcher {[m
 }[m
 [m
 declare namespace EnvHttpProxyAgent {[m
[31m-  export interface Options extends Agent.Options {[m
[32m+[m[32m  export interface Options extends Omit<ProxyAgent.Options, 'uri'> {[m
     /** Overrides the value of the HTTP_PROXY environment variable  */[m
     httpProxy?: string;[m
     /** Overrides the value of the HTTPS_PROXY environment variable  */[m
[1mdiff --git a/services/node_modules/undici-types/eventsource.d.ts b/services/node_modules/undici-types/eventsource.d.ts[m
[1mindex deccd730..c85c4a14 100644[m
[1m--- a/services/node_modules/undici-types/eventsource.d.ts[m
[1m+++ b/services/node_modules/undici-types/eventsource.d.ts[m
[36m@@ -18,9 +18,9 @@[m [minterface EventSource extends EventTarget {[m
   readonly CLOSED: 2[m
   readonly CONNECTING: 0[m
   readonly OPEN: 1[m
[31m-  onerror: (this: EventSource, ev: ErrorEvent) => any[m
[31m-  onmessage: (this: EventSource, ev: MessageEvent) => any[m
[31m-  onopen: (this: EventSource, ev: Event) => any[m
[32m+[m[32m  onerror: ((this: EventSource, ev: ErrorEvent) => any) | null[m
[32m+[m[32m  onmessage: ((this: EventSource, ev: MessageEvent) => any) | null[m
[32m+[m[32m  onopen: ((this: EventSource, ev: Event) => any) | null[m
   readonly readyState: 0 | 1 | 2[m
   readonly url: string[m
   readonly withCredentials: boolean[m
[1mdiff --git a/services/node_modules/undici-types/fetch.d.ts b/services/node_modules/undici-types/fetch.d.ts[m
[1mindex 4edf41eb..2cf50290 100644[m
[1m--- a/services/node_modules/undici-types/fetch.d.ts[m
[1m+++ b/services/node_modules/undici-types/fetch.d.ts[m
[36m@@ -33,6 +33,7 @@[m [mexport class BodyMixin {[m
 [m
   readonly arrayBuffer: () => Promise<ArrayBuffer>[m
   readonly blob: () => Promise<Blob>[m
[32m+[m[32m  readonly bytes: () => Promise<Uint8Array>[m
   /**[m
    * @deprecated This method is not recommended for parsing multipart/form-data bodies in server environments.[m
    * It is recommended to use a library such as [@fastify/busboy](https://www.npmjs.com/package/@fastify/busboy) as follows:[m
[1mdiff --git a/services/node_modules/undici-types/handlers.d.ts b/services/node_modules/undici-types/handlers.d.ts[m
[1mindex a165f26c..8007dbf8 100644[m
[1m--- a/services/node_modules/undici-types/handlers.d.ts[m
[1m+++ b/services/node_modules/undici-types/handlers.d.ts[m
[36m@@ -2,7 +2,7 @@[m [mimport Dispatcher from './dispatcher'[m
 [m
 export declare class RedirectHandler implements Dispatcher.DispatchHandler {[m
   constructor ([m
[31m-    dispatch: Dispatcher,[m
[32m+[m[32m    dispatch: Dispatcher.Dispatch,[m
     maxRedirections: number,[m
     opts: Dispatcher.DispatchOptions,[m
     handler: Dispatcher.DispatchHandler,[m
[1mdiff --git a/services/node_modules/undici-types/mock-client.d.ts b/services/node_modules/undici-types/mock-client.d.ts[m
[1mindex 88e16d9f..702e8246 100644[m
[1m--- a/services/node_modules/undici-types/mock-client.d.ts[m
[1m+++ b/services/node_modules/undici-types/mock-client.d.ts[m
[36m@@ -14,6 +14,8 @@[m [mdeclare class MockClient extends Client implements Interceptable {[m
   dispatch (options: Dispatcher.DispatchOptions, handlers: Dispatcher.DispatchHandler): boolean[m
   /** Closes the mock client and gracefully waits for enqueued requests to complete. */[m
   close (): Promise<void>[m
[32m+[m[32m  /** Clean up all the prepared mocks. */[m
[32m+[m[32m  cleanMocks (): void[m
 }[m
 [m
 declare namespace MockClient {[m
[1mdiff --git a/services/node_modules/undici-types/mock-interceptor.d.ts b/services/node_modules/undici-types/mock-interceptor.d.ts[m
[1mindex 418db413..83c0b383 100644[m
[1m--- a/services/node_modules/undici-types/mock-interceptor.d.ts[m
[1m+++ b/services/node_modules/undici-types/mock-interceptor.d.ts[m
[36m@@ -84,6 +84,8 @@[m [mdeclare namespace MockInterceptor {[m
 interface Interceptable extends Dispatcher {[m
   /** Intercepts any matching requests that use the same origin as this mock client. */[m
   intercept(options: MockInterceptor.Options): MockInterceptor;[m
[32m+[m[32m  /** Clean up all the prepared mocks. */[m
[32m+[m[32m  cleanMocks (): void[m
 }[m
 [m
 export {[m
[1mdiff --git a/services/node_modules/undici-types/mock-pool.d.ts b/services/node_modules/undici-types/mock-pool.d.ts[m
[1mindex 5a9d9cb2..f35f357b 100644[m
[1m--- a/services/node_modules/undici-types/mock-pool.d.ts[m
[1m+++ b/services/node_modules/undici-types/mock-pool.d.ts[m
[36m@@ -14,6 +14,8 @@[m [mdeclare class MockPool extends Pool implements Interceptable {[m
   dispatch (options: Dispatcher.DispatchOptions, handlers: Dispatcher.DispatchHandler): boolean[m
   /** Closes the mock pool and gracefully waits for enqueued requests to complete. */[m
   close (): Promise<void>[m
[32m+[m[32m  /** Clean up all the prepared mocks. */[m
[32m+[m[32m  cleanMocks (): void[m
 }[m
 [m
 declare namespace MockPool {[m
[1mdiff --git a/services/node_modules/undici-types/package.json b/services/node_modules/undici-types/package.json[m
[1mindex c55c535b..4b3a1c39 100644[m
[1m--- a/services/node_modules/undici-types/package.json[m
[1m+++ b/services/node_modules/undici-types/package.json[m
[36m@@ -1,6 +1,6 @@[m
 {[m
   "name": "undici-types",[m
[31m-  "version": "7.10.0",[m
[32m+[m[32m  "version": "7.12.0",[m
   "description": "A stand-alone types package for Undici",[m
   "homepage": "https://undici.nodejs.org",[m
   "bugs": {[m
[1mdiff --git a/services/node_modules/undici-types/retry-handler.d.ts b/services/node_modules/undici-types/retry-handler.d.ts[m
[1mindex 988e74b2..3bc484b2 100644[m
[1m--- a/services/node_modules/undici-types/retry-handler.d.ts[m
[1m+++ b/services/node_modules/undici-types/retry-handler.d.ts[m
[36m@@ -35,6 +35,15 @@[m [mdeclare namespace RetryHandler {[m
   ) => void[m
 [m
   export interface RetryOptions {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If true, the retry handler will throw an error if the request fails,[m
[32m+[m[32m     * this will prevent the folling handlers from being called, and will destroy the socket.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     * @memberof RetryOptions[m
[32m+[m[32m     * @default true[m
[32m+[m[32m     */[m
[32m+[m[32m    throwOnError?: boolean;[m
     /**[m
      * Callback to be invoked on every retry iteration.[m
      * It receives the error, current state of the retry object and the options object[m
[1mdiff --git a/services/node_modules/undici-types/webidl.d.ts b/services/node_modules/undici-types/webidl.d.ts[m
[1mindex 33b93439..f15d699d 100644[m
[1m--- a/services/node_modules/undici-types/webidl.d.ts[m
[1m+++ b/services/node_modules/undici-types/webidl.d.ts[m
[36m@@ -16,9 +16,12 @@[m [minterface ConvertToIntOpts {[m
 }[m
 [m
 interface WebidlErrors {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @description Instantiate an error[m
[32m+[m[32m   */[m
   exception (opts: { header: string, message: string }): TypeError[m
   /**[m
[31m-   * @description Throw an error when conversion from one type to another has failed[m
[32m+[m[32m   * @description Instantiate an error when conversion from one type to another has failed[m
    */[m
   conversionFailed (opts: {[m
     prefix: string[m
[36m@@ -75,7 +78,7 @@[m [minterface WebidlUtil {[m
   ): number[m
 [m
   /**[m
[31m-   * @see https://webidl.spec.whatwg.org/#abstract-opdef-converttoint[m
[32m+[m[32m   * @see https://webidl.spec.whatwg.org/#abstract-opdef-integerpart[m
    */[m
   IntegerPart (N: number): number[m
 [m
[36m@@ -179,23 +182,34 @@[m [minterface WebidlConverters {[m
 [m
   ['record<ByteString, ByteString>']: RecordConverter<string, string>[m
 [m
[32m+[m[32m  /**[m
[32m+[m[32m  * @see https://fetch.spec.whatwg.org/#requestinfo[m
[32m+[m[32m  */[m
[32m+[m[32m  RequestInfo (V: unknown): undici.Request | string[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @see https://fetch.spec.whatwg.org/#requestinit[m
[32m+[m[32m   */[m
[32m+[m[32m  RequestInit (V: unknown): undici.RequestInit[m
[32m+[m
   [Key: string]: (...args: any[]) => unknown[m
 }[m
 [m
[31m-type IsAssertion<T> = (arg: any) => arg is T[m
[32m+[m[32mtype WebidlIsFunction<T> = (arg: any) => arg is T[m
 [m
 interface WebidlIs {[m
[31m-  Request: IsAssertion<undici.Request>[m
[31m-  Response: IsAssertion<undici.Response>[m
[31m-  ReadableStream: IsAssertion<ReadableStream>[m
[31m-  Blob: IsAssertion<Blob>[m
[31m-  URLSearchParams: IsAssertion<URLSearchParams>[m
[31m-  File: IsAssertion<File>[m
[31m-  FormData: IsAssertion<undici.FormData>[m
[31m-  URL: IsAssertion<URL>[m
[31m-  WebSocketError: IsAssertion<undici.WebSocketError>[m
[31m-  AbortSignal: IsAssertion<AbortSignal>[m
[31m-  MessagePort: IsAssertion<MessagePort>[m
[32m+[m[32m  Request: WebidlIsFunction<undici.Request>[m
[32m+[m[32m  Response: WebidlIsFunction<undici.Response>[m
[32m+[m[32m  ReadableStream: WebidlIsFunction<ReadableStream>[m
[32m+[m[32m  Blob: WebidlIsFunction<Blob>[m
[32m+[m[32m  URLSearchParams: WebidlIsFunction<URLSearchParams>[m
[32m+[m[32m  File: WebidlIsFunction<File>[m
[32m+[m[32m  FormData: WebidlIsFunction<undici.FormData>[m
[32m+[m[32m  URL: WebidlIsFunction<URL>[m
[32m+[m[32m  WebSocketError: WebidlIsFunction<undici.WebSocketError>[m
[32m+[m[32m  AbortSignal: WebidlIsFunction<AbortSignal>[m
[32m+[m[32m  MessagePort: WebidlIsFunction<MessagePort>[m
[32m+[m[32m  USVString: WebidlIsFunction<string>[m
 }[m
 [m
 export interface Webidl {[m
[36m@@ -233,7 +247,7 @@[m [mexport interface Webidl {[m
    * Similar to {@link Webidl.brandCheck} but allows skipping the check if third party[m
    * interfaces are allowed.[m
    */[m
[31m-  interfaceConverter <Interface>(typeCheck: IsAssertion<Interface>, name: string): ([m
[32m+[m[32m  interfaceConverter <Interface>(typeCheck: WebidlIsFunction<Interface>, name: string): ([m
     V: unknown,[m
     prefix: string,[m
     argument: string[m
[1mdiff --git a/services/node_modules/undici-types/websocket.d.ts b/services/node_modules/undici-types/websocket.d.ts[m
[1mindex 02e4865c..a8477c1c 100644[m
[1m--- a/services/node_modules/undici-types/websocket.d.ts[m
[1m+++ b/services/node_modules/undici-types/websocket.d.ts[m
[36m@@ -136,7 +136,7 @@[m [minterface ErrorEvent extends Event {[m
   readonly filename: string[m
   readonly lineno: number[m
   readonly colno: number[m
[31m-  readonly error: any[m
[32m+[m[32m  readonly error: Error[m
 }[m
 [m
 export declare const ErrorEvent: {[m
[36m@@ -182,3 +182,5 @@[m [mexport declare const WebSocketError: {[m
   prototype: WebSocketError[m
   new (type: string, init?: WebSocketCloseInfo): WebSocketError[m
 }[m
[32m+[m
[32m+[m[32mexport declare const ping: (ws: WebSocket, body?: Buffer) => void[m
[1mdiff --git a/services/package-lock.json b/services/package-lock.json[m
[1mindex 60acc8af..99510d00 100644[m
[1m--- a/services/package-lock.json[m
[1m+++ b/services/package-lock.json[m
[36m@@ -23,6 +23,9 @@[m
         "@types/express": "^4.17.17",[m
         "@types/mssql": "^9.1.7",[m
         "@types/multer": "^2.0.0",[m
[32m+[m[32m        "@types/node": "^24.5.2",[m
[32m+[m[32m        "@types/react": "^19.1.13",[m
[32m+[m[32m        "@types/react-dom": "^19.1.9",[m
         "nodemon": "^3.0.1",[m
         "ts-node": "^10.9.1",[m
         "typescript": "^4.9.5"[m
[36m@@ -597,12 +600,12 @@[m
       }[m
     },[m
     "node_modules/@types/node": {[m
[31m-      "version": "24.3.0",[m
[31m-      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.3.0.tgz",[m
[31m-      "integrity": "sha512-aPTXCrfwnDLj4VvXrm+UUCQjNEvJgNA8s5F1cvwQU+3KNltTOkBm1j30uNLyqqPNe7gE3KFzImYoZEfLhp4Yow==",[m
[32m+[m[32m      "version": "24.5.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.5.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-FYxk1I7wPv3K2XBaoyH2cTnocQEu8AOZ60hPbsyukMPLv5/5qr7V1i8PLHdl6Zf87I+xZXFvPCXYjiTFq+YSDQ==",[m
       "license": "MIT",[m
       "dependencies": {[m
[31m-        "undici-types": "~7.10.0"[m
[32m+[m[32m        "undici-types": "~7.12.0"[m
       }[m
     },[m
     "node_modules/@types/qs": {[m
[36m@@ -619,6 +622,26 @@[m
       "dev": true,[m
       "license": "MIT"[m
     },[m
[32m+[m[32m    "node_modules/@types/react": {[m
[32m+[m[32m      "version": "19.1.13",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.13.tgz",[m
[32m+[m[32m      "integrity": "sha512-hHkbU/eoO3EG5/MZkuFSKmYqPbSVk5byPFa3e7y/8TybHiLMACgI8seVYlicwk7H5K/rI2px9xrQp/C+AUDTiQ==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "csstype": "^3.0.2"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@types/react-dom": {[m
[32m+[m[32m      "version": "19.1.9",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.9.tgz",[m
[32m+[m[32m      "integrity": "sha512-qXRuZaOsAdXKFyOhRBg6Lqqc0yay13vN7KrIg4L7N4aaHN68ma9OK3NE1BoDFgFOTfM7zg+3/8+2n8rLUH3OKQ==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "@types/react": "^19.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/@types/readable-stream": {[m
       "version": "4.0.21",[m
       "resolved": "https://registry.npmjs.org/@types/readable-stream/-/readable-stream-4.0.21.tgz",[m
[36m@@ -1184,6 +1207,13 @@[m
       "dev": true,[m
       "license": "MIT"[m
     },[m
[32m+[m[32m    "node_modules/csstype": {[m
[32m+[m[32m      "version": "3.1.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
     "node_modules/data-uri-to-buffer": {[m
       "version": "4.0.1",[m
       "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",[m
[36m@@ -3708,9 +3738,9 @@[m
       "license": "MIT"[m
     },[m
     "node_modules/undici-types": {[m
[31m-      "version": "7.10.0",[m
[31m-      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.10.0.tgz",[m
[31m-      "integrity": "sha512-t5Fy/nfn+14LuOc2KNYg75vZqClpAiqscVvMygNnlsHBFpSXdJaYtXMcdNLpl/Qvc3P2cB3s6lOV51nqsFq4ag==",[m
[32m+[m[32m      "version": "7.12.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.12.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-goOacqME2GYyOZZfb5Lgtu+1IDmAlAEu5xnD3+xTzS10hT0vzpf0SPjkXwAw9Jm+4n/mQGDP3LO8CPbYROeBfQ==",[m
       "license": "MIT"[m
     },[m
     "node_modules/unpipe": {[m
[1mdiff --git a/services/package.json b/services/package.json[m
[1mindex 969330c9..9f4a7645 100644[m
[1m--- a/services/package.json[m
[1m+++ b/services/package.json[m
[36m@@ -24,6 +24,9 @@[m
     "@types/express": "^4.17.17",[m
     "@types/mssql": "^9.1.7",[m
     "@types/multer": "^2.0.0",[m
[32m+[m[32m    "@types/node": "^24.5.2",[m
[32m+[m[32m    "@types/react": "^19.1.13",[m
[32m+[m[32m    "@types/react-dom": "^19.1.9",[m
     "nodemon": "^3.0.1",[m
     "ts-node": "^10.9.1",[m
     "typescript": "^4.9.5"[m
[1mdiff --git a/services/src/services/nutritionVisionService.ts b/services/src/services/nutritionVisionService.ts[m
[1mindex 5a54dbb3..c2ca7981 100644[m
[1m--- a/services/src/services/nutritionVisionService.ts[m
[1m+++ b/services/src/services/nutritionVisionService.ts[m
[36m@@ -1,35 +1,56 @@[m
[31m-import { getPool, sql } from '../config/database'; // Use getPool instead of pool directly[m
[32m+[m[32mimport { getPool, sql } from '../config/database';[m
 import vision from '@google-cloud/vision';[m
 import OpenAI from 'openai';[m
 [m
[31m-// Initialize Google Vision client[m
[32m+[m[32m// Initialize clients[m
 const googleVisionClient = new vision.ImageAnnotatorClient({[m
[31m-  // You'll need to set up Google Cloud credentials[m
[31m-  keyFilename: process.env.GOOGLE_APPLICATION_CREDENTIALS, // Path to your service account key[m
[32m+[m[32m  keyFilename: process.env.GOOGLE_APPLICATION_CREDENTIALS,[m
   projectId: process.env.GOOGLE_CLOUD_PROJECT_ID,[m
 });[m
 [m
[31m-// Initialize OpenAI client[m
 const openai = new OpenAI({[m
   apiKey: process.env.OPENAI_API_KEY,[m
 });[m
 [m
[31m-// Vision API interfaces[m
[32m+[m[32m// Type definitions[m
 interface VisionAnalysisResult {[m
   success: boolean;[m
   foodName: string;[m
   confidence: number;[m
   tags: string[];[m
   provider: string;[m
[31m-  googleResult?: any;[m
[31m-  openaiResult?: any;[m
[31m-  comparison?: {[m
[31m-    match: boolean;[m
[31m-    googleConfidence: number;[m
[31m-    openaiConfidence: number;[m
[31m-    finalChoice: string;[m
[31m-    reasoning: string;[m
[31m-  };[m
[32m+[m[32m  error?: string;[m
[32m+[m[32m  googleResult?: GoogleVisionResult;[m
[32m+[m[32m  openaiResult?: OpenAIVisionResult;[m
[32m+[m[32m  comparison?: ComparisonResult;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minterface GoogleVisionResult {[m
[32m+[m[32m  success: boolean;[m
[32m+[m[32m  foodName: string;[m
[32m+[m[32m  confidence: number;[m
[32m+[m[32m  allLabels: Array<{ name: string; confidence: number }>;[m
[32m+[m[32m  provider: string;[m
[32m+[m[32m  error?: string;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minterface OpenAIVisionResult {[m
[32m+[m[32m  success: boolean;[m
[32m+[m[32m  foodName: string;[m
[32m+[m[32m  confidence: number;[m
[32m+[m[32m  description?: string;[m
[32m+[m[32m  tags: string[];[m
[32m+[m[32m  provider: string;[m
[32m+[m[32m  rawResponse?: string;[m
[32m+[m[32m  error?: string;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minterface ComparisonResult {[m
[32m+[m[32m  match: boolean;[m
[32m+[m[32m  googleConfidence: number;[m
[32m+[m[32m  openaiConfidence: number;[m
[32m+[m[32m  finalChoice: string;[m
[32m+[m[32m  reasoning: string;[m
 }[m
 [m
 interface NutritionData {[m
[36m@@ -47,8 +68,26 @@[m [minterface NutritionData {[m
   message?: string;[m
 }[m
 [m
[31m-// Analyze with Google Vision API[m
[31m-const analyzeWithGoogle = async (imageBuffer: Buffer): Promise<any> => {[m
[32m+[m[32minterface ProcessedImageResult {[m
[32m+[m[32m  success: boolean;[m
[32m+[m[32m  analysis?: VisionAnalysisResult;[m
[32m+[m[32m  nutrition?: NutritionData;[m
[32m+[m[32m  timestamp?: string;[m
[32m+[m[32m  message?: string;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minterface SaveResult {[m
[32m+[m[32m  success: boolean;[m
[32m+[m[32m  message: string;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Utility functions[m
[32m+[m[32mconst handleError = (error: unknown): string => {[m
[32m+[m[32m  return error instanceof Error ? error.message : 'Unknown error occurred';[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m// Google Vision API analysis[m
[32m+[m[32mconst analyzeWithGoogle = async (imageBuffer: Buffer): Promise<GoogleVisionResult> => {[m
   try {[m
     console.log('🔍 Analyzing with Google Vision API...');[m
     [m
[36m@@ -59,39 +98,41 @@[m [mconst analyzeWithGoogle = async (imageBuffer: Buffer): Promise<any> => {[m
     const labels = result.labelAnnotations || [];[m
     console.log('Google Vision labels:', labels.map(l => `${l.description} (${l.score})`));[m
 [m
[31m-    // Look for food-related labels[m
[32m+[m[32m    // Look for food-related labels with better filtering[m
[32m+[m[32m    const foodKeywords = ['food', 'fruit', 'vegetable', 'meal', 'dish', 'produce', 'ingredient'];[m
     const foodLabels = labels.filter(label => [m
[31m-      label.description?.toLowerCase().includes('food') ||[m
[31m-      label.description?.toLowerCase().includes('fruit') ||[m
[31m-      label.description?.toLowerCase().includes('vegetable') ||[m
[31m-      label.description?.toLowerCase().includes('meal') ||[m
[31m-      label.description?.toLowerCase().includes('dish')[m
[32m+[m[32m      foodKeywords.some(keyword =>[m[41m [m
[32m+[m[32m        label.description?.toLowerCase().includes(keyword)[m
[32m+[m[32m      )[m
     );[m
 [m
[31m-    const topLabel = labels[0];[m
[32m+[m[32m    const bestLabel = foodLabels.length > 0 ? foodLabels[0] : labels[0];[m
     [m
     return {[m
       success: true,[m
[31m-      foodName: topLabel?.description || 'Unknown Food',[m
[31m-      confidence: topLabel?.score || 0,[m
[32m+[m[32m      foodName: bestLabel?.description || 'Unknown Food',[m
[32m+[m[32m      confidence: bestLabel?.score || 0,[m
       allLabels: labels.slice(0, 5).map(l => ({[m
[31m-        name: l.description,[m
[31m-        confidence: l.score[m
[32m+[m[32m        name: l.description || '',[m
[32m+[m[32m        confidence: l.score || 0[m
       })),[m
       provider: 'google'[m
     };[m
[31m-  } catch (error) {[m
[32m+[m[32m  } catch (error: unknown) {[m
     console.error('Google Vision analysis failed:', error);[m
     return {[m
       success: false,[m
[31m-      error: error.message,[m
[31m-      provider: 'google'[m
[32m+[m[32m      foodName: 'Unknown Food',[m
[32m+[m[32m      confidence: 0,[m
[32m+[m[32m      allLabels: [],[m
[32m+[m[32m      provider: 'google',[m
[32m+[m[32m      error: handleError(error)[m
     };[m
   }[m
 };[m
 [m
[31m-// Analyze with OpenAI Vision API[m
[31m-const analyzeWithOpenAI = async (imageBuffer: Buffer): Promise<any> => {[m
[32m+[m[32m// OpenAI Vision API analysis[m
[32m+[m[32mconst analyzeWithOpenAI = async (imageBuffer: Buffer): Promise<OpenAIVisionResult> => {[m
   try {[m
     console.log('🔍 Analyzing with OpenAI Vision API...');[m
     [m
[36m@@ -120,12 +161,11 @@[m [mconst analyzeWithOpenAI = async (imageBuffer: Buffer): Promise<any> => {[m
     const content = response.choices[0]?.message?.content;[m
     console.log('OpenAI raw response:', content);[m
 [m
[31m-    // Try to parse JSON response[m
[31m-    let parsedResult;[m
[32m+[m[32m    // Parse JSON response with fallback[m
[32m+[m[32m    let parsedResult: any;[m
     try {[m
       parsedResult = JSON.parse(content || '{}');[m
     } catch (parseError) {[m
[31m-      // Fallback if JSON parsing fails[m
       parsedResult = {[m
         foodName: content?.split('\n')[0] || 'Unknown Food',[m
         confidence: 0.7,[m
[36m@@ -136,25 +176,32 @@[m [mconst analyzeWithOpenAI = async (imageBuffer: Buffer): Promise<any> => {[m
 [m
     return {[m
       success: true,[m
[31m-      ...parsedResult,[m
[32m+[m[32m      foodName: parsedResult.foodName || 'Unknown Food',[m
[32m+[m[32m      confidence: parsedResult.confidence || 0.7,[m
[32m+[m[32m      description: parsedResult.description,[m
[32m+[m[32m      tags: Array.isArray(parsedResult.tags) ? parsedResult.tags : [],[m
       provider: 'openai',[m
[31m-      rawResponse: content[m
[32m+[m[32m      rawResponse: content || ''[m
     };[m
[31m-  } catch (error) {[m
[32m+[m[32m  } catch (error: unknown) {[m
     console.error('OpenAI Vision analysis failed:', error);[m
     return {[m
       success: false,[m
[31m-      error: error.message,[m
[31m-      provider: 'openai'[m
[32m+[m[32m      foodName: 'Unknown Food',[m
[32m+[m[32m      confidence: 0,[m
[32m+[m[32m      tags: [],[m
[32m+[m[32m      provider: 'openai',[m
[32m+[m[32m      error: handleError(error)[m
     };[m
   }[m
 };[m
 [m
[31m-// Compare results from both APIs[m
[31m-const compareResults = (googleResult: any, openaiResult: any): any => {[m
[32m+[m[32m// Compare results and choose best option[m
[32m+[m[32mconst compareResults = (googleResult: GoogleVisionResult, openaiResult: OpenAIVisionResult): ComparisonResult => {[m
   const googleFood = googleResult.foodName?.toLowerCase() || '';[m
   const openaiFood = openaiResult.foodName?.toLowerCase() || '';[m
   [m
[32m+[m[32m  // Check if results match[m
   const match = googleFood.includes(openaiFood) || [m
                 openaiFood.includes(googleFood) ||[m
                 googleFood === openaiFood;[m
[36m@@ -163,7 +210,7 @@[m [mconst compareResults = (googleResult: any, openaiResult: any): any => {[m
   let reasoning = '';[m
 [m
   if (match) {[m
[31m-    // Both agree - choose the one with higher confidence[m
[32m+[m[32m    // Results agree - choose higher confidence[m
     if (googleResult.confidence > openaiResult.confidence) {[m
       finalChoice = googleResult.foodName;[m
       reasoning = 'Both APIs agree, Google had higher confidence';[m
[36m@@ -172,8 +219,8 @@[m [mconst compareResults = (googleResult: any, openaiResult: any): any => {[m
       reasoning = 'Both APIs agree, OpenAI had higher confidence';[m
     }[m
   } else {[m
[31m-    // Results differ - use a scoring system[m
[31m-    const googleScore = googleResult.confidence * 0.6; // Google is good at labels[m
[32m+[m[32m    // Results differ - use weighted scoring[m
[32m+[m[32m    const googleScore = googleResult.confidence * 0.6; // Google good at labels[m
     const openaiScore = openaiResult.confidence * 0.8; // OpenAI better at context[m
 [m
     if (openaiScore > googleScore) {[m
[36m@@ -194,47 +241,67 @@[m [mconst compareResults = (googleResult: any, openaiResult: any): any => {[m
   };[m
 };[m
 [m
[31m-// Process uploaded food image[m
[31m-export const processUploadedFoodImage = async (imageBuffer: Buffer): Promise<any> => {[m
[31m-  try {[m
[31m-    // Analyze the image[m
[31m-    const visionResult = await analyzeFoodImage(imageBuffer);[m
[31m-    [m
[31m-    if (!visionResult.success) {[m
[31m-      return {[m
[31m-        success: false,[m
[31m-        message: 'Failed to analyze image'[m
[31m-      };[m
[32m+[m[32m// Generate mock nutrition data[m
[32m+[m[32mconst generateMockNutritionData = (query: string): NutritionData => {[m
[32m+[m[32m  const mockDatabase: Record<string, Omit<NutritionData, 'success' | 'item'>> = {[m
[32m+[m[32m    'apple': {[m
[32m+[m[32m      calories_per_serving: 95,[m
[32m+[m[32m      macros: { protein: '0.5g', carbs: '25g', fat: '0.3g' },[m
[32m+[m[32m      processed_level: 'unprocessed',[m
[32m+[m[32m      verdict: 'Fresh fruit, excellent source of fiber and vitamin C',[m
[32m+[m[32m      snap_eligible: true[m
[32m+[m[32m    },[m
[32m+[m[32m    'banana': {[m
[32m+[m[32m      calories_per_serving: 105,[m
[32m+[m[32m      macros: { protein: '1.3g', carbs: '27g', fat: '0.4g' },[m
[32m+[m[32m      processed_level: 'unprocessed',[m
[32m+[m[32m      verdict: 'Fresh fruit, good source of potassium',[m
[32m+[m[32m      snap_eligible: true[m
[32m+[m[32m    },[m
[32m+[m[32m    'bread': {[m
[32m+[m[32m      calories_per_serving: 80,[m
[32m+[m[32m      macros: { protein: '3g', carbs: '15g', fat: '1g' },[m
[32m+[m[32m      processed_level: 'processed',[m
[32m+[m[32m      verdict: 'Processed grain product, check ingredients for whole grains',[m
[32m+[m[32m      snap_eligible: true[m
[32m+[m[32m    },[m
[32m+[m[32m    'chicken': {[m
[32m+[m[32m      calories_per_serving: 165,[m
[32m+[m[32m      macros: { protein: '31g', carbs: '0g', fat: '3.6g' },[m
[32m+[m[32m      processed_level: 'minimally processed',[m
[32m+[m[32m      verdict: 'Lean protein source, good for muscle building',[m
[32m+[m[32m      snap_eligible: true[m
     }[m
[31m-    [m
[31m-    // Get nutrition data for the detected food[m
[31m-    const nutritionData = await fetchNutritionData(visionResult.foodName);[m
[31m-    [m
[31m-    return {[m
[31m-      success: true,[m
[31m-      analysis: visionResult,[m
[31m-      nutrition: nutritionData,[m
[31m-      timestamp: new Date().toISOString()[m
[31m-    };[m
[31m-    [m
[31m-  } catch (error) {[m
[31m-    console.error('Error processing uploaded image:', error);[m
[31m-    return {[m
[31m-      success: false,[m
[31m-      message: 'Error processing image'[m
[31m-    };[m
[31m-  }[m
[32m+[m[32m  };[m
[32m+[m[41m  [m
[32m+[m[32m  // Find matching food item[m
[32m+[m[32m  const lowerQuery = query.toLowerCase();[m
[32m+[m[32m  const matchedKey = Object.keys(mockDatabase).find(key =>[m[41m [m
[32m+[m[32m    lowerQuery.includes(key) || key.includes(lowerQuery)[m
[32m+[m[32m  );[m
[32m+[m[41m  [m
[32m+[m[32m  const baseData = matchedKey ? mockDatabase[matchedKey] : {[m
[32m+[m[32m    calories_per_serving: 150,[m
[32m+[m[32m    macros: { protein: '5g', carbs: '20g', fat: '3g' },[m
[32m+[m[32m    processed_level: 'unknown',[m
[32m+[m[32m    verdict: 'Nutrition information estimated',[m
[32m+[m[32m    snap_eligible: false[m
[32m+[m[32m  };[m
[32m+[m[41m  [m
[32m+[m[32m  return {[m
[32m+[m[32m    success: true,[m
[32m+[m[32m    item: query,[m
[32m+[m[32m    ...baseData[m
[32m+[m[32m  };[m
 };[m
 [m
[31m-// Fetch nutrition data from database[m
[31m-export const fetchNutritionData = async (query: string): Promise<NutritionData> => {[m
[32m+[m[32m// Database operations[m
[32m+[m[32mconst fetchNutritionFromDatabase = async (query: string): Promise<NutritionData> => {[m
   try {[m
[31m-    // Use getPool() with proper error handling[m
     const pool = getPool();[m
     const request = pool.request();[m
     request.input('query', sql.VarChar, query);[m
     [m
[31m-    // Search by barcode or item name[m
     const result = await request.query(`[m
       SELECT TOP 1 * FROM dbo.NutritionData [m
       WHERE barcode = @query [m
[36m@@ -266,70 +333,102 @@[m [mexport const fetchNutritionData = async (query: string): Promise<NutritionData>[m
       };[m
     }[m
     [m
[31m-    // Return mock data if not found in database[m
     return generateMockNutritionData(query);[m
     [m
[31m-  } catch (error) {[m
[31m-    console.error('Database error in fetchNutritionData:', error);[m
[31m-    // Return mock data on database error[m
[32m+[m[32m  } catch (error: unknown) {[m
[32m+[m[32m    console.error('Database error:', error);[m
     return generateMockNutritionData(query);[m
   }[m
 };[m
 [m
[31m-// Generate mock nutrition data when database lookup fails[m
[31m-const generateMockNutritionData = (query: string): NutritionData => {[m
[31m-  // Simple mock data based on common foods[m
[31m-  const mockData: { [key: string]: Partial<NutritionData> } = {[m
[31m-    'apple': {[m
[31m-      calories_per_serving: 95,[m
[31m-      macros: { protein: '0.5g', carbs: '25g', fat: '0.3g' },[m
[31m-      processed_level: 'unprocessed',[m
[31m-      verdict: 'Fresh fruit, excellent source of fiber and vitamin C',[m
[31m-      snap_eligible: true[m
[31m-    },[m
[31m-    'banana': {[m
[31m-      calories_per_serving: 105,[m
[31m-      macros: { protein: '1.3g', carbs: '27g', fat: '0.4g' },[m
[31m-      processed_level: 'unprocessed',[m
[31m-      verdict: 'Fresh fruit, good source of potassium',[m
[31m-      snap_eligible: true[m
[31m-    },[m
[31m-    'bread': {[m
[31m-      calories_per_serving: 80,[m
[31m-      macros: { protein: '3g', carbs: '15g', fat: '1g' },[m
[31m-      processed_level: 'processed',[m
[31m-      verdict: 'Processed grain product, check ingredients for whole grains',[m
[31m-      snap_eligible: true[m
[31m-    }[m
[31m-  };[m
[31m-  [m
[31m-  // Find the closest match or use default[m
[31m-  const lowerQuery = query.toLowerCase();[m
[31m-  const matchedKey = Object.keys(mockData).find(key => [m
[31m-    lowerQuery.includes(key) || key.includes(lowerQuery)[m
[31m-  );[m
[31m-  [m
[31m-  const baseData = matchedKey ? mockData[matchedKey] : {[m
[31m-    calories_per_serving: 150,[m
[31m-    macros: { protein: '5g', carbs: '20g', fat: '3g' },[m
[31m-    processed_level: 'unknown',[m
[31m-    verdict: 'Nutrition information estimated',[m
[31m-    snap_eligible: false[m
[31m-  };[m
[32m+[m[32m// Main exported functions[m
[32m+[m[32mexport const analyzeFoodImage = async (imageBuffer: Buffer): Promise<VisionAnalysisResult> => {[m
[32m+[m[32m  console.log('🔍 Starting dual API food analysis...');[m
   [m
[31m-  return {[m
[31m-    success: true,[m
[31m-    item: query,[m
[31m-    ...baseData[m
[31m-  };[m
[32m+[m[32m  try {[m
[32m+[m[32m    // Run both analyses in parallel for better performance[m
[32m+[m[32m    const [googleResult, openaiResult] = await Promise.all([[m
[32m+[m[32m      analyzeWithGoogle(imageBuffer),[m
[32m+[m[32m      analyzeWithOpenAI(imageBuffer)[m
[32m+[m[32m    ]);[m
[32m+[m
[32m+[m[32m    console.log('Analysis results:', { googleResult, openaiResult });[m
[32m+[m
[32m+[m[32m    // Compare and choose best result[m
[32m+[m[32m    const comparison = compareResults(googleResult, openaiResult);[m
[32m+[m[41m    [m
[32m+[m[32m    // Extract tags from both sources[m
[32m+[m[32m    const combinedTags = [[m
[32m+[m[32m      ...(googleResult.allLabels?.map(l => l.name) || []),[m
[32m+[m[32m      ...(openaiResult.tags || [])[m
[32m+[m[32m    ].filter((tag, index, self) => self.indexOf(tag) === index); // Remove duplicates[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      success: true,[m
[32m+[m[32m      foodName: comparison.finalChoice,[m
[32m+[m[32m      confidence: Math.max(googleResult.confidence, openaiResult.confidence),[m
[32m+[m[32m      tags: combinedTags,[m
[32m+[m[32m      provider: 'dual-api',[m
[32m+[m[32m      googleResult,[m
[32m+[m[32m      openaiResult,[m
[32m+[m[32m      comparison[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m  } catch (error: unknown) {[m
[32m+[m[32m    console.error('Dual API analysis failed:', error);[m
[32m+[m[41m    [m
[32m+[m[32m    return {[m
[32m+[m[32m      success: false,[m
[32m+[m[32m      foodName: 'Unknown Food',[m
[32m+[m[32m      confidence: 0,[m
[32m+[m[32m      tags: [],[m
[32m+[m[32m      provider: 'error',[m
[32m+[m[32m      error: handleError(error)[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
 };[m
 [m
[31m-// Save nutrition data to database[m
[31m-export const saveNutritionData = async (barcode: string, data: any): Promise<{ success: boolean; message: string }> => {[m
[32m+[m[32mexport const processUploadedFoodImage = async (imageBuffer: Buffer): Promise<ProcessedImageResult> => {[m
[32m+[m[32m  try {[m
[32m+[m[32m    // Step 1: Analyze the image[m
[32m+[m[32m    const analysisResult = await analyzeFoodImage(imageBuffer);[m
[32m+[m[41m    [m
[32m+[m[32m    if (!analysisResult.success) {[m
[32m+[m[32m      return {[m
[32m+[m[32m        success: false,[m
[32m+[m[32m        message: 'Failed to analyze food image'[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // Step 2: Get nutrition data[m
[32m+[m[32m    const nutritionData = await fetchNutritionFromDatabase(analysisResult.foodName);[m
[32m+[m[41m    [m
[32m+[m[32m    return {[m
[32m+[m[32m      success: true,[m
[32m+[m[32m      analysis: analysisResult,[m
[32m+[m[32m      nutrition: nutritionData,[m
[32m+[m[32m      timestamp: new Date().toISOString()[m
[32m+[m[32m    };[m
[32m+[m[41m    [m
[32m+[m[32m  } catch (error: unknown) {[m
[32m+[m[32m    console.error('Error processing uploaded image:', error);[m
[32m+[m[32m    return {[m
[32m+[m[32m      success: false,[m
[32m+[m[32m      message: 'Error processing uploaded food image'[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport const fetchNutritionData = async (query: string): Promise<NutritionData> => {[m
[32m+[m[32m  return await fetchNutritionFromDatabase(query);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport const saveNutritionData = async (barcode: string, data: NutritionData): Promise<SaveResult> => {[m
   try {[m
[31m-    // Use getPool() with proper error handling[m
     const pool = getPool();[m
     const request = pool.request();[m
[32m+[m[41m    [m
[32m+[m[32m    // Set up parameters[m
     request.input('barcode', sql.VarChar, barcode);[m
     request.input('itemName', sql.NVarChar, data.item || '');[m
     request.input('calories', sql.Float, data.calories_per_serving || null);[m
[36m@@ -340,6 +439,7 @@[m [mexport const saveNutritionData = async (barcode: string, data: any): Promise<{ s[m
     request.input('ingredients', sql.NVarChar, data.verdict || null);[m
     request.input('snapEligible', sql.Bit, data.snap_eligible || false);[m
     [m
[32m+[m[32m    // Use MERGE for upsert operation[m
     await request.query(`[m
       MERGE INTO dbo.NutritionData AS target[m
       USING (SELECT @barcode AS barcode) AS source[m
[36m@@ -360,81 +460,37 @@[m [mexport const saveNutritionData = async (barcode: string, data: any): Promise<{ s[m
         VALUES (@barcode, @itemName, @calories, @protein, @carbs, @fat, @processedLevel, @ingredients, @snapEligible, GETDATE(), GETDATE());[m
     `);[m
     [m
[31m-    return { success: true, message: 'Nutrition data saved successfully' };[m
[32m+[m[32m    return {[m[41m [m
[32m+[m[32m      success: true,[m[41m [m
[32m+[m[32m      message: 'Nutrition data saved successfully'[m[41m [m
[32m+[m[32m    };[m
     [m
[31m-  } catch (error) {[m
[32m+[m[32m  } catch (error: unknown) {[m
     console.error('Error saving nutrition data:', error);[m
[31m-    return { success: false, message: 'Failed to save nutrition data' };[m
[32m+[m[32m    return {[m[41m [m
[32m+[m[32m      success: false,[m[41m [m
[32m+[m[32m      message: 'Failed to save nutrition data to database'[m[41m [m
[32m+[m[32m    };[m
   }[m
 };[m
 [m
[31m-// Barcode lookup function[m
 export const lookupBarcode = async (barcode: string): Promise<NutritionData> => {[m
   try {[m
[31m-    // First try database lookup[m
[31m-    const dbResult = await fetchNutritionData(barcode);[m
[32m+[m[32m    // Try database lookup first[m
[32m+[m[32m    const result = await fetchNutritionFromDatabase(barcode);[m
     [m
[31m-    if (dbResult.success && dbResult.item) {[m
[31m-      return dbResult;[m
[32m+[m[32m    if (result.success && result.item) {[m
[32m+[m[32m      return result;[m
     }[m
     [m
[31m-    // TODO: If not found in database, try external APIs[m
[31m-    // For now, return mock data[m
[32m+[m[32m    // If not found, return mock data with barcode info[m
     return generateMockNutritionData(`Product ${barcode}`);[m
     [m
[31m-  } catch (error) {[m
[32m+[m[32m  } catch (error: unknown) {[m
     console.error('Error looking up barcode:', error);[m
     return {[m
       success: false,[m
[31m-      message: 'Error looking up barcode'[m
[31m-    };[m
[31m-  }[m
[31m-};[m
[31m-[m
[31m-// Main analysis function that uses both APIs[m
[31m-export const analyzeFoodImage = async (imageBuffer: Buffer): Promise<VisionAnalysisResult> => {[m
[31m-  console.log('🔍 Starting dual API food analysis...');[m
[31m-  [m
[31m-  try {[m
[31m-    // Run both analyses in parallel[m
[31m-    const [googleResult, openaiResult] = await Promise.all([[m
[31m-      analyzeWithGoogle(imageBuffer),[m
[31m-      analyzeWithOpenAI(imageBuffer)[m
[31m-    ]);[m
[31m-[m
[31m-    console.log('Google result:', googleResult);[m
[31m-    console.log('OpenAI result:', openaiResult);[m
[31m-[m
[31m-    // Compare and choose best result[m
[31m-    const comparison = compareResults(googleResult, openaiResult);[m
[31m-    [m
[31m-    console.log('Comparison result:', comparison);[m
[31m-[m
[31m-    return {[m
[31m-      success: true,[m
[31m-      foodName: comparison.finalChoice,[m
[31m-      confidence: Math.max(googleResult.confidence || 0, openaiResult.confidence || 0),[m
[31m-      tags: [[m
[31m-        ...(googleResult.allLabels?.map((l: any) => l.name) || []),[m
[31m-        ...(openaiResult.tags || [])[m
[31m-      ],[m
[31m-      provider: 'dual-api',[m
[31m-      googleResult,[m
[31m-      openaiResult,[m
[31m-      comparison[m
[31m-    };[m
[31m-[m
[31m-  } catch (error) {[m
[31m-    console.error('Dual API analysis failed:', error);[m
[31m-    [m
[31m-    // Fallback to filename analysis[m
[31m-    return {[m
[31m-      success: false,[m
[31m-      foodName: 'Unknown Food',[m
[31m-      confidence: 0,[m
[31m-      tags: [],[m
[31m-      provider: 'error',[m
[31m-      error: error.message[m
[32m+[m[32m      message: `Error looking up barcode: ${barcode}`[m
     };[m
   }[m
 };[m
\ No newline at end of file[m
[1mdiff --git a/services/tsconfig.json b/services/tsconfig.json[m
[1mindex b6290889..ce593565 100644[m
[1m--- a/services/tsconfig.json[m
[1m+++ b/services/tsconfig.json[m
[36m@@ -1,21 +1,25 @@[m
 {[m
   "compilerOptions": {[m
[31m-    "target": "es2020",[m
[31m-    "module": "commonjs",[m
[31m-    "moduleResolution": "node",[m
[32m+[m[32m    "target": "es5",[m
[32m+[m[32m    "lib": [[m
[32m+[m[32m      "dom",[m
[32m+[m[32m      "dom.iterable",[m
[32m+[m[32m      "esnext"[m
[32m+[m[32m    ],[m
[32m+[m[32m    "allowJs": true,[m
[32m+[m[32m    "skipLibCheck": true,[m
     "esModuleInterop": true,[m
     "allowSyntheticDefaultImports": true,[m
[31m-    "resolveJsonModule": true,[m
[31m-    "outDir": "dist",[m
[31m-    "rootDir": "src",[m
     "strict": true,[m
[31m-    "skipLibCheck": true,[m
     "forceConsistentCasingInFileNames": true,[m
[31m-    "useUnknownInCatchVariables": true, // This is the new default[m
[31m-    "exactOptionalPropertyTypes": true,[m
[31m-    "noImplicitReturns": true,[m
[31m-    "noFallthroughCasesInSwitch": true[m
[32m+[m[32m    "module": "esnext",[m
[32m+[m[32m    "moduleResolution": "node",[m
[32m+[m[32m    "resolveJsonModule": true,[m
[32m+[m[32m    "isolatedModules": true,[m
[32m+[m[32m    "noEmit": true,[m
[32m+[m[32m    "jsx": "react-jsx"[m
   },[m
[31m-  "include": ["src/**/*"],[m
[31m-  "exclude": ["node_modules", "dist"][m
[32m+[m[32m  "include": [[m
[32m+[m[32m    "src/**/*"[m
[32m+[m[32m, "../client/src/components/foodAnalysisService.tsx", "dist/services/foodAnalysisService.tsx"  ][m
 }[m
\ No newline at end of file[m
[1mdiff --git a/tsconfig.json b/tsconfig.json[m
[1mindex 467a2cb9..7c582931 100644[m
[1m--- a/tsconfig.json[m
[1m+++ b/tsconfig.json[m
[36m@@ -9,7 +9,8 @@[m
   },[m
   "references": [[m
     { "path": "./client" },[m
[31m-    { "path": "./services" }[m
[32m+[m[32m    { "path": "./services" },[m
[32m+[m[32m    { "path": "./user" }[m
   ],[m
   "files": [][m
 }[m
\ No newline at end of file[m
[1mdiff --git a/user/node_modules/.cache/.eslintcache b/user/node_modules/.cache/.eslintcache[m
[1mindex 06e73229..c9def905 100644[m
[1m--- a/user/node_modules/.cache/.eslintcache[m
[1m+++ b/user/node_modules/.cache/.eslintcache[m
[36m@@ -1 +1 @@[m
[31m-[{"C:\\vHealth\\vhealth\\user\\src\\index.tsx":"1","C:\\vHealth\\vhealth\\user\\src\\components\\Navigation\\Sidebar.tsx":"2","C:\\vHealth\\vhealth\\user\\src\\Dashboard.tsx":"3"},{"size":360,"mtime":1758403273893,"results":"4","hashOfConfig":"5"},{"size":724,"mtime":1758398003173,"results":"6","hashOfConfig":"5"},{"size":14814,"mtime":1758404559479,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7vigot",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\vHealth\\vhealth\\user\\src\\index.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\Navigation\\Sidebar.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\Dashboard.tsx",[],[]][m
\ No newline at end of file[m
[32m+[m[32m[{"C:\\vHealth\\vhealth\\user\\src\\index.tsx":"1","C:\\vHealth\\vhealth\\user\\src\\Dashboard.tsx":"2","C:\\vHealth\\vhealth\\user\\src\\components\\Header.tsx":"3","C:\\vHealth\\vhealth\\user\\src\\components\\HealthSnapshot.tsx":"4","C:\\vHealth\\vhealth\\user\\src\\components\\WeightMetrics.tsx":"5","C:\\vHealth\\vhealth\\user\\src\\components\\Activity.tsx":"6","C:\\vHealth\\vhealth\\user\\src\\components\\MetricCard.tsx":"7","C:\\vHealth\\vhealth\\user\\src\\components\\BMIIndicator.tsx":"8","C:\\vHealth\\vhealth\\user\\src\\services\\modalService.ts":"9","C:\\vHealth\\vhealth\\user\\src\\services\\notificationService.ts":"10","C:\\vHealth\\vhealth\\user\\src\\components\\modals\\NotificationModal.tsx":"11","C:\\vHealth\\vhealth\\user\\src\\components\\modals\\AccountModal.tsx":"12","C:\\vHealth\\vhealth\\user\\src\\components\\modals\\Modal.tsx":"13","C:\\vHealth\\vhealth\\user\\src\\providers\\ModalProvider.tsx":"14","C:\\vHealth\\vhealth\\user\\src\\services\\authService.ts":"15"},{"size":360,"mtime":1758403273893,"results":"16","hashOfConfig":"17"},{"size":794,"mtime":1758484708882,"results":"18","hashOfConfig":"17"},{"size":3098,"mtime":1758484607358,"results":"19","hashOfConfig":"17"},{"size":2602,"mtime":1758421236279,"results":"20","hashOfConfig":"17"},{"size":2524,"mtime":1758421265313,"results":"21","hashOfConfig":"17"},{"size":1699,"mtime":1758421279245,"results":"22","hashOfConfig":"17"},{"size":1051,"mtime":1758421228114,"results":"23","hashOfConfig":"17"},{"size":408,"mtime":1758421249692,"results":"24","hashOfConfig":"17"},{"size":600,"mtime":1758487960279,"results":"25","hashOfConfig":"17"},{"size":2099,"mtime":1758484805583,"results":"26","hashOfConfig":"17"},{"size":2320,"mtime":1758484824016,"results":"27","hashOfConfig":"17"},{"size":3345,"mtime":1758484815441,"results":"28","hashOfConfig":"17"},{"size":1067,"mtime":1758484544258,"results":"29","hashOfConfig":"17"},{"size":928,"mtime":1758484586579,"results":"30","hashOfConfig":"17"},{"size":2797,"mtime":1758487960958,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7vigot",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\vHealth\\vhealth\\user\\src\\index.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\Dashboard.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\Header.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\HealthSnapshot.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\WeightMetrics.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\Activity.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\MetricCard.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\BMIIndicator.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\services\\modalService.ts",[],[],"C:\\vHealth\\vhealth\\user\\src\\services\\notificationService.ts",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\modals\\NotificationModal.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\modals\\AccountModal.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\components\\modals\\Modal.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\providers\\ModalProvider.tsx",[],[],"C:\\vHealth\\vhealth\\user\\src\\services\\authService.ts",[],[]][m
\ No newline at end of file[m
[1mdiff --git a/user/node_modules/.cache/tsconfig.tsbuildinfo b/user/node_modules/.cache/tsconfig.tsbuildinfo[m
[1mindex f9a69307..559f0dd3 100644[m
[1m--- a/user/node_modules/.cache/tsconfig.tsbuildinfo[m
[1m+++ b/user/node_modules/.cache/tsconfig.tsbuildinfo[m
[36m@@ -1 +1 @@[m
[31m-{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.es2023.d.ts","../typescript/lib/lib.es2024.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2016.intl.d.ts","../typescript/lib/lib.es2017.arraybuffer.d.ts","../typescript/lib/lib.es2017.date.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.es2022.regexp.d.ts","../typescript/lib/lib.es2023.array.d.ts","../typescript/lib/lib.es2023.collection.d.ts","../typescript/lib/lib.es2023.intl.d.ts","../typescript/lib/lib.es2024.arraybuffer.d.ts","../typescript/lib/lib.es2024.collection.d.ts","../typescript/lib/lib.es2024.object.d.ts","../typescript/lib/lib.es2024.promise.d.ts","../typescript/lib/lib.es2024.regexp.d.ts","../typescript/lib/lib.es2024.sharedmemory.d.ts","../typescript/lib/lib.es2024.string.d.ts","../typescript/lib/lib.esnext.array.d.ts","../typescript/lib/lib.esnext.collection.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../typescript/lib/lib.esnext.disposable.d.ts","../typescript/lib/lib.esnext.promise.d.ts","../typescript/lib/lib.esnext.decorators.d.ts","../typescript/lib/lib.esnext.iterator.d.ts","../typescript/lib/lib.esnext.float16.d.ts","../typescript/lib/lib.esnext.error.d.ts","../typescript/lib/lib.esnext.sharedmemory.d.ts","../typescript/lib/lib.decorators.d.ts","../typescript/lib/lib.decorators.legacy.d.ts","../@types/react/global.d.ts","../csstype/index.d.ts","../@types/prop-types/index.d.ts","../@types/react/index.d.ts","../@types/react/jsx-runtime.d.ts","../@types/history/DOMUtils.d.ts","../@types/history/createBrowserHistory.d.ts","../@types/history/createHashHistory.d.ts","../@types/history/createMemoryHistory.d.ts","../@types/history/LocationUtils.d.ts","../@types/history/PathUtils.d.ts","../@types/history/index.d.ts","../@types/react-router/index.d.ts","../@types/react-router-dom/index.d.ts","../../src/components/Navigation/Sidebar.tsx","../../src/Dashboard.tsx","../@types/react-dom/client.d.ts","../../src/index.tsx","../chart.js/dist/core/core.config.d.ts","../chart.js/dist/types/utils.d.ts","../chart.js/dist/types/basic.d.ts","../chart.js/dist/core/core.adapters.d.ts","../chart.js/dist/types/geometric.d.ts","../chart.js/dist/types/animation.d.ts","../chart.js/dist/core/core.element.d.ts","../chart.js/dist/elements/element.point.d.ts","../chart.js/dist/helpers/helpers.easing.d.ts","../chart.js/dist/types/color.d.ts","../chart.js/dist/types/layout.d.ts","../chart.js/dist/plugins/plugin.colors.d.ts","../chart.js/dist/elements/element.arc.d.ts","../chart.js/dist/types/index.d.ts","../chart.js/dist/core/core.plugins.d.ts","../chart.js/dist/core/core.defaults.d.ts","../chart.js/dist/core/core.typedRegistry.d.ts","../chart.js/dist/core/core.scale.d.ts","../chart.js/dist/core/core.registry.d.ts","../chart.js/dist/core/core.controller.d.ts","../chart.js/dist/core/core.datasetController.d.ts","../chart.js/dist/controllers/controller.bar.d.ts","../chart.js/dist/controllers/controller.bubble.d.ts","../chart.js/dist/controllers/controller.doughnut.d.ts","../chart.js/dist/controllers/controller.line.d.ts","../chart.js/dist/controllers/controller.polarArea.d.ts","../chart.js/dist/controllers/controller.pie.d.ts","../chart.js/dist/controllers/controller.radar.d.ts","../chart.js/dist/controllers/controller.scatter.d.ts","../chart.js/dist/controllers/index.d.ts","../chart.js/dist/core/core.animation.d.ts","../chart.js/dist/core/core.animations.d.ts","../chart.js/dist/core/core.animator.d.ts","../chart.js/dist/core/core.interaction.d.ts","../chart.js/dist/core/core.layouts.d.ts","../chart.js/dist/core/core.ticks.d.ts","../chart.js/dist/core/index.d.ts","../chart.js/dist/helpers/helpers.segment.d.ts","../chart.js/dist/elements/element.line.d.ts","../chart.js/dist/elements/element.bar.d.ts","../chart.js/dist/elements/index.d.ts","../chart.js/dist/platform/platform.base.d.ts","../chart.js/dist/platform/platform.basic.d.ts","../chart.js/dist/platform/platform.dom.d.ts","../chart.js/dist/platform/index.d.ts","../chart.js/dist/plugins/plugin.decimation.d.ts","../chart.js/dist/plugins/plugin.filler/index.d.ts","../chart.js/dist/plugins/plugin.legend.d.ts","../chart.js/dist/plugins/plugin.subtitle.d.ts","../chart.js/dist/plugins/plugin.title.d.ts","../chart.js/dist/helpers/helpers.core.d.ts","../chart.js/dist/plugins/plugin.tooltip.d.ts","../chart.js/dist/plugins/index.d.ts","../chart.js/dist/scales/scale.category.d.ts","../chart.js/dist/scales/scale.linearbase.d.ts","../chart.js/dist/scales/scale.linear.d.ts","../chart.js/dist/scales/scale.logarithmic.d.ts","../chart.js/dist/scales/scale.radialLinear.d.ts","../chart.js/dist/scales/scale.time.d.ts","../chart.js/dist/scales/scale.timeseries.d.ts","../chart.js/dist/scales/index.d.ts","../chart.js/dist/index.d.ts","../chart.js/dist/types.d.ts","../react-chartjs-2/dist/types.d.ts","../react-chartjs-2/dist/chart.d.ts","../react-chartjs-2/dist/typedCharts.d.ts","../react-chartjs-2/dist/utils.d.ts","../react-chartjs-2/dist/index.d.ts","../../src/components/Charts/HealthChart.tsx","../axios/index.d.ts","../../src/services/api.ts","../../src/types/index.ts","../../src/hooks/useHealthData.ts","../@types/axios/index.d.ts","../moment/ts3.1-typings/moment.d.ts","../@types/chart.js/index.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/globals.typedarray.d.ts","../@types/node/buffer.buffer.d.ts","../@types/node/globals.d.ts","../@types/node/web-globals/abortcontroller.d.ts","../@types/node/web-globals/domexception.d.ts","../@types/node/web-globals/events.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client-stats.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/web-globals/fetch.d.ts","../@types/node/web-globals/navigator.d.ts","../@types/node/web-globals/storage.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/inspector.generated.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/index.d.ts","../@types/react-dom/index.d.ts"],"fileIdsList":[[179,230,247,248],[175,179,230,247,248],[94,179,230,247,248],[88,94,179,230,247,248],[89,90,91,92,93,179,230,247,248],[179,227,230,247,248],[179,229,230,247,248],[230,247,248],[179,230,235,247,248,265],[179,230,231,236,241,247,248,250,262,273],[179,230,231,232,241,247,248,250],[179,230,233,247,248,274],[179,230,234,235,242,247,248,251],[179,230,235,247,248,262,270],[179,230,236,238,241,247,248,250],[179,229,230,237,247,248],[179,230,238,239,247,248],[179,230,240,241,247,248],[179,229,230,241,247,248],[179,230,241,242,243,247,248,262,273],[179,230,241,242,243,247,248,257,262,265],[179,223,230,238,241,244,247,248,250,262,273],[179,230,241,242,244,245,247,248,250,262,270,273],[179,230,244,246,247,248,262,270,273],[177,178,179,180,181,182,183,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],[179,230,241,247,248],[179,230,247,248,249,273],[179,230,238,241,247,248,250,262],[179,230,247,248,251],[179,230,247,248,252],[179,229,230,247,248,253],[179,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],[179,230,247,248,255],[179,230,247,248,256],[179,230,241,247,248,257,258],[179,230,247,248,257,259,274,276],[179,230,241,247,248,262,263,265],[179,230,247,248,264,265],[179,230,247,248,262,263],[179,230,247,248,265],[179,230,247,248,266],[179,227,230,247,248,262,267],[179,230,241,247,248,268,269],[179,230,247,248,268,269],[179,230,235,247,248,250,262,270],[179,230,247,248,271],[179,230,247,248,250,272],[179,230,244,247,248,256,273],[179,230,235,247,248,274],[179,230,247,248,262,275],[179,230,247,248,249,276],[179,230,247,248,277],[179,223,230,247,248],[179,230,247,248,278],[179,223,230,241,243,247,248,253,262,265,273,275,276,278],[179,230,247,248,262,279],[86,179,230,247,248],[86,94,95,179,230,247,248],[86,94,179,230,247,248],[83,84,85,179,230,247,248],[121,179,230,247,248],[120,121,179,230,247,248],[124,179,230,247,248],[122,123,124,125,126,127,128,129,179,230,247,248],[103,114,179,230,247,248],[120,131,179,230,247,248],[101,114,115,116,119,179,230,247,248],[118,120,179,230,247,248],[103,105,106,179,230,247,248],[107,114,120,179,230,247,248],[120,179,230,247,248],[114,120,179,230,247,248],[107,117,118,121,179,230,247,248],[103,107,114,163,179,230,247,248],[116,179,230,247,248],[104,107,115,116,118,119,120,121,131,132,133,134,135,136,179,230,247,248],[107,114,179,230,247,248],[103,107,179,230,247,248],[103,107,108,138,179,230,247,248],[108,113,139,140,179,230,247,248],[108,139,179,230,247,248],[130,137,141,145,153,161,179,230,247,248],[142,143,144,179,230,247,248],[101,120,179,230,247,248],[142,179,230,247,248],[120,142,179,230,247,248],[112,146,147,148,149,150,152,179,230,247,248],[163,179,230,247,248],[103,107,114,179,230,247,248],[103,107,163,179,230,247,248],[103,107,114,120,132,134,142,151,179,230,247,248],[154,156,157,158,159,160,179,230,247,248],[118,179,230,247,248],[155,179,230,247,248],[155,163,179,230,247,248],[104,118,179,230,247,248],[159,179,230,247,248],[114,162,179,230,247,248],[102,103,104,105,106,107,108,109,110,111,112,113,179,230,247,248],[105,179,230,247,248],[164,179,230,247,248],[164,165,166,167,179,230,247,248],[86,163,179,230,247,248],[86,163,164,179,230,247,248],[179,190,193,196,197,230,247,248,273],[179,193,230,247,248,262,273],[179,193,197,230,247,248,273],[179,230,247,248,262],[179,187,230,247,248],[179,191,230,247,248],[179,189,190,193,230,247,248,273],[179,230,247,248,250,270],[179,230,247,248,280],[179,187,230,247,248,280],[179,189,193,230,247,248,250,273],[179,184,185,186,188,192,230,241,247,248,262,273],[179,193,201,208,230,247,248],[179,185,191,230,247,248],[179,193,217,218,230,247,248],[179,185,188,193,230,247,248,265,273,280],[179,193,230,247,248],[179,189,193,230,247,248,273],[179,184,230,247,248],[179,187,188,189,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,230,247,248],[179,193,210,213,230,238,247,248],[179,193,201,202,203,230,247,248],[179,191,193,202,204,230,247,248],[179,192,230,247,248],[179,185,187,193,230,247,248],[179,193,197,202,204,230,247,248],[179,197,230,247,248],[179,191,193,196,230,247,248,273],[179,185,189,193,201,230,247,248],[179,193,210,230,247,248],[179,187,193,217,230,247,248,265,278,280],[86,87,96,97,179,230,247,248],[86,87,163,168,179,230,247,248],[86,87,96,179,230,247,248],[86,87,171,172,179,230,247,248],[86,87,98,99,179,230,247,248],[87,174,179,230,247,248],[87,179,230,247,248]],"fileInfos":[{"version":"c430d44666289dae81f30fa7b2edebf186ecc91a2d4c71266ea6ae76388792e1","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","impliedFormat":1},{"version":"ee7bad0c15b58988daa84371e0b89d313b762ab83cb5b31b8a2d1162e8eb41c2","impliedFormat":1},{"version":"27bdc30a0e32783366a5abeda841bc22757c1797de8681bbe81fbc735eeb1c10","impliedFormat":1},{"version":"8fd575e12870e9944c7e1d62e1f5a73fcf23dd8d3a321f2a2c74c20d022283fe","impliedFormat":1},{"version":"2ab096661c711e4a81cc464fa1e6feb929a54f5340b46b0a07ac6bbf857471f0","impliedFormat":1},{"version":"080941d9f9ff9307f7e27a83bcd888b7c8270716c39af943532438932ec1d0b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2e80ee7a49e8ac312cc11b77f1475804bee36b3b2bc896bead8b6e1266befb43","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"fb0f136d372979348d59b3f5020b4cdb81b5504192b1cacff5d1fbba29378aa1","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"a680117f487a4d2f30ea46f1b4b7f58bef1480456e18ba53ee85c2746eeca012","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true,"impliedFormat":1},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true,"impliedFormat":1},{"version":"959d36cddf5e7d572a65045b876f2956c973a586da58e5d26cde519184fd9b8a","affectsGlobalScope":true,"impliedFormat":1},{"version":"965f36eae237dd74e6cca203a43e9ca801ce38824ead814728a2807b1910117d","affectsGlobalScope":true,"impliedFormat":1},{"version":"3925a6c820dcb1a06506c90b1577db1fdbf7705d65b62b99dce4be75c637e26b","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a3d63ef2b853447ec4f749d3f368ce642264246e02911fcb1590d8c161b8005","affectsGlobalScope":true,"impliedFormat":1},{"version":"8cdf8847677ac7d20486e54dd3fcf09eda95812ac8ace44b4418da1bbbab6eb8","affectsGlobalScope":true,"impliedFormat":1},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true,"impliedFormat":1},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true,"impliedFormat":1},{"version":"b4b67b1a91182421f5df999988c690f14d813b9850b40acd06ed44691f6727ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"df83c2a6c73228b625b0beb6669c7ee2a09c914637e2d35170723ad49c0f5cd4","affectsGlobalScope":true,"impliedFormat":1},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e3c06ea092138bf9fa5e874a1fdbc9d54805d074bee1de31b99a11e2fec239d","affectsGlobalScope":true,"impliedFormat":1},{"version":"87dc0f382502f5bbce5129bdc0aea21e19a3abbc19259e0b43ae038a9fc4e326","affectsGlobalScope":true,"impliedFormat":1},{"version":"b1cb28af0c891c8c96b2d6b7be76bd394fddcfdb4709a20ba05a7c1605eea0f9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2fef54945a13095fdb9b84f705f2b5994597640c46afeb2ce78352fab4cb3279","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac77cb3e8c6d3565793eb90a8373ee8033146315a3dbead3bde8db5eaf5e5ec6","affectsGlobalScope":true,"impliedFormat":1},{"version":"56e4ed5aab5f5920980066a9409bfaf53e6d21d3f8d020c17e4de584d29600ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ece9f17b3866cc077099c73f4983bddbcb1dc7ddb943227f1ec070f529dedd1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a6282c8827e4b9a95f4bf4f5c205673ada31b982f50572d27103df8ceb8013c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1c9319a09485199c1f7b0498f2988d6d2249793ef67edda49d1e584746be9032","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3a2a0cee0f03ffdde24d89660eba2685bfbdeae955a6c67e8c4c9fd28928eeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811c71eee4aa0ac5f7adf713323a5c41b0cf6c4e17367a34fbce379e12bbf0a4","affectsGlobalScope":true,"impliedFormat":1},{"version":"51ad4c928303041605b4d7ae32e0c1ee387d43a24cd6f1ebf4a2699e1076d4fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"60037901da1a425516449b9a20073aa03386cce92f7a1fd902d7602be3a7c2e9","affectsGlobalScope":true,"impliedFormat":1},{"version":"d4b1d2c51d058fc21ec2629fff7a76249dec2e36e12960ea056e3ef89174080f","affectsGlobalScope":true,"impliedFormat":1},{"version":"22adec94ef7047a6c9d1af3cb96be87a335908bf9ef386ae9fd50eeb37f44c47","affectsGlobalScope":true,"impliedFormat":1},{"version":"4245fee526a7d1754529d19227ecbf3be066ff79ebb6a380d78e41648f2f224d","affectsGlobalScope":true,"impliedFormat":1},{"version":"73f78680d4c08509933daf80947902f6ff41b6230f94dd002ae372620adb0f60","affectsGlobalScope":true,"impliedFormat":1},{"version":"c5239f5c01bcfa9cd32f37c496cf19c61d69d37e48be9de612b541aac915805b","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb5b19b86227ace1d29ea4cf81387279d04bb34051e944bc53df69f58914b788","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"87d9d29dbc745f182683f63187bf3d53fd8673e5fca38ad5eaab69798ed29fbc","impliedFormat":1},{"version":"ddb7652e1e97673432651dd82304d1743be783994c76e4b99b4a025e81e1bc78","affectsGlobalScope":true,"impliedFormat":1},{"version":"42c169fb8c2d42f4f668c624a9a11e719d5d07dacbebb63cbcf7ef365b0a75b3","impliedFormat":1},{"version":"271cde49dfd9b398ccc91bb3aaa43854cf76f4d14e10fed91cbac649aa6cbc63","affectsGlobalScope":true,"impliedFormat":1},{"version":"2bcecd31f1b4281710c666843fc55133a0ee25b143e59f35f49c62e168123f4b","impliedFormat":1},{"version":"a6273756fa05f794b64fe1aff45f4371d444f51ed0257f9364a8b25f3501915d","impliedFormat":1},{"version":"9c4e644fe9bf08d93c93bd892705842189fe345163f8896849d5964d21b56b78","impliedFormat":1},{"version":"25d91fb9ed77a828cc6c7a863236fb712dafcd52f816eec481bd0c1f589f4404","impliedFormat":1},{"version":"4cd14cea22eed1bfb0dc76183e56989f897ac5b14c0e2a819e5162eafdcfe243","impliedFormat":1},{"version":"8d32432f68ca4ce93ad717823976f2db2add94c70c19602bf87ee67fe51df48b","impliedFormat":1},{"version":"1d4bc73751d6ec6285331d1ca378904f55d9e5e8aeaa69bc45b675c3df83e778","impliedFormat":1},{"version":"8017277c3843df85296d8730f9edf097d68d7d5f9bc9d8124fcacf17ecfd487e","impliedFormat":1},{"version":"056817860e416c0101f941fba75f3f3ee46fd6b09093b27a8a582a2978062425","signature":"132f088889203d799a17c63fcb0560a304b4c925595dca76b583b0b88e9eb92e"},{"version":"fd60d8026aafcf3a9cc3e820e9404b787e653023d3a7dbecc72cdbcdcb552aea","signature":"44a48fc06beaa2d9bc97839adc5157d1c832df72d50e1dff1a37027c7dfb7e7d"},{"version":"05321b823dd3781d0b6aac8700bfdc0c9181d56479fe52ba6a40c9196fd661a8","impliedFormat":1},"b3fde228fed6f4d21ee6510c24262f5c997f23ff384d74433a0b3b7d6199b871",{"version":"63f6312a4be1ec344baa7c5cdb831587ed5f737f35df2baa2d3db1d180b983ec","impliedFormat":99},{"version":"74c3a57d874889e2f042b89b9688716af704cb2366d757ead586988f6cc9a625","impliedFormat":99},{"version":"5ebf4476be92f000f00cb9fb79d69babe6f6ac2a39efdb04a8f370e110003e19","impliedFormat":99},{"version":"39bc8c363900ffa799f98eb2e4c7ddd52e09cfb9392082128ebe49379f999aa5","impliedFormat":99},{"version":"1a4cfb737223d523387f7afee7219fd2016f1d73ef885e9cb42183c911d07b4d","impliedFormat":99},{"version":"392b17a6ba3f687f19ba207f17841c99306701cc2882f3615a3b426686d854e6","impliedFormat":99},{"version":"2a9f82af6c7cf1e002d17153e10d758f685d085864f6c5f7d2b775ebcd6b2fc9","impliedFormat":99},{"version":"f65b6f12e264b6e22dcf888bc0c239aab27c1d1fa6560af64bcd450f864abab7","impliedFormat":99},{"version":"ecbac26c0c765e1da3e748a35ededfa4c7ed87f48399919cd952ae8bc32a1339","impliedFormat":99},{"version":"9c88eebb75b82b4ccb9412c7e3035e40e188ea3d7dcb010ff87986b7ff629555","impliedFormat":99},{"version":"154f87edab104ff00f36e95b36d01e014a4d74ac4fc219e124e2bf2627099267","impliedFormat":99},{"version":"30844ce073bb46b6908f55273063915629cd795bf7d83638bcb71e1507a494bb","impliedFormat":99},{"version":"0b616ee0814b25c7b231a73b57ad93a558a6b8cb5d3642776b92dca8e361dd9d","impliedFormat":99},{"version":"165c74085a9beb3c2bf69716e5e090449d7e9d4dc53084da6228206213d94939","impliedFormat":99},{"version":"b02604b3eb025af58b4c07c7ffce6d28a03948286cb5c4d5cdc46ffe21549524","impliedFormat":99},{"version":"ebd09f4071c53a42a09a20feb0b144b1f485f10a7d6190aba91c1714977d689f","impliedFormat":99},{"version":"345bf134b7c00954c1db3e011f029c066877a32256569c9d91b6ceb5bcca054c","impliedFormat":99},{"version":"2a1f7be668e3a95cdb683c6f755631bf19de9705c6d6c1c9e4ebc67e9db916d7","impliedFormat":99},{"version":"357acfb6822f15161214eb9e1848c767182750b67f9c2c6ac0fab52ce300ddbb","impliedFormat":99},{"version":"895ed044afb790fa06b64467688cb28436d87f46dcdc526a163915a962d55dca","impliedFormat":99},{"version":"646d66c423da6f036ecfda81da6f7d60a4748ddb0c58c85d261bb5c8e541cef2","impliedFormat":99},{"version":"93acb73e975b4fd741faf2e8fb2a5705aadcf8ca2df8fe354c9edb0b07622252","impliedFormat":99},{"version":"24bf4c3ab312b32e6f114adc2f4ce858a8a28af76abcbdc46a4a40655933f152","impliedFormat":99},{"version":"3b355d5bc20b716079980a0ed2d400180a15368db05888b3b858f90ae3ceac14","impliedFormat":99},{"version":"ff2c4a40bbde08390837443555b9ae201af54b527baf151555310782bd7bb8ef","impliedFormat":99},{"version":"0e9998684ca02c028170441f4c006e1caf425f9a9c3814cf8765a0002773fe30","impliedFormat":99},{"version":"1e647f80259d61974c8d0a89d9e3fd22416975c257d76f4f32d6ff38b9157f21","impliedFormat":99},{"version":"31e9f9b81179cdce4ee1cd1d6a427dc0c5fd15064307df8cad58237b0d96385b","impliedFormat":99},{"version":"7ba73e6476144ac4587b18bcc70349d2a8e7cede4e780815b53a057ca71f764d","impliedFormat":99},{"version":"fba690fc44b5c1db29fb472830df4cea1374642935a02c6302730bff37752498","impliedFormat":99},{"version":"2515daf0e2b05ec5a90349ea839cc1fad8e67135665747cd5f72b7b3d2ad49c3","impliedFormat":99},{"version":"7b4a756bb59248aeb831709239014a9850837727c2d6ec053f54eeaee95dda39","impliedFormat":99},{"version":"cde91ca23d14021aca53adba5977bebf7f72e4f18bbdcd2c6a689482c77dba07","impliedFormat":99},{"version":"191878041be6dae0b75974d1d28d55ae82a2896d5eb5004eb039e964e8140c00","impliedFormat":99},{"version":"7f4272fd567d065c1f5614ae3bed61b3dee47845267be0e41dd24f901985bf0f","impliedFormat":99},{"version":"0fe6cb0ec82fea8bb694d8335f8d470c8843600a277cf02d7dbfb84002666e8a","impliedFormat":99},{"version":"e43159089587768cc9e4b325488c546cec950602173b04a4f6cb9a615c4fc3b9","impliedFormat":99},{"version":"f3ebf0a71fb9e0d708c607d6448edae7a7893162532b560b3f361f48bacdbfca","impliedFormat":99},{"version":"053ed027d6ab656c53ee8dfc3fe842beff2a831831591f7f446c0ea1632f606e","impliedFormat":99},{"version":"79c5c3441a6786ce4804528aa560836e45cf855af4f25d6ca40f598cd6f1979a","impliedFormat":99},{"version":"bf235a40a595fe4c1c72ff72b50a9881a7279c4063029fc88e49237542797935","impliedFormat":99},{"version":"25627620692594a49b01a7192416e59a0fd94717c4f5c2800a3cdde58e28b39f","impliedFormat":99},{"version":"00f9b95c0741094ef69f8befa268077fb5dae5192149d99af5c7abf4cd20d5e5","impliedFormat":99},{"version":"89536ffee2ff5d49cd4c898a854a92a3d0812394f4ab6e1d48f9fb658f4abe48","impliedFormat":99},{"version":"0085bc39713819715d49b27bb64767dff1829179b0914ef0d4e1a852770f0136","impliedFormat":99},{"version":"9c6c451215eae6ae4ee0ebf8433f9d90494df7dba87718478c050bf5551da18f","impliedFormat":99},{"version":"a12d1a8f1b6e34597b9aef2757fdf4505362189c75b7f15266604a80bcffb42e","impliedFormat":99},{"version":"193f77fd99a5798127915516363958d227df9cb82e23f5890aa668409c1e6360","impliedFormat":99},{"version":"d8dc0c576c79c5069f4e87b0a15088e952043cb3df0ec487f81e6b98b174e503","impliedFormat":99},{"version":"84b69e8d4be7b1736536d1ab8c72c48318bbe6c677dab53a2d51058f9e68df71","impliedFormat":99},{"version":"97d3c4bd2a49a56f2cb63bb76c5880afe5c76098dcbb5598cd14e96bf572cb86","impliedFormat":99},{"version":"a493cd942f29c45c9befb1cf2f3e9a757300e1fa6b5a20cf939bf563c31f46a1","impliedFormat":99},{"version":"5300527e32de6eab286e5b70c3cca475380320a142ad54f234a34daadfc7bb1c","impliedFormat":99},{"version":"7476dbc814b46489fff760fd1f3d64248aedbf17e86fda8883c9bd0482d8bf73","impliedFormat":99},{"version":"8520b3f4c2c698bcef9c71d418a11c7cbe90d7b6d7deaed251a97ee5ef6b2068","impliedFormat":99},{"version":"8afc3d51f8ace0b6b9e89a2f7d8a6dffaca41d91733d235dea7c28364a3081a1","impliedFormat":99},{"version":"01cd58f2842ffec94a7cd86881fb5595df4b08399b99e817d2c25c2fb973fe09","impliedFormat":99},{"version":"d49f5458be59a10cc60ad003bebafa22eb37e15492020b2be9ca07055b6c8b10","impliedFormat":99},{"version":"0aa491d56a8011fcf95247f81cc4e09b40cfd5a96e80221038347da3931e8ba6","impliedFormat":99},{"version":"814971944c21b19105949c552a7dd5b35235a17a2eb8092b809e2fcaa54ea4e4","impliedFormat":99},{"version":"70f1528dd7d2131386fdcf6223ac1c56f2d7726c7977bd5eddcdfd22cd24f7f6","impliedFormat":99},{"version":"87f41340a0cac5b54e499b3ea6e6d0cb2e7abb9abf5feaedc6c4cc608cdfdc54","impliedFormat":99},{"version":"d0a8b3701edaddb7db2935bb134439272b46201384579eb0b53d66e4ac83bbfc","impliedFormat":99},{"version":"06d3bd1652d7a961bee709bce34b2cbcd6725ab7de8e0cbbb3353927a347a2b0","impliedFormat":99},{"version":"4166eb28a4170609b107205a614bfc6936bb18348e3d37408835cb9d49c4634d","impliedFormat":99},{"version":"e21552b6c0c6c1aa2edfb55d949511fa055b2d94ee60731cbc8e6a5d3edc63e9","impliedFormat":99},{"version":"61547fc99d5410765d51588931a1e910aaa76a452480795268345d461dec9b01","impliedFormat":99},{"version":"e71c443455caa4f5e047db65adf9e3a9d5d5c075ec348f52dcf749bf594aaab2","impliedFormat":99},{"version":"49ed77bf56727a997b85b4258a691e7c7d2be2121f3ec2f16524ab77f75ba914","signature":"bd12fbe6216f3a289374b3e0b3766848ae0054bf56a88fb095a2c1a3b8bbfb6e"},{"version":"7584239b853f690c6629ae8bb683ded6ff33104e7835778bbca5ee1b1d9a0a91","impliedFormat":99},{"version":"23b9fd8208415ee691e3e479867f1b04e26b2c029fd917cec0c158f8bebd5945","signature":"16097009b8bc4ba89aaabfcf618c7d3bea7d61320f92a85fcc4778dca327f6b1"},{"version":"eb21d907c2345301c7486a74d8e5b8959e58efbd91b3d74755cee680bc96229f","signature":"a561199c355e512c9ea2b334babc9806b3847de3810c443b6392134f675a3271"},{"version":"446cecd6264707be127c2a64b63d1cce7910001c8831da631381a6fd35738c97","signature":"812fe8f00972b5ffe9936317d47fb444e2e2fa4fa4fadab9e8e6cf21e38e675b"},{"version":"519392f9725d2d8a6fc17f60590682b17c6a099120faa312363c13213cf60aeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"4051f6311deb0ce6052329eeb1cd4b1b104378fe52f882f483130bea75f92197","impliedFormat":1},{"version":"ee8bee0eb75f88221d2d6e5aeab2ea893f7798aab3416627ad86a0c73937b82a","impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"c0671b50bb99cc7ad46e9c68fa0e7f15ba4bc898b59c31a17ea4611fab5095da","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"aa83e100f0c74a06c9d24f40a096c9e9cc3c02704250d01541e22c0ae9264eda","affectsGlobalScope":true,"impliedFormat":1},{"version":"1db0b7dca579049ca4193d034d835f6bfe73096c73663e5ef9a0b5779939f3d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"9798340ffb0d067d69b1ae5b32faa17ab31b82466a3fc00d8f2f2df0c8554aaa","affectsGlobalScope":true,"impliedFormat":1},{"version":"456fa0c0ab68731564917642b977c71c3b7682240685b118652fb9253c9a6429","affectsGlobalScope":true,"impliedFormat":1},{"version":"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","impliedFormat":1},{"version":"23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","impliedFormat":1},{"version":"487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","impliedFormat":1},{"version":"3a80bc85f38526ca3b08007ee80712e7bb0601df178b23fbf0bf87036fce40ce","impliedFormat":1},{"version":"ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"68834d631c8838c715f225509cfc3927913b9cc7a4870460b5b60c8dbdb99baf","impliedFormat":1},{"version":"4bc0794175abedf989547e628949888c1085b1efcd93fc482bccd77ee27f8b7c","impliedFormat":1},{"version":"3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","impliedFormat":1},{"version":"78c69908f7b42d6001037eb8e2d7ec501897ac9cee8d58f31923ff15b3fd4e02","impliedFormat":1},{"version":"ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","impliedFormat":1},{"version":"36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","impliedFormat":1},{"version":"914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","impliedFormat":1},{"version":"33e981bf6376e939f99bd7f89abec757c64897d33c005036b9a10d9587d80187","impliedFormat":1},{"version":"7fd1b31fd35876b0aa650811c25ec2c97a3c6387e5473eb18004bed86cdd76b6","impliedFormat":1},{"version":"b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","impliedFormat":1},{"version":"1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","impliedFormat":1},{"version":"af13e99445f37022c730bfcafcdc1761e9382ce1ea02afb678e3130b01ce5676","impliedFormat":1},{"version":"e5c4fceee379a4a8f5e0266172c33de9dd240e1218b6a439a30c96200190752b","impliedFormat":1},{"version":"0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","impliedFormat":1},{"version":"9666f2f84b985b62400d2e5ab0adae9ff44de9b2a34803c2c5bd3c8325b17dc0","impliedFormat":1},{"version":"40cd35c95e9cf22cfa5bd84e96408b6fcbca55295f4ff822390abb11afbc3dca","impliedFormat":1},{"version":"b1616b8959bf557feb16369c6124a97a0e74ed6f49d1df73bb4b9ddf68acf3f3","impliedFormat":1},{"version":"40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","impliedFormat":1},{"version":"249b9cab7f5d628b71308c7d9bb0a808b50b091e640ba3ed6e2d0516f4a8d91d","impliedFormat":1},{"version":"80aae6afc67faa5ac0b32b5b8bc8cc9f7fa299cff15cf09cc2e11fd28c6ae29e","impliedFormat":1},{"version":"f473cd2288991ff3221165dcf73cd5d24da30391f87e85b3dd4d0450c787a391","impliedFormat":1},{"version":"499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","impliedFormat":1},{"version":"54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","impliedFormat":1},{"version":"beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","impliedFormat":1},{"version":"78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","impliedFormat":1},{"version":"5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","impliedFormat":1},{"version":"59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","impliedFormat":1},{"version":"addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","impliedFormat":1},{"version":"48cc3ec153b50985fb95153258a710782b25975b10dd4ac8a4f3920632d10790","impliedFormat":1},{"version":"0040f0c70a793bdc76e4eace5de03485d76f667009656c5fc8d4da4eaf0aa2da","impliedFormat":1},{"version":"18f8cfbb14ba9405e67d30968ae67b8d19133867d13ebc49c8ed37ec64ce9bdb","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e","impliedFormat":1},{"version":"830171b27c5fdf9bcbe4cf7d428fcf3ae2c67780fb7fbdccdf70d1623d938bc4","affectsGlobalScope":true,"impliedFormat":1},{"version":"1cf059eaf468efcc649f8cf6075d3cb98e9a35a0fe9c44419ec3d2f5428d7123","affectsGlobalScope":true,"impliedFormat":1},{"version":"e7721c4f69f93c91360c26a0a84ee885997d748237ef78ef665b153e622b36c1","affectsGlobalScope":true,"impliedFormat":1},{"version":"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7","impliedFormat":1},{"version":"18334defc3d0a0e1966f5f3c23c7c83b62c77811e51045c5a7ff3883b446f81f","affectsGlobalScope":true,"impliedFormat":1},{"version":"8b17fcd63aa13734bf1d01419f4d6031b1c6a5fb2cbdb45e9839fb1762bdf0df","impliedFormat":1},{"version":"c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c","impliedFormat":1},{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"247b8f93f31c5918444116471bfb90810e268339bf5c678657ca99ca7183dabb","affectsGlobalScope":true,"impliedFormat":1},{"version":"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","impliedFormat":1},{"version":"25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","impliedFormat":1},{"version":"aa9224557befad144262c85b463c0a7ba8a3a0ad2a7c907349f8bb8bc3fe4abc","impliedFormat":1},{"version":"a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","impliedFormat":1},{"version":"ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c","impliedFormat":1},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true,"impliedFormat":1},{"version":"92dab1293d03f6cbd5d53c31b723c30ff5a52eaacd717ee3226e18739b5bb722","impliedFormat":1},{"version":"c6176c7b9f3769ba7f076c7a791588562c653cc0ba08fb2184f87bf78db2a87c","impliedFormat":1},{"version":"c6a532cab53ec1f87eb0b6a3a9882f4cf13c25b4a89495b3b3001a35f74224c6","impliedFormat":1},{"version":"bcbabfaca3f6b8a76cb2739e57710daf70ab5c9479ab70f5351c9b4932abf6bd","impliedFormat":1},{"version":"165a0c1f95bc939c72f18a280fc707fba6f2f349539246b050cfc09eb1d9f446","impliedFormat":1},{"version":"ca0f30343ce1a43181684c02af2ac708ba26d00f689be5e96e7301c374d64c7e","impliedFormat":1},{"version":"d163b6bc2372b4f07260747cbc6c0a6405ab3fbcea3852305e98ac43ca59f5bc","impliedFormat":1},{"version":"c8b85f7aed29f8f52b813f800611406b0bfe5cf3224d20a4bdda7c7f73ce368e","affectsGlobalScope":true,"impliedFormat":1},{"version":"7baae9bf5b50e572e7742c886c73c6f8fa50b34190bc5f0fd20dd7e706fda832","impliedFormat":1},{"version":"e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","impliedFormat":1},{"version":"76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86","impliedFormat":1},{"version":"5e9f8c1e042b0f598a9be018fc8c3cb670fe579e9f2e18e3388b63327544fe16","affectsGlobalScope":true,"impliedFormat":1},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true,"impliedFormat":1},{"version":"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","impliedFormat":1},{"version":"b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","impliedFormat":1},{"version":"de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","impliedFormat":1},{"version":"70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","impliedFormat":1},{"version":"8c81fd4a110490c43d7c578e8c6f69b3af01717189196899a6a44f93daa57a3a","impliedFormat":1},{"version":"1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","impliedFormat":1},{"version":"29c83cc89ddbdd5ffae8c00f4e6fab6f8f0e8076f87a866b132e8751e88cb848","impliedFormat":1},{"version":"363eedb495912790e867da6ff96e81bf792c8cfe386321e8163b71823a35719a","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"dba28a419aec76ed864ef43e5f577a5c99a010c32e5949fe4e17a4d57c58dd11","affectsGlobalScope":true,"impliedFormat":1},{"version":"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","impliedFormat":1},{"version":"07199a85560f473f37363d8f1300fac361cda2e954caf8a40221f83a6bfa7ade","impliedFormat":1},{"version":"9705cd157ffbb91c5cab48bdd2de5a437a372e63f870f8a8472e72ff634d47c1","affectsGlobalScope":true,"impliedFormat":1},{"version":"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","impliedFormat":1},{"version":"3af7d02e5d6ecbf363e61fb842ee55d3518a140fd226bdfb24a3bca6768c58df","impliedFormat":1},{"version":"e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","impliedFormat":1},{"version":"4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055","impliedFormat":1},{"version":"0d7393564d48a3f6f08c76b8d4de48260a072801422548e2030e386acd530dbf","affectsGlobalScope":true,"impliedFormat":1},{"version":"0fcb71410ad8a48bbdd13cd4c3eedf78ac0416e9f3533ae98e19cc6f3c7f5474","affectsGlobalScope":true,"impliedFormat":1},{"version":"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","impliedFormat":1},{"version":"420fdd37c51263be9db3fcac35ffd836216c71e6000e6a9740bb950fb0540654","impliedFormat":1},{"version":"73b0bff83ee76e3a9320e93c7fc15596e858b33c687c39a57567e75c43f2a324","impliedFormat":1},{"version":"cd3256f2ac09c65d2ee473916c273c45221367ab457fa1778a5696bccf5c4e8e","affectsGlobalScope":true,"impliedFormat":1},{"version":"4445f6ce6289c5b2220398138da23752fd84152c5c95bb8b58dedefc1758c036","impliedFormat":1},{"version":"7ac7756e2b43f021fa3d3b562a7ea8bf579543521a18b5682935d015361e6a35","impliedFormat":1},{"version":"17ed71200119e86ccef2d96b73b02ce8854b76ad6bd21b5021d4269bec527b5f","impliedFormat":1}],"root":[97,98,100,169,[171,173]],"options":{"allowJs":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":1,"skipLibCheck":true,"sourceMap":true,"strict":true,"target":2,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"referencedMap":[[174,1],[176,2],[88,1],[92,3],[93,3],[89,4],[90,4],[91,4],[94,5],[227,6],[228,6],[229,7],[179,8],[230,9],[231,10],[232,11],[177,1],[233,12],[234,13],[235,14],[236,15],[237,16],[238,17],[239,17],[240,18],[241,19],[242,20],[243,21],[180,1],[178,1],[244,22],[245,23],[246,24],[280,25],[247,26],[248,1],[249,27],[250,28],[251,29],[252,30],[253,31],[254,32],[255,33],[256,34],[257,35],[258,35],[259,36],[260,1],[261,1],[262,37],[264,38],[263,39],[265,40],[266,41],[267,42],[268,43],[269,44],[270,45],[271,46],[272,47],[273,48],[274,49],[275,50],[276,51],[277,52],[181,1],[182,1],[183,1],[224,53],[225,54],[226,1],[278,55],[279,56],[85,1],[99,57],[281,57],[96,58],[95,59],[83,1],[86,60],[87,57],[170,1],[122,61],[123,61],[124,62],[125,61],[127,63],[126,61],[128,61],[129,61],[130,64],[104,65],[131,1],[132,1],[133,66],[101,1],[120,67],[121,68],[116,1],[107,69],[134,70],[135,71],[115,72],[119,73],[118,74],[136,1],[117,75],[137,76],[113,77],[140,78],[139,79],[108,77],[141,80],[151,65],[109,1],[138,81],[162,82],[145,83],[142,84],[143,85],[144,86],[153,87],[112,88],[146,1],[147,1],[148,89],[149,1],[150,90],[152,91],[161,92],[154,93],[156,94],[155,93],[157,93],[158,95],[159,96],[160,97],[163,98],[106,65],[103,1],[110,1],[105,1],[114,99],[111,100],[102,1],[84,1],[175,1],[165,101],[168,102],[166,101],[164,103],[167,104],[81,1],[82,1],[13,1],[14,1],[16,1],[15,1],[2,1],[17,1],[18,1],[19,1],[20,1],[21,1],[22,1],[23,1],[24,1],[3,1],[25,1],[26,1],[4,1],[27,1],[31,1],[28,1],[29,1],[30,1],[32,1],[33,1],[34,1],[5,1],[35,1],[36,1],[37,1],[38,1],[6,1],[42,1],[39,1],[40,1],[41,1],[43,1],[7,1],[44,1],[49,1],[50,1],[45,1],[46,1],[47,1],[48,1],[8,1],[54,1],[51,1],[52,1],[53,1],[55,1],[9,1],[56,1],[57,1],[58,1],[60,1],[59,1],[61,1],[62,1],[10,1],[63,1],[64,1],[65,1],[11,1],[66,1],[67,1],[68,1],[69,1],[70,1],[1,1],[71,1],[72,1],[12,1],[76,1],[74,1],[79,1],[78,1],[73,1],[77,1],[75,1],[80,1],[201,105],[212,106],[199,107],[213,108],[222,109],[190,110],[191,111],[189,112],[221,113],[216,114],[220,115],[193,116],[209,117],[192,118],[219,119],[187,120],[188,114],[194,121],[195,1],[200,122],[198,121],[185,123],[223,124],[214,125],[204,126],[203,121],[205,127],[207,128],[202,129],[206,130],[217,113],[196,131],[197,132],[208,133],[186,108],[211,134],[210,121],[215,1],[184,1],[218,135],[98,136],[169,137],[97,138],[173,139],[100,140],[171,141],[172,142]],"affectedFilesPendingEmit":[98,169,97,173,100,171,172],"version":"5.9.2"}[m
\ No newline at end of file[m
[32m+[m[32m{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.es2023.d.ts","../typescript/lib/lib.es2024.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2016.intl.d.ts","../typescript/lib/lib.es2017.arraybuffer.d.ts","../typescript/lib/lib.es2017.date.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.es2022.regexp.d.ts","../typescript/lib/lib.es2023.array.d.ts","../typescript/lib/lib.es2023.collection.d.ts","../typescript/lib/lib.es2023.intl.d.ts","../typescript/lib/lib.es2024.arraybuffer.d.ts","../typescript/lib/lib.es2024.collection.d.ts","../typescript/lib/lib.es2024.object.d.ts","../typescript/lib/lib.es2024.promise.d.ts","../typescript/lib/lib.es2024.regexp.d.ts","../typescript/lib/lib.es2024.sharedmemory.d.ts","../typescript/lib/lib.es2024.string.d.ts","../typescript/lib/lib.esnext.array.d.ts","../typescript/lib/lib.esnext.collection.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../typescript/lib/lib.esnext.disposable.d.ts","../typescript/lib/lib.esnext.promise.d.ts","../typescript/lib/lib.esnext.decorators.d.ts","../typescript/lib/lib.esnext.iterator.d.ts","../typescript/lib/lib.esnext.float16.d.ts","../typescript/lib/lib.esnext.error.d.ts","../typescript/lib/lib.esnext.sharedmemory.d.ts","../typescript/lib/lib.decorators.d.ts","../typescript/lib/lib.decorators.legacy.d.ts","../@types/react/global.d.ts","../csstype/index.d.ts","../@types/prop-types/index.d.ts","../@types/react/index.d.ts","../@types/react/jsx-runtime.d.ts","../../src/services/modalService.ts","../../src/services/notificationService.ts","../../src/services/authService.ts","../../src/components/modals/Modal.tsx","../../src/components/modals/NotificationModal.tsx","../../src/components/modals/AccountModal.tsx","../../src/components/Header.tsx","../../src/components/MetricCard.tsx","../../src/components/HealthSnapshot.tsx","../../src/components/BMIIndicator.tsx","../../src/components/WeightMetrics.tsx","../../src/components/Activity.tsx","../../src/providers/ModalProvider.tsx","../../src/Dashboard.tsx","../@types/react-dom/client.d.ts","../../src/index.tsx","../chart.js/dist/core/core.config.d.ts","../chart.js/dist/types/utils.d.ts","../chart.js/dist/types/basic.d.ts","../chart.js/dist/core/core.adapters.d.ts","../chart.js/dist/types/geometric.d.ts","../chart.js/dist/types/animation.d.ts","../chart.js/dist/core/core.element.d.ts","../chart.js/dist/elements/element.point.d.ts","../chart.js/dist/helpers/helpers.easing.d.ts","../chart.js/dist/types/color.d.ts","../chart.js/dist/types/layout.d.ts","../chart.js/dist/plugins/plugin.colors.d.ts","../chart.js/dist/elements/element.arc.d.ts","../chart.js/dist/types/index.d.ts","../chart.js/dist/core/core.plugins.d.ts","../chart.js/dist/core/core.defaults.d.ts","../chart.js/dist/core/core.typedRegistry.d.ts","../chart.js/dist/core/core.scale.d.ts","../chart.js/dist/core/core.registry.d.ts","../chart.js/dist/core/core.controller.d.ts","../chart.js/dist/core/core.datasetController.d.ts","../chart.js/dist/controllers/controller.bar.d.ts","../chart.js/dist/controllers/controller.bubble.d.ts","../chart.js/dist/controllers/controller.doughnut.d.ts","../chart.js/dist/controllers/controller.line.d.ts","../chart.js/dist/controllers/controller.polarArea.d.ts","../chart.js/dist/controllers/controller.pie.d.ts","../chart.js/dist/controllers/controller.radar.d.ts","../chart.js/dist/controllers/controller.scatter.d.ts","../chart.js/dist/controllers/index.d.ts","../chart.js/dist/core/core.animation.d.ts","../chart.js/dist/core/core.animations.d.ts","../chart.js/dist/core/core.animator.d.ts","../chart.js/dist/core/core.interaction.d.ts","../chart.js/dist/core/core.layouts.d.ts","../chart.js/dist/core/core.ticks.d.ts","../chart.js/dist/core/index.d.ts","../chart.js/dist/helpers/helpers.segment.d.ts","../chart.js/dist/elements/element.line.d.ts","../chart.js/dist/elements/element.bar.d.ts","../chart.js/dist/elements/index.d.ts","../chart.js/dist/platform/platform.base.d.ts","../chart.js/dist/platform/platform.basic.d.ts","../chart.js/dist/platform/platform.dom.d.ts","../chart.js/dist/platform/index.d.ts","../chart.js/dist/plugins/plugin.decimation.d.ts","../chart.js/dist/plugins/plugin.filler/index.d.ts","../chart.js/dist/plugins/plugin.legend.d.ts","../chart.js/dist/plugins/plugin.subtitle.d.ts","../chart.js/dist/plugins/plugin.title.d.ts","../chart.js/dist/helpers/helpers.core.d.ts","../chart.js/dist/plugins/plugin.tooltip.d.ts","../chart.js/dist/plugins/index.d.ts","../chart.js/dist/scales/scale.category.d.ts","../chart.js/dist/scales/scale.linearbase.d.ts","../chart.js/dist/scales/scale.linear.d.ts","../chart.js/dist/scales/scale.logarithmic.d.ts","../chart.js/dist/scales/scale.radialLinear.d.ts","../chart.js/dist/scales/scale.time.d.ts","../chart.js/dist/scales/scale.timeseries.d.ts","../chart.js/dist/scales/index.d.ts","../chart.js/dist/index.d.ts","../chart.js/dist/types.d.ts","../react-chartjs-2/dist/types.d.ts","../react-chartjs-2/dist/chart.d.ts","../react-chartjs-2/dist/typedCharts.d.ts","../react-chartjs-2/dist/utils.d.ts","../react-chartjs-2/dist/index.d.ts","../../src/components/Charts/HealthChart.tsx","../axios/index.d.ts","../../src/services/api.ts","../../src/types/index.ts","../../src/hooks/useHealthData.ts","../@types/axios/index.d.ts","../moment/ts3.1-typings/moment.d.ts","../@types/chart.js/index.d.ts","../@types/history/DOMUtils.d.ts","../@types/history/createBrowserHistory.d.ts","../@types/history/createHashHistory.d.ts","../@types/history/createMemoryHistory.d.ts","../@types/history/LocationUtils.d.ts","../@types/history/PathUtils.d.ts","../@types/history/index.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/globals.typedarray.d.ts","../@types/node/buffer.buffer.d.ts","../@types/node/globals.d.ts","../@types/node/web-globals/abortcontroller.d.ts","../@types/node/web-globals/domexception.d.ts","../@types/node/web-globals/events.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client-stats.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/web-globals/fetch.d.ts","../@types/node/web-globals/navigator.d.ts","../@types/node/web-globals/storage.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/inspector.generated.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/index.d.ts","../@types/react-dom/index.d.ts","../@types/react-router/index.d.ts","../@types/react-router-dom/index.d.ts"],"fileIdsList":[[189,240,257,258],[178,189,240,257,258],[186,189,240,257,258],[180,186,189,240,257,258],[181,182,183,184,185,189,240,257,258],[189,237,240,257,258],[189,239,240,257,258],[240,257,258],[189,240,245,257,258,275],[189,240,241,246,251,257,258,260,272,283],[189,240,241,242,251,257,258,260],[189,240,243,257,258,284],[189,240,244,245,252,257,258,261],[189,240,245,257,258,272,280],[189,240,246,248,251,257,258,260],[189,239,240,247,257,258],[189,240,248,249,257,258],[189,240,250,251,257,258],[189,239,240,251,257,258],[189,240,251,252,253,257,258,272,283],[189,240,251,252,253,257,258,267,272,275],[189,233,240,248,251,254,257,258,260,272,283],[189,240,251,252,254,255,257,258,260,272,280,283],[189,240,254,256,257,258,272,280,283],[187,188,189,190,191,192,193,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289],[189,240,251,257,258],[189,240,257,258,259,283],[189,240,248,251,257,258,260,272],[189,240,257,258,261],[189,240,257,258,262],[189,239,240,257,258,263],[189,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289],[189,240,257,258,265],[189,240,257,258,266],[189,240,251,257,258,267,268],[189,240,257,258,267,269,284,286],[189,240,251,257,258,272,273,275],[189,240,257,258,274,275],[189,240,257,258,272,273],[189,240,257,258,275],[189,240,257,258,276],[189,237,240,257,258,272,277],[189,240,251,257,258,278,279],[189,240,257,258,278,279],[189,240,245,257,258,260,272,280],[189,240,257,258,281],[189,240,257,258,260,282],[189,240,254,257,258,266,283],[189,240,245,257,258,284],[189,240,257,258,272,285],[189,240,257,258,259,286],[189,240,257,258,287],[189,233,240,257,258],[189,240,257,258,288],[189,233,240,251,253,257,258,263,272,275,283,285,286,288],[189,240,257,258,272,289],[86,189,240,257,258],[86,186,189,240,257,258,292],[86,186,189,240,257,258],[83,84,85,189,240,257,258],[124,189,240,257,258],[123,124,189,240,257,258],[127,189,240,257,258],[125,126,127,128,129,130,131,132,189,240,257,258],[106,117,189,240,257,258],[123,134,189,240,257,258],[104,117,118,119,122,189,240,257,258],[121,123,189,240,257,258],[106,108,109,189,240,257,258],[110,117,123,189,240,257,258],[123,189,240,257,258],[117,123,189,240,257,258],[110,120,121,124,189,240,257,258],[106,110,117,166,189,240,257,258],[119,189,240,257,258],[107,110,118,119,121,122,123,124,134,135,136,137,138,139,189,240,257,258],[110,117,189,240,257,258],[106,110,189,240,257,258],[106,110,111,141,189,240,257,258],[111,116,142,143,189,240,257,258],[111,142,189,240,257,258],[133,140,144,148,156,164,189,240,257,258],[145,146,147,189,240,257,258],[104,123,189,240,257,258],[145,189,240,257,258],[123,145,189,240,257,258],[115,149,150,151,152,153,155,189,240,257,258],[166,189,240,257,258],[106,110,117,189,240,257,258],[106,110,166,189,240,257,258],[106,110,117,123,135,137,145,154,189,240,257,258],[157,159,160,161,162,163,189,240,257,258],[121,189,240,257,258],[158,189,240,257,258],[158,166,189,240,257,258],[107,121,189,240,257,258],[162,189,240,257,258],[117,165,189,240,257,258],[105,106,107,108,109,110,111,112,113,114,115,116,189,240,257,258],[108,189,240,257,258],[167,189,240,257,258],[167,168,169,170,189,240,257,258],[86,166,189,240,257,258],[86,166,167,189,240,257,258],[189,200,203,206,207,240,257,258,283],[189,203,240,257,258,272,283],[189,203,207,240,257,258,283],[189,240,257,258,272],[189,197,240,257,258],[189,201,240,257,258],[189,199,200,203,240,257,258,283],[189,240,257,258,260,280],[189,240,257,258,290],[189,197,240,257,258,290],[189,199,203,240,257,258,260,283],[189,194,195,196,198,202,240,251,257,258,272,283],[189,203,211,218,240,257,258],[189,195,201,240,257,258],[189,203,227,228,240,257,258],[189,195,198,203,240,257,258,275,283,290],[189,203,240,257,258],[189,199,203,240,257,258,283],[189,194,240,257,258],[189,197,198,199,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,240,257,258],[189,203,220,223,240,248,257,258],[189,203,211,212,213,240,257,258],[189,201,203,212,214,240,257,258],[189,202,240,257,258],[189,195,197,203,240,257,258],[189,203,207,212,214,240,257,258],[189,207,240,257,258],[189,201,203,206,240,257,258,283],[189,195,199,203,211,240,257,258],[189,203,220,240,257,258],[189,197,203,227,240,257,258,275,288,290],[86,87,94,96,98,99,100,189,240,257,258],[86,87,189,240,257,258],[86,87,166,171,189,240,257,258],[86,87,88,89,90,92,93,189,240,257,258],[86,87,95,189,240,257,258],[86,87,97,189,240,257,258],[86,87,90,91,189,240,257,258],[86,87,89,91,189,240,257,258],[86,87,174,175,189,240,257,258],[86,87,101,102,189,240,257,258],[86,87,88,189,240,257,258],[87,177,189,240,257,258],[87,189,240,257,258]],"fileInfos":[{"version":"c430d44666289dae81f30fa7b2edebf186ecc91a2d4c71266ea6ae76388792e1","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","impliedFormat":1},{"version":"ee7bad0c15b58988daa84371e0b89d313b762ab83cb5b31b8a2d1162e8eb41c2","impliedFormat":1},{"version":"27bdc30a0e32783366a5abeda841bc22757c1797de8681bbe81fbc735eeb1c10","impliedFormat":1},{"version":"8fd575e12870e9944c7e1d62e1f5a73fcf23dd8d3a321f2a2c74c20d022283fe","impliedFormat":1},{"version":"2ab096661c711e4a81cc464fa1e6feb929a54f5340b46b0a07ac6bbf857471f0","impliedFormat":1},{"version":"080941d9f9ff9307f7e27a83bcd888b7c8270716c39af943532438932ec1d0b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2e80ee7a49e8ac312cc11b77f1475804bee36b3b2bc896bead8b6e1266befb43","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"fb0f136d372979348d59b3f5020b4cdb81b5504192b1cacff5d1fbba29378aa1","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"a680117f487a4d2f30ea46f1b4b7f58bef1480456e18ba53ee85c2746eeca012","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true,"impliedFormat":1},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true,"impliedFormat":1},{"version":"959d36cddf5e7d572a65045b876f2956c973a586da58e5d26cde519184fd9b8a","affectsGlobalScope":true,"impliedFormat":1},{"version":"965f36eae237dd74e6cca203a43e9ca801ce38824ead814728a2807b1910117d","affectsGlobalScope":true,"impliedFormat":1},{"version":"3925a6c820dcb1a06506c90b1577db1fdbf7705d65b62b99dce4be75c637e26b","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a3d63ef2b853447ec4f749d3f368ce642264246e02911fcb1590d8c161b8005","affectsGlobalScope":true,"impliedFormat":1},{"version":"8cdf8847677ac7d20486e54dd3fcf09eda95812ac8ace44b4418da1bbbab6eb8","affectsGlobalScope":true,"impliedFormat":1},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true,"impliedFormat":1},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true,"impliedFormat":1},{"version":"b4b67b1a91182421f5df999988c690f14d813b9850b40acd06ed44691f6727ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"df83c2a6c73228b625b0beb6669c7ee2a09c914637e2d35170723ad49c0f5cd4","affectsGlobalScope":true,"impliedFormat":1},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e3c06ea092138bf9fa5e874a1fdbc9d54805d074bee1de31b99a11e2fec239d","affectsGlobalScope":true,"impliedFormat":1},{"version":"87dc0f382502f5bbce5129bdc0aea21e19a3abbc19259e0b43ae038a9fc4e326","affectsGlobalScope":true,"impliedFormat":1},{"version":"b1cb28af0c891c8c96b2d6b7be76bd394fddcfdb4709a20ba05a7c1605eea0f9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2fef54945a13095fdb9b84f705f2b5994597640c46afeb2ce78352fab4cb3279","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac77cb3e8c6d3565793eb90a8373ee8033146315a3dbead3bde8db5eaf5e5ec6","affectsGlobalScope":true,"impliedFormat":1},{"version":"56e4ed5aab5f5920980066a9409bfaf53e6d21d3f8d020c17e4de584d29600ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ece9f17b3866cc077099c73f4983bddbcb1dc7ddb943227f1ec070f529dedd1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a6282c8827e4b9a95f4bf4f5c205673ada31b982f50572d27103df8ceb8013c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1c9319a09485199c1f7b0498f2988d6d2249793ef67edda49d1e584746be9032","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3a2a0cee0f03ffdde24d89660eba2685bfbdeae955a6c67e8c4c9fd28928eeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811c71eee4aa0ac5f7adf713323a5c41b0cf6c4e17367a34fbce379e12bbf0a4","affectsGlobalScope":true,"impliedFormat":1},{"version":"51ad4c928303041605b4d7ae32e0c1ee387d43a24cd6f1ebf4a2699e1076d4fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"60037901da1a425516449b9a20073aa03386cce92f7a1fd902d7602be3a7c2e9","affectsGlobalScope":true,"impliedFormat":1},{"version":"d4b1d2c51d058fc21ec2629fff7a76249dec2e36e12960ea056e3ef89174080f","affectsGlobalScope":true,"impliedFormat":1},{"version":"22adec94ef7047a6c9d1af3cb96be87a335908bf9ef386ae9fd50eeb37f44c47","affectsGlobalScope":true,"impliedFormat":1},{"version":"4245fee526a7d1754529d19227ecbf3be066ff79ebb6a380d78e41648f2f224d","affectsGlobalScope":true,"impliedFormat":1},{"version":"73f78680d4c08509933daf80947902f6ff41b6230f94dd002ae372620adb0f60","affectsGlobalScope":true,"impliedFormat":1},{"version":"c5239f5c01bcfa9cd32f37c496cf19c61d69d37e48be9de612b541aac915805b","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb5b19b86227ace1d29ea4cf81387279d04bb34051e944bc53df69f58914b788","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"87d9d29dbc745f182683f63187bf3d53fd8673e5fca38ad5eaab69798ed29fbc","impliedFormat":1},{"version":"ddb7652e1e97673432651dd82304d1743be783994c76e4b99b4a025e81e1bc78","affectsGlobalScope":true,"impliedFormat":1},{"version":"42c169fb8c2d42f4f668c624a9a11e719d5d07dacbebb63cbcf7ef365b0a75b3","impliedFormat":1},{"version":"ceafe97617f4aa1400996cf19954ca741f2a011ba18775edfea1f8ceb9f1a1fb","signature":"bc137165f7d67287efdccdd7b1b23943917e408216f9163d4d8112958faf5f61"},{"version":"6a82d041edc58879e859c8f3a130950f5d9efc8e8ae5410cca73ace2be3b98a4","signature":"1342053442b1e20211dfdd40c45670a55939ddae7eb7ea3217edaf3feee3f784"},{"version":"4c376b191967f859334b33456af6fe65333a8844b7e0eb6aeda4c3596040af94","signature":"f23301f62ece5965272f6c41b5e9dc09f3ac85bbf7042be2881a4cc4b006fb4e"},{"version":"b8b8a5ffa3cc661d5b34fe63a22fdaf0a68e26ac6e0ea8c7a51df4fbeedf94d5","signature":"7cd7ce27c8fd3da280ae514d043415c142d32ba2f1cd169b8ca64f3650df4ccc"},"53358199f8e734004790d2fd117320b4188bcf9b2aec0442d60f2db6f6e56cfb",{"version":"4eb22fcb7b5fc669b9c924de1013cd32f4e347ef19109a09ceb7f8d28e805aa7","signature":"889193065e559c85e85144b594c93a8d0d7012f552f573b889dd1546dc748070"},{"version":"4cb47ea5cc66bed591c224ff24420dd94d5c81e670acacc055a847ffd7e1e0ef","signature":"4f4ce6860737e466b42104e1015956360232357b65932e5d329d43ecac02d1ff"},{"version":"39b533d819c4afd794817f263f498c7d7d66cd55ba79d31aa7b035f42b94d117","signature":"bf26c41113ec23849d4fb9f8a398f6d02b61fdde11896ad93827b5b722daa097"},{"version":"69fa197daaed95021f2274c1fd9bdc836360afe590059799e03b04c2219f6e74","signature":"95f00ea51a353315dc18ecf667b9cbebec695a2a94437b0929619e823bbfeb62"},{"version":"8025205b3f0a57299b5160088b72161e617c04a60781b6a9fb6be358ee060f51","signature":"233e12ea802896e70a7d46a21313f18135f270405ec31699e7dfbeec3cfb31a7"},{"version":"f49a822664a528efbcd69643b017699afbd12723a5dce651bf4a4192fcfd26e3","signature":"53824e690b8c7d201196c109f7b9a8b7d3c800f2ec8f74cc949b00c32433c663"},{"version":"3850b9bdbc242f3c3570e64124e07d3e5136bffb398b2eef86f3b7901fb951b0","signature":"3f9068e905d4165163060d800607f1a60f114299497e2ee5bdf77a85dae28c32"},{"version":"13b42da52678ad4eecb17fed17c4e20330c2f7e9338a4b98366e5d5878ba04a1","signature":"32f2b88f0e78f056570ec7c41c4fd87f419eb7e5fc4fee1acd946d5b1e6e9853"},"0aa1a97d6d5106cb70848f1861f4b6ff44338cd39a634501bc1d64dd2701570e",{"version":"05321b823dd3781d0b6aac8700bfdc0c9181d56479fe52ba6a40c9196fd661a8","impliedFormat":1},"b3fde228fed6f4d21ee6510c24262f5c997f23ff384d74433a0b3b7d6199b871",{"version":"63f6312a4be1ec344baa7c5cdb831587ed5f737f35df2baa2d3db1d180b983ec","impliedFormat":99},{"version":"74c3a57d874889e2f042b89b9688716af704cb2366d757ead586988f6cc9a625","impliedFormat":99},{"version":"5ebf4476be92f000f00cb9fb79d69babe6f6ac2a39efdb04a8f370e110003e19","impliedFormat":99},{"version":"39bc8c363900ffa799f98eb2e4c7ddd52e09cfb9392082128ebe49379f999aa5","impliedFormat":99},{"version":"1a4cfb737223d523387f7afee7219fd2016f1d73ef885e9cb42183c911d07b4d","impliedFormat":99},{"version":"392b17a6ba3f687f19ba207f17841c99306701cc2882f3615a3b426686d854e6","impliedFormat":99},{"version":"2a9f82af6c7cf1e002d17153e10d758f685d085864f6c5f7d2b775ebcd6b2fc9","impliedFormat":99},{"version":"f65b6f12e264b6e22dcf888bc0c239aab27c1d1fa6560af64bcd450f864abab7","impliedFormat":99},{"version":"ecbac26c0c765e1da3e748a35ededfa4c7ed87f48399919cd952ae8bc32a1339","impliedFormat":99},{"version":"9c88eebb75b82b4ccb9412c7e3035e40e188ea3d7dcb010ff87986b7ff629555","impliedFormat":99},{"version":"154f87edab104ff00f36e95b36d01e014a4d74ac4fc219e124e2bf2627099267","impliedFormat":99},{"version":"30844ce073bb46b6908f55273063915629cd795bf7d83638bcb71e1507a494bb","impliedFormat":99},{"version":"0b616ee0814b25c7b231a73b57ad93a558a6b8cb5d3642776b92dca8e361dd9d","impliedFormat":99},{"version":"165c74085a9beb3c2bf69716e5e090449d7e9d4dc53084da6228206213d94939","impliedFormat":99},{"version":"b02604b3eb025af58b4c07c7ffce6d28a03948286cb5c4d5cdc46ffe21549524","impliedFormat":99},{"version":"ebd09f4071c53a42a09a20feb0b144b1f485f10a7d6190aba91c1714977d689f","impliedFormat":99},{"version":"345bf134b7c00954c1db3e011f029c066877a32256569c9d91b6ceb5bcca054c","impliedFormat":99},{"version":"2a1f7be668e3a95cdb683c6f755631bf19de9705c6d6c1c9e4ebc67e9db916d7","impliedFormat":99},{"version":"357acfb6822f15161214eb9e1848c767182750b67f9c2c6ac0fab52ce300ddbb","impliedFormat":99},{"version":"895ed044afb790fa06b64467688cb28436d87f46dcdc526a163915a962d55dca","impliedFormat":99},{"version":"646d66c423da6f036ecfda81da6f7d60a4748ddb0c58c85d261bb5c8e541cef2","impliedFormat":99},{"version":"93acb73e975b4fd741faf2e8fb2a5705aadcf8ca2df8fe354c9edb0b07622252","impliedFormat":99},{"version":"24bf4c3ab312b32e6f114adc2f4ce858a8a28af76abcbdc46a4a40655933f152","impliedFormat":99},{"version":"3b355d5bc20b716079980a0ed2d400180a15368db05888b3b858f90ae3ceac14","impliedFormat":99},{"version":"ff2c4a40bbde08390837443555b9ae201af54b527baf151555310782bd7bb8ef","impliedFormat":99},{"version":"0e9998684ca02c028170441f4c006e1caf425f9a9c3814cf8765a0002773fe30","impliedFormat":99},{"version":"1e647f80259d61974c8d0a89d9e3fd22416975c257d76f4f32d6ff38b9157f21","impliedFormat":99},{"version":"31e9f9b81179cdce4ee1cd1d6a427dc0c5fd15064307df8cad58237b0d96385b","impliedFormat":99},{"version":"7ba73e6476144ac4587b18bcc70349d2a8e7cede4e780815b53a057ca71f764d","impliedFormat":99},{"version":"fba690fc44b5c1db29fb472830df4cea1374642935a02c6302730bff37752498","impliedFormat":99},{"version":"2515daf0e2b05ec5a90349ea839cc1fad8e67135665747cd5f72b7b3d2ad49c3","impliedFormat":99},{"version":"7b4a756bb59248aeb831709239014a9850837727c2d6ec053f54eeaee95dda39","impliedFormat":99},{"version":"cde91ca23d14021aca53adba5977bebf7f72e4f18bbdcd2c6a689482c77dba07","impliedFormat":99},{"version":"191878041be6dae0b75974d1d28d55ae82a2896d5eb5004eb039e964e8140c00","impliedFormat":99},{"version":"7f4272fd567d065c1f5614ae3bed61b3dee47845267be0e41dd24f901985bf0f","impliedFormat":99},{"version":"0fe6cb0ec82fea8bb694d8335f8d470c8843600a277cf02d7dbfb84002666e8a","impliedFormat":99},{"version":"e43159089587768cc9e4b325488c546cec950602173b04a4f6cb9a615c4fc3b9","impliedFormat":99},{"version":"f3ebf0a71fb9e0d708c607d6448edae7a7893162532b560b3f361f48bacdbfca","impliedFormat":99},{"version":"053ed027d6ab656c53ee8dfc3fe842beff2a831831591f7f446c0ea1632f606e","impliedFormat":99},{"version":"79c5c3441a6786ce4804528aa560836e45cf855af4f25d6ca40f598cd6f1979a","impliedFormat":99},{"version":"bf235a40a595fe4c1c72ff72b50a9881a7279c4063029fc88e49237542797935","impliedFormat":99},{"version":"25627620692594a49b01a7192416e59a0fd94717c4f5c2800a3cdde58e28b39f","impliedFormat":99},{"version":"00f9b95c0741094ef69f8befa268077fb5dae5192149d99af5c7abf4cd20d5e5","impliedFormat":99},{"version":"89536ffee2ff5d49cd4c898a854a92a3d0812394f4ab6e1d48f9fb658f4abe48","impliedFormat":99},{"version":"0085bc39713819715d49b27bb64767dff1829179b0914ef0d4e1a852770f0136","impliedFormat":99},{"version":"9c6c451215eae6ae4ee0ebf8433f9d90494df7dba87718478c050bf5551da18f","impliedFormat":99},{"version":"a12d1a8f1b6e34597b9aef2757fdf4505362189c75b7f15266604a80bcffb42e","impliedFormat":99},{"version":"193f77fd99a5798127915516363958d227df9cb82e23f5890aa668409c1e6360","impliedFormat":99},{"version":"d8dc0c576c79c5069f4e87b0a15088e952043cb3df0ec487f81e6b98b174e503","impliedFormat":99},{"version":"84b69e8d4be7b1736536d1ab8c72c48318bbe6c677dab53a2d51058f9e68df71","impliedFormat":99},{"version":"97d3c4bd2a49a56f2cb63bb76c5880afe5c76098dcbb5598cd14e96bf572cb86","impliedFormat":99},{"version":"a493cd942f29c45c9befb1cf2f3e9a757300e1fa6b5a20cf939bf563c31f46a1","impliedFormat":99},{"version":"5300527e32de6eab286e5b70c3cca475380320a142ad54f234a34daadfc7bb1c","impliedFormat":99},{"version":"7476dbc814b46489fff760fd1f3d64248aedbf17e86fda8883c9bd0482d8bf73","impliedFormat":99},{"version":"8520b3f4c2c698bcef9c71d418a11c7cbe90d7b6d7deaed251a97ee5ef6b2068","impliedFormat":99},{"version":"8afc3d51f8ace0b6b9e89a2f7d8a6dffaca41d91733d235dea7c28364a3081a1","impliedFormat":99},{"version":"01cd58f2842ffec94a7cd86881fb5595df4b08399b99e817d2c25c2fb973fe09","impliedFormat":99},{"version":"d49f5458be59a10cc60ad003bebafa22eb37e15492020b2be9ca07055b6c8b10","impliedFormat":99},{"version":"0aa491d56a8011fcf95247f81cc4e09b40cfd5a96e80221038347da3931e8ba6","impliedFormat":99},{"version":"814971944c21b19105949c552a7dd5b35235a17a2eb8092b809e2fcaa54ea4e4","impliedFormat":99},{"version":"70f1528dd7d2131386fdcf6223ac1c56f2d7726c7977bd5eddcdfd22cd24f7f6","impliedFormat":99},{"version":"87f41340a0cac5b54e499b3ea6e6d0cb2e7abb9abf5feaedc6c4cc608cdfdc54","impliedFormat":99},{"version":"d0a8b3701edaddb7db2935bb134439272b46201384579eb0b53d66e4ac83bbfc","impliedFormat":99},{"version":"06d3bd1652d7a961bee709bce34b2cbcd6725ab7de8e0cbbb3353927a347a2b0","impliedFormat":99},{"version":"4166eb28a4170609b107205a614bfc6936bb18348e3d37408835cb9d49c4634d","impliedFormat":99},{"version":"e21552b6c0c6c1aa2edfb55d949511fa055b2d94ee60731cbc8e6a5d3edc63e9","impliedFormat":99},{"version":"61547fc99d5410765d51588931a1e910aaa76a452480795268345d461dec9b01","impliedFormat":99},{"version":"e71c443455caa4f5e047db65adf9e3a9d5d5c075ec348f52dcf749bf594aaab2","impliedFormat":99},{"version":"49ed77bf56727a997b85b4258a691e7c7d2be2121f3ec2f16524ab77f75ba914","signature":"bd12fbe6216f3a289374b3e0b3766848ae0054bf56a88fb095a2c1a3b8bbfb6e"},{"version":"7584239b853f690c6629ae8bb683ded6ff33104e7835778bbca5ee1b1d9a0a91","impliedFormat":99},{"version":"23b9fd8208415ee691e3e479867f1b04e26b2c029fd917cec0c158f8bebd5945","signature":"16097009b8bc4ba89aaabfcf618c7d3bea7d61320f92a85fcc4778dca327f6b1"},{"version":"eb21d907c2345301c7486a74d8e5b8959e58efbd91b3d74755cee680bc96229f","signature":"a561199c355e512c9ea2b334babc9806b3847de3810c443b6392134f675a3271"},{"version":"446cecd6264707be127c2a64b63d1cce7910001c8831da631381a6fd35738c97","signature":"812fe8f00972b5ffe9936317d47fb444e2e2fa4fa4fadab9e8e6cf21e38e675b"},{"version":"519392f9725d2d8a6fc17f60590682b17c6a099120faa312363c13213cf60aeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"4051f6311deb0ce6052329eeb1cd4b1b104378fe52f882f483130bea75f92197","impliedFormat":1},{"version":"ee8bee0eb75f88221d2d6e5aeab2ea893f7798aab3416627ad86a0c73937b82a","impliedFormat":1},{"version":"271cde49dfd9b398ccc91bb3aaa43854cf76f4d14e10fed91cbac649aa6cbc63","affectsGlobalScope":true,"impliedFormat":1},{"version":"2bcecd31f1b4281710c666843fc55133a0ee25b143e59f35f49c62e168123f4b","impliedFormat":1},{"version":"a6273756fa05f794b64fe1aff45f4371d444f51ed0257f9364a8b25f3501915d","impliedFormat":1},{"version":"9c4e644fe9bf08d93c93bd892705842189fe345163f8896849d5964d21b56b78","impliedFormat":1},{"version":"25d91fb9ed77a828cc6c7a863236fb712dafcd52f816eec481bd0c1f589f4404","impliedFormat":1},{"version":"4cd14cea22eed1bfb0dc76183e56989f897ac5b14c0e2a819e5162eafdcfe243","impliedFormat":1},{"version":"8d32432f68ca4ce93ad717823976f2db2add94c70c19602bf87ee67fe51df48b","impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"c0671b50bb99cc7ad46e9c68fa0e7f15ba4bc898b59c31a17ea4611fab5095da","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"aa83e100f0c74a06c9d24f40a096c9e9cc3c02704250d01541e22c0ae9264eda","affectsGlobalScope":true,"impliedFormat":1},{"version":"1db0b7dca579049ca4193d034d835f6bfe73096c73663e5ef9a0b5779939f3d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"9798340ffb0d067d69b1ae5b32faa17ab31b82466a3fc00d8f2f2df0c8554aaa","affectsGlobalScope":true,"impliedFormat":1},{"version":"456fa0c0ab68731564917642b977c71c3b7682240685b118652fb9253c9a6429","affectsGlobalScope":true,"impliedFormat":1},{"version":"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","impliedFormat":1},{"version":"23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","impliedFormat":1},{"version":"487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","impliedFormat":1},{"version":"3a80bc85f38526ca3b08007ee80712e7bb0601df178b23fbf0bf87036fce40ce","impliedFormat":1},{"version":"ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"68834d631c8838c715f225509cfc3927913b9cc7a4870460b5b60c8dbdb99baf","impliedFormat":1},{"version":"4bc0794175abedf989547e628949888c1085b1efcd93fc482bccd77ee27f8b7c","impliedFormat":1},{"version":"3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","impliedFormat":1},{"version":"78c69908f7b42d6001037eb8e2d7ec501897ac9cee8d58f31923ff15b3fd4e02","impliedFormat":1},{"version":"ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","impliedFormat":1},{"version":"36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","impliedFormat":1},{"version":"914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","impliedFormat":1},{"version":"33e981bf6376e939f99bd7f89abec757c64897d33c005036b9a10d9587d80187","impliedFormat":1},{"version":"7fd1b31fd35876b0aa650811c25ec2c97a3c6387e5473eb18004bed86cdd76b6","impliedFormat":1},{"version":"b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","impliedFormat":1},{"version":"1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","impliedFormat":1},{"version":"af13e99445f37022c730bfcafcdc1761e9382ce1ea02afb678e3130b01ce5676","impliedFormat":1},{"version":"e5c4fceee379a4a8f5e0266172c33de9dd240e1218b6a439a30c96200190752b","impliedFormat":1},{"version":"0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","impliedFormat":1},{"version":"9666f2f84b985b62400d2e5ab0adae9ff44de9b2a34803c2c5bd3c8325b17dc0","impliedFormat":1},{"version":"40cd35c95e9cf22cfa5bd84e96408b6fcbca55295f4ff822390abb11afbc3dca","impliedFormat":1},{"version":"b1616b8959bf557feb16369c6124a97a0e74ed6f49d1df73bb4b9ddf68acf3f3","impliedFormat":1},{"version":"40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","impliedFormat":1},{"version":"249b9cab7f5d628b71308c7d9bb0a808b50b091e640ba3ed6e2d0516f4a8d91d","impliedFormat":1},{"version":"80aae6afc67faa5ac0b32b5b8bc8cc9f7fa299cff15cf09cc2e11fd28c6ae29e","impliedFormat":1},{"version":"f473cd2288991ff3221165dcf73cd5d24da30391f87e85b3dd4d0450c787a391","impliedFormat":1},{"version":"499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","impliedFormat":1},{"version":"54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","impliedFormat":1},{"version":"beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","impliedFormat":1},{"version":"78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","impliedFormat":1},{"version":"5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","impliedFormat":1},{"version":"59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","impliedFormat":1},{"version":"addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","impliedFormat":1},{"version":"48cc3ec153b50985fb95153258a710782b25975b10dd4ac8a4f3920632d10790","impliedFormat":1},{"version":"0040f0c70a793bdc76e4eace5de03485d76f667009656c5fc8d4da4eaf0aa2da","impliedFormat":1},{"version":"18f8cfbb14ba9405e67d30968ae67b8d19133867d13ebc49c8ed37ec64ce9bdb","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e","impliedFormat":1},{"version":"830171b27c5fdf9bcbe4cf7d428fcf3ae2c67780fb7fbdccdf70d1623d938bc4","affectsGlobalScope":true,"impliedFormat":1},{"version":"1cf059eaf468efcc649f8cf6075d3cb98e9a35a0fe9c44419ec3d2f5428d7123","affectsGlobalScope":true,"impliedFormat":1},{"version":"e7721c4f69f93c91360c26a0a84ee885997d748237ef78ef665b153e622b36c1","affectsGlobalScope":true,"impliedFormat":1},{"version":"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7","impliedFormat":1},{"version":"18334defc3d0a0e1966f5f3c23c7c83b62c77811e51045c5a7ff3883b446f81f","affectsGlobalScope":true,"impliedFormat":1},{"version":"8b17fcd63aa13734bf1d01419f4d6031b1c6a5fb2cbdb45e9839fb1762bdf0df","impliedFormat":1},{"version":"c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c","impliedFormat":1},{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"247b8f93f31c5918444116471bfb90810e268339bf5c678657ca99ca7183dabb","affectsGlobalScope":true,"impliedFormat":1},{"version":"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","impliedFormat":1},{"version":"25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","impliedFormat":1},{"version":"aa9224557befad144262c85b463c0a7ba8a3a0ad2a7c907349f8bb8bc3fe4abc","impliedFormat":1},{"version":"a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","impliedFormat":1},{"version":"ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c","impliedFormat":1},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true,"impliedFormat":1},{"version":"92dab1293d03f6cbd5d53c31b723c30ff5a52eaacd717ee3226e18739b5bb722","impliedFormat":1},{"version":"c6176c7b9f3769ba7f076c7a791588562c653cc0ba08fb2184f87bf78db2a87c","impliedFormat":1},{"version":"c6a532cab53ec1f87eb0b6a3a9882f4cf13c25b4a89495b3b3001a35f74224c6","impliedFormat":1},{"version":"bcbabfaca3f6b8a76cb2739e57710daf70ab5c9479ab70f5351c9b4932abf6bd","impliedFormat":1},{"version":"165a0c1f95bc939c72f18a280fc707fba6f2f349539246b050cfc09eb1d9f446","impliedFormat":1},{"version":"ca0f30343ce1a43181684c02af2ac708ba26d00f689be5e96e7301c374d64c7e","impliedFormat":1},{"version":"d163b6bc2372b4f07260747cbc6c0a6405ab3fbcea3852305e98ac43ca59f5bc","impliedFormat":1},{"version":"c8b85f7aed29f8f52b813f800611406b0bfe5cf3224d20a4bdda7c7f73ce368e","affectsGlobalScope":true,"impliedFormat":1},{"version":"7baae9bf5b50e572e7742c886c73c6f8fa50b34190bc5f0fd20dd7e706fda832","impliedFormat":1},{"version":"e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","impliedFormat":1},{"version":"76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86","impliedFormat":1},{"version":"5e9f8c1e042b0f598a9be018fc8c3cb670fe579e9f2e18e3388b63327544fe16","affectsGlobalScope":true,"impliedFormat":1},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true,"impliedFormat":1},{"version":"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","impliedFormat":1},{"version":"b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","impliedFormat":1},{"version":"de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","impliedFormat":1},{"version":"70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","impliedFormat":1},{"version":"8c81fd4a110490c43d7c578e8c6f69b3af01717189196899a6a44f93daa57a3a","impliedFormat":1},{"version":"1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","impliedFormat":1},{"version":"29c83cc89ddbdd5ffae8c00f4e6fab6f8f0e8076f87a866b132e8751e88cb848","impliedFormat":1},{"version":"363eedb495912790e867da6ff96e81bf792c8cfe386321e8163b71823a35719a","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"dba28a419aec76ed864ef43e5f577a5c99a010c32e5949fe4e17a4d57c58dd11","affectsGlobalScope":true,"impliedFormat":1},{"version":"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","impliedFormat":1},{"version":"07199a85560f473f37363d8f1300fac361cda2e954caf8a40221f83a6bfa7ade","impliedFormat":1},{"version":"9705cd157ffbb91c5cab48bdd2de5a437a372e63f870f8a8472e72ff634d47c1","affectsGlobalScope":true,"impliedFormat":1},{"version":"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","impliedFormat":1},{"version":"3af7d02e5d6ecbf363e61fb842ee55d3518a140fd226bdfb24a3bca6768c58df","impliedFormat":1},{"version":"e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","impliedFormat":1},{"version":"4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055","impliedFormat":1},{"version":"0d7393564d48a3f6f08c76b8d4de48260a072801422548e2030e386acd530dbf","affectsGlobalScope":true,"impliedFormat":1},{"version":"0fcb71410ad8a48bbdd13cd4c3eedf78ac0416e9f3533ae98e19cc6f3c7f5474","affectsGlobalScope":true,"impliedFormat":1},{"version":"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","impliedFormat":1},{"version":"420fdd37c51263be9db3fcac35ffd836216c71e6000e6a9740bb950fb0540654","impliedFormat":1},{"version":"73b0bff83ee76e3a9320e93c7fc15596e858b33c687c39a57567e75c43f2a324","impliedFormat":1},{"version":"cd3256f2ac09c65d2ee473916c273c45221367ab457fa1778a5696bccf5c4e8e","affectsGlobalScope":true,"impliedFormat":1},{"version":"4445f6ce6289c5b2220398138da23752fd84152c5c95bb8b58dedefc1758c036","impliedFormat":1},{"version":"7ac7756e2b43f021fa3d3b562a7ea8bf579543521a18b5682935d015361e6a35","impliedFormat":1},{"version":"17ed71200119e86ccef2d96b73b02ce8854b76ad6bd21b5021d4269bec527b5f","impliedFormat":1},{"version":"1d4bc73751d6ec6285331d1ca378904f55d9e5e8aeaa69bc45b675c3df83e778","impliedFormat":1},{"version":"8017277c3843df85296d8730f9edf097d68d7d5f9bc9d8124fcacf17ecfd487e","impliedFormat":1}],"root":[[88,101],103,172,[174,176]],"options":{"allowJs":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":1,"skipLibCheck":true,"sourceMap":true,"strict":true,"target":2,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"referencedMap":[[177,1],[179,2],[180,1],[184,3],[185,3],[181,4],[182,4],[183,4],[186,5],[237,6],[238,6],[239,7],[189,8],[240,9],[241,10],[242,11],[187,1],[243,12],[244,13],[245,14],[246,15],[247,16],[248,17],[249,17],[250,18],[251,19],[252,20],[253,21],[190,1],[188,1],[254,22],[255,23],[256,24],[290,25],[257,26],[258,1],[259,27],[260,28],[261,29],[262,30],[263,31],[264,32],[265,33],[266,34],[267,35],[268,35],[269,36],[270,1],[271,1],[272,37],[274,38],[273,39],[275,40],[276,41],[277,42],[278,43],[279,44],[280,45],[281,46],[282,47],[283,48],[284,49],[285,50],[286,51],[287,52],[191,1],[192,1],[193,1],[234,53],[235,54],[236,1],[288,55],[289,56],[85,1],[102,57],[291,57],[293,58],[292,59],[83,1],[86,60],[87,57],[173,1],[125,61],[126,61],[127,62],[128,61],[130,63],[129,61],[131,61],[132,61],[133,64],[107,65],[134,1],[135,1],[136,66],[104,1],[123,67],[124,68],[119,1],[110,69],[137,70],[138,71],[118,72],[122,73],[121,74],[139,1],[120,75],[140,76],[116,77],[143,78],[142,79],[111,77],[144,80],[154,65],[112,1],[141,81],[165,82],[148,83],[145,84],[146,85],[147,86],[156,87],[115,88],[149,1],[150,1],[151,89],[152,1],[153,90],[155,91],[164,92],[157,93],[159,94],[158,93],[160,93],[161,95],[162,96],[163,97],[166,98],[109,65],[106,1],[113,1],[108,1],[117,99],[114,100],[105,1],[84,1],[178,1],[168,101],[171,102],[169,101],[167,103],[170,104],[81,1],[82,1],[13,1],[14,1],[16,1],[15,1],[2,1],[17,1],[18,1],[19,1],[20,1],[21,1],[22,1],[23,1],[24,1],[3,1],[25,1],[26,1],[4,1],[27,1],[31,1],[28,1],[29,1],[30,1],[32,1],[33,1],[34,1],[5,1],[35,1],[36,1],[37,1],[38,1],[6,1],[42,1],[39,1],[40,1],[41,1],[43,1],[7,1],[44,1],[49,1],[50,1],[45,1],[46,1],[47,1],[48,1],[8,1],[54,1],[51,1],[52,1],[53,1],[55,1],[9,1],[56,1],[57,1],[58,1],[60,1],[59,1],[61,1],[62,1],[10,1],[63,1],[64,1],[65,1],[11,1],[66,1],[67,1],[68,1],[69,1],[70,1],[1,1],[71,1],[72,1],[12,1],[76,1],[74,1],[79,1],[78,1],[73,1],[77,1],[75,1],[80,1],[211,105],[222,106],[209,107],[223,108],[232,109],[200,110],[201,111],[199,112],[231,113],[226,114],[230,115],[203,116],[219,117],[202,118],[229,119],[197,120],[198,114],[204,121],[205,1],[210,122],[208,121],[195,123],[233,124],[224,125],[214,126],[213,121],[215,127],[217,128],[212,129],[216,130],[227,113],[206,131],[207,132],[218,133],[196,108],[221,134],[220,121],[225,1],[194,1],[228,135],[101,136],[99,137],[97,137],[172,138],[94,139],[96,140],[95,137],[98,141],[93,142],[91,137],[92,143],[176,144],[103,145],[100,146],[174,147],[90,148],[88,137],[89,148],[175,148]],"affectedFilesPendingEmit":[101,99,97,172,94,96,95,98,93,91,92,176,103,100,174,90,88,89,175],"version":"5.9.2"}[m
\ No newline at end of file[m
[1mdiff --git a/user/src/Dashboard.css b/user/src/Dashboard.css[m
[1mindex 1c4c8ba6..24f1e3e3 100644[m
[1m--- a/user/src/Dashboard.css[m
[1m+++ b/user/src/Dashboard.css[m
[36m@@ -1,852 +1,225 @@[m
[31m-/* ---------------------------[m
[31m-   Base Reset & Defaults[m
[31m-----------------------------*/[m
[31m-* {[m
[31m-  margin: 0;[m
[31m-  padding: 0;[m
[31m-  box-sizing: border-box;[m
[31m-}[m
[31m-[m
[31m-body {[m
[31m-  font-family: Arial, sans-serif;[m
[31m-  background-color: #f9f9f9;[m
[31m-  color: #333;[m
[31m-  line-height: 1.6;[m
[31m-}[m
[31m-[m
[31m-/* Common wrappers */[m
[31m-.results-page,[m
[31m-.google-style-app {[m
[31m-  min-height: 100vh;[m
[31m-  display: flex;[m
[31m-  flex-direction: column;[m
[31m-}[m
[31m-[m
[31m-/* ---------------------------[m
[31m-   Search Landing[m
[31m-----------------------------*/[m
[31m-.search-landing {[m
[31m-  display: flex;[m
[31m-  flex-direction: column;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  min-height: 100vh;[m
[31m-  padding: 20px;[m
[31m-  background-color: #f9f9f9;[m
[31m-}[m
[31m-[m
[31m-.search-container-centered {[m
[31m-  width: 100%;[m
[31m-  max-width: 584px;[m
[31m-  text-align: center;[m
[31m-  padding: 20px;[m
[31m-}[m
[31m-[m
[31m-/* Optional text logo fallback */[m
[31m-h1.search-logo {[m
[31m-  font-size: 48px;[m
[31m-  background: linear-gradient(to right, #4285f4, #ea4335, #fbbc05, #34a853);[m
[31m-  -webkit-background-clip: text;[m
[31m-  background-clip: text;[m
[31m-  color: transparent;[m
[31m-  margin-bottom: 20px;[m
[31m-}[m
[31m-[m
[31m-.search-tagline {[m
[31m-  font-size: 18px;[m
[31m-  color: #5f6368;[m
[31m-  margin-bottom: 30px;[m
[31m-}[m
[31m-[m
[31m-/* ---------------------------[m
[31m-   Search Input & Actions[m
[31m-----------------------------*/[m
[31m-.search-form {[m
[31m-  width: 100%;[m
[31m-  max-width: 584px;[m
[31m-  margin: 0 auto;[m
[31m-}[m
[31m-[m
[31m-/* Rainbow-border hover/focus */[m
[31m-.search-input-container {[m
[31m-  position: relative;[m
[31m-  width: 100%;[m
[31m-  margin: 0 auto 24px auto;[m
[31m-  border: 2px solid transparent;                 /* gradient border base */[m
[31m-  border-radius: 24px;[m
[31m-  box-shadow: 0 1px 6px rgba(32,33,36,0.28);[m
[31m-  background:[m
[31m-    linear-gradient(#fff, #fff) padding-box,      /* inside */[m
[31m-    linear-gradient(90deg, #fbbc05, #34a853, #1a73e8) border-box; /* border */[m
[31m-  background-size: 100% 100%, 200% 100%;[m
[31m-  transition: box-shadow 0.2s ease, background-position 0.4s linear;[m
[31m-}[m
[31m-[m
[31m-/* ✅ Animate the CONTAINER on hover OR when any child (the input) is focused */[m
[31m-.search-input-container:hover,[m
[31m-.search-input-container:focus-within {[m
[31m-  animation: wiH-border-sweep 2.2s linear infinite;[m
[31m-  box-shadow: 0 2px 8px rgba(32,33,36,0.28);[m
[31m-}[m
[31m-[m
[31m-@keyframes wiH-border-sweep {[m
[31m-  0%   { background-position: 0 0,   0% 0; }[m
[31m-  100% { background-position: 0 0, 200% 0; }[m
[31m-}[m
[31m-[m
[31m-.search-input {[m
[31m-  width: 100%;[m
[31m-  height: 44px;[m
[31m-  padding: 10px 50px 10px 16px;[m
[31m-  font-size: 16px;[m
[31m-  border: none;[m
[31m-  outline: none;[m
[31m-  border-radius: 24px;[m
[31m-  background: transparent;[m
[31m-}[m
[31m-[m
[31m-/* Icons inherit color to allow tinting */[m
[31m-.search-icons {[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  position: absolute;[m
[31m-  right: 8px;[m
[31m-  top: 50%;[m
[31m-  transform: translateY(-50%);[m
[31m-  gap: 4px;[m
[31m-}[m
[31m-[m
[31m-.icon-button {[m
[31m-  width: 32px;[m
[31m-  height: 32px;[m
[31m-  border: none;[m
[31m-  background: none;[m
[31m-  cursor: pointer;[m
[31m-  border-radius: 50%;[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  color: #70757a;[m
[31m-  transition: color .2s ease, background-color .2s ease;[m
[31m-}[m
[31m-[m
[31m-.icon-button:hover { background-color: #f1f3f4; color: #1a73e8; }[m
[31m-[m
[31m-.icon-button svg {[m
[31m-  width: 20px;[m
[31m-  height: 20px;[m
[31m-  fill: currentColor; /* follows .icon-button color */[m
[31m-  transition: fill 0.2s ease;[m
[31m-}[m
[31m-[m
[31m-.clear-button { background: #f8f9fa; }[m
[31m-.clear-button:hover { background: #e8eaed; }[m
[31m-[m
[31m-.listening { background: #ea4335 !important; }[m
[31m-.listening svg { fill: #fff !important; }[m
[31m-[m
[31m-/* Buttons */[m
[31m-.search-actions,[m
[31m-.search-buttons {[m
[31m-  display: flex;[m
[31m-  gap: 14px;[m
[31m-  justify-content: center;[m
[31m-  margin-top: 24px;[m
[31m-  width: 100%;[m
[31m-}[m
[31m-[m
[31m-.search-button,[m
[31m-.search-btn {[m
[31m-  --btn-bg: #f8f9fa;[m
[31m-  --btn-border: #dadce0;[m
[31m-  --btn-text: #3c4043;[m
[31m-  --btn-hover-bg: #f1f3f4;[m
[31m-  --btn-shadow: rgba(0,0,0,0.1);[m
[31m-[m
[31m-  background-color: var(--btn-bg);[m
[31m-  border: 1px solid var(--btn-border);[m
[31m-  border-radius: 24px;[m
[31m-  color: var(--btn-text);[m
[31m-  font-size: 14px;[m
[31m-  padding: 10px 20px;[m
[31m-  cursor: pointer;[m
[31m-  transition: background-color 0.2s, box-shadow 0.2s, border-color 0.2s, color 0.2s;[m
[31m-  min-width: 140px;[m
[31m-  height: 36px;[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  box-shadow: 0 1px 2px var(--btn-shadow);[m
[31m-}[m
[31m-[m
[31m-.search-button:hover,[m
[31m-.search-btn:hover {[m
[31m-  background-color: var(--btn-hover-bg);[m
[31m-  box-shadow: 0 2px 6px rgba(0,0,0,0.15);[m
[31m-}[m
[31m-[m
[31m-/* Hide content when modal opens */[m
[31m-.search-title,[m
[31m-.search-form,[m
[31m-.search-actions,[m
[31m-.voice-feedback {[m
[31m-  transition: opacity 0.2s ease, transform 0.2s ease;[m
[31m-}[m
[31m-[m
[31m-.search-container.modal-open .search-title,[m
[31m-.search-container.modal-open .search-form,[m
[31m-.search-container.modal-open .search-actions,[m
[31m-.search-container.modal-open .voice-feedback {[m
[31m-  opacity: 0;[m
[31m-  transform: translateY(-10px);[m
[31m-  pointer-events: none;[m
[31m-}[m
[31m-[m
[31m-/* ---------------------------[m
[31m-   Results Page[m
[31m-----------------------------*/[m
[31m-.results-page {[m
[31m-  background: #fff;[m
[31m-  position: relative;[m
[31m-  padding: 20px 0 0 0;[m
[31m-}[m
[31m-[m
[31m-.results-search-header {[m
[31m-  background: #fff;[m
[31m-  border-bottom: 1px solid #e8eaed;[m
[31m-  padding: 30px 20px 25px 20px;[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  position: sticky;[m
[31m-  top: 0;[m
[31m-  z-index: 100;[m
[31m-  margin: 15px 0 0 0;[m
[31m-  padding-right: 80px;[m
[31m-}[m
[31m-[m
[31m-.results-search-header .search-input-container {[m
[31m-  flex: 1;[m
[31m-  max-width: 600px;[m
[31m-  margin: 0;[m
[31m-}[m
[31m-[m
[31m-.results-search-input {[m
[31m-  height: 44px;[m
[31m-  font-size: 14px;[m
[31m-}[m
[31m-[m
[31m-.back-button {[m
[31m-  width: 40px;[m
[31m-  height: 40px;[m
[31m-  border: none;[m
[31m-  background: #f8f9fa;[m
[31m-  cursor: pointer;[m
[31m-  border-radius: 50%;[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  margin-right: 15px;[m
[31m-  z-index: 1400;[m
[31m-}[m
[31m-.back-button:hover { background-color: #e8eaed; }[m
[31m-.back-button svg { width: 20px; height: 20px; fill: #5f6368; }[m
[31m-[m
[31m-.results-container {[m
[31m-  max-width: 1200px;[m
[31m-  margin: 30px auto;[m
[31m-  padding: 0 20px;[m
[31m-  width: 100%;[m
[31m-}[m
[31m-[m
[31m-.results-header {[m
[31m-  color: #1a73e8;[m
[31m-  font-size: 28px;[m
[31m-  font-weight: 600;[m
[31m-  text-align: center;[m
[31m-  margin-bottom: 30px;[m
[31m-  padding-bottom: 15px;[m
[31m-  border-bottom: 2px solid #e8f0fe;[m
[31m-}[m
[31m-[m
[31m-.results-content {[m
[31m-  display: grid;[m
[31m-  grid-template-columns: 2fr 1fr;[m
[31m-  gap: 30px;[m
[31m-  align-items: start;[m
[31m-}[m
[31m-[m
[31m-/* Cards & content */[m
[31m-.health-info-card {[m
[31m-  background: linear-gradient(135deg, #ffffff 0%, #f8fbff 100%);[m
[31m-  border-radius: 16px;[m
[31m-  padding: 30px;[m
[31m-  box-shadow: 0 4px 20px rgba(26, 115, 232, 0.08);[m
[31m-  border: 1px solid #e8f0fe;[m
[31m-  position: relative;[m
[31m-  overflow: hidden;[m
[31m-}[m
[31m-.health-info-card::before {[m
[31m-  content: '';[m
[31m-  position: absolute;[m
[31m-  top: 0;[m
[31m-  left: 0; right: 0;[m
[31m-  height: 4px;[m
[31m-  background: linear-gradient(90deg, #1a73e8, #4285f4, #34a853);[m
[31m-}[m
[31m-[m
[31m-.health-info-content {[m
[31m-  background: #ffffff;[m
[31m-  border-radius: 12px;[m
[31m-  padding: 25px;[m
[31m-  border: 1px solid #f0f0f0;[m
[31m-  box-shadow: 0 2px 8px rgba(0,0,0,0.04);[m
[31m-  text-align: left !important;[m
[31m-}[m
[31m-[m
[31m-.markdown-content,[m
[31m-.health-info-content pre {[m
[31m-  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;[m
[31m-  font-size: 16px;[m
[31m-  line-height: 1.8;[m
[31m-  color: #333;[m
[31m-  white-space: pre-wrap;[m
[31m-  word-wrap: break-word;[m
[31m-  text-align: left !important;[m
[31m-}[m
[31m-[m
[31m-.sidebar { width: 300px; display: block; }[m
[31m-[m
[31m-.related-topics-card,[m
[31m-.resources-card {[m
[31m-  background: linear-gradient(135deg, #ffffff 0%, #f8fbff 100%);[m
[31m-  border: 1px solid #e8f0fe;[m
[31m-  border-radius: 16px;[m
[31m-  padding: 20px;[m
[31m-  margin-bottom: 20px;[m
[31m-  box-shadow: 0 2px 12px rgba(26, 115, 232, 0.06);[m
[31m-}[m
[31m-[m
[31m-.related-topics-card h3,[m
[31m-.resources-card h3 {[m
[31m-  color: #1a73e8;[m
[31m-  font-size: 18px;[m
[31m-  font-weight: 600;[m
[31m-  margin-bottom: 15px;[m
[31m-  text-align: center;[m
[31m-}[m
[31m-[m
[31m-.related-topics-list,[m
[31m-.resources-list {[m
[31m-  list-style: none;[m
[31m-  padding: 0;[m
[31m-  margin: 0;[m
[31m-}[m
[31m-[m
[31m-.related-topics-list li,[m
[31m-.resources-list li {[m
[31m-  padding: 8px 0;[m
[31m-  border-bottom: 1px solid #f0f0f0;[m
[31m-  font-size: 14px;[m
[31m-  color: #333;[m
[31m-}[m
[31m-[m
[31m-.related-topics-list li:last-child,[m
[31m-.resources-list li:last-child { border-bottom: none; }[m
[31m-[m
[31m-.topic-button {[m
[31m-  background: none;[m
[31m-  border: none;[m
[31m-  color: #1a73e8;[m
[31m-  text-decoration: none;[m
[31m-  font-size: 14px;[m
[31m-  cursor: pointer;[m
[31m-  padding: 0;[m
[31m-  text-align: left;[m
[31m-  width: 100%;[m
[31m-}[m
[31m-.topic-button:hover { text-decoration: underline; }[m
[31m-[m
[31m-.resources-list a {[m
[31m-  color: #1a73e8;[m
[31m-  text-decoration: none;[m
[31m-  font-size: 13px;[m
[31m-  padding: 8px 12px;[m
[31m-  background: rgba(26,115,232,0.06);[m
[31m-  border-radius: 6px;[m
[31m-  transition: all 0.2s;[m
[31m-  display: block;[m
[31m-}[m
[31m-.resources-list a:hover {[m
[31m-  background: rgba(26,115,232,0.12);[m
[31m-  text-decoration: none;[m
[31m-}[m
[31m-[m
[31m-.data-source-indicator {[m
[31m-  margin-top: 15px;[m
[31m-  padding-top: 15px;[m
[31m-  border-top: 1px solid #e8f0fe;[m
[31m-  font-size: 12px;[m
[31m-  color: #5f6368;[m
[31m-  text-align: center;[m
[31m-}[m
[31m-[m
[31m-.error-source { color: #ea4335; }[m
[31m-[m
[31m-/* ---------------------------[m
[31m-   Image Preview (search input)[m
[31m-----------------------------*/[m
[31m-.image-preview {[m
[31m-  position: absolute;[m
[31m-  left: 16px;[m
[31m-  top: 50%;[m
[31m-  transform: translateY(-50%);[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  gap: 8px;[m
[31m-  background: #e8f0fe;[m
[31m-  padding: 4px 8px;[m
[31m-  border-radius: 12px;[m
[31m-  font-size: 12px;[m
[31m-  color: #1a73e8;[m
[31m-}[m
[31m-.image-icon { font-size: 16px; }[m
[31m-.image-name {[m
[31m-  max-width: 120px;[m
[31m-  overflow: hidden;[m
[31m-  text-overflow: ellipsis;[m
[31m-  white-space: nowrap;[m
[31m-}[m
[31m-.remove-image {[m
[31m-  background: none;[m
[31m-  border: none;[m
[31m-  color: #1a73e8;[m
[31m-  cursor: pointer;[m
[31m-  font-size: 16px;[m
[31m-  width: 16px; height: 16px;[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  border-radius: 50%;[m
[31m-}[m
[31m-.remove-image:hover { background: rgba(26,115,232,0.1); }[m
[31m-.search-input.with-image { padding-left: 160px; }[m
[31m-[m
[31m-/* ---------------------------[m
[31m-   Photo Upload Modal[m
[31m-----------------------------*/[m
[31m-.photo-modal-overlay,[m
[31m-.upload-modal-overlay {[m
[31m-  position: fixed;[m
[31m-  inset: 0;[m
[31m-  background: rgba(0,0,0,0.5);[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  z-index: 2000;[m
[31m-  padding: 20px;[m
[31m-}[m
[31m-[m
[31m-.photo-modal,[m
[31m-.upload-modal-content {[m
[31m-  background: #fff;[m
[31m-  border-radius: 8px;[m
[31m-  width: 100%;[m
[31m-  max-width: 568px;[m
[31m-  box-shadow: 0 8px 32px rgba(0,0,0,0.2);[m
[31m-  overflow: hidden;[m
[31m-}[m
[31m-[m
[31m-.modal-header {[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: space-between;[m
[31m-  padding: 24px 24px 16px 24px;[m
[31m-  border-bottom: 1px solid #e8eaed;[m
[31m-}[m
[31m-.modal-header h2 {[m
[31m-  font-size: 22px;[m
[31m-  font-weight: 400;[m
[31m-  color: #202124;[m
[31m-  margin: 0;[m
[31m-}[m
[31m-.modal-subtitle {[m
[31m-  font-size: 14px;[m
[31m-  color: #5f6368;[m
[31m-  margin: 5px 0 0 0;[m
[31m-  font-weight: 400;[m
[31m-}[m
[31m-.modal-close {[m
[31m-  background: none;[m
[31m-  border: none;[m
[31m-  font-size: 24px;[m
[31m-  color: #5f6368;[m
[31m-  cursor: pointer;[m
[31m-  padding: 8px;[m
[31m-  border-radius: 50%;[m
[31m-  width: 40px; height: 40px;[m
[31m-  display: flex; align-items: center; justify-content: center;[m
[31m-  transition: background-color 0.2s;[m
[31m-}[m
[31m-.modal-close:hover { background: #f1f3f4; }[m
[31m-[m
[31m-.upload-area {[m
[31m-  padding: 32px 24px;[m
[31m-  border: 2px dashed #dadce0;[m
[31m-  margin: 24px;[m
[31m-  border-radius: 8px;[m
[31m-  text-align: center;[m
[31m-  transition: all 0.2s;[m
[31m-  cursor: pointer;[m
[31m-}[m
[31m-.upload-area:hover { border-color: #1a73e8; background: #f8f9fa; }[m
[31m-.upload-area.dragging { border-color: #1a73e8 !important; background: rgba(26,115,232,0.05) !important; }[m
[31m-.upload-area.processing { pointer-events: none; opacity: 0.7; }[m
[31m-[m
[31m-.upload-content { display: flex; flex-direction: column; align-items: center; gap: 16px; }[m
[31m-.upload-icon { width: 48px; height: 48px; color: #9aa0a6; }[m
[31m-.upload-icon svg { width: 100%; height: 100%; }[m
[31m-.upload-text { font-size: 16px; color: #3c4043; margin: 0; }[m
[31m-.upload-link { background: none; border: none; color: #1a73e8; cursor: pointer; font-size: 16px; text-decoration: underline; padding: 0; }[m
[31m-.upload-link:hover { color: #1557b0; }[m
[31m-[m
[31m-.upload-info { padding: 16px 24px 0 24px; text-align: center; }[m
[31m-.upload-info small { color: #5f6368; font-size: 12px; }[m
[31m-[m
[31m-.modal-divider { text-align: center; margin: 16px 0; position: relative; }[m
[31m-.modal-divider::before {[m
[31m-  content: '';[m
[31m-  position: absolute;[m
[31m-  top: 50%; left: 24px; right: 24px;[m
[31m-  height: 1px; background: #e8eaed;[m
[31m-}[m
[31m-.modal-divider span { background: #fff; color: #5f6368; padding: 0 16px; font-size: 14px; }[m
[31m-[m
[31m-.url-input-section { display: flex; gap: 8px; padding: 0 24px 24px 24px; }[m
[31m-.url-input {[m
[31m-  flex: 1;[m
[31m-  height: 36px;[m
[31m-  padding: 0 12px;[m
[31m-  border: 1px solid #dadce0;[m
[31m-  border-radius: 4px;[m
[31m-  font-size: 14px;[m
[31m-  outline: none;[m
[31m-}[m
[31m-.url-input:focus { border-color: #1a73e8; box-shadow: 0 0 0 1px #1a73e8; }[m
[31m-[m
[31m-.search-button-modal {[m
[31m-  background: #1a73e8;[m
[31m-  color: #fff;[m
[31m-  border: none;[m
[31m-  border-radius: 4px;[m
[31m-  padding: 0 24px;[m
[31m-  font-size: 14px;[m
[31m-  font-weight: 500;[m
[31m-  cursor: pointer;[m
[31m-  transition: background-color 0.2s;[m
[31m-}[m
[31m-.search-button-modal:hover { background: #1557b0; }[m
[31m-.search-button-modal.processing { background: #9aa0a6 !important; cursor: not-allowed !important; }[m
[31m-[m
[31m-/* Login button containers */[m
[31m-.login-button-container { position: absolute; top: 20px; right: 20px; }[m
[31m-.results-login-button { position: relative; z-index: 1600; }[m
[31m-[m
[31m-/* ---------------------------[m
[31m-   Inline Links[m
[31m-----------------------------*/[m
[31m-.inline-link {[m
[31m-  color: #1a73e8;[m
[31m-  text-decoration: underline;[m
[31m-  word-break: break-word;[m
[31m-  transition: color 0.2s;[m
[31m-}[m
[31m-.inline-link:hover { color: #1557b0; text-decoration: none; }[m
[31m-.inline-link:visited { color: #9c27b0; }[m
[31m-[m
[31m-/* ---------------------------[m
[31m-   Responsive[m
[31m-----------------------------*/[m
[31m-@media (max-width: 768px) {[m
[31m-  .research-badge { display: none !important; }[m
[31m-[m
[31m-  .results-page { padding-top: 15px; }[m
[31m-[m
[31m-  .results-search-header {[m
[31m-    flex-direction: column;[m
[31m-    gap: 15px;[m
[31m-    padding: 60px 15px 15px 15px;[m
[31m-    margin-top: 5px;[m
[31m-    padding-right: 15px;[m
[31m-  }[m
[31m-[m
[31m-  .results-search-header .search-input-container { max-width: 100%; }[m
[31m-[m
[31m-  .results-container { padding: 15px; margin: 15px auto; }[m
[31m-[m
[31m-  .results-header {[m
[31m-    font-size: 20px;[m
[31m-    margin-bottom: 20px;[m
[31m-    padding: 0 5px;[m
[31m-    text-align: left;[m
[31m-  }[m
[31m-[m
[31m-  .results-content { display: block; gap: 20px; }[m
[31m-[m
[31m-  .health-info-card { padding: 20px; margin-bottom: 20px; border-radius: 12px; }[m
[31m-[m
[31m-  .health-info-content { padding: 15px; text-align: left !important; }[m
[31m-[m
[31m-  .health-info-content pre { font-size: 14px; line-height: 1.6; text-align: left !important; }[m
[31m-[m
[31m-  .sidebar { display: block; margin-top: 0; }[m
[31m-[m
[31m-  .related-topics-card,[m
[31m-  .resources-card { padding: 15px; margin-bottom: 15px; border-radius: 12px; }[m
[31m-[m
[31m-  .related-topics-card h3,[m
[31m-  .resources-card h3 { font-size: 16px; text-align: left; }[m
[31m-[m
[31m-  .related-topics-list li { font-size: 13px; padding: 6px 0; }[m
[31m-[m
[31m-  .resources-list a { font-size: 12px; padding: 8px 10px; }[m
[31m-}[m
[31m-[m
[31m-@media (max-width: 480px) {[m
[31m-  .results-page { padding-top: 10px; }[m
[31m-  .results-search-header { padding: 65px 10px 12px 10px; margin-top: 3px; }[m
[31m-  .results-search-input { height: 40px; }[m
[31m-}[m
[31m-[m
[31m-@media (min-width: 769px) {[m
[31m-  .results-page { padding-top: 25px; }[m
[31m-  .results-search-header { padding: 30px 20px 25px 20px; margin-top: 15px; padding-right: 80px; }[m
[31m-  .results-search-input { height: 48px; font-size: 16px; }[m
[31m-}[m
[31m-[m
[31m-/* ---------------------------[m
[31m-   Dark Mode[m
[31m-----------------------------*/[m
[31m-@media (prefers-color-scheme: dark) {[m
[31m-  .health-info-card {[m
[31m-    background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);[m
[31m-    border-color: #404040;[m
[31m-  }[m
[31m-  .related-topics-card,[m
[31m-  .resources-card {[m
[31m-    background: #2d2d2d;[m
[31m-    border-color: #404040;[m
[31m-    color: #e0e0e0;[m
[31m-  }[m
[31m-  .health-info-content {[m
[31m-    background: #2d2d2d;[m
[31m-    border-color: #404040;[m
[31m-    color: #e0e0e0;[m
[31m-  }[m
[31m-  .resources-list a {[m
[31m-    background: #404040;[m
[31m-    color: #4fc3f7;[m
[31m-  }[m
[31m-  .resources-list a:hover { background: #505050; }[m
[31m-}[m
[31m-[m
[31m-/* ---------------------------[m
[31m-   LOGO OVERRIDE – exact match to search box width[m
[31m-   Keep at end so it wins cascade.[m
[31m-----------------------------*/[m
[31m-.search-landing .logo-container {[m
[31m-  display: flex !important;[m
[31m-  justify-content: center !important;[m
[31m-  align-items: center !important;[m
[31m-  margin: 0 0 2rem 0 !important;[m
[31m-  width: 100% !important;[m
[31m-}[m
[31m-[m
[31m-.search-landing .logo-container .search-logo-image,[m
[31m-img[src*="293a2ef6-826c-4ec9-9b26-c2abf3bb894f"] {[m
[31m-  width: 600px !important;  /* match search box desktop cap */[m
[31m-  height: auto !important;[m
[31m-  object-fit: contain !important;[m
[31m-  display: block !important;[m
[31m-  margin: 0 auto !important;[m
[31m-  padding: 0 !important;[m
[31m-}[m
[31m-[m
[31m-@media (max-width: 768px) {[m
[31m-  .search-landing .logo-container .search-logo-image { width: 500px !important; }[m
[31m-}[m
[31m-@media (max-width: 480px) {[m
[31m-  .search-landing .logo-container .search-logo-image { width: 90% !important; max-width: 320px !important; }[m
[31m-}[m
[31m-[m
 /* =========================================[m
[31m-   vHealth polish pack (safe overrides)[m
[31m-   Paste AFTER your current CSS[m
[32m+[m[32m   vHealth Dashboard CSS[m
[32m+[m[32m   (drop-in styles for header, cards, charts,[m
[32m+[m[32m   progress bars, wellness tiles, modal, etc.)[m
 ========================================= */[m
 [m
[31m-/* Theme tokens */[m
[32m+[m[32m/* ---------- Base & tokens ---------- */[m
 :root{[m
[31m-  --vh-accent: #1a73e8;[m
[31m-  --vh-accent-2: #34a853;[m
[31m-  --vh-ink: #202124;[m
[31m-  --vh-muted: #5f6368;[m
[31m-  --vh-surface: #ffffff;[m
[31m-  --vh-surface-2: #f8fbff;[m
[31m-  --vh-ring: 0 0 0 3px rgba(26,115,232,.18);[m
[31m-}[m
[31m-[m
[31m-/* Subtle page background and spacing harmony */[m
[32m+[m[32m  --ink-900:#0f172a; --ink-800:#1e293b; --ink-700:#334155; --ink-600:#475569; --ink-500:#64748b;[m
[32m+[m[32m  --slate-50:#f8fafc; --slate-100:#f1f5f9; --slate-200:#e2e8f0; --slate-300:#cbd5e1;[m
[32m+[m[32m  --blue-50:#eff6ff; --blue-100:#dbeafe; --blue-500:#3b82f6; --blue-600:#2563eb;[m
[32m+[m[32m  --green-50:#ecfdf5; --green-100:#d1fae5; --green-500:#10b981; --green-600:#059669;[m
[32m+[m[32m  --purple-50:#f3e8ff; --purple-100:#e9d5ff; --purple-500:#8b5cf6; --purple-600:#7c3aed;[m
[32m+[m[32m  --indigo-50:#eef2ff; --indigo-100:#e0e7ff; --indigo-500:#6366f1; --indigo-600:#4f46e5;[m
[32m+[m[32m  --yellow-50:#fffbeb; --yellow-100:#fef3c7; --yellow-500:#f59e0b;[m
[32m+[m[32m  --cyan-50:#ecfeff; --cyan-100:#cffafe; --cyan-500:#06b6d4;[m
[32m+[m[32m  --red-500:#ef4444;[m
[32m+[m
[32m+[m[32m  --radius-lg:16px; --radius-md:12px; --shadow-1:0 1px 2px rgba(0,0,0,.04);[m
[32m+[m[32m  --shadow-2:0 8px 24px rgba(15,23,42,.06); --ring:0 0 0 3px rgba(37,99,235,.18);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m*{box-sizing:border-box;margin:0;padding:0}[m
[32m+[m[32mhtml,body,#root{height:100%}[m
 body{[m
[31m-  background: radial-gradient(1200px 600px at 10% -10%, #f5f8ff 0%, transparent 40%),[m
[31m-              radial-gradient(1000px 500px at 110% 0%, #f7fff8 0%, transparent 35%),[m
[31m-              #f9f9f9;[m
[31m-}[m
[31m-[m
[31m-/* ---- Buttons (bring back darker hover) ---- */[m
[31m-.search-button,[m
[31m-.search-btn{[m
[31m-  --btn-bg:#f8f9fa;[m
[31m-  --btn-text:#1f2937;[m
[31m-  --btn-border:#e5e7eb;[m
[31m-  --btn-shadow:rgba(0,0,0,.08);[m
[31m-[m
[31m-  background: var(--btn-bg);[m
[31m-  color: var(--btn-text);[m
[31m-  border: 1px solid var(--btn-border);[m
[31m-  box-shadow: 0 2px 6px var(--btn-shadow);[m
[31m-  transition: background-color .2s, color .2s, border-color .2s, box-shadow .2s, transform .06s ease;[m
[31m-}[m
[31m-[m
[31m-.search-button:hover,[m
[31m-.search-btn:hover{[m
[31m-  background: #e9eef6;              /* darker hover */[m
[31m-  border-color: #d3d9e3;[m
[31m-  box-shadow: 0 4px 14px rgba(0,0,0,.12);[m
[31m-}[m
[31m-[m
[31m-.search-button:active,[m
[31m-.search-btn:active{[m
[31m-  background: #dbe4ef;              /* even darker on active */[m
[31m-  transform: translateY(1px);[m
[31m-}[m
[31m-[m
[31m-.search-button:focus-visible,[m
[31m-.search-btn:focus-visible{[m
[31m-  outline: none;[m
[31m-  box-shadow: 0 2px 6px rgba(0,0,0,.12), var(--vh-ring);[m
[31m-}[m
[31m-[m
[31m-/* Optional: give each button its own subtle accent on hover */[m
[31m-.search-actions .search-btn:nth-child(1):hover{ border-color: var(--vh-accent); color: var(--vh-accent); }[m
[31m-.search-actions .search-btn:nth-child(2):hover{ border-color: var(--vh-accent-2); color: var(--vh-accent-2); }[m
[31m-[m
[31m-/* ---- Search input: cleaner elevation ---- */[m
[31m-.search-input-container{[m
[31m-  box-shadow: 0 8px 24px rgba(15,23,42,.06);[m
[31m-}[m
[31m-.search-input::placeholder{ color:#9aa0a6; }[m
[31m-[m
[31m-/* ---- Cards: prettier sections ---- */[m
[31m-.related-topics-card,[m
[31m-.resources-card{[m
[31m-  background: linear-gradient(180deg, var(--vh-surface) 0%, var(--vh-surface-2) 100%);[m
[31m-  border: 1px solid #e8f0fe;[m
[31m-  border-radius: 16px;[m
[31m-  box-shadow: 0 8px 24px rgba(26,115,232,.05);[m
[31m-  overflow: hidden;[m
[31m-  padding: 0;              /* reset: we’ll pad inner parts */[m
[31m-}[m
[31m-[m
[31m-/* Card headers */[m
[31m-.related-topics-card h3,[m
[31m-.resources-card h3{[m
[31m-  margin: 0;[m
[31m-  padding: 14px 16px;[m
[31m-  font-size: 16px;[m
[31m-  font-weight: 700;[m
[31m-  color: var(--vh-accent);[m
[31m-  background: linear-gradient(90deg, rgba(26,115,232,.06), transparent);[m
[31m-  border-bottom: 1px solid #e8f0fe;[m
[31m-  text-align: left;[m
[31m-}[m
[31m-[m
[31m-/* Lists inside cards */[m
[31m-.related-topics-list,[m
[31m-.resources-list{[m
[31m-  padding: 8px;[m
[31m-}[m
[31m-[m
[31m-.related-topics-list li,[m
[31m-.resources-list li{[m
[31m-  margin: 6px 0;[m
[31m-  border-bottom: 1px dashed #eef2f7;[m
[31m-  padding: 2px 0 8px 0;[m
[31m-}[m
[31m-.related-topics-list li:last-child,[m
[31m-.resources-list li:last-child{ border-bottom: 0; }[m
[31m-[m
[31m-/* Topic button rows */[m
[31m-.topic-button{[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  gap: 10px;[m
[31m-  width: 100%;[m
[31m-  padding: 10px 12px;[m
[31m-  border-radius: 10px;[m
[31m-  color: #1a0dab;[m
[31m-  text-decoration: none;[m
[31m-  transition: background-color .18s ease, transform .06s ease, color .18s ease;[m
[31m-}[m
[31m-[m
[31m-.topic-button::before{[m
[31m-  content: "›";[m
[31m-  font-weight: 700;[m
[31m-  color: #8ab4f8;[m
[31m-  transform: translateY(-1px);[m
[32m+[m[32m  font-family: Arial, Helvetica, sans-serif;[m
[32m+[m[32m  background: var(--slate-50);[m
[32m+[m[32m  color: var(--ink-800);[m
[32m+[m[32m  line-height:1.6;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ---------- Header ---------- */[m
[32m+[m[32mheader.dashboard-header{[m
[32m+[m[32m  background:#fff;[m
[32m+[m[32m  box-shadow: var(--shadow-1);[m
[32m+[m[32m  padding:24px 16px;[m
[32m+[m[32m}[m
[32m+[m[32m.dashboard-header__inner{[m
[32m+[m[32m  max-width:1120px; margin:0 auto;[m
[32m+[m[32m  display:flex; align-items:center; justify-content:space-between; gap:16px;[m
[32m+[m[32m}[m
[32m+[m[32m.dashboard-title{font-size:28px;font-weight:700;color:var(--ink-800)}[m
[32m+[m[32m.dashboard-sub{color:var(--ink-600)}[m
[32m+[m[32m.header-right{display:flex; align-items:center; gap:16px; position:relative}[m
[32m+[m[32m.badge-dot{[m
[32m+[m[32m  position:absolute; top:-4px; right:-4px;[m
[32m+[m[32m  height:10px; width:10px; border-radius:999px; background:var(--red-500);[m
[32m+[m[32m}[m
[32m+[m[32m.avatar{[m
[32m+[m[32m  height:40px;width:40px;border-radius:999px;background:var(--blue-100);[m
[32m+[m[32m  display:flex;align-items:center;justify-content:center;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ---------- Buttons & small UI ---------- */[m
[32m+[m[32m.btn{[m
[32m+[m[32m  padding:8px 12px; border-radius:10px; border:1px solid var(--slate-200);[m
[32m+[m[32m  background:var(--blue-50); color:var(--blue-600); font-size:13px; cursor:pointer;[m
[32m+[m[32m  transition:box-shadow .2s, transform .06s, border-color .2s;[m
[32m+[m[32m}[m
[32m+[m[32m.btn:hover{ box-shadow: var(--shadow-2); transform: translateY(-1px); border-color: var(--blue-500); }[m
[32m+[m[32m.btn--pill{ border-radius:8px; padding:6px 10px; font-size:12px; }[m
[32m+[m
[32m+[m[32m/* ---------- Snapshot section ---------- */[m
[32m+[m[32m.snapshot-section{ max-width:1120px; margin:24px auto 0; padding:0 16px; }[m
[32m+[m[32m.snapshot-heading{ font-size:18px; font-weight:600; color:var(--ink-800); margin-bottom:16px; }[m
[32m+[m[32m.snapshot-grid{[m
[32m+[m[32m  display:grid; grid-template-columns:repeat(5,minmax(0,1fr)); gap:16px;[m
[32m+[m[32m}[m
[32m+[m[32m.card{[m
[32m+[m[32m  background:#fff; border:1px solid var(--slate-200);[m
[32m+[m[32m  border-radius:var(--radius-lg); padding:24px; box-shadow:var(--shadow-1);[m
[32m+[m[32m}[m
[32m+[m[32m.card-row{ display:flex; align-items:center; justify-content:space-between; gap:12px; }[m
[32m+[m[32m.card-title{ font-size:12px; font-weight:600; color:var(--ink-500); }[m
[32m+[m[32m.card-value{ font-size:22px; font-weight:700; color:var(--ink-800); margin-top:4px; }[m
[32m+[m[32m.card-sub{ font-size:12px; color:var(--ink-500); margin-top:4px; }[m
[32m+[m[32m.icon-circle{[m
[32m+[m[32m  height:48px;width:48px;border-radius:999px;display:flex;align-items:center;justify-content:center;[m
[32m+[m[32m}[m
[32m+[m[32m.icon--blue{ background:var(--blue-100); }[m
[32m+[m[32m.icon--green{ background:var(--green-100); }[m
[32m+[m[32m.icon--purple{ background:var(--purple-100); }[m
[32m+[m[32m.icon--indigo{ background:var(--indigo-100); }[m
[32m+[m[32m.icon--cyan{ background:var(--cyan-100); }[m
[32m+[m
[32m+[m[32m.progress{ height:8px; background:var(--slate-200); border-radius:4px; width:100%; }[m
[32m+[m[32m.progress__bar{ height:8px; border-radius:4px; }[m
[32m+[m[32m.progress--blue .progress__bar{ background:var(--blue-500); }[m
[32m+[m[32m.progress--green .progress__bar{ background:var(--green-500); }[m
[32m+[m[32m.progress--purple .progress__bar{ background:var(--purple-500); }[m
[32m+[m[32m.progress--indigo .progress__bar{ background:var(--indigo-500); }[m
[32m+[m[32m.progress--cyan .progress__bar{ background:var(--cyan-500); }[m
[32m+[m
[32m+[m[32m/* ---------- Main sections grid ---------- */[m
[32m+[m[32m.section-wrap{[m
[32m+[m[32m  max-width:1120px; margin:32px auto 0; padding:0 16px;[m
[32m+[m[32m  display:grid; grid-template-columns:2fr 1fr; gap:24px;[m
[32m+[m[32m}[m
[32m+[m[32m.section-card{[m
[32m+[m[32m  background:#fff; border:1px solid var(--slate-200);[m
[32m+[m[32m  border-radius:var(--radius-lg); padding:24px; box-shadow:var(--shadow-1);[m
[32m+[m[32m}[m
[32m+[m[32m.section-title{[m
[32m+[m[32m  font-size:16px; font-weight:600; color:var(--ink-800);[m
[32m+[m[32m  display:flex; align-items:center; justify-content:space-between; gap:12px; margin-bottom:16px;[m
[32m+[m[32m}[m
[32m+[m[32m.btn-tab{ background:var(--slate-100); color:var(--ink-600); border:none; }[m
[32m+[m[32m.btn-tab--active{ background:var(--blue-50); color:var(--blue-600); }[m
[32m+[m
[32m+[m[32m/* ---------- Charts ---------- */[m
[32m+[m[32m.chart-row{ display:grid; grid-template-columns:1fr 1fr; gap:16px; }[m
[32m+[m[32m.chart-box{ width:100%; display:flex; flex-direction:column; gap:8px; }[m
[32m+[m[32m.chart-legend{ display:flex; align-items:center; gap:12px; margin-top:8px; font-size:12px; color:var(--ink-600); }[m
[32m+[m[32m.legend-swatch{ width:12px; height:2px; display:inline-block; }[m
[32m+[m[32m.swatch-blue{ background:var(--blue-500); }[m
[32m+[m[32m.swatch-gray{ background:var(--ink-500); }[m
[32m+[m
[32m+[m[32m.chart--center{ display:flex; justify-content:center; }[m
[32m+[m
[32m+[m[32m/* ---------- Metrics side tiles ---------- */[m
[32m+[m[32m.metric-col{ display:grid; gap:16px; }[m
[32m+[m[32m.slider-track{[m
[32m+[m[32m  position:relative; height:8px; background:var(--slate-200); border-radius:999px; margin-top:8px;[m
[32m+[m[32m}[m
[32m+[m[32m.slider-gradient{ position:absolute; inset:0; border-radius:999px;[m
[32m+[m[32m  background: linear-gradient(90deg, #ef4444, #f59e0b, #10b981);[m
[32m+[m[32m}[m
[32m+[m[32m.slider-thumb{[m
[32m+[m[32m  position:absolute; top:-3px; height:14px; width:14px; background:#fff;[m
[32m+[m[32m  border:2px solid var(--blue-500); border-radius:999px;[m
[32m+[m[32m}[m
[32m+[m[32m.range-labels{ display:flex; justify-content:space-between; font-size:11px; color:var(--ink-500); margin-top:4px; }[m
[32m+[m
[32m+[m[32m/* ---------- Nutrition ---------- */[m
[32m+[m[32m.nutrition-grid{ display:grid; grid-template-columns:repeat(3,1fr); gap:12px; margin-bottom:16px; }[m
[32m+[m[32m.nutrition-box{ padding:16px; border-radius:var(--radius-md); }[m
[32m+[m[32m.nutrition--protein{ background:var(--blue-50); }[m
[32m+[m[32m.nutrition--carbs{ background:var(--green-50); }[m
[32m+[m[32m.nutrition--fat{ background:var(--yellow-50); }[m
[32m+[m[32m.nutrition-title{ font-size:12px; font-weight:600; }[m
[32m+[m[32m.nutrition-value{ font-size:20px; font-weight:700; margin-top:4px; }[m
[32m+[m[32m.nutrition-sub{ font-size:11px; margin-top:4px; }[m
[32m+[m[32m.nutrition-bar{ margin-top:8px; }[m
[32m+[m
[32m+[m[32m/* ---------- Activity ---------- */[m
[32m+[m[32m.activity-list{ display:grid; gap:12px; }[m
[32m+[m[32m.activity-item{ display:flex; justify-content:space-between; font-size:13px; color:var(--ink-600); }[m
[32m+[m
[32m+[m[32m/* ---------- Wellness ---------- */[m
[32m+[m[32m.wellness-list{ display:grid; gap:12px; }[m
[32m+[m[32m.wellness-item{[m
[32m+[m[32m  display:flex; align-items:center; justify-content:space-between;[m
[32m+[m[32m  padding:12px; border-radius:var(--radius-md);[m
[32m+[m[32m}[m
[32m+[m[32m.wellness--sleep{ background:var(--indigo-50); }[m
[32m+[m[32m.wellness--stress{ background:var(--green-50); }[m
[32m+[m[32m.wellness--fasting{ background:var(--yellow-50); }[m
[32m+[m[32m.wellness-left{ display:flex; align-items:center; gap:12px; }[m
[32m+[m[32m.pill{ font-size:12px; font-weight:700; }[m
[32m+[m[32m.pill--indigo{ color:#3730a3; }[m
[32m+[m[32m.pill--green{ color:#065f46; }[m
[32m+[m[32m.pill--amber{ color:#92400e; }[m
[32m+[m[32m.trend{ display:flex; align-items:center; gap:4px; font-size:11px; }[m
[32m+[m
[32m+[m[32m/* ---------- Achievements ---------- */[m
[32m+[m[32m.achievements-grid{ display:grid; grid-template-columns:repeat(3,1fr); gap:12px; }[m
[32m+[m[32m.achievement{[m
[32m+[m[32m  padding:12px; border-radius:var(--radius-md);[m
[32m+[m[32m  display:flex; flex-direction:column; align-items:center; text-align:center;[m
[32m+[m[32m}[m
[32m+[m[32m.achievement--blue{ background:var(--blue-50); }[m
[32m+[m[32m.achievement--green{ background:var(--green-50); }[m
[32m+[m[32m.achievement--purple{ background:var(--purple-50); }[m
[32m+[m[32m.achievement .avatar{ height:40px; width:40px; }[m
[32m+[m[32m.achievement p{ margin-top:8px; font-size:12px; font-weight:600; }[m
[32m+[m
[32m+[m[32m/* ---------- Modal ---------- */[m
[32m+[m[32m.modal-overlay{[m
[32m+[m[32m  position:fixed; inset:0; background:rgba(0,0,0,.5);[m
[32m+[m[32m  display:flex; align-items:center; justify-content:center; z-index:50; padding:20px;[m
[32m+[m[32m}[m
[32m+[m[32m.modal-content{[m
[32m+[m[32m  background:#fff; border-radius:var(--radius-lg); box-shadow:0 20px 40px rgba(0,0,0,.2);[m
[32m+[m[32m  padding:24px; width:min(640px,92vw); max-height:80vh; overflow:auto;[m
[32m+[m[32m}[m
[32m+[m[32m.modal-header{ display:flex; align-items:center; justify-content:space-between; margin-bottom:12px; }[m
[32m+[m[32m.modal-title{ font-size:18px; font-weight:700; color:var(--ink-800); }[m
[32m+[m[32m.modal-actions{ display:flex; gap:8px; }[m
[32m+[m[32m.icon-btn{[m
[32m+[m[32m  padding:8px; border-radius:999px; border:none; cursor:pointer;[m
[32m+[m[32m  background:var(--blue-50); color:var(--blue-600);[m
[32m+[m[32m}[m
[32m+[m[32m.icon-btn--danger{ background:#fee2e2; color:var(--red-500); }[m
[32m+[m
[32m+[m[32m/* ---------- Footer ---------- */[m
[32m+[m[32mfooter.dashboard-footer{[m
[32m+[m[32m  margin-top:32px; padding:16px; text-align:center; color:var(--ink-500); font-size:12px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ---------- Responsive ---------- */[m
[32m+[m[32m@media (max-width: 1200px){[m
[32m+[m[32m  .snapshot-grid{ grid-template-columns:repeat(3,1fr); }[m
[32m+[m[32m}[m
[32m+[m[32m@media (max-width: 900px){[m
[32m+[m[32m  .section-wrap{ grid-template-columns:1fr; }[m
[32m+[m[32m}[m
[32m+[m[32m@media (max-width: 640px){[m
[32m+[m[32m  .snapshot-grid{ grid-template-columns:1fr; }[m
[32m+[m[32m  .chart-row{ grid-template-columns:1fr; }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ---------- Dark mode ---------- */[m
[32m+[m[32m@media (prefers-color-scheme: dark){[m
[32m+[m[32m  body{ background:#0f1115; color:#e5e7eb; }[m
[32m+[m[32m  header.dashboard-header{ background:#12151b; box-shadow:none; border-bottom:1px solid #252a33; }[m
[32m+[m[32m  .card, .section-card, .modal-content{ background:#151823; border-color:#252a33; }[m
[32m+[m[32m  .progress{ background:#1f2430; }[m
[32m+[m[32m  .snapshot-heading, .dashboard-title, .modal-title{ color:#e5e7eb; }[m
[32m+[m[32m  .dashboard-sub, .card-title, .card-sub, .activity-item, .range-labels, .chart-legend{ color:#c7cbd4; }[m
[32m+[m[32m  .btn{ background:#1b2130; border-color:#2a3242; color:#c7d2fe; }[m
[32m+[m[32m  .btn:hover{ border-color:#3b82f6; }[m
[32m+[m[32m  .wellness--sleep{ background:#1b1f36; }[m
[32m+[m[32m  .wellness--stress{ background:#11251c; }[m
[32m+[m[32m  .wellness--fasting{ background:#2a220e; }[m
 }[m
[31m-[m
[31m-.topic-button:hover{[m
[31m-  background: #eef4ff;       /* clearer hover */[m
[31m-  color: #1557b0;[m
[31m-  transform: translateY(-1px);[m
[31m-}[m
[31m-[m
[31m-/* Resources as soft pills */[m
[31m-.resources-list a{[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  gap: 10px;[m
[31m-  background: #f5f8ff;[m
[31m-  color: #1a4fb8;[m
[31m-  padding: 10px 12px;[m
[31m-  border-radius: 12px;[m
[31m-  border: 1px solid #e1e9ff;[m
[31m-  transition: background-color .18s ease, box-shadow .18s ease, transform .06s ease;[m
[31m-}[m
[31m-[m
[31m-.resources-list a:hover{[m
[31m-  background: #eaf1ff;[m
[31m-  box-shadow: 0 6px 16px rgba(26,115,232,.12);[m
[31m-  text-decoration: none;[m
[31m-  transform: translateY(-1px);[m
[31m-}[m
[31m-[m
[31m-/* Space the sidebar nicely on tall pages */[m
[31m-.sidebar{ position: sticky; top: 90px; }[m
[31m-[m
[31m-/* ---- “Powered by AI” strip polish (if present) ---- */[m
[31m-.data-source-indicator{[m
[31m-  color: var(--vh-muted);[m
[31m-}[m
[31m-[m
[31m-/* ---- Footer breathing room ---- */[m
[31m-.results-container{ padding-bottom: 60px; }[m
[31m-[m
[31m-/* ---- Small-screen refinements ---- */[m
[31m-@media (max-width: 768px){[m
[31m-  .sidebar{ position: static; }[m
[31m-  .related-topics-card h3,[m
[31m-  .resources-card h3{ font-size: 15px; padding: 12px 14px; }[m
[31m-  .topic-button{ padding: 10px; }[m
[31m-  .resources-list a{ padding: 10px; }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/user/src/Dashboard.tsx b/user/src/Dashboard.tsx[m
[1mindex 383dff6f..8371b7ff 100644[m
[1m--- a/user/src/Dashboard.tsx[m
[1m+++ b/user/src/Dashboard.tsx[m
[36m@@ -1,422 +1,28 @@[m
[31m-import React, { useCallback, useMemo, useRef, useState } from 'react';[m
[31m-import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';[m
[31m-import './Dashboard.css'; // Make sure case matches file name[m
[31m-import Sidebar from './components/Navigation/Sidebar';[m
[32m+[m[32mimport React from 'react';[m
[32m+[m[32mimport './Dashboard.css';[m
[32m+[m[32mimport Header from './components/Header';[m
[32m+[m[32mimport HealthSnapshot from './components/HealthSnapshot';[m
[32m+[m[32mimport WeightMetrics from './components/WeightMetrics';[m
[32m+[m[32mimport Activity from './components/Activity';[m
[32m+[m[32mimport { ModalProvider } from './providers/ModalProvider';[m
 [m
[31m-/** ---------- tiny inline icons so we don't depend on a lib ---------- */[m
[31m-const Icon = {[m
[31m-  Search: (props: React.SVGProps<SVGSVGElement>) => ([m
[31m-    <svg viewBox="0 0 24 24" {...props}><path fill="currentColor" d="M10 2a8 8 0 105.293 14.293l4.707 4.707 1.414-1.414-4.707-4.707A8 8 0 0010 2zm0 2a6 6 0 110 12A6 6 0 0110 4z"/></svg>[m
[31m-  ),[m
[31m-  Mic: (props: React.SVGProps<SVGSVGElement>) => ([m
[31m-    <svg viewBox="0 0 24 24" {...props}><path fill="currentColor" d="M12 14a3 3 0 003-3V6a3 3 0 10-6 0v5a3 3 0 003 3zm5-3a5 5 0 01-10 0H5a7 7 0 0014 0h-2zM11 19h2v3h-2z"/></svg>[m
[31m-  ),[m
[31m-  Image: (props: React.SVGProps<SVGSVGElement>) => ([m
[31m-    <svg viewBox="0 0 24 24" {...props}><path fill="currentColor" d="M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2V5a2 2 0 00-2-2zm0 2v9.586l-3.293-3.293a1 1 0 00-1.414 0L10 15.586 7.707 13.293a1 1 0 00-1.414 0L5 14.586V5h14zM7 7a2 2 0 112 2 2 2 0 01-2-2z"/></svg>[m
[31m-  ),[m
[31m-  Close: (props: React.SVGProps<SVGSVGElement>) => ([m
[31m-    <svg viewBox="0 0 24 24" {...props}><path fill="currentColor" d="M18.3 5.71L12 12.01l-6.29-6.3-1.42 1.42 6.3 6.29-6.3 6.29 1.42 1.42 6.29-6.3 6.29 6.3 1.42-1.42-6.3-6.29 6.3-6.29-1.42-1.42z"/></svg>[m
[31m-  ),[m
[31m-  Back: (props: React.SVGProps<SVGSVGElement>) => ([m
[31m-    <svg viewBox="0 0 24 24" {...props}><path fill="currentColor" d="M20 11H7.83l5.58-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"/></svg>[m
[31m-  ),[m
[31m-  Upload: (props: React.SVGProps<SVGSVGElement>) => ([m
[31m-    <svg viewBox="0 0 24 24" {...props}><path fill="currentColor" d="M5 20h14v-2H5v2zM12 2l-5 5h3v6h4V7h3l-5-5z"/></svg>[m
[31m-  ),[m
[31m-  Link: (props: React.SVGProps<SVGSVGElement>) => ([m
[31m-    <svg viewBox="0 0 24 24" {...props}><path fill="currentColor" d="M3.9 12a5 5 0 015-5h3v2h-3a3 3 0 100 6h3v2h-3a5 5 0 01-5-5zm7.1 1h2v-2h-2v2zm4-6h3a5 5 0 010 10h-3v-2h3a3 3 0 000-6h-3V7z"/></svg>[m
[31m-  ),[m
[31m-};[m
[31m-[m
[31m-/** ---------- helper types ---------- */[m
[31m-type Resource = { label: string; href: string };[m
[31m-type Topic = { label: string; value: string };[m
[31m-[m
[31m-const RELATED_TOPICS: Topic[] = [[m
[31m-  { label: 'Healthy breakfast ideas', value: 'Healthy breakfast ideas' },[m
[31m-  { label: 'Low-sugar snacks', value: 'Low-sugar snacks' },[m
[31m-  { label: 'How to read food labels', value: 'How to read food labels' },[m
[31m-  { label: 'Macros vs. calories', value: 'Macros vs. calories' },[m
[31m-];[m
[31m-[m
[31m-const RESOURCES: Resource[] = [[m
[31m-  { label: 'Nutrition 101 (guide)', href: '#' },[m
[31m-  { label: 'SNAP/EBT friendly groceries', href: '#' },[m
[31m-  { label: 'What Is Healthy? book', href: '#' },[m
[31m-  { label: 'Build-a-Plate template', href: '#' },[m
[31m-];[m
[31m-[m
[31m-const SAMPLE_RESULT = `## What is healthy?[m
[31m-[m
[31m-“Healthy” isn’t a brand label or a single macro number. It’s alignment:[m
[31m-- Whole or minimally processed foods most of the time[m
[31m-- Enough protein, fiber, and micronutrients[m
[31m-- Reasonable portions and patterns you can sustain[m
[31m-- Context: your goals, budget, culture, and time[m
[31m-[m
[31m-**Quick wins**[m
[31m-1) Swap sugar drinks for water/tea[m
[31m-2) Add a fruit/veg to every plate[m
[31m-3) Build plates: Protein + Fiber + Color + Water[m
[31m-`;[m
[31m-[m
[31m-/** ---------- Upload/Photo modal (uses your CSS classes) ---------- */[m
[31m-function UploadModal({[m
[31m-  open,[m
[31m-  onClose,[m
[31m-  onPickFile,[m
[31m-}: {[m
[31m-  open: boolean;[m
[31m-  onClose: () => void;[m
[31m-  onPickFile: (file: File) => void;[m
[31m-}) {[m
[31m-  const inputRef = useRef<HTMLInputElement | null>(null);[m
[31m-  const [dragging, setDragging] = useState(false);[m
[31m-  const [url, setUrl] = useState('');[m
[31m-[m
[31m-  const handleDrop = (e: React.DragEvent) => {[m
[31m-    e.preventDefault();[m
[31m-    setDragging(false);[m
[31m-    const file = e.dataTransfer.files?.[0];[m
[31m-    if (file) onPickFile(file);[m
[31m-  };[m
[31m-[m
[31m-  if (!open) return null;[m
[31m-  return ([m
[31m-    <div className="upload-modal-overlay" onClick={onClose}>[m
[31m-      <div className="upload-modal-content" onClick={(e) => e.stopPropagation()}>[m
[31m-        <div className="modal-header">[m
[31m-          <div>[m
[31m-            <h2>Upload a photo</h2>[m
[31m-            <p className="modal-subtitle">Add a picture of food or a label.</p>[m
[31m-          </div>[m
[31m-          <button className="modal-close" onClick={onClose} aria-label="Close upload modal">[m
[31m-            <Icon.Close width={20} height={20} />[m
[31m-          </button>[m
[31m-        </div>[m
[31m-[m
[31m-        <div[m
[31m-          className={`upload-area${dragging ? ' dragging' : ''}`}[m
[31m-          onDragEnter={(e) => {[m
[31m-            e.preventDefault();[m
[31m-            setDragging(true);[m
[31m-          }}[m
[31m-          onDragOver={(e) => e.preventDefault()}[m
[31m-          onDragLeave={() => setDragging(false)}[m
[31m-          onDrop={handleDrop}[m
[31m-          onClick={() => inputRef.current?.click()}[m
[31m-        >[m
[31m-          <div className="upload-content">[m
[31m-            <div className="upload-icon">[m
[31m-              <Icon.Upload width={48} height={48} />[m
[31m-            </div>[m
[31m-            <p className="upload-text">Drag an image here, or</p>[m
[31m-            <button[m
[31m-              type="button"[m
[31m-              className="upload-link"[m
[31m-              onClick={() => inputRef.current?.click()}[m
[31m-            >[m
[31m-              choose a file[m
[31m-            </button>[m
[31m-            <input[m
[31m-              ref={inputRef}[m
[31m-              type="file"[m
[31m-              accept="image/*"[m
[31m-              hidden[m
[31m-              onChange={(e) => {[m
[31m-                const f = e.target.files?.[0];[m
[31m-                if (f) onPickFile(f);[m
[31m-              }}[m
[31m-            />[m
[31m-          </div>[m
[31m-        </div>[m
[31m-[m
[31m-        <div className="modal-divider">[m
[31m-          <span>or use a URL</span>[m
[31m-        </div>[m
[31m-[m
[31m-        <div className="url-input-section">[m
[31m-          <input[m
[31m-            className="url-input"[m
[31m-            placeholder="Paste image URL"[m
[31m-            value={url}[m
[31m-            onChange={(e) => setUrl(e.target.value)}[m
[31m-          />[m
[31m-          <button[m
[31m-            className="search-button-modal"[m
[31m-            onClick={() => {[m
[31m-              // In a real app you’d fetch and attach the image.[m
[31m-              // Here we just close.[m
[31m-              onClose();[m
[31m-            }}[m
[31m-          >[m
[31m-            <Icon.Link width={16} height={16} style={{ marginRight: 8 }} />[m
[31m-            Add[m
[31m-          </button>[m
[31m-        </div>[m
[31m-      </div>[m
[31m-    </div>[m
[31m-  );[m
[31m-}[m
[31m-[m
[31m-/** ---------- Main Dashboard ---------- */[m
 const Dashboard: React.FC = () => {[m
[31m-  const [query, setQuery] = useState('');[m
[31m-  const [showResults, setShowResults] = useState(false);[m
[31m-  const [listening, setListening] = useState(false);[m
[31m-  const [showUpload, setShowUpload] = useState(false);[m
[31m-  const [imageName, setImageName] = useState<string | null>(null);[m
[31m-[m
[31m-  const canSearch = query.trim().length > 0 || !!imageName;[m
[31m-[m
[31m-  const onSubmit = useCallback([m
[31m-    (e?: React.FormEvent) => {[m
[31m-      if (e) e.preventDefault();[m
[31m-      if (!canSearch) return;[m
[31m-      setShowResults(true);[m
[31m-      setListening(false);[m
[31m-    },[m
[31m-    [canSearch][m
[31m-  );[m
[31m-[m
[31m-  const onClear = () => {[m
[31m-    setQuery('');[m
[31m-    setImageName(null);[m
[31m-  };[m
[31m-[m
[31m-  const onBack = () => setShowResults(false);[m
[31m-[m
[31m-  const handlePickFile = (file: File) => {[m
[31m-    setImageName(file.name);[m
[31m-    setShowUpload(false);[m
[31m-  };[m
[31m-[m
[31m-  const voiceBtnClass = useMemo([m
[31m-    () => `icon-button ${listening ? 'listening' : ''}`,[m
[31m-    [listening][m
[31m-  );[m
[31m-[m
[31m-  /** ---------- Search Landing ---------- */[m
[31m-  if (!showResults) {[m
[31m-    return ([m
[31m-      <Router>[m
[31m-        <div className="search-landing">[m
[31m-          <Sidebar />[m
[31m-          <div className="search-container-centered search-container">[m
[31m-            {/* Optional logo area (respects your CSS override at the bottom) */}[m
[31m-            <div className="logo-container" style={{ marginBottom: 20 }}>[m
[31m-              {/* <img className="search-logo-image" src="/logo.svg" alt="vHealth" /> */}[m
[31m-              <h1 className="search-logo">vHealth</h1>[m
[31m-            </div>[m
[31m-[m
[31m-            <p className="search-tagline">Search foods, habits, and real-world nutrition answers.</p>[m
[31m-[m
[31m-            <form className="search-form" onSubmit={onSubmit}>[m
[31m-              <div className={`search-input-container${imageName ? ' with-image-wrap' : ''}`}>[m
[31m-                {imageName && ([m
[31m-                  <div className="image-preview" aria-label="Selected image">[m
[31m-                    <span className="image-icon">🖼️</span>[m
[31m-                    <span className="image-name" title={imageName}>{imageName}</span>[m
[31m-                    <button[m
[31m-                      type="button"[m
[31m-                      className="remove-image"[m
[31m-                      aria-label="Remove image"[m
[31m-                      onClick={() => setImageName(null)}[m
[31m-                    >[m
[31m-                      ×[m
[31m-                    </button>[m
[31m-                  </div>[m
[31m-                )}[m
[31m-[m
[31m-                <input[m
[31m-                  className={`search-input ${imageName ? 'with-image' : ''}`}[m
[31m-                  placeholder="Ask about a food, label, or habit…"[m
[31m-                  value={query}[m
[31m-                  onChange={(e) => setQuery(e.target.value)}[m
[31m-                  aria-label="Search"[m
[31m-                />[m
[31m-[m
[31m-                <div className="search-icons">[m
[31m-                  {query || imageName ? ([m
[31m-                    <button[m
[31m-                      type="button"[m
[31m-                      className="icon-button clear-button"[m
[31m-                      title="Clear"[m
[31m-                      onClick={onClear}[m
[31m-                    >[m
[31m-                      <Icon.Close />[m
[31m-                    </button>[m
[31m-                  ) : null}[m
[31m-[m
[31m-                  <button[m
[31m-                    type="button"[m
[31m-                    className={voiceBtnClass}[m
[31m-                    title={listening ? 'Stop' : 'Voice search'}[m
[31m-                    onClick={() => setListening((s) => !s)}[m
[31m-                  >[m
[31m-                    <Icon.Mic />[m
[31m-                  </button>[m
[31m-[m
[31m-                  <button[m
[31m-                    type="button"[m
[31m-                    className="icon-button"[m
[31m-                    title="Search by image"[m
[31m-                    onClick={() => setShowUpload(true)}[m
[31m-                  >[m
[31m-                    <Icon.Image />[m
[31m-                  </button>[m
[31m-                </div>[m
[31m-              </div>[m
[31m-[m
[31m-              <div className="search-actions">[m
[31m-                <button className="search-btn" type="submit" disabled={!canSearch}>[m
[31m-                  <Icon.Search width={18} height={18} style={{ marginRight: 8 }} />[m
[31m-                  Search vHealth[m
[31m-                </button>[m
[31m-                <button[m
[31m-                  className="search-btn"[m
[31m-                  type="button"[m
[31m-                  onClick={() => {[m
[31m-                    setQuery('What is a balanced plate?');[m
[31m-                  }}[m
[31m-                >[m
[31m-                  I’m Feeling Curious[m
[31m-                </button>[m
[31m-              </div>[m
[31m-            </form>[m
[31m-[m
[31m-            {/* voice feedback stub */}[m
[31m-            {listening && ([m
[31m-              <div className="voice-feedback" style={{ marginTop: 16, color: '#ea4335' }}>[m
[31m-                Listening… say “Scan the label on my granola bar”[m
[31m-              </div>[m
[31m-            )}[m
[31m-          </div>[m
[31m-[m
[31m-          <UploadModal open={showUpload} onClose={() => setShowUpload(false)} onPickFile={handlePickFile} />[m
[31m-        </div>[m
[31m-      </Router>[m
[31m-    );[m
[31m-  }[m
[31m-[m
[31m-  /** ---------- Results Page ---------- */[m
   return ([m
[31m-    <div className="results-page">[m
[31m-      {/* sticky search header */}[m
[31m-      <div className="results-search-header">[m
[31m-        <button className="back-button" onClick={onBack} aria-label="Back to search">[m
[31m-          <Icon.Back />[m
[31m-        </button>[m
[31m-[m
[31m-        <form[m
[31m-          className="search-input-container"[m
[31m-          onSubmit={(e) => {[m
[31m-            e.preventDefault();[m
[31m-            onSubmit();[m
[31m-          }}[m
[31m-          style={{ maxWidth: 600 }}[m
[31m-        >[m
[31m-          {imageName && ([m
[31m-            <div className="image-preview" aria-label="Selected image">[m
[31m-              <span className="image-icon">🖼️</span>[m
[31m-              <span className="image-name" title={imageName}>{imageName}</span>[m
[31m-              <button type="button" className="remove-image" onClick={() => setImageName(null)}>[m
[31m-                ×[m
[31m-              </button>[m
[31m-            </div>[m
[31m-          )}[m
[31m-          <input[m
[31m-            className={`search-input results-search-input ${imageName ? 'with-image' : ''}`}[m
[31m-            placeholder="Refine your search…"[m
[31m-            value={query}[m
[31m-            onChange={(e) => setQuery(e.target.value)}[m
[31m-            aria-label="Refine search"[m
[31m-          />[m
[31m-          <div className="search-icons">[m
[31m-            {(query || imageName) && ([m
[31m-              <button[m
[31m-                type="button"[m
[31m-                className="icon-button clear-button"[m
[31m-                title="Clear"[m
[31m-                onClick={onClear}[m
[31m-              >[m
[31m-                <Icon.Close />[m
[31m-              </button>[m
[31m-            )}[m
[31m-            <button[m
[31m-              type="button"[m
[31m-              className={voiceBtnClass}[m
[31m-              title={listening ? 'Stop' : 'Voice search'}[m
[31m-              onClick={() => setListening((s) => !s)}[m
[31m-            >[m
[31m-              <Icon.Mic />[m
[31m-            </button>[m
[31m-            <button[m
[31m-              type="button"[m
[31m-              className="icon-button"[m
[31m-              title="Search by image"[m
[31m-              onClick={() => setShowUpload(true)}[m
[31m-            >[m
[31m-              <Icon.Image />[m
[31m-            </button>[m
[31m-          </div>[m
[31m-        </form>[m
[31m-      </div>[m
[31m-[m
[31m-      <div className="results-container">[m
[31m-        <div className="results-header">Results for “{query || 'your query'}”</div>[m
[31m-[m
[31m-        <div className="results-content">[m
[31m-          {/* main column */}[m
[31m-          <div>[m
[31m-            <div className="health-info-card">[m
[31m-              <div className="health-info-content">[m
[31m-                <pre>{SAMPLE_RESULT}</pre>[m
[31m-              </div>[m
[31m-              <div className="data-source-indicator">[m
[31m-                Powered by vHealth Knowledge • <span className="error-source">Demo content</span>[m
[31m-              </div>[m
[31m-            </div>[m
[31m-          </div>[m
[31m-[m
[31m-          {/* right sidebar */}[m
[31m-          <aside className="sidebar">[m
[31m-            <div className="related-topics-card">[m
[31m-              <h3>Related Topics</h3>[m
[31m-              <ul className="related-topics-list">[m
[31m-                {RELATED_TOPICS.map((t) => ([m
[31m-                  <li key={t.label}>[m
[31m-                    <button[m
[31m-                      className="topic-button"[m
[31m-                      onClick={() => {[m
[31m-                        setQuery(t.value);[m
[31m-                        // optionally resubmit: onSubmit();[m
[31m-                      }}[m
[31m-                    >[m
[31m-                      {t.label}[m
[31m-                    </button>[m
[31m-                  </li>[m
[31m-                ))}[m
[31m-              </ul>[m
[31m-            </div>[m
[31m-[m
[31m-            <div className="resources-card">[m
[31m-              <h3>Resources</h3>[m
[31m-              <ul className="resources-list">[m
[31m-                {RESOURCES.map((r) => ([m
[31m-                  <li key={r.label}>[m
[31m-                    <a href={r.href} target="_blank" rel="noreferrer">[m
[31m-                      {r.label}[m
[31m-                    </a>[m
[31m-                  </li>[m
[31m-                ))}[m
[31m-              </ul>[m
[31m-            </div>[m
[31m-          </aside>[m
[32m+[m[32m    <ModalProvider>[m
[32m+[m[32m      <div style={{ minHeight: '100vh', backgroundColor: '#f8fafc' }}>[m
[32m+[m[32m        <Header />[m
[32m+[m[32m        <HealthSnapshot />[m
[32m+[m[41m        [m
[32m+[m[32m        <div className="section-wrap">[m
[32m+[m[32m          <WeightMetrics />[m
[32m+[m[32m          <Activity />[m
         </div>[m
[31m-      </div>[m
 [m
[31m-    </div>[m
[32m+[m[32m        <footer className="dashboard-footer">[m
[32m+[m[32m          © {new Date().getFullYear()} vHealth[m
[32m+[m[32m        </footer>[m
[32m+[m[32m      </div>[m
[32m+[m[32m    </ModalProvider>[m
   );[m
 };[m
 [m
[1mdiff --git a/user/src/components/Navigation/Sidebar.css b/user/src/components/Navigation/Sidebar.css[m
[1mdeleted file mode 100644[m
[1mindex e4024fff..00000000[m
[1m--- a/user/src/components/Navigation/Sidebar.css[m
[1m+++ /dev/null[m
[36m@@ -1,60 +0,0 @@[m
[31m-.sidebar {[m
[31m-  width: 250px;[m
[31m-  height: 100vh;[m
[31m-  background-color: #2c3e50;[m
[31m-  color: white;[m
[31m-  padding: 20px;[m
[31m-  position: fixed;[m
[31m-  left: 0;[m
[31m-  top: 0;[m
[31m-  overflow-y: auto;[m
[31m-  z-index: 1000;[m
[31m-  box-shadow: 2px 0 5px rgba(0,0,0,0.1);[m
[31m-}[m
[31m-[m
[31m-.sidebar-header {[m
[31m-  margin-bottom: 30px;[m
[31m-  font-size: 1.2em;[m
[31m-  font-weight: bold;[m
[31m-  text-align: center;[m
[31m-  border-bottom: 1px solid #34495e;[m
[31m-  padding-bottom: 15px;[m
[31m-}[m
[31m-[m
[31m-.sidebar ul {[m
[31m-  list-style: none;[m
[31m-  padding: 0;[m
[31m-  margin: 0;[m
[31m-}[m
[31m-[m
[31m-.sidebar li {[m
[31m-  margin: 10px 0;[m
[31m-}[m
[31m-[m
[31m-.sidebar a {[m
[31m-  text-decoration: none;[m
[31m-  color: white;[m
[31m-  padding: 12px 16px;[m
[31m-  display: block;[m
[31m-  border-radius: 4px;[m
[31m-  transition: background-color 0.3s;[m
[31m-}[m
[31m-[m
[31m-.sidebar a:hover {[m
[31m-  background-color: #34495e;[m
[31m-}[m
[31m-[m
[31m-.sidebar a.active {[m
[31m-  background-color: #3498db;[m
[31m-}[m
[31m-[m
[31m-.nav-item {[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  gap: 10px;[m
[31m-}[m
[31m-[m
[31m-.nav-icon {[m
[31m-  width: 20px;[m
[31m-  height: 20px;[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/user/src/components/Navigation/Sidebar.tsx b/user/src/components/Navigation/Sidebar.tsx[m
[1mdeleted file mode 100644[m
[1mindex e258778d..00000000[m
[1m--- a/user/src/components/Navigation/Sidebar.tsx[m
[1m+++ /dev/null[m
[36m@@ -1,27 +0,0 @@[m
[31m-import React from 'react';[m
[31m-import { Link } from 'react-router-dom';[m
[31m-import './Sidebar.css'; // Assuming you have a CSS file for styling[m
[31m-[m
[31m-const Sidebar: React.FC = () => {[m
[31m-    return ([m
[31m-        <div className="sidebar">[m
[31m-            <h2>Health Dashboard</h2>[m
[31m-            <ul>[m
[31m-                <li>[m
[31m-                    <Link to="/">Home</Link>[m
[31m-                </li>[m
[31m-                <li>[m
[31m-                    <Link to="/profile">Profile</Link>[m
[31m-                </li>[m
[31m-                <li>[m
[31m-                    <Link to="/dashboard">Dashboard</Link>[m
[31m-                </li>[m
[31m-                <li>[m
[31m-                    <Link to="/charts">Charts</Link>[m
[31m-                </li>[m
[31m-            </ul>[m
[31m-        </div>[m
[31m-    );[m
[31m-};[m
[31m-[m
[31m-export default Sidebar;[m
\ No newline at end of file[m
