{"ast":null,"code":"// Debug utility function\nconst safeLog = (message, data) => {\n  if (data === undefined) {\n    console.log(message);\n    return;\n  }\n  try {\n    if (typeof data === 'object' && data !== null) {\n      console.log(message, JSON.stringify(data));\n    } else {\n      console.log(message, data);\n    }\n  } catch (error) {\n    console.log(message, '(Object could not be stringified)');\n  }\n};\nconst getErrorResponse = query => {\n  return {\n    summary: `We encountered an issue searching for information about \"${query}\".`,\n    details: `We're currently unable to provide detailed health information about \"${query}\". This could be due to:\\n\\n• Temporary service issues\\n• Network connectivity problems\\n• API limitations\\n\\nPlease try again in a few moments, or consider these general health resources:\\n\\n• Contact your healthcare provider\\n• Visit reputable medical websites like Mayo Clinic or WebMD\\n• Call a health information hotline\\n• Consult medical reference books`,\n    sources: ['System'],\n    relatedTopics: [],\n    recommendations: []\n  };\n};\nexport const healthSearchService = {\n  async searchHealthInfo(query, signal) {\n    safeLog(\"HealthSearchService: Searching for \" + query);\n    try {\n      // For dashboard context, we could integrate with the client app's search\n      // or provide a simplified search experience\n      // For now, return a placeholder response\n      return {\n        summary: `Search results for \"${query}\"`,\n        details: `This is a placeholder search result for \"${query}\". In a full implementation, this would connect to the health search APIs.`,\n        sources: ['Dashboard Search'],\n        relatedTopics: ['General Health', 'Nutrition', 'Wellness'],\n        recommendations: ['Consult healthcare professionals', 'Verify information with medical providers']\n      };\n    } catch (error) {\n      safeLog(\"HealthSearchService error:\", error);\n      return getErrorResponse(query);\n    }\n  }\n};","map":{"version":3,"names":["safeLog","message","data","undefined","console","log","JSON","stringify","error","getErrorResponse","query","summary","details","sources","relatedTopics","recommendations","healthSearchService","searchHealthInfo","signal"],"sources":["C:/repo/wihy_ui/user/src/services/healthSearchService.ts"],"sourcesContent":["import { HealthSearchResult } from '../types';\r\n\r\n// Debug utility function\r\nconst safeLog = (message: string, data?: any) => {\r\n  if (data === undefined) {\r\n    console.log(message);\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    if (typeof data === 'object' && data !== null) {\r\n      console.log(message, JSON.stringify(data));\r\n    } else {\r\n      console.log(message, data);\r\n    }\r\n  } catch (error) {\r\n    console.log(message, '(Object could not be stringified)');\r\n  }\r\n};\r\n\r\nconst getErrorResponse = (query: string): HealthSearchResult => {\r\n  return {\r\n    summary: `We encountered an issue searching for information about \"${query}\".`,\r\n    details: `We're currently unable to provide detailed health information about \"${query}\". This could be due to:\\n\\n• Temporary service issues\\n• Network connectivity problems\\n• API limitations\\n\\nPlease try again in a few moments, or consider these general health resources:\\n\\n• Contact your healthcare provider\\n• Visit reputable medical websites like Mayo Clinic or WebMD\\n• Call a health information hotline\\n• Consult medical reference books`,\r\n    sources: ['System'],\r\n    relatedTopics: [],\r\n    recommendations: []\r\n  };\r\n};\r\n\r\nexport const healthSearchService = {\r\n  async searchHealthInfo(query: string, signal?: AbortSignal): Promise<HealthSearchResult> {\r\n    safeLog(\"HealthSearchService: Searching for \" + query);\r\n    try {\r\n      // For dashboard context, we could integrate with the client app's search\r\n      // or provide a simplified search experience\r\n      // For now, return a placeholder response\r\n      return {\r\n        summary: `Search results for \"${query}\"`,\r\n        details: `This is a placeholder search result for \"${query}\". In a full implementation, this would connect to the health search APIs.`,\r\n        sources: ['Dashboard Search'],\r\n        relatedTopics: ['General Health', 'Nutrition', 'Wellness'],\r\n        recommendations: ['Consult healthcare professionals', 'Verify information with medical providers']\r\n      };\r\n    } catch (error) {\r\n      safeLog(\"HealthSearchService error:\", error);\r\n      return getErrorResponse(query);\r\n    }\r\n  }\r\n};"],"mappings":"AAEA;AACA,MAAMA,OAAO,GAAGA,CAACC,OAAe,EAAEC,IAAU,KAAK;EAC/C,IAAIA,IAAI,KAAKC,SAAS,EAAE;IACtBC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;IACpB;EACF;EAEA,IAAI;IACF,IAAI,OAAOC,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;MAC7CE,OAAO,CAACC,GAAG,CAACJ,OAAO,EAAEK,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;IAC5C,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAACJ,OAAO,EAAEC,IAAI,CAAC;IAC5B;EACF,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAACJ,OAAO,EAAE,mCAAmC,CAAC;EAC3D;AACF,CAAC;AAED,MAAMQ,gBAAgB,GAAIC,KAAa,IAAyB;EAC9D,OAAO;IACLC,OAAO,EAAE,4DAA4DD,KAAK,IAAI;IAC9EE,OAAO,EAAE,wEAAwEF,KAAK,0WAA0W;IAChcG,OAAO,EAAE,CAAC,QAAQ,CAAC;IACnBC,aAAa,EAAE,EAAE;IACjBC,eAAe,EAAE;EACnB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG;EACjC,MAAMC,gBAAgBA,CAACP,KAAa,EAAEQ,MAAoB,EAA+B;IACvFlB,OAAO,CAAC,qCAAqC,GAAGU,KAAK,CAAC;IACtD,IAAI;MACF;MACA;MACA;MACA,OAAO;QACLC,OAAO,EAAE,uBAAuBD,KAAK,GAAG;QACxCE,OAAO,EAAE,4CAA4CF,KAAK,4EAA4E;QACtIG,OAAO,EAAE,CAAC,kBAAkB,CAAC;QAC7BC,aAAa,EAAE,CAAC,gBAAgB,EAAE,WAAW,EAAE,UAAU,CAAC;QAC1DC,eAAe,EAAE,CAAC,kCAAkC,EAAE,2CAA2C;MACnG,CAAC;IACH,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdR,OAAO,CAAC,4BAA4B,EAAEQ,KAAK,CAAC;MAC5C,OAAOC,gBAAgB,CAACC,KAAK,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}