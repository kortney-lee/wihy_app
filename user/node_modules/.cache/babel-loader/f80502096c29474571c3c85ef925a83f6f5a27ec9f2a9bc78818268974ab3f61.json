{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\wihy_ui\\\\user\\\\src\\\\components\\\\Charts\\\\BodyCompositionChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst BodyCompositionChart = ({\n  bodyFatPercent = 18.2,\n  leanMassPercent = 81.8\n}) => {\n  const data = {\n    labels: ['Body Fat', 'Lean Mass'],\n    datasets: [{\n      data: [bodyFatPercent, leanMassPercent],\n      backgroundColor: ['#ef4444',\n      // Red for body fat\n      '#10b981' // Green for lean mass\n      ],\n      borderColor: ['#dc2626', '#059669'],\n      borderWidth: 2,\n      hoverBackgroundColor: ['#f87171', '#34d399'],\n      hoverBorderWidth: 3\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          padding: 20,\n          usePointStyle: true,\n          pointStyle: 'circle',\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderWidth: 1,\n        cornerRadius: 8,\n        displayColors: true,\n        callbacks: {\n          label: function (context) {\n            return `${context.label}: ${context.parsed}%`;\n          }\n        }\n      }\n    },\n    cutout: '60%',\n    // Creates the donut hole\n    elements: {\n      arc: {\n        borderJoinStyle: 'round'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '200px',\n      width: '100%',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        pointerEvents: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '18px',\n          fontWeight: 'bold',\n          color: '#1f2937',\n          lineHeight: '1.2'\n        },\n        children: [bodyFatPercent, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '11px',\n          color: '#6b7280',\n          marginTop: '2px'\n        },\n        children: \"Body Fat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_c = BodyCompositionChart;\nexport default BodyCompositionChart;\nvar _c;\n$RefreshReg$(_c, \"BodyCompositionChart\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsxDEV","_jsxDEV","register","BodyCompositionChart","bodyFatPercent","leanMassPercent","data","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","padding","usePointStyle","pointStyle","font","size","tooltip","titleColor","bodyColor","cornerRadius","displayColors","callbacks","label","context","parsed","cutout","elements","arc","borderJoinStyle","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","textAlign","pointerEvents","fontSize","fontWeight","color","lineHeight","marginTop","_c","$RefreshReg$"],"sources":["C:/repo/wihy_ui/user/src/components/Charts/BodyCompositionChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n  ChartOptions,\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\ninterface BodyCompositionChartProps {\r\n  bodyFatPercent?: number;\r\n  leanMassPercent?: number;\r\n}\r\n\r\nconst BodyCompositionChart: React.FC<BodyCompositionChartProps> = ({ \r\n  bodyFatPercent = 18.2, \r\n  leanMassPercent = 81.8 \r\n}) => {\r\n  const data = {\r\n    labels: ['Body Fat', 'Lean Mass'],\r\n    datasets: [\r\n      {\r\n        data: [bodyFatPercent, leanMassPercent],\r\n        backgroundColor: [\r\n          '#ef4444', // Red for body fat\r\n          '#10b981', // Green for lean mass\r\n        ],\r\n        borderColor: [\r\n          '#dc2626',\r\n          '#059669',\r\n        ],\r\n        borderWidth: 2,\r\n        hoverBackgroundColor: [\r\n          '#f87171',\r\n          '#34d399',\r\n        ],\r\n        hoverBorderWidth: 3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options: ChartOptions<'doughnut'> = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom' as const,\r\n        labels: {\r\n          padding: 20,\r\n          usePointStyle: true,\r\n          pointStyle: 'circle',\r\n          font: {\r\n            size: 12,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        titleColor: '#fff',\r\n        bodyColor: '#fff',\r\n        borderWidth: 1,\r\n        cornerRadius: 8,\r\n        displayColors: true,\r\n        callbacks: {\r\n          label: function(context) {\r\n            return `${context.label}: ${context.parsed}%`;\r\n          }\r\n        }\r\n      },\r\n    },\r\n    cutout: '60%', // Creates the donut hole\r\n    elements: {\r\n      arc: {\r\n        borderJoinStyle: 'round',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '200px', width: '100%', position: 'relative' }}>\r\n      <Doughnut data={data} options={options} />\r\n      {/* Center text */}\r\n      <div style={{\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        textAlign: 'center',\r\n        pointerEvents: 'none',\r\n      }}>\r\n        <div style={{ \r\n          fontSize: '18px', \r\n          fontWeight: 'bold', \r\n          color: '#1f2937',\r\n          lineHeight: '1.2'\r\n        }}>\r\n          {bodyFatPercent}%\r\n        </div>\r\n        <div style={{ \r\n          fontSize: '11px', \r\n          color: '#6b7280',\r\n          marginTop: '2px'\r\n        }}>\r\n          Body Fat\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BodyCompositionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}