{"ast":null,"code":"var _jsxFileName = \"C:\\\\vHealth\\\\vhealth\\\\user\\\\src\\\\components\\\\modals\\\\NotificationModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport { notificationService } from '../../services/notificationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const unsubscribe = notificationService.subscribe(setNotifications);\n    setNotifications(notificationService.getNotifications());\n    return unsubscribe;\n  }, []);\n  const handleMarkAsRead = id => {\n    notificationService.markAsRead(id);\n  };\n  const handleMarkAllAsRead = () => {\n    notificationService.markAllAsRead();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    title: \"Notifications\",\n    maxWidth: \"420px\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600\",\n          children: [notificationService.getUnreadCount(), \" unread\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMarkAllAsRead,\n          className: \"text-sm text-blue-600 hover:text-blue-800\",\n          children: \"Mark all as read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification-item ${notification.read ? 'read' : 'unread'}`,\n        onClick: () => !notification.read && handleMarkAsRead(notification.id),\n        children: [!notification.read && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notification-title\",\n            children: notification.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notification-text\",\n            children: notification.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-time\",\n            children: notification.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)), notifications.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500 py-8\",\n        children: \"No notifications yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationModal, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = NotificationModal;\nexport default NotificationModal;\nvar _c;\n$RefreshReg$(_c, \"NotificationModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","notificationService","jsxDEV","_jsxDEV","NotificationModal","isOpen","onClose","_s","notifications","setNotifications","unsubscribe","subscribe","getNotifications","handleMarkAsRead","id","markAsRead","handleMarkAllAsRead","markAllAsRead","title","maxWidth","children","className","style","display","justifyContent","alignItems","marginBottom","getUnreadCount","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","notification","read","text","time","length","_c","$RefreshReg$"],"sources":["C:/vHealth/vhealth/user/src/components/modals/NotificationModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from './Modal';\r\nimport { notificationService, Notification } from '../../services/notificationService';\r\n\r\ninterface NotificationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst NotificationModal: React.FC<NotificationModalProps> = ({ isOpen, onClose }) => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = notificationService.subscribe(setNotifications);\r\n    setNotifications(notificationService.getNotifications());\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const handleMarkAsRead = (id: string) => {\r\n    notificationService.markAsRead(id);\r\n  };\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    notificationService.markAllAsRead();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} title=\"Notifications\" maxWidth=\"420px\">\r\n      <div className=\"notification-list\">\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '16px' }}>\r\n          <span className=\"text-sm text-gray-600\">\r\n            {notificationService.getUnreadCount()} unread\r\n          </span>\r\n          <button \r\n            onClick={handleMarkAllAsRead}\r\n            className=\"text-sm text-blue-600 hover:text-blue-800\"\r\n          >\r\n            Mark all as read\r\n          </button>\r\n        </div>\r\n        \r\n        {notifications.map((notification) => (\r\n          <div \r\n            key={notification.id}\r\n            className={`notification-item ${notification.read ? 'read' : 'unread'}`}\r\n            onClick={() => !notification.read && handleMarkAsRead(notification.id)}\r\n          >\r\n            {!notification.read && <div className=\"notification-dot\"></div>}\r\n            <div>\r\n              <p className=\"notification-title\">{notification.title}</p>\r\n              <p className=\"notification-text\">{notification.text}</p>\r\n              <span className=\"notification-time\">{notification.time}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        \r\n        {notifications.length === 0 && (\r\n          <div className=\"text-center text-gray-500 py-8\">\r\n            No notifications yet\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NotificationModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,mBAAmB,QAAsB,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvF,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAiB,EAAE,CAAC;EAEtEC,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAGT,mBAAmB,CAACU,SAAS,CAACF,gBAAgB,CAAC;IACnEA,gBAAgB,CAACR,mBAAmB,CAACW,gBAAgB,CAAC,CAAC,CAAC;IACxD,OAAOF,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAIC,EAAU,IAAK;IACvCb,mBAAmB,CAACc,UAAU,CAACD,EAAE,CAAC;EACpC,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChCf,mBAAmB,CAACgB,aAAa,CAAC,CAAC;EACrC,CAAC;EAED,oBACEd,OAAA,CAACH,KAAK;IAACK,MAAM,EAAEA,MAAO;IAACC,OAAO,EAAEA,OAAQ;IAACY,KAAK,EAAC,eAAe;IAACC,QAAQ,EAAC,OAAO;IAAAC,QAAA,eAC7EjB,OAAA;MAAKkB,SAAS,EAAC,mBAAmB;MAAAD,QAAA,gBAChCjB,OAAA;QAAKmB,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,eAAe;UAAEC,UAAU,EAAE,QAAQ;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAN,QAAA,gBAC3GjB,OAAA;UAAMkB,SAAS,EAAC,uBAAuB;UAAAD,QAAA,GACpCnB,mBAAmB,CAAC0B,cAAc,CAAC,CAAC,EAAC,SACxC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACP5B,OAAA;UACE6B,OAAO,EAAEhB,mBAAoB;UAC7BK,SAAS,EAAC,2CAA2C;UAAAD,QAAA,EACtD;QAED;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELvB,aAAa,CAACyB,GAAG,CAAEC,YAAY,iBAC9B/B,OAAA;QAEEkB,SAAS,EAAE,qBAAqBa,YAAY,CAACC,IAAI,GAAG,MAAM,GAAG,QAAQ,EAAG;QACxEH,OAAO,EAAEA,CAAA,KAAM,CAACE,YAAY,CAACC,IAAI,IAAItB,gBAAgB,CAACqB,YAAY,CAACpB,EAAE,CAAE;QAAAM,QAAA,GAEtE,CAACc,YAAY,CAACC,IAAI,iBAAIhC,OAAA;UAAKkB,SAAS,EAAC;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/D5B,OAAA;UAAAiB,QAAA,gBACEjB,OAAA;YAAGkB,SAAS,EAAC,oBAAoB;YAAAD,QAAA,EAAEc,YAAY,CAAChB;UAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1D5B,OAAA;YAAGkB,SAAS,EAAC,mBAAmB;YAAAD,QAAA,EAAEc,YAAY,CAACE;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxD5B,OAAA;YAAMkB,SAAS,EAAC,mBAAmB;YAAAD,QAAA,EAAEc,YAAY,CAACG;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA,GATDG,YAAY,CAACpB,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUjB,CACN,CAAC,EAEDvB,aAAa,CAAC8B,MAAM,KAAK,CAAC,iBACzBnC,OAAA;QAAKkB,SAAS,EAAC,gCAAgC;QAAAD,QAAA,EAAC;MAEhD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAACxB,EAAA,CAvDIH,iBAAmD;AAAAmC,EAAA,GAAnDnC,iBAAmD;AAyDzD,eAAeA,iBAAiB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}